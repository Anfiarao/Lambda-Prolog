hstep (nrec T F K zero) K.
hstep (nrec T F K (succ N)) (F N (nrec F K N)).

dstep (nrec T1 F K A) (nrec T2 F K A) :- dstep T1 T2.
dstep (nrec T F K A1) (nrec T F K A2) :- dstep A1 A2.
dstep (nrec T F K1 A) (nrec T F K2 A) :- dstep K1 K2.
dstep (nrec T F1 K A) (nrec T F2 K A) :-
    pi x \ of int x nat =>
     pi y \ of int y (T x) =>
            dstep (F1 x y) (F2 x y).

dstep (succ E) (succ Q) :- bnf E Q.

isType set nat.
of int zero nat.
of int (succ A) nat :- of int A nat.
of int (nrec T F K N) (T N) :-
 of int N nat,  
 of int K (T zero),
 (pi x \ of int x nat => isType set (T x)),
 (pi x \ of int x nat =>
  pi y \ of int y (T x) => of int (F x y) (T (succ x))).
 



macro plus ( m\n\ nrec (x\nat) (x\y\ succ y) n    m ).   
macro prec ( m\   nrec (z\nat) (x\y\      x) zero m). 

intnat 0 zero.
intnat K (succ N) :- 
    K > 0, KK is K - 1, 
    intnat KK N.

natint zero 0 :- 1 = 1, !.
natint Nat Int :-
    macro prec Prec,
    printt (Prec Nat),
    nf (Prec Nat) A,
    natint A Int2,
    Int is Int2 + 1
    .
    
natPlus A B C :- 
    (intnat A AA), 
    (intnat B BB), 
    (macro plus Plus),
    (nf (Plus AA BB) K),
    (natint K C).



