%% calc_Eq.elpi


type propEq mttType -> mttTerm -> mttTerm -> mttType.
type eqId   mttType -> mttTerm -> mttTerm.

isType (propEq A AA1 AA2) props ext :-
    isa AA1 A ext,
    isa AA2 A ext,
    isType A set ext.

isType (propEq A AA1 AA2) propc ext :-
    isa AA1 A ext,
    isa AA2 A ext,
    isType A col ext.


of (eqId C Cc) (propEq C Cc Cc) ext
    :-  spy(of Cc C ext)
    .



%dstep A B :- of _ ()

dconv (propEq A AA1 AA2) (propEq A' AA1' AA2') :- spy(conv A A'), conv AA1 AA1', conv AA2 AA2'.

dconv (eqId A AA) (eqId A' AA') :- conv A A', conv AA AA'.
