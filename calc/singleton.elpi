%%-- calc_singleton.elpi

%ofType star singleton set IE.

type  singleton mttType.
type  star mttTerm.
type  elim_singleton mttTerm -> (mttTerm -> mttType) -> mttTerm -> mttTerm.

isType singleton set IE.

of star singleton IE.

of (elim_singleton Star C Cc) (C Star) IE :-
    of Star singleton IE,
    of Cc (C star) IE,
    (pi z\ locDecl z singleton => isType (C z) col IE).

hstep (elim_singleton star C Cc) Cc :-
    of Cc (C star) IE,
    (pi z\ locDecl z singleton => isType (C z) col IE ).

dconv (elim_singleton T C CC) (elim_singleton T' C' CC') :- conv T T' , conv CC CC',
    (pi z\ locDecl z singleton => conv (C z) (C' z)).






