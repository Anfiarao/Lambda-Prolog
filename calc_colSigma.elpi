%% STRONG INDEXED COL SUM

isType (colSigma B C) col :-
    isType B _,
    pi b\ of b B int => isType (C b) col.

of (pair B C Bb Cc) (colSigma B C) int :-
    spy (isa Bb B int), 
    isa Cc (C Bb) int,
    spy (isType B col),
    isType (C Bb) col,
    isType (colSigma B C) col.

of (elim_colSigma Pair M MM) (M D) int :-
        of Pair (colSigma B C) int,
        (pi z \ of z (colSigma B C) int => isType (M z) col),
        (pi x \ pi y \
            of x B int => of y (C x) int =>  
                of (MM x y) (M (pair B C x y)) int ).

hstep (elim_colSigma (pair B C Bb Cc) M Mm) (Mm Bb Cc) :-
    (pi z\ of z (colSigma B C) int => isType (M z)) col,
    of Bb B int,
    of Cc (C Bb) int,
    (pi x \ pi y \
        of x B int => of y (C x) int =>  
            of (MM x y) (M (pair B C x y))  int
    ).


dstep (pair B1 C Bb Cc) (pair B2 C Bb Cc) :- dstep B1 B2.

dstep (pair B C1 Bb Cc) (pair B C2 Bb Cc) :- 
    pi b\ of b B int => dstep (C1 b) (C2 b).

dstep (pair B C Bb1 Cc) (pair B C Bb2 Cc) :- dstep Bb1 Bb2.

dstep (pair B C Bb Cc1) (pair B C Bb Cc2) :- dstep Cc1 Cc2.


dstep (elim_colSigma Pair1 M Mm) (elim_colSigma Pair2 M Mm) :- 
    dstep Pair1 Pair2.

dstep (elim_colSigma Pair M Mm1) (elim_colSigma Pair M Mm2) :-
    of int Pair (colSigma B C), 
    pi x\ pi y\ of x B int => of y (C x) int => dstep (Mm1 x y) (Mm2 x y).

dstep (elim_colSigma M1 Pair Mm) (elim_colSigma M2 Pair Mm) :-
        of Pair (colSigma B C) int, 
        pi x\ pi y\
                of x B int => of y (C x) int => dstep (M1 x y) (M2 x y).










macro (fst P) (elim_colSigma P M Mn) :- 
        of  P (colSigma A B) int, print "\n\n macro \n\n",  M = (x\A), Mn = x\ y\ x.

macro (snd P) (elim_colSigma P M Mn) :- 
    print "\n\nSECONDA\n\n",
    of P (colSigma A B) int,
    (pi p \ of p (colSigma A B) int => macro (fst p) (FST p)),
    M = (w \ B (FST w)),
    Mn = x\ y\ y.





%%%colSigma

%trad (colSigma B C) (colSigma Bi Ci) :- trad B Bi, trad C Ci.

%bnf (
%     equ (colSigma B C) Z1 Z2
%    ) 
%    (
%     exist (equ B (p1 Z1) (p1 Z2)
%           ) 
%           (d\
%            subst (p1 Z1) 
%                  (p1 Z2) 
%                  (equ (C (p1 Z2)) (p2 Z1) (p2 Z2))
%           ) 
%    ) :-  of Z1 colSigma B C, of Z2 colSigma B C.

%:- of Z1 (colSigma B C), of Z2 (colSigma B C).

%trad (pair BB CC Bb Cc) (pair (trad BB) (trad CC) (trad Bb) (trad Cc)).

%subst X1 X2 wimSigma




%trad (quotientCol A R ) Ai :- trad A Ai.

%bnf (equ (quotientCol A R) Z1 Z2) (R Z1 Z2) :- of Z1 A, of Z2 A.




