%% STRONG INDEXED COL SUM

isType col (colSigma B C) :-
    isType K B,
    pi b\ of int b B => isType col (C b).

of int (pair B C Bb Cc) (colSigma B C) :-  
    isType col B,
    isType col (C Bb),
    isa int Bb B, 
    isa int Cc (C Bb),
    isType col (colSigma B C).

of int (elim_colSigma Pair M MM) (M D) :-
        of int Pair (colSigma B C),
        (pi z \ of int z (colSigma B C) => isType col (M z)),
        (pi x \ pi y \
            of int x B => of int y (C x) =>  
                of int (MM x y) (M (pair B C x y))).

hstep (elim_colSigma (pair B C Bb Cc) M Mm) (Mm Bb Cc) :-
    (pi z\ of z (colSigma B C) => isType col (M z)),
    of int Bb B,
    of int Cc (C Bb),
    (pi x \ pi y \
        of int x B => of int y (C x) =>  
            of int (MM x y) (M (pair B C x y))
    ).


dstep (pair B1 C Bb Cc) (pair B2 C Bb Cc) :- dstep B1 B2.

dstep (pair B C1 Bb Cc) (pair B C2 Bb Cc) :- 
    pi b\ of b B => dstep (C1 b) (C2 b).

dstep (pair B C Bb1 Cc) (pair B C Bb2 Cc) :- dstep Bb1 Bb2.

dstep (pair B C Bb Cc1) (pair B C Bb Cc2) :- dstep Cc1 Cc2.


dstep (elim_colSigma Pair1 M Mm) (elim_colSigma Pair2 M Mm) :- 
    dstep Pair1 Pair2.

dstep (elim_colSigma Pair M Mm1) (elim_colSigma Pair M Mm2) :-
    of int Pair (colSigma B C), 
    pi x\ pi y\ of int x B => of int y (C x) => dstep (Mm1 x y) (Mm2 x y).

dstep (elim_colSigma M1 Pair Mm) (elim_colSigma M2 Pair Mm) :-
        of Pair (colSigma B C), 
        pi x\ pi y\
                of int x B => of int y (C x) 
                        => dstep (M1 x y) (M2 x y).










macro (fst P) (elim P M Mn) :- of int P (colSigma A B), M = A, Mn = x\ y\ x.

macro (snd P) (elim P M Mn) :- 
    of int P (colSigma A B),
    macro (fst P) FST,
    hnf FST HFST,
    M = (B HFST),
     Mn = x\ y\ y.





%%%colSigma

%trad (colSigma B C) (colSigma Bi Ci) :- trad B Bi, trad C Ci.

%bnf (
%     equ (colSigma B C) Z1 Z2
%    ) 
%    (
%     exist (equ B (p1 Z1) (p1 Z2)
%           ) 
%           (d\
%            subst (p1 Z1) 
%                  (p1 Z2) 
%                  (equ (C (p1 Z2)) (p2 Z1) (p2 Z2))
%           ) 
%    ) :-  of Z1 colSigma B C, of Z2 colSigma B C.

%:- of Z1 (colSigma B C), of Z2 (colSigma B C).

%trad (pair BB CC Bb Cc) (pair (trad BB) (trad CC) (trad Bb) (trad Cc)).

%subst X1 X2 wimSigma




%trad (quotientCol A R ) Ai :- trad A Ai.

%bnf (equ (quotientCol A R) Z1 Z2) (R Z1 Z2) :- of Z1 A, of Z2 A.




