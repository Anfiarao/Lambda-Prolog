"debug.elpi:   5: Warning: checks is undeclared"
"debug.elpi:   5: Warning: checks is undeclared"
"1_[+[Begin 
test n X0
"
"2__[+[Begin 
nodebug =>
 ofType
  (setPi (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \
    propEq singleton (app x0 (lambda singleton x1 \ x1)) star) X1 ext
"
"2--]-]Success  
nodebug =>
 ofType
  (setPi (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \
    propEq singleton (app x0 (lambda singleton x1 \ x1)) star) set ext
"
"2__[+[Begin 
interp
 (setPi (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \
   propEq singleton (app x0 (lambda singleton x1 \ x1)) star) X0
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi (setPi singleton x6 \ singleton) x6 \ singleton) =>
       locDecl x1 (setPi (setPi singleton x6 \ singleton) x6 \ singleton) =>
        locDecl x3
         (setSigma
           (setPi
             (setSigma (setPi singleton x6 \ singleton) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton)
           x6 \
           forall
            (setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x7 \
            forall
             (setSigma (setPi singleton x8 \ singleton) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton (app x8 x9) (app x8 x10)) x8 \
             forall
              (forall singleton x9 \
                propId singleton
                 (app
                   (elim_setSigma x7 (x10 \ setPi singleton x11 \ singleton)
                     x10 \ x11 \ x10) x9)
                 (app
                   (elim_setSigma x8 (x10 \ setPi singleton x11 \ singleton)
                     x10 \ x11 \ x10) x9)) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma
            (setPi
              (setSigma (setPi singleton x6 \ singleton) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton)
            x6 \
            forall
             (setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x7 \
             forall
              (setSigma (setPi singleton x8 \ singleton) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton (app x8 x9) (app x8 x10)) x8 \
              forall
               (forall singleton x9 \
                 propId singleton
                  (app
                    (elim_setSigma x7 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)
                  (app
                    (elim_setSigma x8 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2
             (propEq (setPi (setPi singleton x6 \ singleton) x6 \ singleton)
               x0 x1) =>
             locDecl x5
              (forall
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \
                     setPi
                      (setSigma (setPi singleton x8 \ singleton) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton (app x8 x9) (app x8 x10)) x8 \
                      singleton) x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \
                     setPi
                      (setSigma (setPi singleton x8 \ singleton) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton (app x8 x9) (app x8 x10)) x8 \
                      singleton) x7 \ x8 \ x7) x6)) =>
              interp x2 x5 =>
               tau
                (propEq singleton (app x0 (lambda singleton x6 \ x6)) star)
                (propEq singleton (app x1 (lambda singleton x6 \ x6)) star)
                (X2 x3 x4 x5)
"
"4____[+[Begin 
tau_proof_eq (app x0 (lambda singleton x6 \ x6))
 (app x1 (lambda singleton x6 \ x6)) singleton X3^6
"
"4....].]Fail  
tau_proof_eq (app x0 (lambda singleton x6 \ x6))
 (app x1 (lambda singleton x6 \ x6)) singleton X3^6
"
"3...].]Fail  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi (setPi singleton x6 \ singleton) x6 \ singleton) =>
       locDecl x1 (setPi (setPi singleton x6 \ singleton) x6 \ singleton) =>
        locDecl x3
         (setSigma
           (setPi
             (setSigma (setPi singleton x6 \ singleton) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton)
           x6 \
           forall
            (setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x7 \
            forall
             (setSigma (setPi singleton x8 \ singleton) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton (app x8 x9) (app x8 x10)) x8 \
             forall
              (forall singleton x9 \
                propId singleton
                 (app
                   (elim_setSigma x7 (x10 \ setPi singleton x11 \ singleton)
                     x10 \ x11 \ x10) x9)
                 (app
                   (elim_setSigma x8 (x10 \ setPi singleton x11 \ singleton)
                     x10 \ x11 \ x10) x9)) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma
            (setPi
              (setSigma (setPi singleton x6 \ singleton) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton)
            x6 \
            forall
             (setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x7 \
             forall
              (setSigma (setPi singleton x8 \ singleton) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton (app x8 x9) (app x8 x10)) x8 \
              forall
               (forall singleton x9 \
                 propId singleton
                  (app
                    (elim_setSigma x7 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)
                  (app
                    (elim_setSigma x8 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2
             (propEq (setPi (setPi singleton x6 \ singleton) x6 \ singleton)
               x0 x1) =>
             locDecl x5
              (forall
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \
                     setPi
                      (setSigma (setPi singleton x8 \ singleton) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton (app x8 x9) (app x8 x10)) x8 \
                      singleton) x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \
                     setPi
                      (setSigma (setPi singleton x8 \ singleton) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton (app x8 x9) (app x8 x10)) x8 \
                      singleton) x7 \ x8 \ x7) x6)) =>
              interp x2 x5 =>
               tau
                (propEq singleton (app x0 (lambda singleton x6 \ x6)) star)
                (propEq singleton (app x1 (lambda singleton x6 \ x6)) star)
                (X2 x3 x4 x5)
"
"2..].]Fail  
interp
 (setPi (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \
   propEq singleton (app x0 (lambda singleton x1 \ x1)) star) X0
"
"1.].]Fail  
test n X0
"
