"debug.elpi:   6: Warning: indent is undeclared"
"debug.elpi:   6: Warning: indent is undeclared"
"debug.elpi:  27: Warning: indent is undeclared"
"debug.elpi:  45: Error: (count_indent' TT) has type (X0 -> prop) but is used with type prop"
"debug.elpi:  47: Error: print_indent has type (string -> (string -> (string -> X1))) but is used with type prop"
"main.elpi: 140: Warning: fixMe is undeclared"
"main.elpi: 149: Warning: fixMe is undeclared"
"main.elpi: 195: Warning: k_propId is undeclared"
"setPi.elpi: 146: Error: (FH x25 x26 x27) has type (X2 -> (X3 -> (X4 -> X4))) but is used with type mttTerm"
"setPi.elpi: 146: Error: (locDecl x24 (EquB x22 x23)) has type prop but is used with type (list prop)"
"setPi.elpi: 146: Error: (locDecl x23 Bi') has type prop but is used with type (list prop)"
"setPi.elpi: 146: Error: (locDecl x22 Bi') has type prop but is used with type (list prop)"
"propEq.elpi:  47: Warning: k_propId is undeclared"
"letIn.elpi:   9: Error: (letIn KIND1 T S) has type mttTerm but is used with type mttType"
"test.elpi:  18: Warning: l is undeclared"
"test.elpi:  27: Warning: m is undeclared"
"test.elpi:  51: Warning: l is undeclared"
"test.elpi:  72: Warning: i is undeclared"
"test.elpi: 113: Warning: h is undeclared"
"test.elpi: 125: Warning: g is undeclared"
"test.elpi: 147: Warning: f is undeclared"
"1_[+[Begin 
setoid_refl (setPi singleton x0 \ singleton) X5
"
"2__[+[Begin 
interp (setPi singleton x0 \ singleton) X6
"
"3___[+[Begin 
interp singleton X7
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X8 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq singleton X9
"
"3---]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X10 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X11 x3 x4 x5))
"
"4____[+[Begin 
tau singleton singleton (X11 x3 x4 x5)
"
"4----]-]Success  
tau singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2--]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
fail
"
"2..].]Fail  
fail
"
"1.].]Fail  
setoid_refl (setPi singleton x0 \ singleton) X5
"
