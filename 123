"debug.elpi:   7: Warning: indent is undeclared"
"debug.elpi:   7: Warning: indent is undeclared"
"debug.elpi:  29: Warning: indent is undeclared"
"debug.elpi:  47: Error: (count_indent' TT) has type (X0 -> prop) but is used with type prop"
"debug.elpi:  49: Error: print_indent has type (string -> (string -> (string -> X1))) but is used with type prop"
"main.elpi: 140: Warning: fixMe is undeclared"
"main.elpi: 149: Warning: fixMe is undeclared"
"main.elpi: 195: Warning: k_propId is undeclared"
"main.elpi: 203: Error: (ofType Prop K) has type (mttLevel -> prop) but is used with type prop"
"main.elpi: 205: Error: (ofType Prop K) has type (mttLevel -> prop) but is used with type prop"
"main.elpi: 207: Error: (ofType Prop K) has type (mttLevel -> prop) but is used with type prop"
"main.elpi: 209: Error: (ofType Prop K) has type (mttLevel -> prop) but is used with type prop"
"setPi.elpi: 146: Error: (FH x25 x26 x27) has type (X2 -> (X3 -> (X4 -> X4))) but is used with type mttTerm"
"setPi.elpi: 146: Error: (locDecl x24 (EquB x22 x23)) has type prop but is used with type (list prop)"
"setPi.elpi: 146: Error: (locDecl x23 Bi') has type prop but is used with type (list prop)"
"setPi.elpi: 146: Error: (locDecl x22 Bi') has type prop but is used with type (list prop)"
"propEq.elpi:  49: Warning: k_propId is undeclared"
"letIn.elpi:   9: Error: (letIn KIND1 T S) has type mttTerm but is used with type mttType"
"test.elpi:  36: Warning: m is undeclared"
"test.elpi:  53: Warning: n is undeclared"
"test.elpi:  77: Warning: m is undeclared"
"test.elpi: 101: Warning: l is undeclared"
"test.elpi: 122: Warning: i is undeclared"
"test.elpi: 163: Warning: h is undeclared"
"test.elpi: 175: Warning: g is undeclared"
"test.elpi: 197: Warning: f is undeclared"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_tran (setPi (propEq singleton star star) x0 \ singleton) _
"
"2__[+[Begin 
interp (setPi (propEq singleton star star) x0 \ singleton) X5
"
"3___[+[Begin 
interp (propEq singleton star star) X6
"
"4____[+[Begin 
setoid_eq singleton X7
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
interp_isa star singleton X8
"
"5_____[+[Begin 
of star X9 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X10
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X11
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X8 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X12
"
"5_____[+[Begin 
of star X13 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X14
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X15
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X12 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
X6 = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton (X16 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq (propEq singleton star star) X17
"
"3---]-]Success  
setoid_eq (propEq singleton star star) x0 \ x1 \ propId singleton star star
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => setoid_eq singleton (X18 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 => spy (tau singleton singleton (X19 x3 x4 x5))
"
"4____[+[Begin 
tau singleton singleton (X19 x3 x4 x5)
"
"4----]-]Success  
tau singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2--]-]Success  
interp (setPi (propEq singleton star star) x0 \ singleton)
 (setSigma (setPi (propId singleton star star) x0 \ singleton) x0 \
   forall (propId singleton star star) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
setoid_eq (setPi (propEq singleton star star) x0 \ singleton) X20
"
"3___[+[Begin 
interp (propEq singleton star star) X21
"
"4____[+[Begin 
setoid_eq singleton X22
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
interp_isa star singleton X23
"
"5_____[+[Begin 
of star X24 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X25
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X26
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X23 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X27
"
"5_____[+[Begin 
of star X28 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X29
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X30
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X27 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
X21 = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton (X31 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X32 x1)))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"2--]-]Success  
setoid_eq (setPi (propEq singleton star star) x0 \ singleton) x0 \ x1 \
 forall (propId singleton star star) x2 \
  propId singleton
   (app
     (elim_setSigma x0 (x3 \
       setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3) x2)
   (app
     (elim_setSigma x1 (x3 \
       setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3) x2)
"
"2__[+[Begin 
setoid_eq singleton X33
"
"2--]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"2__[+[Begin 
interp_isa star singleton X34
"
"3___[+[Begin 
of star X35 ext
"
"3---]-]Success  
of star singleton ext
"
"3___[+[Begin 
interp star X36
"
"3---]-]Success  
interp star star
"
"3___[+[Begin 
tau singleton singleton X37
"
"3---]-]Success  
tau singleton singleton x0 \ x0
"
"3___[+[Begin 
X34 = star
"
"3---]-]Success  
star = star
"
"2--]-]Success  
interp_isa star singleton star
"
"2__[+[Begin 
interp_isa star singleton X38
"
"3___[+[Begin 
of star X39 ext
"
"3---]-]Success  
of star singleton ext
"
"3___[+[Begin 
interp star X40
"
"3---]-]Success  
interp star star
"
"3___[+[Begin 
tau singleton singleton X41
"
"3---]-]Success  
tau singleton singleton x0 \ x0
"
"3___[+[Begin 
X38 = star
"
"3---]-]Success  
star = star
"
"2--]-]Success  
interp_isa star singleton star
"
"2__[+[Begin 
X42 = propId singleton star star
"
"2--]-]Success  
propId singleton star star = propId singleton star star
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => setoid_tran singleton (X43 x1)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     locDecl x2 singleton =>
      locDecl x3 singleton =>
       locDecl x4 singleton =>
        locDecl x5 (propId singleton x2 x3) =>
         locDecl x6 (propId singleton x3 x4) =>
          spy
           (of
             (impl_app
               (elim_id x5 (x7 \ x8 \
                 implies (propId singleton x8 x4) (propId singleton x7 x4))
                 x7 \ impl_lam (propId singleton x7 x4) x8 \ x8) x6)
             (propId singleton x2 x4) int)
"
"4____[+[Begin 
of
 (impl_app
   (elim_id x5 (x7 \ x8 \
     implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
     impl_lam (propId singleton x7 x4) x8 \ x8) x6) (propId singleton x2 x4)
 int
"
"5_____[+[Begin 
isa
 (elim_id x5 (x7 \ x8 \
   implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
   impl_lam (propId singleton x7 x4) x8 \ x8)
 (implies X44^7 (propId singleton x2 x4)) int
"
"6______[+[Begin 
of
 (elim_id x5 (x7 \ x8 \
   implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
   impl_lam (propId singleton x7 x4) x8 \ x8) X45^7 int
"
"7_______[+[Begin 
of x5 (propId X46^7 X47^7 X48^7) int
"
"7-------]-]Success  
of x5 (propId singleton x2 x3) int
"
"7_______[+[Begin 
pi x7 \
 pi x8 \
  locDecl x7 singleton =>
   locDecl x8 singleton =>
    isaType (implies (propId singleton x8 x4) (propId singleton x7 x4)) propc
     int
"
"8________[+[Begin 
ofType (implies (propId singleton x8 x4) (propId singleton x7 x4)) X49^9 int
"
"9_________[+[Begin 
of x8 X50^9 int
"
"9---------]-]Success  
of x8 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
of x4 X51^9 int
"
"9---------]-]Success  
of x4 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
(pts_leq set set),
(X49^9 = props)
"
"9---------]-]Success  
(pts_leq set set),
(props = props)
"
"9_________[+[Begin 
of x7 X52^10 int
"
"9---------]-]Success  
of x7 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
of x4 X53^10 int
"
"9---------]-]Success  
of x4 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
(pts_leq set set),
(props = props)
"
"8--------]-]Success  
ofType (implies (propId singleton x8 x4) (propId singleton x7 x4)) props int
"
"8________[+[Begin 
pts_leq props propc
"
"8--------]-]Success  
pts_leq props propc
"
"7-------]-]Success  
pi x7 \
 pi x8 \
  locDecl x7 singleton =>
   locDecl x8 singleton =>
    isaType (implies (propId singleton x8 x4) (propId singleton x7 x4)) propc
     int
"
"7_______[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  of (impl_lam (propId singleton x7 x4) x8 \ x8)
   (implies (propId singleton x7 x4) (propId singleton x7 x4)) int
"
"8________[+[Begin 
isaType (propId singleton x7 x4) propc int
"
"9_________[+[Begin 
ofType (propId singleton x7 x4) X54^8 int
"
"10__________[+[Begin 
of x7 X55^8 int
"
"10----------]-]Success  
of x7 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of x4 X56^8 int
"
"10----------]-]Success  
of x4 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(X54^8 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
ofType (propId singleton x7 x4) props int
"
"9_________[+[Begin 
pts_leq props propc
"
"9---------]-]Success  
pts_leq props propc
"
"8--------]-]Success  
isaType (propId singleton x7 x4) propc int
"
"8________[+[Begin 
isaType (propId singleton x7 x4) propc int
"
"9_________[+[Begin 
ofType (propId singleton x7 x4) X57^8 int
"
"10__________[+[Begin 
of x7 X58^8 int
"
"10----------]-]Success  
of x7 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of x4 X59^8 int
"
"10----------]-]Success  
of x4 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(X57^8 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
ofType (propId singleton x7 x4) props int
"
"9_________[+[Begin 
pts_leq props propc
"
"9---------]-]Success  
pts_leq props propc
"
"8--------]-]Success  
isaType (propId singleton x7 x4) propc int
"
"8________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x7 x4) => isa x8 (propId singleton x7 x4) int
"
"9_________[+[Begin 
of x8 X60^9 int
"
"9---------]-]Success  
of x8 (propId singleton x7 x4) int
"
"9_________[+[Begin 
conv (propId singleton x7 x4) (propId singleton x7 x4)
"
"9---------]-]Success  
conv (propId singleton x7 x4) (propId singleton x7 x4)
"
"8--------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x7 x4) => isa x8 (propId singleton x7 x4) int
"
"7-------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  of (impl_lam (propId singleton x7 x4) x8 \ x8)
   (implies (propId singleton x7 x4) (propId singleton x7 x4)) int
"
"6------]-]Success  
of
 (elim_id x5 (x7 \ x8 \
   implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
   impl_lam (propId singleton x7 x4) x8 \ x8)
 (implies (propId singleton x3 x4) (propId singleton x2 x4)) int
"
"6______[+[Begin 
conv (implies (propId singleton x3 x4) (propId singleton x2 x4))
 (implies X44^7 (propId singleton x2 x4))
"
"6------]-]Success  
conv (implies (propId singleton x3 x4) (propId singleton x2 x4))
 (implies (propId singleton x3 x4) (propId singleton x2 x4))
"
"5-----]-]Success  
isa
 (elim_id x5 (x7 \ x8 \
   implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
   impl_lam (propId singleton x7 x4) x8 \ x8)
 (implies (propId singleton x3 x4) (propId singleton x2 x4)) int
"
"5_____[+[Begin 
isa x6 (propId singleton x3 x4) int
"
"6______[+[Begin 
of x6 X61^7 int
"
"6------]-]Success  
of x6 (propId singleton x3 x4) int
"
"6______[+[Begin 
conv (propId singleton x3 x4) (propId singleton x3 x4)
"
"6------]-]Success  
conv (propId singleton x3 x4) (propId singleton x3 x4)
"
"5-----]-]Success  
isa x6 (propId singleton x3 x4) int
"
"4----]-]Success  
of
 (impl_app
   (elim_id x5 (x7 \ x8 \
     implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
     impl_lam (propId singleton x7 x4) x8 \ x8) x6) (propId singleton x2 x4)
 int
"
"3---]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     locDecl x2 singleton =>
      locDecl x3 singleton =>
       locDecl x4 singleton =>
        locDecl x5 (propId singleton x2 x3) =>
         locDecl x6 (propId singleton x3 x4) =>
          spy
           (of
             (impl_app
               (elim_id x5 (x7 \ x8 \
                 implies (propId singleton x8 x4) (propId singleton x7 x4))
                 x7 \ impl_lam (propId singleton x7 x4) x8 \ x8) x6)
             (propId singleton x2 x4) int)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     (setoid_tran singleton x2 \ x3 \ x4 \ x5 \ x6 \
       impl_app
        (elim_id x5 (x7 \ x8 \
          implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
          impl_lam (propId singleton x7 x4) x8 \ x8) x6)
"
"2__[+[Begin 
X62 = (x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam (propId singleton star star) x5 \
  impl_app
   (elim_id (forall_app x3 x5) (x6 \ x7 \
     implies
      (propId singleton x7
        (app
          (elim_setSigma x2 (x8 \
            setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
          x5))
      (propId singleton x6
        (app
          (elim_setSigma x2 (x8 \
            setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
          x5))) x6 \
     impl_lam
      (propId singleton x6
        (app
          (elim_setSigma x2 (x7 \
            setPi (propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
          x5)) x7 \ x7) (forall_app x4 x5))
"
"2--]-]Success  
(x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam (propId singleton star star) x5 \
  impl_app
   (elim_id (forall_app x3 x5) (x6 \ x7 \
     implies
      (propId singleton x7
        (app
          (elim_setSigma x2 (x8 \
            setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
          x5))
      (propId singleton x6
        (app
          (elim_setSigma x2 (x8 \
            setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
          x5))) x6 \
     impl_lam
      (propId singleton x6
        (app
          (elim_setSigma x2 (x7 \
            setPi (propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
          x5)) x7 \ x7) (forall_app x4 x5)) = (x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam (propId singleton star star) x5 \
  impl_app
   (elim_id (forall_app x3 x5) (x6 \ x7 \
     implies
      (propId singleton x7
        (app
          (elim_setSigma x2 (x8 \
            setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
          x5))
      (propId singleton x6
        (app
          (elim_setSigma x2 (x8 \
            setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
          x5))) x6 \
     impl_lam
      (propId singleton x6
        (app
          (elim_setSigma x2 (x7 \
            setPi (propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
          x5)) x7 \ x7) (forall_app x4 x5))
"
"1-]-]Success  
setoid_tran (setPi (propEq singleton star star) x0 \ singleton) _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_tran (setPi singleton x0 \ singleton) _
"
"2__[+[Begin 
interp (setPi singleton x0 \ singleton) X63
"
"3___[+[Begin 
interp singleton X64
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X65 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq singleton X66
"
"3---]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X67 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X68 x3 x4 x5))
"
"4____[+[Begin 
tau singleton singleton (X68 x3 x4 x5)
"
"4----]-]Success  
tau singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2--]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
setoid_eq (setPi singleton x0 \ singleton) X69
"
"3___[+[Begin 
interp singleton X70
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X71 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X72 x1)))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"2--]-]Success  
setoid_eq (setPi singleton x0 \ singleton) x0 \ x1 \
 forall singleton x2 \
  propId singleton
   (app (elim_setSigma x0 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app (elim_setSigma x1 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_tran singleton (X73 x1)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     locDecl x2 singleton =>
      locDecl x3 singleton =>
       locDecl x4 singleton =>
        locDecl x5 (propId singleton x2 x3) =>
         locDecl x6 (propId singleton x3 x4) =>
          spy
           (of
             (impl_app
               (elim_id x5 (x7 \ x8 \
                 implies (propId singleton x8 x4) (propId singleton x7 x4))
                 x7 \ impl_lam (propId singleton x7 x4) x8 \ x8) x6)
             (propId singleton x2 x4) int)
"
"4____[+[Begin 
of
 (impl_app
   (elim_id x5 (x7 \ x8 \
     implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
     impl_lam (propId singleton x7 x4) x8 \ x8) x6) (propId singleton x2 x4)
 int
"
"5_____[+[Begin 
isa
 (elim_id x5 (x7 \ x8 \
   implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
   impl_lam (propId singleton x7 x4) x8 \ x8)
 (implies X74^7 (propId singleton x2 x4)) int
"
"6______[+[Begin 
of
 (elim_id x5 (x7 \ x8 \
   implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
   impl_lam (propId singleton x7 x4) x8 \ x8) X75^7 int
"
"7_______[+[Begin 
of x5 (propId X76^7 X77^7 X78^7) int
"
"7-------]-]Success  
of x5 (propId singleton x2 x3) int
"
"7_______[+[Begin 
pi x7 \
 pi x8 \
  locDecl x7 singleton =>
   locDecl x8 singleton =>
    isaType (implies (propId singleton x8 x4) (propId singleton x7 x4)) propc
     int
"
"8________[+[Begin 
ofType (implies (propId singleton x8 x4) (propId singleton x7 x4)) X79^9 int
"
"9_________[+[Begin 
of x8 X80^9 int
"
"9---------]-]Success  
of x8 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
of x4 X81^9 int
"
"9---------]-]Success  
of x4 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
(pts_leq set set),
(X79^9 = props)
"
"9---------]-]Success  
(pts_leq set set),
(props = props)
"
"9_________[+[Begin 
of x7 X82^10 int
"
"9---------]-]Success  
of x7 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
of x4 X83^10 int
"
"9---------]-]Success  
of x4 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
(pts_leq set set),
(props = props)
"
"8--------]-]Success  
ofType (implies (propId singleton x8 x4) (propId singleton x7 x4)) props int
"
"8________[+[Begin 
pts_leq props propc
"
"8--------]-]Success  
pts_leq props propc
"
"7-------]-]Success  
pi x7 \
 pi x8 \
  locDecl x7 singleton =>
   locDecl x8 singleton =>
    isaType (implies (propId singleton x8 x4) (propId singleton x7 x4)) propc
     int
"
"7_______[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  of (impl_lam (propId singleton x7 x4) x8 \ x8)
   (implies (propId singleton x7 x4) (propId singleton x7 x4)) int
"
"8________[+[Begin 
isaType (propId singleton x7 x4) propc int
"
"9_________[+[Begin 
ofType (propId singleton x7 x4) X84^8 int
"
"10__________[+[Begin 
of x7 X85^8 int
"
"10----------]-]Success  
of x7 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of x4 X86^8 int
"
"10----------]-]Success  
of x4 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(X84^8 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
ofType (propId singleton x7 x4) props int
"
"9_________[+[Begin 
pts_leq props propc
"
"9---------]-]Success  
pts_leq props propc
"
"8--------]-]Success  
isaType (propId singleton x7 x4) propc int
"
"8________[+[Begin 
isaType (propId singleton x7 x4) propc int
"
"9_________[+[Begin 
ofType (propId singleton x7 x4) X87^8 int
"
"10__________[+[Begin 
of x7 X88^8 int
"
"10----------]-]Success  
of x7 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of x4 X89^8 int
"
"10----------]-]Success  
of x4 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(X87^8 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
ofType (propId singleton x7 x4) props int
"
"9_________[+[Begin 
pts_leq props propc
"
"9---------]-]Success  
pts_leq props propc
"
"8--------]-]Success  
isaType (propId singleton x7 x4) propc int
"
"8________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x7 x4) => isa x8 (propId singleton x7 x4) int
"
"9_________[+[Begin 
of x8 X90^9 int
"
"9---------]-]Success  
of x8 (propId singleton x7 x4) int
"
"9_________[+[Begin 
conv (propId singleton x7 x4) (propId singleton x7 x4)
"
"9---------]-]Success  
conv (propId singleton x7 x4) (propId singleton x7 x4)
"
"8--------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x7 x4) => isa x8 (propId singleton x7 x4) int
"
"7-------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  of (impl_lam (propId singleton x7 x4) x8 \ x8)
   (implies (propId singleton x7 x4) (propId singleton x7 x4)) int
"
"6------]-]Success  
of
 (elim_id x5 (x7 \ x8 \
   implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
   impl_lam (propId singleton x7 x4) x8 \ x8)
 (implies (propId singleton x3 x4) (propId singleton x2 x4)) int
"
"6______[+[Begin 
conv (implies (propId singleton x3 x4) (propId singleton x2 x4))
 (implies X74^7 (propId singleton x2 x4))
"
"6------]-]Success  
conv (implies (propId singleton x3 x4) (propId singleton x2 x4))
 (implies (propId singleton x3 x4) (propId singleton x2 x4))
"
"5-----]-]Success  
isa
 (elim_id x5 (x7 \ x8 \
   implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
   impl_lam (propId singleton x7 x4) x8 \ x8)
 (implies (propId singleton x3 x4) (propId singleton x2 x4)) int
"
"5_____[+[Begin 
isa x6 (propId singleton x3 x4) int
"
"6______[+[Begin 
of x6 X91^7 int
"
"6------]-]Success  
of x6 (propId singleton x3 x4) int
"
"6______[+[Begin 
conv (propId singleton x3 x4) (propId singleton x3 x4)
"
"6------]-]Success  
conv (propId singleton x3 x4) (propId singleton x3 x4)
"
"5-----]-]Success  
isa x6 (propId singleton x3 x4) int
"
"4----]-]Success  
of
 (impl_app
   (elim_id x5 (x7 \ x8 \
     implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
     impl_lam (propId singleton x7 x4) x8 \ x8) x6) (propId singleton x2 x4)
 int
"
"3---]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     locDecl x2 singleton =>
      locDecl x3 singleton =>
       locDecl x4 singleton =>
        locDecl x5 (propId singleton x2 x3) =>
         locDecl x6 (propId singleton x3 x4) =>
          spy
           (of
             (impl_app
               (elim_id x5 (x7 \ x8 \
                 implies (propId singleton x8 x4) (propId singleton x7 x4))
                 x7 \ impl_lam (propId singleton x7 x4) x8 \ x8) x6)
             (propId singleton x2 x4) int)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     (setoid_tran singleton x2 \ x3 \ x4 \ x5 \ x6 \
       impl_app
        (elim_id x5 (x7 \ x8 \
          implies (propId singleton x8 x4) (propId singleton x7 x4)) x7 \
          impl_lam (propId singleton x7 x4) x8 \ x8) x6)
"
"2__[+[Begin 
X92 = (x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam singleton x5 \
  impl_app
   (elim_id (forall_app x3 x5) (x6 \ x7 \
     implies
      (propId singleton x7
        (app
          (elim_setSigma x2 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
            x8) x5))
      (propId singleton x6
        (app
          (elim_setSigma x2 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
            x8) x5))) x6 \
     impl_lam
      (propId singleton x6
        (app
          (elim_setSigma x2 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
            x7) x5)) x7 \ x7) (forall_app x4 x5))
"
"2--]-]Success  
(x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam singleton x5 \
  impl_app
   (elim_id (forall_app x3 x5) (x6 \ x7 \
     implies
      (propId singleton x7
        (app
          (elim_setSigma x2 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
            x8) x5))
      (propId singleton x6
        (app
          (elim_setSigma x2 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
            x8) x5))) x6 \
     impl_lam
      (propId singleton x6
        (app
          (elim_setSigma x2 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
            x7) x5)) x7 \ x7) (forall_app x4 x5)) = (x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam singleton x5 \
  impl_app
   (elim_id (forall_app x3 x5) (x6 \ x7 \
     implies
      (propId singleton x7
        (app
          (elim_setSigma x2 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
            x8) x5))
      (propId singleton x6
        (app
          (elim_setSigma x2 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
            x8) x5))) x6 \
     impl_lam
      (propId singleton x6
        (app
          (elim_setSigma x2 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
            x7) x5)) x7 \ x7) (forall_app x4 x5))
"
"1-]-]Success  
setoid_tran (setPi singleton x0 \ singleton) _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_tran
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 _
"
"2__[+[Begin 
interp
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 X93
"
"3___[+[Begin 
interp (setPi singleton x0 \ singleton) X94
"
"4____[+[Begin 
interp singleton X95
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X96 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X97
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X98 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X99 x3 x4 x5))
"
"5_____[+[Begin 
tau singleton singleton (X99 x3 x4 x5)
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"3---]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp (setPi singleton x2 \ singleton) (X100 x1)
"
"4____[+[Begin 
interp singleton X101^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X102^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X103^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X104^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X105^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X105^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ singleton)
      (setSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
setoid_eq (setPi singleton x0 \ singleton) X106
"
"4____[+[Begin 
interp singleton X107
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X108 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X109 x1)))
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"3---]-]Success  
setoid_eq (setPi singleton x0 \ singleton) x0 \ x1 \
 forall singleton x2 \
  propId singleton
   (app (elim_setSigma x0 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app (elim_setSigma x1 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => setoid_eq (setPi singleton x2 \ singleton) (X110 x1)
"
"4____[+[Begin 
interp singleton X111^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X112^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X113^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     (setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
       forall singleton x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)
         (app
           (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ singleton)
                  (setPi singleton x6 \ singleton) (X114 x3 x4 x5))
"
"4____[+[Begin 
tau (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
 (X114 x3 x4 x5)
"
"4----]-]Success  
tau (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton) x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ singleton)
                  (setPi singleton x6 \ singleton) x6 \ x6)
"
"2--]-]Success  
interp
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x0 \ singleton) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \
          propId singleton (app x0 x1) (app x0 x2)) x0 \
     setSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x0 \
   forall
    (setSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \
    forall
     (setSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (forall singleton x3 \
        propId singleton
         (app
           (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)
         (app
           (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)) x3 \
      forall singleton x4 \
       propId singleton
        (app
          (elim_setSigma (app x0 x1) (x5 \ setPi singleton x6 \ singleton)
            x5 \ x6 \ x5) x4)
        (app
          (elim_setSigma (app x0 x2) (x5 \ setPi singleton x6 \ singleton)
            x5 \ x6 \ x5) x4))
"
"2__[+[Begin 
setoid_eq
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 X115
"
"3___[+[Begin 
interp (setPi singleton x0 \ singleton) X116
"
"4____[+[Begin 
interp singleton X117
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X118 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X119
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X120 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X121 x3 x4 x5))
"
"5_____[+[Begin 
tau singleton singleton (X121 x3 x4 x5)
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"3---]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp (setPi singleton x2 \ singleton) (X122 x1)
"
"4____[+[Begin 
interp singleton X123^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X124^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X125^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X126^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X127^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X127^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ singleton)
      (setSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     ((interp (setPi singleton x2 \ singleton)
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4))),
     (setoid_eq (setPi singleton x2 \ singleton) (X128 x1)))
"
"4____[+[Begin 
interp singleton X129^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X130^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X131^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X132^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X133^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X133^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4____[+[Begin 
interp singleton X134^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X135^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X136^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     ((interp (setPi singleton x2 \ singleton)
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4))),
     (setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
       forall singleton x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)
         (app
           (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)))
"
"2--]-]Success  
setoid_eq
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 x0 \ x1 \
 forall
  (setSigma (setPi singleton x2 \ singleton) x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) x2 \
  forall singleton x3 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x4 \
            setPi
             (setSigma (setPi singleton x5 \ singleton) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x5 \
             setSigma (setPi singleton x6 \ singleton) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4) x2)
        (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4) x3)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x4 \
            setPi
             (setSigma (setPi singleton x5 \ singleton) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x5 \
             setSigma (setPi singleton x6 \ singleton) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4) x2)
        (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4) x3)
"
"2__[+[Begin 
interp singleton X137
"
"2--]-]Success  
interp singleton singleton
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X138 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"2__[+[Begin 
setoid_eq singleton X139
"
"2--]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X140 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X141 x3 x4 x5))
"
"3___[+[Begin 
tau singleton singleton (X141 x3 x4 x5)
"
"3---]-]Success  
tau singleton singleton x6 \ x6
"
"2--]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2__[+[Begin 
interp singleton X142^2
"
"2--]-]Success  
interp singleton singleton
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X143^2 x3)
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"2__[+[Begin 
setoid_eq singleton X144^2
"
"2--]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X145^2 x3)
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X146^2 x5 x6 x7))
"
"3___[+[Begin 
tau singleton singleton (X146^2 x5 x6 x7)
"
"3---]-]Success  
tau singleton singleton x8 \ x8
"
"2--]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => setoid_tran (setPi singleton x2 \ singleton) (X147 x1)
"
"3___[+[Begin 
interp (setPi singleton x2 \ singleton) X148^2
"
"4____[+[Begin 
interp singleton X149^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X150^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X151^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X152^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X153^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X153^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
interp (setPi singleton x2 \ singleton)
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
setoid_eq (setPi singleton x2 \ singleton) X154^2
"
"4____[+[Begin 
interp singleton X155^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X156^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X157^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
 forall singleton x4 \
  propId singleton
   (app (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
   (app (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_tran singleton (X158^2 x3)
"
"4____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     locDecl x4 singleton =>
      locDecl x5 singleton =>
       locDecl x6 singleton =>
        locDecl x7 (propId singleton x4 x5) =>
         locDecl x8 (propId singleton x5 x6) =>
          spy
           (of
             (impl_app
               (elim_id x7 (x9 \ x10 \
                 implies (propId singleton x10 x6) (propId singleton x9 x6))
                 x9 \ impl_lam (propId singleton x9 x6) x10 \ x10) x8)
             (propId singleton x4 x6) int)
"
"5_____[+[Begin 
of
 (impl_app
   (elim_id x7 (x9 \ x10 \
     implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
     impl_lam (propId singleton x9 x6) x10 \ x10) x8)
 (propId singleton x4 x6) int
"
"6______[+[Begin 
isa
 (elim_id x7 (x9 \ x10 \
   implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
   impl_lam (propId singleton x9 x6) x10 \ x10)
 (implies X159^9 (propId singleton x4 x6)) int
"
"7_______[+[Begin 
of
 (elim_id x7 (x9 \ x10 \
   implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
   impl_lam (propId singleton x9 x6) x10 \ x10) X160^9 int
"
"8________[+[Begin 
of x7 (propId X161^9 X162^9 X163^9) int
"
"8--------]-]Success  
of x7 (propId singleton x4 x5) int
"
"8________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 singleton =>
   locDecl x10 singleton =>
    isaType (implies (propId singleton x10 x6) (propId singleton x9 x6))
     propc int
"
"9_________[+[Begin 
ofType (implies (propId singleton x10 x6) (propId singleton x9 x6)) X164^11
 int
"
"10__________[+[Begin 
of x10 X165^11 int
"
"10----------]-]Success  
of x10 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of x6 X166^11 int
"
"10----------]-]Success  
of x6 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(X164^11 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"10__________[+[Begin 
of x9 X167^12 int
"
"10----------]-]Success  
of x9 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of x6 X168^12 int
"
"10----------]-]Success  
of x6 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
ofType (implies (propId singleton x10 x6) (propId singleton x9 x6)) props int
"
"9_________[+[Begin 
pts_leq props propc
"
"9---------]-]Success  
pts_leq props propc
"
"8--------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 singleton =>
   locDecl x10 singleton =>
    isaType (implies (propId singleton x10 x6) (propId singleton x9 x6))
     propc int
"
"8________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  of (impl_lam (propId singleton x9 x6) x10 \ x10)
   (implies (propId singleton x9 x6) (propId singleton x9 x6)) int
"
"9_________[+[Begin 
isaType (propId singleton x9 x6) propc int
"
"10__________[+[Begin 
ofType (propId singleton x9 x6) X169^10 int
"
"11___________[+[Begin 
of x9 X170^10 int
"
"11-----------]-]Success  
of x9 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of x6 X171^10 int
"
"11-----------]-]Success  
of x6 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X169^10 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
ofType (propId singleton x9 x6) props int
"
"10__________[+[Begin 
pts_leq props propc
"
"10----------]-]Success  
pts_leq props propc
"
"9---------]-]Success  
isaType (propId singleton x9 x6) propc int
"
"9_________[+[Begin 
isaType (propId singleton x9 x6) propc int
"
"10__________[+[Begin 
ofType (propId singleton x9 x6) X172^10 int
"
"11___________[+[Begin 
of x9 X173^10 int
"
"11-----------]-]Success  
of x9 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of x6 X174^10 int
"
"11-----------]-]Success  
of x6 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X172^10 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
ofType (propId singleton x9 x6) props int
"
"10__________[+[Begin 
pts_leq props propc
"
"10----------]-]Success  
pts_leq props propc
"
"9---------]-]Success  
isaType (propId singleton x9 x6) propc int
"
"9_________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x9 x6) => isa x10 (propId singleton x9 x6) int
"
"10__________[+[Begin 
of x10 X175^11 int
"
"10----------]-]Success  
of x10 (propId singleton x9 x6) int
"
"10__________[+[Begin 
conv (propId singleton x9 x6) (propId singleton x9 x6)
"
"10----------]-]Success  
conv (propId singleton x9 x6) (propId singleton x9 x6)
"
"9---------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x9 x6) => isa x10 (propId singleton x9 x6) int
"
"8--------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  of (impl_lam (propId singleton x9 x6) x10 \ x10)
   (implies (propId singleton x9 x6) (propId singleton x9 x6)) int
"
"7-------]-]Success  
of
 (elim_id x7 (x9 \ x10 \
   implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
   impl_lam (propId singleton x9 x6) x10 \ x10)
 (implies (propId singleton x5 x6) (propId singleton x4 x6)) int
"
"7_______[+[Begin 
conv (implies (propId singleton x5 x6) (propId singleton x4 x6))
 (implies X159^9 (propId singleton x4 x6))
"
"7-------]-]Success  
conv (implies (propId singleton x5 x6) (propId singleton x4 x6))
 (implies (propId singleton x5 x6) (propId singleton x4 x6))
"
"6------]-]Success  
isa
 (elim_id x7 (x9 \ x10 \
   implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
   impl_lam (propId singleton x9 x6) x10 \ x10)
 (implies (propId singleton x5 x6) (propId singleton x4 x6)) int
"
"6______[+[Begin 
isa x8 (propId singleton x5 x6) int
"
"7_______[+[Begin 
of x8 X176^9 int
"
"7-------]-]Success  
of x8 (propId singleton x5 x6) int
"
"7_______[+[Begin 
conv (propId singleton x5 x6) (propId singleton x5 x6)
"
"7-------]-]Success  
conv (propId singleton x5 x6) (propId singleton x5 x6)
"
"6------]-]Success  
isa x8 (propId singleton x5 x6) int
"
"5-----]-]Success  
of
 (impl_app
   (elim_id x7 (x9 \ x10 \
     implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
     impl_lam (propId singleton x9 x6) x10 \ x10) x8)
 (propId singleton x4 x6) int
"
"4----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     locDecl x4 singleton =>
      locDecl x5 singleton =>
       locDecl x6 singleton =>
        locDecl x7 (propId singleton x4 x5) =>
         locDecl x8 (propId singleton x5 x6) =>
          spy
           (of
             (impl_app
               (elim_id x7 (x9 \ x10 \
                 implies (propId singleton x10 x6) (propId singleton x9 x6))
                 x9 \ impl_lam (propId singleton x9 x6) x10 \ x10) x8)
             (propId singleton x4 x6) int)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     (setoid_tran singleton x4 \ x5 \ x6 \ x7 \ x8 \
       impl_app
        (elim_id x7 (x9 \ x10 \
          implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
          impl_lam (propId singleton x9 x6) x10 \ x10) x8)
"
"3___[+[Begin 
X147 x1 = (x2 \ x3 \ x4 \ x5 \ x6 \
 forall_lam singleton x7 \
  impl_app
   (elim_id (forall_app x5 x7) (x8 \ x9 \
     implies
      (propId singleton x9
        (app
          (elim_setSigma x4 (x10 \ setPi singleton x11 \ singleton) x10 \
            x11 \ x10) x7))
      (propId singleton x8
        (app
          (elim_setSigma x4 (x10 \ setPi singleton x11 \ singleton) x10 \
            x11 \ x10) x7))) x8 \
     impl_lam
      (propId singleton x8
        (app
          (elim_setSigma x4 (x9 \ setPi singleton x10 \ singleton) x9 \ x10 \
            x9) x7)) x9 \ x9) (forall_app x6 x7))
"
"3---]-]Success  
(x2 \ x3 \ x4 \ x5 \ x6 \
 forall_lam singleton x7 \
  impl_app
   (elim_id (forall_app x5 x7) (x8 \ x9 \
     implies
      (propId singleton x9
        (app
          (elim_setSigma x4 (x10 \ setPi singleton x11 \ singleton) x10 \
            x11 \ x10) x7))
      (propId singleton x8
        (app
          (elim_setSigma x4 (x10 \ setPi singleton x11 \ singleton) x10 \
            x11 \ x10) x7))) x8 \
     impl_lam
      (propId singleton x8
        (app
          (elim_setSigma x4 (x9 \ setPi singleton x10 \ singleton) x9 \ x10 \
            x9) x7)) x9 \ x9) (forall_app x6 x7)) = (x2 \ x3 \ x4 \ x5 \ x6 \
 forall_lam singleton x7 \
  impl_app
   (elim_id (forall_app x5 x7) (x8 \ x9 \
     implies
      (propId singleton x9
        (app
          (elim_setSigma x4 (x10 \ setPi singleton x11 \ singleton) x10 \
            x11 \ x10) x7))
      (propId singleton x8
        (app
          (elim_setSigma x4 (x10 \ setPi singleton x11 \ singleton) x10 \
            x11 \ x10) x7))) x8 \
     impl_lam
      (propId singleton x8
        (app
          (elim_setSigma x4 (x9 \ setPi singleton x10 \ singleton) x9 \ x10 \
            x9) x7)) x9 \ x9) (forall_app x6 x7))
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     (setoid_tran (setPi singleton x2 \ singleton) x2 \ x3 \ x4 \ x5 \ x6 \
       forall_lam singleton x7 \
        impl_app
         (elim_id (forall_app x5 x7) (x8 \ x9 \
           implies
            (propId singleton x9
              (app
                (elim_setSigma x4 (x10 \ setPi singleton x11 \ singleton)
                  x10 \ x11 \ x10) x7))
            (propId singleton x8
              (app
                (elim_setSigma x4 (x10 \ setPi singleton x11 \ singleton)
                  x10 \ x11 \ x10) x7))) x8 \
           impl_lam
            (propId singleton x8
              (app
                (elim_setSigma x4 (x9 \ setPi singleton x10 \ singleton) x9 \
                  x10 \ x9) x7)) x9 \ x9) (forall_app x6 x7))
"
"2__[+[Begin 
X177 = (x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam
  (setSigma (setPi singleton x5 \ singleton) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) x5 \
  forall_lam singleton x6 \
   impl_app
    (elim_id (forall_app (forall_app x3 x5) x6) (x7 \ x8 \
      implies
       (propId singleton x8
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi
                  (setSigma (setPi singleton x10 \ singleton) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton (app x10 x11) (app x10 x12)) x10 \
                  setSigma (setPi singleton x11 \ singleton) x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x6))
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi
                  (setSigma (setPi singleton x10 \ singleton) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton (app x10 x11) (app x10 x12)) x10 \
                  setSigma (setPi singleton x11 \ singleton) x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x6))) x7 \
      impl_lam
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x8 \
                 setPi
                  (setSigma (setPi singleton x9 \ singleton) x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton (app x9 x10) (app x9 x11)) x9 \
                  setSigma (setPi singleton x10 \ singleton) x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \
                 x8) x5) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \ x8)
           x6)) x8 \ x8) (forall_app (forall_app x4 x5) x6))
"
"2--]-]Success  
(x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam
  (setSigma (setPi singleton x5 \ singleton) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) x5 \
  forall_lam singleton x6 \
   impl_app
    (elim_id (forall_app (forall_app x3 x5) x6) (x7 \ x8 \
      implies
       (propId singleton x8
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi
                  (setSigma (setPi singleton x10 \ singleton) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton (app x10 x11) (app x10 x12)) x10 \
                  setSigma (setPi singleton x11 \ singleton) x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x6))
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi
                  (setSigma (setPi singleton x10 \ singleton) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton (app x10 x11) (app x10 x12)) x10 \
                  setSigma (setPi singleton x11 \ singleton) x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x6))) x7 \
      impl_lam
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x8 \
                 setPi
                  (setSigma (setPi singleton x9 \ singleton) x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton (app x9 x10) (app x9 x11)) x9 \
                  setSigma (setPi singleton x10 \ singleton) x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \
                 x8) x5) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \ x8)
           x6)) x8 \ x8) (forall_app (forall_app x4 x5) x6)) = (x0 \ x1 \
 x2 \ x3 \ x4 \
 forall_lam
  (setSigma (setPi singleton x5 \ singleton) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) x5 \
  forall_lam singleton x6 \
   impl_app
    (elim_id (forall_app (forall_app x3 x5) x6) (x7 \ x8 \
      implies
       (propId singleton x8
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi
                  (setSigma (setPi singleton x10 \ singleton) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton (app x10 x11) (app x10 x12)) x10 \
                  setSigma (setPi singleton x11 \ singleton) x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x6))
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi
                  (setSigma (setPi singleton x10 \ singleton) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton (app x10 x11) (app x10 x12)) x10 \
                  setSigma (setPi singleton x11 \ singleton) x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x6))) x7 \
      impl_lam
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x8 \
                 setPi
                  (setSigma (setPi singleton x9 \ singleton) x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton (app x9 x10) (app x9 x11)) x9 \
                  setSigma (setPi singleton x10 \ singleton) x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \
                 x8) x5) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \ x8)
           x6)) x8 \ x8) (forall_app (forall_app x4 x5) x6))
"
"1-]-]Success  
setoid_tran
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_tran
 (setPi (propEq singleton star star) x0 \ propEq singleton star star) _
"
"2__[+[Begin 
interp (setPi (propEq singleton star star) x0 \ propEq singleton star star)
 X178
"
"3___[+[Begin 
interp (propEq singleton star star) X179
"
"4____[+[Begin 
setoid_eq singleton X180
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
interp_isa star singleton X181
"
"5_____[+[Begin 
of star X182 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X183
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X184
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X181 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X185
"
"5_____[+[Begin 
of star X186 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X187
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X188
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X185 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
X179 = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp (propEq singleton star star) (X189 x1)
"
"4____[+[Begin 
setoid_eq singleton X190^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
interp_isa star singleton X191^2
"
"5_____[+[Begin 
of star X192^2 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X193^2
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X194^2
"
"5-----]-]Success  
tau singleton singleton x2 \ x2
"
"5_____[+[Begin 
X191^2 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X195^2
"
"5_____[+[Begin 
of star X196^2 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X197^2
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X198^2
"
"5-----]-]Success  
tau singleton singleton x2 \ x2
"
"5_____[+[Begin 
X195^2 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
X189 x1 = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"3___[+[Begin 
setoid_eq (propEq singleton star star) X199
"
"3---]-]Success  
setoid_eq (propEq singleton star star) x0 \ x1 \ propId singleton star star
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => setoid_eq (propEq singleton star star) (X200 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     (setoid_eq (propEq singleton star star) x2 \ x3 \
       propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X201 x3 x4 x5))
"
"4____[+[Begin 
tau (propEq singleton star star) (propEq singleton star star) (X201 x3 x4 x5)
"
"4----]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x6 \ x6)
"
"2--]-]Success  
interp (setPi (propEq singleton star star) x0 \ propEq singleton star star)
 (setSigma
   (setPi (propId singleton star star) x0 \ propId singleton star star) x0 \
   forall (propId singleton star star) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \ propId singleton star star)
"
"2__[+[Begin 
setoid_eq
 (setPi (propEq singleton star star) x0 \ propEq singleton star star) X202
"
"3___[+[Begin 
interp (propEq singleton star star) X203
"
"4____[+[Begin 
setoid_eq singleton X204
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
interp_isa star singleton X205
"
"5_____[+[Begin 
of star X206 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X207
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X208
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X205 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X209
"
"5_____[+[Begin 
of star X210 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X211
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X212
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X209 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
X203 = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp (propEq singleton star star) (X213 x1)
"
"4____[+[Begin 
setoid_eq singleton X214^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
interp_isa star singleton X215^2
"
"5_____[+[Begin 
of star X216^2 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X217^2
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X218^2
"
"5-----]-]Success  
tau singleton singleton x2 \ x2
"
"5_____[+[Begin 
X215^2 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X219^2
"
"5_____[+[Begin 
of star X220^2 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X221^2
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X222^2
"
"5-----]-]Success  
tau singleton singleton x2 \ x2
"
"5_____[+[Begin 
X219^2 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
X213 x1 = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) (X223 x1)))
"
"4____[+[Begin 
setoid_eq singleton X224^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
interp_isa star singleton X225^2
"
"5_____[+[Begin 
of star X226^2 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X227^2
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X228^2
"
"5-----]-]Success  
tau singleton singleton x2 \ x2
"
"5_____[+[Begin 
X225^2 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X229^2
"
"5_____[+[Begin 
of star X230^2 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X231^2
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X232^2
"
"5-----]-]Success  
tau singleton singleton x2 \ x2
"
"5_____[+[Begin 
X229^2 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
propId singleton star star = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) x2 \ x3 \
       propId singleton star star))
"
"2--]-]Success  
setoid_eq
 (setPi (propEq singleton star star) x0 \ propEq singleton star star) x0 \
 x1 \ forall (propId singleton star star) x2 \ propId singleton star star
"
"2__[+[Begin 
setoid_eq singleton X233
"
"2--]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"2__[+[Begin 
interp_isa star singleton X234
"
"3___[+[Begin 
of star X235 ext
"
"3---]-]Success  
of star singleton ext
"
"3___[+[Begin 
interp star X236
"
"3---]-]Success  
interp star star
"
"3___[+[Begin 
tau singleton singleton X237
"
"3---]-]Success  
tau singleton singleton x0 \ x0
"
"3___[+[Begin 
X234 = star
"
"3---]-]Success  
star = star
"
"2--]-]Success  
interp_isa star singleton star
"
"2__[+[Begin 
interp_isa star singleton X238
"
"3___[+[Begin 
of star X239 ext
"
"3---]-]Success  
of star singleton ext
"
"3___[+[Begin 
interp star X240
"
"3---]-]Success  
interp star star
"
"3___[+[Begin 
tau singleton singleton X241
"
"3---]-]Success  
tau singleton singleton x0 \ x0
"
"3___[+[Begin 
X238 = star
"
"3---]-]Success  
star = star
"
"2--]-]Success  
interp_isa star singleton star
"
"2__[+[Begin 
X242 = propId singleton star star
"
"2--]-]Success  
propId singleton star star = propId singleton star star
"
"2__[+[Begin 
setoid_eq singleton X243^2
"
"2--]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"2__[+[Begin 
interp_isa star singleton X244^2
"
"3___[+[Begin 
of star X245^2 ext
"
"3---]-]Success  
of star singleton ext
"
"3___[+[Begin 
interp star X246^2
"
"3---]-]Success  
interp star star
"
"3___[+[Begin 
tau singleton singleton X247^2
"
"3---]-]Success  
tau singleton singleton x2 \ x2
"
"3___[+[Begin 
X244^2 = star
"
"3---]-]Success  
star = star
"
"2--]-]Success  
interp_isa star singleton star
"
"2__[+[Begin 
interp_isa star singleton X248^2
"
"3___[+[Begin 
of star X249^2 ext
"
"3---]-]Success  
of star singleton ext
"
"3___[+[Begin 
interp star X250^2
"
"3---]-]Success  
interp star star
"
"3___[+[Begin 
tau singleton singleton X251^2
"
"3---]-]Success  
tau singleton singleton x2 \ x2
"
"3___[+[Begin 
X248^2 = star
"
"3---]-]Success  
star = star
"
"2--]-]Success  
interp_isa star singleton star
"
"2__[+[Begin 
X252 x1 = propId singleton star star
"
"2--]-]Success  
propId singleton star star = propId singleton star star
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => setoid_tran (propEq singleton star star) (X253 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     (setoid_tran (propEq singleton star star) x2 \ x3 \ x4 \ x5 \ x6 \
       id singleton star)
"
"2__[+[Begin 
X254 = (x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam (propId singleton star star) x5 \ id singleton star)
"
"2--]-]Success  
(x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam (propId singleton star star) x5 \ id singleton star) = (x0 \ x1 \
 x2 \ x3 \ x4 \
 forall_lam (propId singleton star star) x5 \ id singleton star)
"
"1-]-]Success  
setoid_tran
 (setPi (propEq singleton star star) x0 \ propEq singleton star star) _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
sigma x0 \ setoid_tran singleton x0
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     locDecl x0 singleton =>
      locDecl x1 singleton =>
       locDecl x2 singleton =>
        locDecl x3 (propId singleton x0 x1) =>
         locDecl x4 (propId singleton x1 x2) =>
          spy
           (of
             (impl_app
               (elim_id x3 (x5 \ x6 \
                 implies (propId singleton x6 x2) (propId singleton x5 x2))
                 x5 \ impl_lam (propId singleton x5 x2) x6 \ x6) x4)
             (propId singleton x0 x2) int)
"
"3___[+[Begin 
of
 (impl_app
   (elim_id x3 (x5 \ x6 \
     implies (propId singleton x6 x2) (propId singleton x5 x2)) x5 \
     impl_lam (propId singleton x5 x2) x6 \ x6) x4) (propId singleton x0 x2)
 int
"
"4____[+[Begin 
isa
 (elim_id x3 (x5 \ x6 \
   implies (propId singleton x6 x2) (propId singleton x5 x2)) x5 \
   impl_lam (propId singleton x5 x2) x6 \ x6)
 (implies X255^5 (propId singleton x0 x2)) int
"
"5_____[+[Begin 
of
 (elim_id x3 (x5 \ x6 \
   implies (propId singleton x6 x2) (propId singleton x5 x2)) x5 \
   impl_lam (propId singleton x5 x2) x6 \ x6) X256^5 int
"
"6______[+[Begin 
of x3 (propId X257^5 X258^5 X259^5) int
"
"6------]-]Success  
of x3 (propId singleton x0 x1) int
"
"6______[+[Begin 
pi x5 \
 pi x6 \
  locDecl x5 singleton =>
   locDecl x6 singleton =>
    isaType (implies (propId singleton x6 x2) (propId singleton x5 x2)) propc
     int
"
"7_______[+[Begin 
ofType (implies (propId singleton x6 x2) (propId singleton x5 x2)) X260^7 int
"
"8________[+[Begin 
of x6 X261^7 int
"
"8--------]-]Success  
of x6 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
of x2 X262^7 int
"
"8--------]-]Success  
of x2 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
(pts_leq set set),
(X260^7 = props)
"
"8--------]-]Success  
(pts_leq set set),
(props = props)
"
"8________[+[Begin 
of x5 X263^8 int
"
"8--------]-]Success  
of x5 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
of x2 X264^8 int
"
"8--------]-]Success  
of x2 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
(pts_leq set set),
(props = props)
"
"8--------]-]Success  
(pts_leq set set),
(props = props)
"
"7-------]-]Success  
ofType (implies (propId singleton x6 x2) (propId singleton x5 x2)) props int
"
"7_______[+[Begin 
pts_leq props propc
"
"7-------]-]Success  
pts_leq props propc
"
"6------]-]Success  
pi x5 \
 pi x6 \
  locDecl x5 singleton =>
   locDecl x6 singleton =>
    isaType (implies (propId singleton x6 x2) (propId singleton x5 x2)) propc
     int
"
"6______[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  of (impl_lam (propId singleton x5 x2) x6 \ x6)
   (implies (propId singleton x5 x2) (propId singleton x5 x2)) int
"
"7_______[+[Begin 
isaType (propId singleton x5 x2) propc int
"
"8________[+[Begin 
ofType (propId singleton x5 x2) X265^6 int
"
"9_________[+[Begin 
of x5 X266^6 int
"
"9---------]-]Success  
of x5 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
of x2 X267^6 int
"
"9---------]-]Success  
of x2 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
(pts_leq set set),
(X265^6 = props)
"
"9---------]-]Success  
(pts_leq set set),
(props = props)
"
"8--------]-]Success  
ofType (propId singleton x5 x2) props int
"
"8________[+[Begin 
pts_leq props propc
"
"8--------]-]Success  
pts_leq props propc
"
"7-------]-]Success  
isaType (propId singleton x5 x2) propc int
"
"7_______[+[Begin 
isaType (propId singleton x5 x2) propc int
"
"8________[+[Begin 
ofType (propId singleton x5 x2) X268^6 int
"
"9_________[+[Begin 
of x5 X269^6 int
"
"9---------]-]Success  
of x5 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
of x2 X270^6 int
"
"9---------]-]Success  
of x2 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
(pts_leq set set),
(X268^6 = props)
"
"9---------]-]Success  
(pts_leq set set),
(props = props)
"
"8--------]-]Success  
ofType (propId singleton x5 x2) props int
"
"8________[+[Begin 
pts_leq props propc
"
"8--------]-]Success  
pts_leq props propc
"
"7-------]-]Success  
isaType (propId singleton x5 x2) propc int
"
"7_______[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x5 x2) => isa x6 (propId singleton x5 x2) int
"
"8________[+[Begin 
of x6 X271^7 int
"
"8--------]-]Success  
of x6 (propId singleton x5 x2) int
"
"8________[+[Begin 
conv (propId singleton x5 x2) (propId singleton x5 x2)
"
"8--------]-]Success  
conv (propId singleton x5 x2) (propId singleton x5 x2)
"
"7-------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x5 x2) => isa x6 (propId singleton x5 x2) int
"
"6------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  of (impl_lam (propId singleton x5 x2) x6 \ x6)
   (implies (propId singleton x5 x2) (propId singleton x5 x2)) int
"
"5-----]-]Success  
of
 (elim_id x3 (x5 \ x6 \
   implies (propId singleton x6 x2) (propId singleton x5 x2)) x5 \
   impl_lam (propId singleton x5 x2) x6 \ x6)
 (implies (propId singleton x1 x2) (propId singleton x0 x2)) int
"
"5_____[+[Begin 
conv (implies (propId singleton x1 x2) (propId singleton x0 x2))
 (implies X255^5 (propId singleton x0 x2))
"
"5-----]-]Success  
conv (implies (propId singleton x1 x2) (propId singleton x0 x2))
 (implies (propId singleton x1 x2) (propId singleton x0 x2))
"
"4----]-]Success  
isa
 (elim_id x3 (x5 \ x6 \
   implies (propId singleton x6 x2) (propId singleton x5 x2)) x5 \
   impl_lam (propId singleton x5 x2) x6 \ x6)
 (implies (propId singleton x1 x2) (propId singleton x0 x2)) int
"
"4____[+[Begin 
isa x4 (propId singleton x1 x2) int
"
"5_____[+[Begin 
of x4 X272^5 int
"
"5-----]-]Success  
of x4 (propId singleton x1 x2) int
"
"5_____[+[Begin 
conv (propId singleton x1 x2) (propId singleton x1 x2)
"
"5-----]-]Success  
conv (propId singleton x1 x2) (propId singleton x1 x2)
"
"4----]-]Success  
isa x4 (propId singleton x1 x2) int
"
"3---]-]Success  
of
 (impl_app
   (elim_id x3 (x5 \ x6 \
     implies (propId singleton x6 x2) (propId singleton x5 x2)) x5 \
     impl_lam (propId singleton x5 x2) x6 \ x6) x4) (propId singleton x0 x2)
 int
"
"2--]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     locDecl x0 singleton =>
      locDecl x1 singleton =>
       locDecl x2 singleton =>
        locDecl x3 (propId singleton x0 x1) =>
         locDecl x4 (propId singleton x1 x2) =>
          spy
           (of
             (impl_app
               (elim_id x3 (x5 \ x6 \
                 implies (propId singleton x6 x2) (propId singleton x5 x2))
                 x5 \ impl_lam (propId singleton x5 x2) x6 \ x6) x4)
             (propId singleton x0 x2) int)
"
"1-]-]Success  
sigma x0 \ setoid_tran singleton x0
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_refl (setPi (propEq singleton star star) x0 \ singleton) _
"
"2__[+[Begin 
interp (setPi (propEq singleton star star) x0 \ singleton) X273
"
"3___[+[Begin 
interp (propEq singleton star star) X274
"
"4____[+[Begin 
setoid_eq singleton X275
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
interp_isa star singleton X276
"
"5_____[+[Begin 
of star X277 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X278
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X279
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X276 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X280
"
"5_____[+[Begin 
of star X281 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X282
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X283
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X280 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
X274 = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton (X284 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq (propEq singleton star star) X285
"
"3---]-]Success  
setoid_eq (propEq singleton star star) x0 \ x1 \ propId singleton star star
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => setoid_eq singleton (X286 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 => spy (tau singleton singleton (X287 x3 x4 x5))
"
"4____[+[Begin 
tau singleton singleton (X287 x3 x4 x5)
"
"4----]-]Success  
tau singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2--]-]Success  
interp (setPi (propEq singleton star star) x0 \ singleton)
 (setSigma (setPi (propId singleton star star) x0 \ singleton) x0 \
   forall (propId singleton star star) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
setoid_eq singleton X288
"
"2--]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"2__[+[Begin 
interp_isa star singleton X289
"
"3___[+[Begin 
of star X290 ext
"
"3---]-]Success  
of star singleton ext
"
"3___[+[Begin 
interp star X291
"
"3---]-]Success  
interp star star
"
"3___[+[Begin 
tau singleton singleton X292
"
"3---]-]Success  
tau singleton singleton x0 \ x0
"
"3___[+[Begin 
X289 = star
"
"3---]-]Success  
star = star
"
"2--]-]Success  
interp_isa star singleton star
"
"2__[+[Begin 
interp_isa star singleton X293
"
"3___[+[Begin 
of star X294 ext
"
"3---]-]Success  
of star singleton ext
"
"3___[+[Begin 
interp star X295
"
"3---]-]Success  
interp star star
"
"3___[+[Begin 
tau singleton singleton X296
"
"3---]-]Success  
tau singleton singleton x0 \ x0
"
"3___[+[Begin 
X293 = star
"
"3---]-]Success  
star = star
"
"2--]-]Success  
interp_isa star singleton star
"
"2__[+[Begin 
X297 = propId singleton star star
"
"2--]-]Success  
propId singleton star star = propId singleton star star
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => setoid_refl singleton (X298 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => (setoid_refl singleton x2 \ id singleton x2)
"
"2__[+[Begin 
X299 = (x0 \
 forall_lam (propId singleton star star) x1 \
  id singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
"
"2--]-]Success  
(x0 \
 forall_lam (propId singleton star star) x1 \
  id singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
 = (x0 \
 forall_lam (propId singleton star star) x1 \
  id singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
"
"2__[+[Begin 
setoid_eq (setPi (propEq singleton star star) x0 \ singleton) X300
"
"3___[+[Begin 
interp (propEq singleton star star) X301
"
"4____[+[Begin 
setoid_eq singleton X302
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
interp_isa star singleton X303
"
"5_____[+[Begin 
of star X304 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X305
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X306
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X303 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X307
"
"5_____[+[Begin 
of star X308 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X309
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X310
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X307 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
X301 = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton (X311 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X312 x1)))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"2--]-]Success  
setoid_eq (setPi (propEq singleton star star) x0 \ singleton) x0 \ x1 \
 forall (propId singleton star star) x2 \
  propId singleton
   (app
     (elim_setSigma x0 (x3 \
       setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3) x2)
   (app
     (elim_setSigma x1 (x3 \
       setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3) x2)
"
"2__[+[Begin 
pi x0 \
 locDecl x0
  (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      forall (propId singleton star star) x4 \
       propId singleton (app x1 x2) (app x1 x3)) =>
  spy
   (of
     (forall_lam (propId singleton star star) x1 \
       id singleton
        (app
          (elim_setSigma x0 (x2 \
            setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2)
          x1))
     (forall (propId singleton star star) x1 \
       propId singleton
        (app
          (elim_setSigma x0 (x2 \
            setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2)
          x1)
        (app
          (elim_setSigma x0 (x2 \
            setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2)
          x1)) int)
"
"3___[+[Begin 
of
 (forall_lam (propId singleton star star) x1 \
   id singleton
    (app
      (elim_setSigma x0 (x2 \
        setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
 (forall (propId singleton star star) x1 \
   propId singleton
    (app
      (elim_setSigma x0 (x2 \
        setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1)
    (app
      (elim_setSigma x0 (x2 \
        setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
 int
"
"4____[+[Begin 
ofType (propId singleton star star) _ int
"
"5_____[+[Begin 
of star X313^1 int
"
"5-----]-]Success  
of star singleton int
"
"5_____[+[Begin 
conv singleton singleton
"
"5-----]-]Success  
conv singleton singleton
"
"5_____[+[Begin 
of star X314^1 int
"
"5-----]-]Success  
of star singleton int
"
"5_____[+[Begin 
conv singleton singleton
"
"5-----]-]Success  
conv singleton singleton
"
"5_____[+[Begin 
(pts_leq set set),
(X315^1 = props)
"
"5-----]-]Success  
(pts_leq set set),
(props = props)
"
"4----]-]Success  
ofType (propId singleton star star) _ int
"
"4____[+[Begin 
pi x1 \
 locDecl x1 (propId singleton star star) =>
  isa
   (id singleton
     (app
       (elim_setSigma x0 (x2 \
         setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
   (propId singleton
     (app
       (elim_setSigma x0 (x2 \
         setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1)
     (app
       (elim_setSigma x0 (x2 \
         setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
   int
"
"5_____[+[Begin 
of
 (id singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
 X316^2 int
"
"6______[+[Begin 
ofType singleton _ int
"
"6------]-]Success  
ofType singleton _ int
"
"6______[+[Begin 
isa
 (app
   (elim_setSigma x0 (x2 \ setPi (propId singleton star star) x3 \ singleton)
     x2 \ x3 \ x2) x1) singleton int
"
"7_______[+[Begin 
of
 (app
   (elim_setSigma x0 (x2 \ setPi (propId singleton star star) x3 \ singleton)
     x2 \ x3 \ x2) x1) X317^2 int
"
"8________[+[Begin 
of
 (elim_setSigma x0 (x2 \ setPi (propId singleton star star) x3 \ singleton)
   x2 \ x3 \ x2) (setPi X318^2 X319^2) int
"
"9_________[+[Begin 
of x0 (setSigma X320^2 X321^2) int
"
"9---------]-]Success  
of x0
 (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
   forall (propId singleton star star) x3 \
    forall (propId singleton star star) x4 \
     forall (propId singleton star star) x5 \
      propId singleton (app x2 x3) (app x2 x4)) int
"
"9_________[+[Begin 
pi x2 \
 locDecl x2
  (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
    forall (propId singleton star star) x4 \
     forall (propId singleton star star) x5 \
      forall (propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) =>
  ofType (setPi (propId singleton star star) x3 \ singleton) _ int
"
"10__________[+[Begin 
of star X322^3 int
"
"10----------]-]Success  
of star singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of star X323^3 int
"
"10----------]-]Success  
of star singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(X324^3 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"10__________[+[Begin 
pts_fun props set X325^3
"
"11___________[+[Begin 
pts_leq props set
"
"11-----------]-]Success  
pts_leq props set
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"10----------]-]Success  
pts_fun props set set
"
"9---------]-]Success  
pi x2 \
 locDecl x2
  (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
    forall (propId singleton star star) x4 \
     forall (propId singleton star star) x5 \
      forall (propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) =>
  ofType (setPi (propId singleton star star) x3 \ singleton) _ int
"
"9_________[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi (propId singleton star star) x4 \ singleton) =>
   locDecl x3
    (forall (propId singleton star star) x4 \
      forall (propId singleton star star) x5 \
       forall (propId singleton star star) x6 \
        propId singleton (app x2 x4) (app x2 x5)) =>
    isa x2 (setPi (propId singleton star star) x4 \ singleton) int
"
"10__________[+[Begin 
of x2 X326^4 int
"
"10----------]-]Success  
of x2 (setPi (propId singleton star star) x4 \ singleton) int
"
"10__________[+[Begin 
conv (setPi (propId singleton star star) x4 \ singleton)
 (setPi (propId singleton star star) x4 \ singleton)
"
"10----------]-]Success  
conv (setPi (propId singleton star star) x4 \ singleton)
 (setPi (propId singleton star star) x4 \ singleton)
"
"9---------]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi (propId singleton star star) x4 \ singleton) =>
   locDecl x3
    (forall (propId singleton star star) x4 \
      forall (propId singleton star star) x5 \
       forall (propId singleton star star) x6 \
        propId singleton (app x2 x4) (app x2 x5)) =>
    isa x2 (setPi (propId singleton star star) x4 \ singleton) int
"
"8--------]-]Success  
of
 (elim_setSigma x0 (x2 \ setPi (propId singleton star star) x3 \ singleton)
   x2 \ x3 \ x2) (setPi (propId singleton star star) x2 \ singleton) int
"
"8________[+[Begin 
isa x1 (propId singleton star star) int
"
"9_________[+[Begin 
of x1 X327^2 int
"
"9---------]-]Success  
of x1 (propId singleton star star) int
"
"9_________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"9---------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"8--------]-]Success  
isa x1 (propId singleton star star) int
"
"7-------]-]Success  
of
 (app
   (elim_setSigma x0 (x2 \ setPi (propId singleton star star) x3 \ singleton)
     x2 \ x3 \ x2) x1) singleton int
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"6------]-]Success  
isa
 (app
   (elim_setSigma x0 (x2 \ setPi (propId singleton star star) x3 \ singleton)
     x2 \ x3 \ x2) x1) singleton int
"
"5-----]-]Success  
of
 (id singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
 (propId singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1)
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
 int
"
"5_____[+[Begin 
conv
 (propId singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1)
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
 (propId singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1)
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
"
"5-----]-]Success  
conv
 (propId singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1)
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
 (propId singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1)
   (app
     (elim_setSigma x0 (x2 \
       setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
"
"4----]-]Success  
pi x1 \
 locDecl x1 (propId singleton star star) =>
  isa
   (id singleton
     (app
       (elim_setSigma x0 (x2 \
         setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
   (propId singleton
     (app
       (elim_setSigma x0 (x2 \
         setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1)
     (app
       (elim_setSigma x0 (x2 \
         setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
   int
"
"3---]-]Success  
of
 (forall_lam (propId singleton star star) x1 \
   id singleton
    (app
      (elim_setSigma x0 (x2 \
        setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
 (forall (propId singleton star star) x1 \
   propId singleton
    (app
      (elim_setSigma x0 (x2 \
        setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1)
    (app
      (elim_setSigma x0 (x2 \
        setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2) x1))
 int
"
"2--]-]Success  
pi x0 \
 locDecl x0
  (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      forall (propId singleton star star) x4 \
       propId singleton (app x1 x2) (app x1 x3)) =>
  spy
   (of
     (forall_lam (propId singleton star star) x1 \
       id singleton
        (app
          (elim_setSigma x0 (x2 \
            setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2)
          x1))
     (forall (propId singleton star star) x1 \
       propId singleton
        (app
          (elim_setSigma x0 (x2 \
            setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2)
          x1)
        (app
          (elim_setSigma x0 (x2 \
            setPi (propId singleton star star) x3 \ singleton) x2 \ x3 \ x2)
          x1)) int)
"
"1-]-]Success  
setoid_refl (setPi (propEq singleton star star) x0 \ singleton) _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_refl (setPi (setPi singleton x0 \ singleton) x0 \ singleton) _
"
"2__[+[Begin 
interp (setPi (setPi singleton x0 \ singleton) x0 \ singleton) X328
"
"3___[+[Begin 
interp (setPi singleton x0 \ singleton) X329
"
"4____[+[Begin 
interp singleton X330
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X331 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X332
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X333 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X334 x3 x4 x5))
"
"5_____[+[Begin 
tau singleton singleton (X334 x3 x4 x5)
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"3---]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp singleton (X335 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq (setPi singleton x0 \ singleton) X336
"
"4____[+[Begin 
interp singleton X337
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X338 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X339 x1)))
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"3---]-]Success  
setoid_eq (setPi singleton x0 \ singleton) x0 \ x1 \
 forall singleton x2 \
  propId singleton
   (app (elim_setSigma x0 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app (elim_setSigma x1 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => setoid_eq singleton (X340 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 => spy (tau singleton singleton (X341 x3 x4 x5))
"
"4____[+[Begin 
tau singleton singleton (X341 x3 x4 x5)
"
"4----]-]Success  
tau singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2--]-]Success  
interp (setPi (setPi singleton x0 \ singleton) x0 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x0 \ singleton) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \
          propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) x0 \
   forall
    (setSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \
    forall
     (setSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (forall singleton x3 \
        propId singleton
         (app
           (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)
         (app
           (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
interp singleton X342
"
"2--]-]Success  
interp singleton singleton
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X343 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"2__[+[Begin 
setoid_eq singleton X344
"
"2--]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X345 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X346 x3 x4 x5))
"
"3___[+[Begin 
tau singleton singleton (X346 x3 x4 x5)
"
"3---]-]Success  
tau singleton singleton x6 \ x6
"
"2--]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => setoid_refl singleton (X347 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => (setoid_refl singleton x2 \ id singleton x2)
"
"2__[+[Begin 
X348 = (x0 \
 forall_lam
  (setSigma (setPi singleton x1 \ singleton) x1 \
    forall singleton x2 \
     forall singleton x3 \
      forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) x1 \
  id singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1))
"
"2--]-]Success  
(x0 \
 forall_lam
  (setSigma (setPi singleton x1 \ singleton) x1 \
    forall singleton x2 \
     forall singleton x3 \
      forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) x1 \
  id singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1)) = (x0 \
 forall_lam
  (setSigma (setPi singleton x1 \ singleton) x1 \
    forall singleton x2 \
     forall singleton x3 \
      forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) x1 \
  id singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1))
"
"2__[+[Begin 
setoid_eq (setPi (setPi singleton x0 \ singleton) x0 \ singleton) X349
"
"3___[+[Begin 
interp (setPi singleton x0 \ singleton) X350
"
"4____[+[Begin 
interp singleton X351
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X352 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X353
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X354 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X355 x3 x4 x5))
"
"5_____[+[Begin 
tau singleton singleton (X355 x3 x4 x5)
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"3---]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp singleton (X356 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X357 x1)))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"2--]-]Success  
setoid_eq (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \ x1 \
 forall
  (setSigma (setPi singleton x2 \ singleton) x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) x2 \
  propId singleton
   (app
     (elim_setSigma x0 (x3 \
       setPi
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
       x4 \ x3) x2)
   (app
     (elim_setSigma x1 (x3 \
       setPi
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
       x4 \ x3) x2)
"
"2__[+[Begin 
pi x0 \
 locDecl x0
  (setSigma
    (setPi
      (setSigma (setPi singleton x1 \ singleton) x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3)) x1 \ singleton) x1 \
    forall
     (setSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (forall singleton x4 \
         propId singleton
          (app
            (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
              x5) x4)
          (app
            (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
              x5) x4)) x4 \ propId singleton (app x1 x2) (app x1 x3)) =>
  spy
   (of
     (forall_lam
       (setSigma (setPi singleton x1 \ singleton) x1 \
         forall singleton x2 \
          forall singleton x3 \
           forall (propId singleton x2 x3) x4 \
            propId singleton (app x1 x2) (app x1 x3)) x1 \
       id singleton
        (app
          (elim_setSigma x0 (x2 \
            setPi
             (setSigma (setPi singleton x3 \ singleton) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
            x2 \ x3 \ x2) x1))
     (forall
       (setSigma (setPi singleton x1 \ singleton) x1 \
         forall singleton x2 \
          forall singleton x3 \
           forall (propId singleton x2 x3) x4 \
            propId singleton (app x1 x2) (app x1 x3)) x1 \
       propId singleton
        (app
          (elim_setSigma x0 (x2 \
            setPi
             (setSigma (setPi singleton x3 \ singleton) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
            x2 \ x3 \ x2) x1)
        (app
          (elim_setSigma x0 (x2 \
            setPi
             (setSigma (setPi singleton x3 \ singleton) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
            x2 \ x3 \ x2) x1)) int)
"
"3___[+[Begin 
of
 (forall_lam
   (setSigma (setPi singleton x1 \ singleton) x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) x1 \
   id singleton
    (app
      (elim_setSigma x0 (x2 \
        setPi
         (setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
        x3 \ x2) x1))
 (forall
   (setSigma (setPi singleton x1 \ singleton) x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) x1 \
   propId singleton
    (app
      (elim_setSigma x0 (x2 \
        setPi
         (setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
        x3 \ x2) x1)
    (app
      (elim_setSigma x0 (x2 \
        setPi
         (setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
        x3 \ x2) x1)) int
"
"4____[+[Begin 
ofType
 (setSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) _ int
"
"5_____[+[Begin 
ofType (setPi singleton x1 \ singleton) X358^1 int
"
"6______[+[Begin 
pts_fun set set X358^1
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"6------]-]Success  
pts_fun set set set
"
"5-----]-]Success  
ofType (setPi singleton x1 \ singleton) set int
"
"5_____[+[Begin 
pi x1 \
 locDecl x1 (setPi singleton x2 \ singleton) =>
  ofType
   (forall singleton x2 \
     forall singleton x3 \
      forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) X359^1 int
"
"6______[+[Begin 
ofType singleton X360^2 int
"
"6------]-]Success  
ofType singleton set int
"
"6______[+[Begin 
pi x2 \
 locDecl x2 singleton =>
  spy
   (ofType
     (forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) X361^2 int)
"
"7_______[+[Begin 
ofType
 (forall singleton x3 \
   forall (propId singleton x2 x3) x4 \
    propId singleton (app x1 x2) (app x1 x3)) X361^2 int
"
"8________[+[Begin 
ofType singleton X362^3 int
"
"8--------]-]Success  
ofType singleton set int
"
"8________[+[Begin 
pi x3 \
 locDecl x3 singleton =>
  spy
   (ofType
     (forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) X363^3 int)
"
"9_________[+[Begin 
ofType
 (forall (propId singleton x2 x3) x4 \
   propId singleton (app x1 x2) (app x1 x3)) X363^3 int
"
"10__________[+[Begin 
ofType (propId singleton x2 x3) X364^4 int
"
"11___________[+[Begin 
of x2 X365^4 int
"
"11-----------]-]Success  
of x2 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of x3 X366^4 int
"
"11-----------]-]Success  
of x3 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X364^4 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
ofType (propId singleton x2 x3) props int
"
"10__________[+[Begin 
pi x4 \
 locDecl x4 (propId singleton x2 x3) =>
  spy (ofType (propId singleton (app x1 x2) (app x1 x3)) X367^4 int)
"
"11___________[+[Begin 
ofType (propId singleton (app x1 x2) (app x1 x3)) X367^4 int
"
"12____________[+[Begin 
of (app x1 x2) X368^5 int
"
"13_____________[+[Begin 
of x1 (setPi X369^5 X370^5) int
"
"13-------------]-]Success  
of x1 (setPi singleton x5 \ singleton) int
"
"13_____________[+[Begin 
isa x2 singleton int
"
"14______________[+[Begin 
of x2 X371^5 int
"
"14--------------]-]Success  
of x2 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13-------------]-]Success  
isa x2 singleton int
"
"12------------]-]Success  
of (app x1 x2) singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
of (app x1 x3) X372^5 int
"
"13_____________[+[Begin 
of x1 (setPi X373^5 X374^5) int
"
"13-------------]-]Success  
of x1 (setPi singleton x5 \ singleton) int
"
"13_____________[+[Begin 
isa x3 singleton int
"
"14______________[+[Begin 
of x3 X375^5 int
"
"14--------------]-]Success  
of x3 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13-------------]-]Success  
isa x3 singleton int
"
"12------------]-]Success  
of (app x1 x3) singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
(pts_leq set set),
(X367^4 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"11-----------]-]Success  
ofType (propId singleton (app x1 x2) (app x1 x3)) props int
"
"10----------]-]Success  
pi x4 \
 locDecl x4 (propId singleton x2 x3) =>
  spy (ofType (propId singleton (app x1 x2) (app x1 x3)) props int)
"
"10__________[+[Begin 
pts_for props props X363^3
"
"10----------]-]Success  
pts_for props props props
"
"9---------]-]Success  
ofType
 (forall (propId singleton x2 x3) x4 \
   propId singleton (app x1 x2) (app x1 x3)) props int
"
"8--------]-]Success  
pi x3 \
 locDecl x3 singleton =>
  spy
   (ofType
     (forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) props int)
"
"8________[+[Begin 
pts_for set props X361^2
"
"8--------]-]Success  
pts_for set props props
"
"7-------]-]Success  
ofType
 (forall singleton x3 \
   forall (propId singleton x2 x3) x4 \
    propId singleton (app x1 x2) (app x1 x3)) props int
"
"6------]-]Success  
pi x2 \
 locDecl x2 singleton =>
  spy
   (ofType
     (forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) props int)
"
"6______[+[Begin 
pts_for set props X359^1
"
"6------]-]Success  
pts_for set props props
"
"5-----]-]Success  
pi x1 \
 locDecl x1 (setPi singleton x2 \ singleton) =>
  ofType
   (forall singleton x2 \
     forall singleton x3 \
      forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) props int
"
"5_____[+[Begin 
pts_leq set set
"
"5-----]-]Success  
pts_leq set set
"
"5_____[+[Begin 
pts_leq props set
"
"5-----]-]Success  
pts_leq props set
"
"4----]-]Success  
ofType
 (setSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) _ int
"
"4____[+[Begin 
pi x1 \
 locDecl x1
  (setSigma (setPi singleton x2 \ singleton) x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) =>
  isa
   (id singleton
     (app
       (elim_setSigma x0 (x2 \
         setPi
          (setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
         x3 \ x2) x1))
   (propId singleton
     (app
       (elim_setSigma x0 (x2 \
         setPi
          (setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
         x3 \ x2) x1)
     (app
       (elim_setSigma x0 (x2 \
         setPi
          (setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
         x3 \ x2) x1)) int
"
"5_____[+[Begin 
of
 (id singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1)) X376^2 int
"
"6______[+[Begin 
ofType singleton _ int
"
"6------]-]Success  
ofType singleton _ int
"
"6______[+[Begin 
isa
 (app
   (elim_setSigma x0 (x2 \
     setPi
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
     x3 \ x2) x1) singleton int
"
"7_______[+[Begin 
of
 (app
   (elim_setSigma x0 (x2 \
     setPi
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
     x3 \ x2) x1) X377^2 int
"
"8________[+[Begin 
of
 (elim_setSigma x0 (x2 \
   setPi
    (setSigma (setPi singleton x3 \ singleton) x3 \
      forall singleton x4 \
       forall singleton x5 \
        forall (propId singleton x4 x5) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \ x3 \
   x2) (setPi X378^2 X379^2) int
"
"9_________[+[Begin 
of x0 (setSigma X380^2 X381^2) int
"
"9---------]-]Success  
of x0
 (setSigma
   (setPi
     (setSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
   forall
    (setSigma (setPi singleton x3 \ singleton) x3 \
      forall singleton x4 \
       forall singleton x5 \
        forall (propId singleton x4 x5) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x3 \
    forall
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (forall singleton x5 \
        propId singleton
         (app
           (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
             x6) x5)
         (app
           (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
             x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) int
"
"9_________[+[Begin 
pi x2 \
 locDecl x2
  (setSigma
    (setPi
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
    forall
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (setSigma (setPi singleton x5 \ singleton) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)
          (app
            (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) =>
  ofType
   (setPi
     (setSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) _ int
"
"10__________[+[Begin 
ofType (setPi singleton x3 \ singleton) X382^3 int
"
"11___________[+[Begin 
pts_fun set set X382^3
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"11-----------]-]Success  
pts_fun set set set
"
"10----------]-]Success  
ofType (setPi singleton x3 \ singleton) set int
"
"10__________[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ singleton) =>
  ofType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) X383^3 int
"
"11___________[+[Begin 
ofType singleton X384^4 int
"
"11-----------]-]Success  
ofType singleton set int
"
"11___________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (ofType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) X385^4 int)
"
"12____________[+[Begin 
ofType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \
    propId singleton (app x3 x4) (app x3 x5)) X385^4 int
"
"13_____________[+[Begin 
ofType singleton X386^5 int
"
"13-------------]-]Success  
ofType singleton set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) X387^5 int)
"
"14______________[+[Begin 
ofType
 (forall (propId singleton x4 x5) x6 \
   propId singleton (app x3 x4) (app x3 x5)) X387^5 int
"
"15_______________[+[Begin 
ofType (propId singleton x4 x5) X388^6 int
"
"16________________[+[Begin 
of x4 X389^6 int
"
"16----------------]-]Success  
of x4 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of x5 X390^6 int
"
"16----------------]-]Success  
of x5 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X388^6 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"15---------------]-]Success  
ofType (propId singleton x4 x5) props int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (ofType (propId singleton (app x3 x4) (app x3 x5)) X391^6 int)
"
"16________________[+[Begin 
ofType (propId singleton (app x3 x4) (app x3 x5)) X391^6 int
"
"17_________________[+[Begin 
of (app x3 x4) X392^7 int
"
"18__________________[+[Begin 
of x3 (setPi X393^7 X394^7) int
"
"18------------------]-]Success  
of x3 (setPi singleton x7 \ singleton) int
"
"18__________________[+[Begin 
isa x4 singleton int
"
"19___________________[+[Begin 
of x4 X395^7 int
"
"19-------------------]-]Success  
of x4 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"18------------------]-]Success  
isa x4 singleton int
"
"17-----------------]-]Success  
of (app x3 x4) singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of (app x3 x5) X396^7 int
"
"18__________________[+[Begin 
of x3 (setPi X397^7 X398^7) int
"
"18------------------]-]Success  
of x3 (setPi singleton x7 \ singleton) int
"
"18__________________[+[Begin 
isa x5 singleton int
"
"19___________________[+[Begin 
of x5 X399^7 int
"
"19-------------------]-]Success  
of x5 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"18------------------]-]Success  
isa x5 singleton int
"
"17-----------------]-]Success  
of (app x3 x5) singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X391^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16----------------]-]Success  
ofType (propId singleton (app x3 x4) (app x3 x5)) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (ofType (propId singleton (app x3 x4) (app x3 x5)) props int)
"
"15_______________[+[Begin 
pts_for props props X387^5
"
"15---------------]-]Success  
pts_for props props props
"
"14--------------]-]Success  
ofType
 (forall (propId singleton x4 x5) x6 \
   propId singleton (app x3 x4) (app x3 x5)) props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) props int)
"
"13_____________[+[Begin 
pts_for set props X385^4
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
ofType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \
    propId singleton (app x3 x4) (app x3 x5)) props int
"
"11-----------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (ofType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) props int)
"
"11___________[+[Begin 
pts_for set props X383^3
"
"11-----------]-]Success  
pts_for set props props
"
"10----------]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ singleton) =>
  ofType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) props int
"
"10__________[+[Begin 
pts_leq set set
"
"10----------]-]Success  
pts_leq set set
"
"10__________[+[Begin 
pts_leq props set
"
"10----------]-]Success  
pts_leq props set
"
"10__________[+[Begin 
pts_fun set set X400^3
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"10----------]-]Success  
pts_fun set set set
"
"9---------]-]Success  
pi x2 \
 locDecl x2
  (setSigma
    (setPi
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
    forall
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (setSigma (setPi singleton x5 \ singleton) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)
          (app
            (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) =>
  ofType
   (setPi
     (setSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) _ int
"
"9_________[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2
   (setPi
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) =>
   locDecl x3
    (forall
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)
           (app
             (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)) x6 \ propId singleton (app x2 x4) (app x2 x5))
    =>
    isa x2
     (setPi
       (setSigma (setPi singleton x4 \ singleton) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) int
"
"10__________[+[Begin 
of x2 X401^4 int
"
"10----------]-]Success  
of x2
 (setPi
   (setSigma (setPi singleton x4 \ singleton) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) int
"
"10__________[+[Begin 
conv
 (setPi
   (setSigma (setPi singleton x4 \ singleton) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton)
 (setPi
   (setSigma (setPi singleton x4 \ singleton) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton)
"
"10----------]-]Success  
conv
 (setPi
   (setSigma (setPi singleton x4 \ singleton) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton)
 (setPi
   (setSigma (setPi singleton x4 \ singleton) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton)
"
"9---------]-]Success  
pi x2 \
 pi x3 \
  locDecl x2
   (setPi
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) =>
   locDecl x3
    (forall
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)
           (app
             (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)) x6 \ propId singleton (app x2 x4) (app x2 x5))
    =>
    isa x2
     (setPi
       (setSigma (setPi singleton x4 \ singleton) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) int
"
"8--------]-]Success  
of
 (elim_setSigma x0 (x2 \
   setPi
    (setSigma (setPi singleton x3 \ singleton) x3 \
      forall singleton x4 \
       forall singleton x5 \
        forall (propId singleton x4 x5) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \ x3 \
   x2)
 (setPi
   (setSigma (setPi singleton x2 \ singleton) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) int
"
"8________[+[Begin 
isa x1
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4)) int
"
"9_________[+[Begin 
of x1 X402^2 int
"
"9---------]-]Success  
of x1
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4)) int
"
"9_________[+[Begin 
conv
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"9---------]-]Success  
conv
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"8--------]-]Success  
isa x1
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4)) int
"
"7-------]-]Success  
of
 (app
   (elim_setSigma x0 (x2 \
     setPi
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
     x3 \ x2) x1) singleton int
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"6------]-]Success  
isa
 (app
   (elim_setSigma x0 (x2 \
     setPi
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
     x3 \ x2) x1) singleton int
"
"5-----]-]Success  
of
 (id singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1))
 (propId singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1)
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1)) int
"
"5_____[+[Begin 
conv
 (propId singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1)
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1))
 (propId singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1)
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1))
"
"5-----]-]Success  
conv
 (propId singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1)
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1))
 (propId singleton
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1)
   (app
     (elim_setSigma x0 (x2 \
       setPi
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
       x3 \ x2) x1))
"
"4----]-]Success  
pi x1 \
 locDecl x1
  (setSigma (setPi singleton x2 \ singleton) x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) =>
  isa
   (id singleton
     (app
       (elim_setSigma x0 (x2 \
         setPi
          (setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
         x3 \ x2) x1))
   (propId singleton
     (app
       (elim_setSigma x0 (x2 \
         setPi
          (setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
         x3 \ x2) x1)
     (app
       (elim_setSigma x0 (x2 \
         setPi
          (setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
         x3 \ x2) x1)) int
"
"3---]-]Success  
of
 (forall_lam
   (setSigma (setPi singleton x1 \ singleton) x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) x1 \
   id singleton
    (app
      (elim_setSigma x0 (x2 \
        setPi
         (setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
        x3 \ x2) x1))
 (forall
   (setSigma (setPi singleton x1 \ singleton) x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) x1 \
   propId singleton
    (app
      (elim_setSigma x0 (x2 \
        setPi
         (setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
        x3 \ x2) x1)
    (app
      (elim_setSigma x0 (x2 \
        setPi
         (setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
        x3 \ x2) x1)) int
"
"2--]-]Success  
pi x0 \
 locDecl x0
  (setSigma
    (setPi
      (setSigma (setPi singleton x1 \ singleton) x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3)) x1 \ singleton) x1 \
    forall
     (setSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (forall singleton x4 \
         propId singleton
          (app
            (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
              x5) x4)
          (app
            (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
              x5) x4)) x4 \ propId singleton (app x1 x2) (app x1 x3)) =>
  spy
   (of
     (forall_lam
       (setSigma (setPi singleton x1 \ singleton) x1 \
         forall singleton x2 \
          forall singleton x3 \
           forall (propId singleton x2 x3) x4 \
            propId singleton (app x1 x2) (app x1 x3)) x1 \
       id singleton
        (app
          (elim_setSigma x0 (x2 \
            setPi
             (setSigma (setPi singleton x3 \ singleton) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
            x2 \ x3 \ x2) x1))
     (forall
       (setSigma (setPi singleton x1 \ singleton) x1 \
         forall singleton x2 \
          forall singleton x3 \
           forall (propId singleton x2 x3) x4 \
            propId singleton (app x1 x2) (app x1 x3)) x1 \
       propId singleton
        (app
          (elim_setSigma x0 (x2 \
            setPi
             (setSigma (setPi singleton x3 \ singleton) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
            x2 \ x3 \ x2) x1)
        (app
          (elim_setSigma x0 (x2 \
            setPi
             (setSigma (setPi singleton x3 \ singleton) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
            x2 \ x3 \ x2) x1)) int)
"
"1-]-]Success  
setoid_refl (setPi (setPi singleton x0 \ singleton) x0 \ singleton) _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_symm (setPi singleton x0 \ singleton) _
"
"2__[+[Begin 
interp (setPi singleton x0 \ singleton) X403
"
"3___[+[Begin 
interp singleton X404
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X405 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq singleton X406
"
"3---]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X407 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X408 x3 x4 x5))
"
"4____[+[Begin 
tau singleton singleton (X408 x3 x4 x5)
"
"4----]-]Success  
tau singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2--]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
setoid_eq (setPi singleton x0 \ singleton) X409
"
"3___[+[Begin 
interp singleton X410
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X411 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X412 x1)))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"2--]-]Success  
setoid_eq (setPi singleton x0 \ singleton) x0 \ x1 \
 forall singleton x2 \
  propId singleton
   (app (elim_setSigma x0 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app (elim_setSigma x1 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_symm singleton (X413 x1)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   locDecl x2 singleton =>
    locDecl x3 singleton =>
     locDecl x4 (propId singleton x2 x3) =>
      of (elim_id x4 (x5 \ x6 \ propId singleton x6 x5) x5 \ id singleton x5)
       _ int
"
"4____[+[Begin 
of x4 (propId X414^5 X415^5 X416^5) int
"
"4----]-]Success  
of x4 (propId singleton x2 x3) int
"
"4____[+[Begin 
pi x5 \
 pi x6 \
  locDecl x5 singleton =>
   locDecl x6 singleton => isaType (propId singleton x6 x5) propc int
"
"5_____[+[Begin 
ofType (propId singleton x6 x5) X417^7 int
"
"6______[+[Begin 
of x6 X418^7 int
"
"6------]-]Success  
of x6 singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
of x5 X419^7 int
"
"6------]-]Success  
of x5 singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
(pts_leq set set),
(X417^7 = props)
"
"6------]-]Success  
(pts_leq set set),
(props = props)
"
"5-----]-]Success  
ofType (propId singleton x6 x5) props int
"
"5_____[+[Begin 
pts_leq props propc
"
"5-----]-]Success  
pts_leq props propc
"
"4----]-]Success  
pi x5 \
 pi x6 \
  locDecl x5 singleton =>
   locDecl x6 singleton => isaType (propId singleton x6 x5) propc int
"
"4____[+[Begin 
pi x5 \
 locDecl x5 singleton => of (id singleton x5) (propId singleton x5 x5) int
"
"5_____[+[Begin 
ofType singleton _ int
"
"5-----]-]Success  
ofType singleton _ int
"
"5_____[+[Begin 
isa x5 singleton int
"
"6______[+[Begin 
of x5 X420^6 int
"
"6------]-]Success  
of x5 singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"5-----]-]Success  
isa x5 singleton int
"
"4----]-]Success  
pi x5 \
 locDecl x5 singleton => of (id singleton x5) (propId singleton x5 x5) int
"
"3---]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   locDecl x2 singleton =>
    locDecl x3 singleton =>
     locDecl x4 (propId singleton x2 x3) =>
      of (elim_id x4 (x5 \ x6 \ propId singleton x6 x5) x5 \ id singleton x5)
       _ int
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     (setoid_symm singleton x2 \ x3 \ x4 \
       elim_id x4 (x5 \ x6 \ propId singleton x6 x5) x5 \ id singleton x5)
"
"2__[+[Begin 
X421 = (x0 \ x1 \ x2 \
 forall_lam singleton x3 \
  elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4)
"
"2--]-]Success  
(x0 \ x1 \ x2 \
 forall_lam singleton x3 \
  elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4) = (x0 \ x1 \ x2 \
 forall_lam singleton x3 \
  elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0
   (setSigma (setPi singleton x2 \ singleton) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    (pi x2 \
      locDecl x2
       (forall singleton x3 \
         propId singleton
          (app
            (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)
          (app
            (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)) =>
       spy
        (of
          (forall_lam singleton x3 \
            elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4)
             x4 \ id singleton x4)
          (forall singleton x3 \
            propId singleton
             (app
               (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
                 x5 \ x4) x3)
             (app
               (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \
                 x5 \ x4) x3)) int))
"
"3___[+[Begin 
of
 (forall_lam singleton x3 \
   elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
    id singleton x4)
 (forall singleton x3 \
   propId singleton
    (app
      (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)
    (app
      (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)) int
"
"4____[+[Begin 
ofType singleton _ int
"
"4----]-]Success  
ofType singleton _ int
"
"4____[+[Begin 
pi x3 \
 locDecl x3 singleton =>
  isa
   (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
     id singleton x4)
   (propId singleton
     (app
       (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
       x3)
     (app
       (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
       x3)) int
"
"5_____[+[Begin 
of
 (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4) X422^4 int
"
"6______[+[Begin 
of (forall_app x2 x3) (propId X423^4 X424^4 X425^4) int
"
"7_______[+[Begin 
of x2 (forall X426^4 X427^4) int
"
"7-------]-]Success  
of x2
 (forall singleton x4 \
   propId singleton
    (app
      (elim_setSigma x0 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
      x4)
    (app
      (elim_setSigma x1 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
      x4)) int
"
"7_______[+[Begin 
isa x3 singleton int
"
"8________[+[Begin 
of x3 X428^4 int
"
"8--------]-]Success  
of x3 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"7-------]-]Success  
isa x3 singleton int
"
"7_______[+[Begin 
propId X423^4 X424^4 X425^4 =
 propId singleton
  (app (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
    x3)
  (app (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
    x3)
"
"7-------]-]Success  
propId singleton
 (app (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3)
 (app (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) =
 propId singleton
  (app (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
    x3)
  (app (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
    x3)
"
"6------]-]Success  
of (forall_app x2 x3)
 (propId singleton
   (app (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)
   (app (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)) int
"
"6______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => isaType (propId singleton x5 x4) propc int
"
"7_______[+[Begin 
ofType (propId singleton x5 x4) X429^6 int
"
"8________[+[Begin 
of x5 X430^6 int
"
"8--------]-]Success  
of x5 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
of x4 X431^6 int
"
"8--------]-]Success  
of x4 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
(pts_leq set set),
(X429^6 = props)
"
"8--------]-]Success  
(pts_leq set set),
(props = props)
"
"7-------]-]Success  
ofType (propId singleton x5 x4) props int
"
"7_______[+[Begin 
pts_leq props propc
"
"7-------]-]Success  
pts_leq props propc
"
"6------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => isaType (propId singleton x5 x4) propc int
"
"6______[+[Begin 
pi x4 \
 locDecl x4 singleton => of (id singleton x4) (propId singleton x4 x4) int
"
"7_______[+[Begin 
ofType singleton _ int
"
"7-------]-]Success  
ofType singleton _ int
"
"7_______[+[Begin 
isa x4 singleton int
"
"8________[+[Begin 
of x4 X432^5 int
"
"8--------]-]Success  
of x4 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"7-------]-]Success  
isa x4 singleton int
"
"6------]-]Success  
pi x4 \
 locDecl x4 singleton => of (id singleton x4) (propId singleton x4 x4) int
"
"5-----]-]Success  
of
 (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4)
 (propId singleton
   (app (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)
   (app (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)) int
"
"5_____[+[Begin 
conv
 (propId singleton
   (app (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)
   (app (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3))
 (propId singleton
   (app (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)
   (app (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3))
"
"5-----]-]Success  
conv
 (propId singleton
   (app (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)
   (app (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3))
 (propId singleton
   (app (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)
   (app (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3))
"
"4----]-]Success  
pi x3 \
 locDecl x3 singleton =>
  isa
   (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
     id singleton x4)
   (propId singleton
     (app
       (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
       x3)
     (app
       (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
       x3)) int
"
"3---]-]Success  
of
 (forall_lam singleton x3 \
   elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
    id singleton x4)
 (forall singleton x3 \
   propId singleton
    (app
      (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)
    (app
      (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)) int
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0
   (setSigma (setPi singleton x2 \ singleton) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    (pi x2 \
      locDecl x2
       (forall singleton x3 \
         propId singleton
          (app
            (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)
          (app
            (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)) =>
       spy
        (of
          (forall_lam singleton x3 \
            elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4)
             x4 \ id singleton x4)
          (forall singleton x3 \
            propId singleton
             (app
               (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
                 x5 \ x4) x3)
             (app
               (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \
                 x5 \ x4) x3)) int))
"
"1-]-]Success  
setoid_symm (setPi singleton x0 \ singleton) _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_symm (setPi (setPi singleton x0 \ singleton) x0 \ singleton) _
"
"2__[+[Begin 
interp (setPi (setPi singleton x0 \ singleton) x0 \ singleton) X433
"
"3___[+[Begin 
interp (setPi singleton x0 \ singleton) X434
"
"4____[+[Begin 
interp singleton X435
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X436 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X437
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X438 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X439 x3 x4 x5))
"
"5_____[+[Begin 
tau singleton singleton (X439 x3 x4 x5)
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"3---]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp singleton (X440 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq (setPi singleton x0 \ singleton) X441
"
"4____[+[Begin 
interp singleton X442
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X443 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X444 x1)))
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"3---]-]Success  
setoid_eq (setPi singleton x0 \ singleton) x0 \ x1 \
 forall singleton x2 \
  propId singleton
   (app (elim_setSigma x0 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app (elim_setSigma x1 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => setoid_eq singleton (X445 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 => spy (tau singleton singleton (X446 x3 x4 x5))
"
"4____[+[Begin 
tau singleton singleton (X446 x3 x4 x5)
"
"4----]-]Success  
tau singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2--]-]Success  
interp (setPi (setPi singleton x0 \ singleton) x0 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x0 \ singleton) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \
          propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) x0 \
   forall
    (setSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \
    forall
     (setSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (forall singleton x3 \
        propId singleton
         (app
           (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)
         (app
           (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
setoid_eq (setPi (setPi singleton x0 \ singleton) x0 \ singleton) X447
"
"3___[+[Begin 
interp (setPi singleton x0 \ singleton) X448
"
"4____[+[Begin 
interp singleton X449
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X450 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X451
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X452 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X453 x3 x4 x5))
"
"5_____[+[Begin 
tau singleton singleton (X453 x3 x4 x5)
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"3---]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp singleton (X454 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X455 x1)))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"2--]-]Success  
setoid_eq (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \ x1 \
 forall
  (setSigma (setPi singleton x2 \ singleton) x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) x2 \
  propId singleton
   (app
     (elim_setSigma x0 (x3 \
       setPi
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
       x4 \ x3) x2)
   (app
     (elim_setSigma x1 (x3 \
       setPi
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
       x4 \ x3) x2)
"
"2__[+[Begin 
interp singleton X456
"
"2--]-]Success  
interp singleton singleton
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X457 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"2__[+[Begin 
setoid_eq singleton X458
"
"2--]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X459 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X460 x3 x4 x5))
"
"3___[+[Begin 
tau singleton singleton (X460 x3 x4 x5)
"
"3---]-]Success  
tau singleton singleton x6 \ x6
"
"2--]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => setoid_symm singleton (X461 x1)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   locDecl x2 singleton =>
    locDecl x3 singleton =>
     locDecl x4 (propId singleton x2 x3) =>
      of (elim_id x4 (x5 \ x6 \ propId singleton x6 x5) x5 \ id singleton x5)
       _ int
"
"4____[+[Begin 
of x4 (propId X462^5 X463^5 X464^5) int
"
"4----]-]Success  
of x4 (propId singleton x2 x3) int
"
"4____[+[Begin 
pi x5 \
 pi x6 \
  locDecl x5 singleton =>
   locDecl x6 singleton => isaType (propId singleton x6 x5) propc int
"
"5_____[+[Begin 
ofType (propId singleton x6 x5) X465^7 int
"
"6______[+[Begin 
of x6 X466^7 int
"
"6------]-]Success  
of x6 singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
of x5 X467^7 int
"
"6------]-]Success  
of x5 singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
(pts_leq set set),
(X465^7 = props)
"
"6------]-]Success  
(pts_leq set set),
(props = props)
"
"5-----]-]Success  
ofType (propId singleton x6 x5) props int
"
"5_____[+[Begin 
pts_leq props propc
"
"5-----]-]Success  
pts_leq props propc
"
"4----]-]Success  
pi x5 \
 pi x6 \
  locDecl x5 singleton =>
   locDecl x6 singleton => isaType (propId singleton x6 x5) propc int
"
"4____[+[Begin 
pi x5 \
 locDecl x5 singleton => of (id singleton x5) (propId singleton x5 x5) int
"
"5_____[+[Begin 
ofType singleton _ int
"
"5-----]-]Success  
ofType singleton _ int
"
"5_____[+[Begin 
isa x5 singleton int
"
"6______[+[Begin 
of x5 X468^6 int
"
"6------]-]Success  
of x5 singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"5-----]-]Success  
isa x5 singleton int
"
"4----]-]Success  
pi x5 \
 locDecl x5 singleton => of (id singleton x5) (propId singleton x5 x5) int
"
"3---]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   locDecl x2 singleton =>
    locDecl x3 singleton =>
     locDecl x4 (propId singleton x2 x3) =>
      of (elim_id x4 (x5 \ x6 \ propId singleton x6 x5) x5 \ id singleton x5)
       _ int
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     (setoid_symm singleton x2 \ x3 \ x4 \
       elim_id x4 (x5 \ x6 \ propId singleton x6 x5) x5 \ id singleton x5)
"
"2__[+[Begin 
X469 = (x0 \ x1 \ x2 \
 forall_lam
  (setSigma (setPi singleton x3 \ singleton) x3 \
    forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) x3 \
  elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4)
"
"2--]-]Success  
(x0 \ x1 \ x2 \
 forall_lam
  (setSigma (setPi singleton x3 \ singleton) x3 \
    forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) x3 \
  elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4) = (x0 \ x1 \ x2 \
 forall_lam
  (setSigma (setPi singleton x3 \ singleton) x3 \
    forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) x3 \
  elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0
   (setSigma
     (setPi
       (setSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
     forall
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (setSigma (setPi singleton x4 \ singleton) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall
        (forall singleton x5 \
          propId singleton
           (app
             (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
               x7 \ x6) x5)
           (app
             (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
               x7 \ x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4))
   =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4))
    =>
    (pi x2 \
      locDecl x2
       (forall
         (setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \
         propId singleton
          (app
            (elim_setSigma x0 (x4 \
              setPi
               (setSigma (setPi singleton x5 \ singleton) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
              x4 \ x5 \ x4) x3)
          (app
            (elim_setSigma x1 (x4 \
              setPi
               (setSigma (setPi singleton x5 \ singleton) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
              x4 \ x5 \ x4) x3)) =>
       spy
        (of
          (forall_lam
            (setSigma (setPi singleton x3 \ singleton) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton (app x3 x4) (app x3 x5)) x3 \
            elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4)
             x4 \ id singleton x4)
          (forall
            (setSigma (setPi singleton x3 \ singleton) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton (app x3 x4) (app x3 x5)) x3 \
            propId singleton
             (app
               (elim_setSigma x1 (x4 \
                 setPi
                  (setSigma (setPi singleton x5 \ singleton) x5 \
                    forall singleton x6 \
                     forall singleton x7 \
                      forall (propId singleton x6 x7) x8 \
                       propId singleton (app x5 x6) (app x5 x7)) x5 \
                  singleton) x4 \ x5 \ x4) x3)
             (app
               (elim_setSigma x0 (x4 \
                 setPi
                  (setSigma (setPi singleton x5 \ singleton) x5 \
                    forall singleton x6 \
                     forall singleton x7 \
                      forall (propId singleton x6 x7) x8 \
                       propId singleton (app x5 x6) (app x5 x7)) x5 \
                  singleton) x4 \ x5 \ x4) x3)) int))
"
"3___[+[Begin 
of
 (forall_lam
   (setSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \
   elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
    id singleton x4)
 (forall
   (setSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \
   propId singleton
    (app
      (elim_setSigma x1 (x4 \
        setPi
         (setSigma (setPi singleton x5 \ singleton) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
        x5 \ x4) x3)
    (app
      (elim_setSigma x0 (x4 \
        setPi
         (setSigma (setPi singleton x5 \ singleton) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
        x5 \ x4) x3)) int
"
"4____[+[Begin 
ofType
 (setSigma (setPi singleton x3 \ singleton) x3 \
   forall singleton x4 \
    forall singleton x5 \
     forall (propId singleton x4 x5) x6 \
      propId singleton (app x3 x4) (app x3 x5)) _ int
"
"5_____[+[Begin 
ofType (setPi singleton x3 \ singleton) X470^3 int
"
"6______[+[Begin 
pts_fun set set X470^3
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"6------]-]Success  
pts_fun set set set
"
"5-----]-]Success  
ofType (setPi singleton x3 \ singleton) set int
"
"5_____[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ singleton) =>
  ofType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) X471^3 int
"
"6______[+[Begin 
ofType singleton X472^4 int
"
"6------]-]Success  
ofType singleton set int
"
"6______[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (ofType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) X473^4 int)
"
"7_______[+[Begin 
ofType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \
    propId singleton (app x3 x4) (app x3 x5)) X473^4 int
"
"8________[+[Begin 
ofType singleton X474^5 int
"
"8--------]-]Success  
ofType singleton set int
"
"8________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) X475^5 int)
"
"9_________[+[Begin 
ofType
 (forall (propId singleton x4 x5) x6 \
   propId singleton (app x3 x4) (app x3 x5)) X475^5 int
"
"10__________[+[Begin 
ofType (propId singleton x4 x5) X476^6 int
"
"11___________[+[Begin 
of x4 X477^6 int
"
"11-----------]-]Success  
of x4 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of x5 X478^6 int
"
"11-----------]-]Success  
of x5 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X476^6 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
ofType (propId singleton x4 x5) props int
"
"10__________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (ofType (propId singleton (app x3 x4) (app x3 x5)) X479^6 int)
"
"11___________[+[Begin 
ofType (propId singleton (app x3 x4) (app x3 x5)) X479^6 int
"
"12____________[+[Begin 
of (app x3 x4) X480^7 int
"
"13_____________[+[Begin 
of x3 (setPi X481^7 X482^7) int
"
"13-------------]-]Success  
of x3 (setPi singleton x7 \ singleton) int
"
"13_____________[+[Begin 
isa x4 singleton int
"
"14______________[+[Begin 
of x4 X483^7 int
"
"14--------------]-]Success  
of x4 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13-------------]-]Success  
isa x4 singleton int
"
"12------------]-]Success  
of (app x3 x4) singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
of (app x3 x5) X484^7 int
"
"13_____________[+[Begin 
of x3 (setPi X485^7 X486^7) int
"
"13-------------]-]Success  
of x3 (setPi singleton x7 \ singleton) int
"
"13_____________[+[Begin 
isa x5 singleton int
"
"14______________[+[Begin 
of x5 X487^7 int
"
"14--------------]-]Success  
of x5 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13-------------]-]Success  
isa x5 singleton int
"
"12------------]-]Success  
of (app x3 x5) singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
(pts_leq set set),
(X479^6 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"11-----------]-]Success  
ofType (propId singleton (app x3 x4) (app x3 x5)) props int
"
"10----------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (ofType (propId singleton (app x3 x4) (app x3 x5)) props int)
"
"10__________[+[Begin 
pts_for props props X475^5
"
"10----------]-]Success  
pts_for props props props
"
"9---------]-]Success  
ofType
 (forall (propId singleton x4 x5) x6 \
   propId singleton (app x3 x4) (app x3 x5)) props int
"
"8--------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) props int)
"
"8________[+[Begin 
pts_for set props X473^4
"
"8--------]-]Success  
pts_for set props props
"
"7-------]-]Success  
ofType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \
    propId singleton (app x3 x4) (app x3 x5)) props int
"
"6------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (ofType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) props int)
"
"6______[+[Begin 
pts_for set props X471^3
"
"6------]-]Success  
pts_for set props props
"
"5-----]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ singleton) =>
  ofType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) props int
"
"5_____[+[Begin 
pts_leq set set
"
"5-----]-]Success  
pts_leq set set
"
"5_____[+[Begin 
pts_leq props set
"
"5-----]-]Success  
pts_leq props set
"
"4----]-]Success  
ofType
 (setSigma (setPi singleton x3 \ singleton) x3 \
   forall singleton x4 \
    forall singleton x5 \
     forall (propId singleton x4 x5) x6 \
      propId singleton (app x3 x4) (app x3 x5)) _ int
"
"4____[+[Begin 
pi x3 \
 locDecl x3
  (setSigma (setPi singleton x4 \ singleton) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) =>
  isa
   (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
     id singleton x4)
   (propId singleton
     (app
       (elim_setSigma x1 (x4 \
         setPi
          (setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
         x5 \ x4) x3)
     (app
       (elim_setSigma x0 (x4 \
         setPi
          (setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
         x5 \ x4) x3)) int
"
"5_____[+[Begin 
of
 (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4) X488^4 int
"
"6______[+[Begin 
of (forall_app x2 x3) (propId X489^4 X490^4 X491^4) int
"
"7_______[+[Begin 
of x2 (forall X492^4 X493^4) int
"
"7-------]-]Success  
of x2
 (forall
   (setSigma (setPi singleton x4 \ singleton) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \
   propId singleton
    (app
      (elim_setSigma x0 (x5 \
        setPi
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) x5 \
        x6 \ x5) x4)
    (app
      (elim_setSigma x1 (x5 \
        setPi
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) x5 \
        x6 \ x5) x4)) int
"
"7_______[+[Begin 
isa x3
 (setSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"8________[+[Begin 
of x3 X494^4 int
"
"8--------]-]Success  
of x3
 (setSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"8________[+[Begin 
conv
 (setSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (setSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"8--------]-]Success  
conv
 (setSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (setSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"7-------]-]Success  
isa x3
 (setSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"7_______[+[Begin 
propId X489^4 X490^4 X491^4 =
 propId singleton
  (app
    (elim_setSigma x0 (x4 \
      setPi
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
      x5 \ x4) x3)
  (app
    (elim_setSigma x1 (x4 \
      setPi
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
      x5 \ x4) x3)
"
"7-------]-]Success  
propId singleton
 (app
   (elim_setSigma x0 (x4 \
     setPi
      (setSigma (setPi singleton x5 \ singleton) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
     x5 \ x4) x3)
 (app
   (elim_setSigma x1 (x4 \
     setPi
      (setSigma (setPi singleton x5 \ singleton) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
     x5 \ x4) x3) =
 propId singleton
  (app
    (elim_setSigma x0 (x4 \
      setPi
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
      x5 \ x4) x3)
  (app
    (elim_setSigma x1 (x4 \
      setPi
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
      x5 \ x4) x3)
"
"6------]-]Success  
of (forall_app x2 x3)
 (propId singleton
   (app
     (elim_setSigma x0 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3)
   (app
     (elim_setSigma x1 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3)) int
"
"6______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => isaType (propId singleton x5 x4) propc int
"
"7_______[+[Begin 
ofType (propId singleton x5 x4) X495^6 int
"
"8________[+[Begin 
of x5 X496^6 int
"
"8--------]-]Success  
of x5 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
of x4 X497^6 int
"
"8--------]-]Success  
of x4 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
(pts_leq set set),
(X495^6 = props)
"
"8--------]-]Success  
(pts_leq set set),
(props = props)
"
"7-------]-]Success  
ofType (propId singleton x5 x4) props int
"
"7_______[+[Begin 
pts_leq props propc
"
"7-------]-]Success  
pts_leq props propc
"
"6------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => isaType (propId singleton x5 x4) propc int
"
"6______[+[Begin 
pi x4 \
 locDecl x4 singleton => of (id singleton x4) (propId singleton x4 x4) int
"
"7_______[+[Begin 
ofType singleton _ int
"
"7-------]-]Success  
ofType singleton _ int
"
"7_______[+[Begin 
isa x4 singleton int
"
"8________[+[Begin 
of x4 X498^5 int
"
"8--------]-]Success  
of x4 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"7-------]-]Success  
isa x4 singleton int
"
"6------]-]Success  
pi x4 \
 locDecl x4 singleton => of (id singleton x4) (propId singleton x4 x4) int
"
"5-----]-]Success  
of
 (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4)
 (propId singleton
   (app
     (elim_setSigma x1 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3)
   (app
     (elim_setSigma x0 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3)) int
"
"5_____[+[Begin 
conv
 (propId singleton
   (app
     (elim_setSigma x1 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3)
   (app
     (elim_setSigma x0 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3))
 (propId singleton
   (app
     (elim_setSigma x1 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3)
   (app
     (elim_setSigma x0 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3))
"
"5-----]-]Success  
conv
 (propId singleton
   (app
     (elim_setSigma x1 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3)
   (app
     (elim_setSigma x0 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3))
 (propId singleton
   (app
     (elim_setSigma x1 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3)
   (app
     (elim_setSigma x0 (x4 \
       setPi
        (setSigma (setPi singleton x5 \ singleton) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4) x3))
"
"4----]-]Success  
pi x3 \
 locDecl x3
  (setSigma (setPi singleton x4 \ singleton) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) =>
  isa
   (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
     id singleton x4)
   (propId singleton
     (app
       (elim_setSigma x1 (x4 \
         setPi
          (setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
         x5 \ x4) x3)
     (app
       (elim_setSigma x0 (x4 \
         setPi
          (setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
         x5 \ x4) x3)) int
"
"3---]-]Success  
of
 (forall_lam
   (setSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \
   elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
    id singleton x4)
 (forall
   (setSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \
   propId singleton
    (app
      (elim_setSigma x1 (x4 \
        setPi
         (setSigma (setPi singleton x5 \ singleton) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
        x5 \ x4) x3)
    (app
      (elim_setSigma x0 (x4 \
        setPi
         (setSigma (setPi singleton x5 \ singleton) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
        x5 \ x4) x3)) int
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0
   (setSigma
     (setPi
       (setSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
     forall
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (setSigma (setPi singleton x4 \ singleton) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall
        (forall singleton x5 \
          propId singleton
           (app
             (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
               x7 \ x6) x5)
           (app
             (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
               x7 \ x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4))
   =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4))
    =>
    (pi x2 \
      locDecl x2
       (forall
         (setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \
         propId singleton
          (app
            (elim_setSigma x0 (x4 \
              setPi
               (setSigma (setPi singleton x5 \ singleton) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
              x4 \ x5 \ x4) x3)
          (app
            (elim_setSigma x1 (x4 \
              setPi
               (setSigma (setPi singleton x5 \ singleton) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
              x4 \ x5 \ x4) x3)) =>
       spy
        (of
          (forall_lam
            (setSigma (setPi singleton x3 \ singleton) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton (app x3 x4) (app x3 x5)) x3 \
            elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4)
             x4 \ id singleton x4)
          (forall
            (setSigma (setPi singleton x3 \ singleton) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton (app x3 x4) (app x3 x5)) x3 \
            propId singleton
             (app
               (elim_setSigma x1 (x4 \
                 setPi
                  (setSigma (setPi singleton x5 \ singleton) x5 \
                    forall singleton x6 \
                     forall singleton x7 \
                      forall (propId singleton x6 x7) x8 \
                       propId singleton (app x5 x6) (app x5 x7)) x5 \
                  singleton) x4 \ x5 \ x4) x3)
             (app
               (elim_setSigma x0 (x4 \
                 setPi
                  (setSigma (setPi singleton x5 \ singleton) x5 \
                    forall singleton x6 \
                     forall singleton x7 \
                      forall (propId singleton x6 x7) x8 \
                       propId singleton (app x5 x6) (app x5 x7)) x5 \
                  singleton) x4 \ x5 \ x4) x3)) int))
"
"1-]-]Success  
setoid_symm (setPi (setPi singleton x0 \ singleton) x0 \ singleton) _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_symm
 (setPi
   (setPi (setPi singleton x0 \ singleton) x0 \
     setPi singleton x1 \ singleton) x0 \ setPi singleton x1 \ singleton) _
"
"2__[+[Begin 
interp
 (setPi
   (setPi (setPi singleton x0 \ singleton) x0 \
     setPi singleton x1 \ singleton) x0 \ setPi singleton x1 \ singleton)
 X499
"
"3___[+[Begin 
interp
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 X500
"
"4____[+[Begin 
interp (setPi singleton x0 \ singleton) X501
"
"5_____[+[Begin 
interp singleton X502
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X503 x1)
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X504
"
"5-----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X505 x1)
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X506 x3 x4 x5))
"
"6______[+[Begin 
tau singleton singleton (X506 x3 x4 x5)
"
"6------]-]Success  
tau singleton singleton x6 \ x6
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"4----]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp (setPi singleton x2 \ singleton) (X507 x1)
"
"5_____[+[Begin 
interp singleton X508^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X509^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X510^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X511^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X512^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X512^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ singleton)
      (setSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"4____[+[Begin 
setoid_eq (setPi singleton x0 \ singleton) X513
"
"5_____[+[Begin 
interp singleton X514
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X515 x1)
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X516 x1)))
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"4----]-]Success  
setoid_eq (setPi singleton x0 \ singleton) x0 \ x1 \
 forall singleton x2 \
  propId singleton
   (app (elim_setSigma x0 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app (elim_setSigma x1 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => setoid_eq (setPi singleton x2 \ singleton) (X517 x1)
"
"5_____[+[Begin 
interp singleton X518^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X519^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X520^2 x3)))
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     (setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
       forall singleton x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)
         (app
           (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4))
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ singleton)
                  (setPi singleton x6 \ singleton) (X521 x3 x4 x5))
"
"5_____[+[Begin 
tau (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
 (X521 x3 x4 x5)
"
"5-----]-]Success  
tau (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton) x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ singleton)
                  (setPi singleton x6 \ singleton) x6 \ x6)
"
"3---]-]Success  
interp
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x0 \ singleton) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \
          propId singleton (app x0 x1) (app x0 x2)) x0 \
     setSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x0 \
   forall
    (setSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \
    forall
     (setSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (forall singleton x3 \
        propId singleton
         (app
           (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)
         (app
           (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)) x3 \
      forall singleton x4 \
       propId singleton
        (app
          (elim_setSigma (app x0 x1) (x5 \ setPi singleton x6 \ singleton)
            x5 \ x6 \ x5) x4)
        (app
          (elim_setSigma (app x0 x2) (x5 \ setPi singleton x6 \ singleton)
            x5 \ x6 \ x5) x4))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0
   (setPi (setPi singleton x2 \ singleton) x2 \
     setPi singleton x3 \ singleton) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    interp x0 x1 => interp (setPi singleton x2 \ singleton) (X522 x1)
"
"4____[+[Begin 
interp singleton X523^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X524^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X525^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X526^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X527^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X527^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0
   (setPi (setPi singleton x2 \ singleton) x2 \
     setPi singleton x3 \ singleton) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ singleton)
      (setSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
setoid_eq
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 X528
"
"4____[+[Begin 
interp (setPi singleton x0 \ singleton) X529
"
"5_____[+[Begin 
interp singleton X530
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X531 x1)
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X532
"
"5-----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X533 x1)
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X534 x3 x4 x5))
"
"6______[+[Begin 
tau singleton singleton (X534 x3 x4 x5)
"
"6------]-]Success  
tau singleton singleton x6 \ x6
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"4----]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp (setPi singleton x2 \ singleton) (X535 x1)
"
"5_____[+[Begin 
interp singleton X536^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X537^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X538^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X539^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X540^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X540^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ singleton)
      (setSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     ((interp (setPi singleton x2 \ singleton)
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4))),
     (setoid_eq (setPi singleton x2 \ singleton) (X541 x1)))
"
"5_____[+[Begin 
interp singleton X542^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X543^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X544^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X545^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X546^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X546^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"5_____[+[Begin 
interp singleton X547^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X548^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X549^2 x3)))
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     ((interp (setPi singleton x2 \ singleton)
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4))),
     (setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
       forall singleton x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)
         (app
           (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)))
"
"3---]-]Success  
setoid_eq
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 x0 \ x1 \
 forall
  (setSigma (setPi singleton x2 \ singleton) x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) x2 \
  forall singleton x3 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x4 \
            setPi
             (setSigma (setPi singleton x5 \ singleton) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x5 \
             setSigma (setPi singleton x6 \ singleton) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4) x2)
        (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4) x3)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x4 \
            setPi
             (setSigma (setPi singleton x5 \ singleton) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x5 \
             setSigma (setPi singleton x6 \ singleton) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4) x2)
        (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4) x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0
   (setPi (setPi singleton x2 \ singleton) x2 \
     setPi singleton x3 \ singleton) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    interp x0 x1 => setoid_eq (setPi singleton x2 \ singleton) (X550 x1)
"
"4____[+[Begin 
interp singleton X551^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X552^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X553^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0
   (setPi (setPi singleton x2 \ singleton) x2 \
     setPi singleton x3 \ singleton) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    interp x0 x1 =>
     (setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
       forall singleton x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)
         (app
           (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0
       (setPi (setPi singleton x6 \ singleton) x6 \
         setPi singleton x7 \ singleton) =>
       locDecl x1
        (setPi (setPi singleton x6 \ singleton) x6 \
          setPi singleton x7 \ singleton) =>
        locDecl x3
         (setSigma
           (setPi
             (setSigma (setPi singleton x6 \ singleton) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton (app x6 x7) (app x6 x8)) x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x6 \
           forall
            (setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x7 \
            forall
             (setSigma (setPi singleton x8 \ singleton) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton (app x8 x9) (app x8 x10)) x8 \
             forall
              (forall singleton x9 \
                propId singleton
                 (app
                   (elim_setSigma x7 (x10 \ setPi singleton x11 \ singleton)
                     x10 \ x11 \ x10) x9)
                 (app
                   (elim_setSigma x8 (x10 \ setPi singleton x11 \ singleton)
                     x10 \ x11 \ x10) x9)) x9 \
              forall singleton x10 \
               propId singleton
                (app
                  (elim_setSigma (app x6 x7) (x11 \
                    setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                (app
                  (elim_setSigma (app x6 x8) (x11 \
                    setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
         =>
         locDecl x4
          (setSigma
            (setPi
              (setSigma (setPi singleton x6 \ singleton) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton (app x6 x7) (app x6 x8)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x6 \
            forall
             (setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x7 \
             forall
              (setSigma (setPi singleton x8 \ singleton) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton (app x8 x9) (app x8 x10)) x8 \
              forall
               (forall singleton x9 \
                 propId singleton
                  (app
                    (elim_setSigma x7 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)
                  (app
                    (elim_setSigma x8 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)) x9 \
               forall singleton x10 \
                propId singleton
                 (app
                   (elim_setSigma (app x6 x7) (x11 \
                     setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                 (app
                   (elim_setSigma (app x6 x8) (x11 \
                     setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
          =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2
             (propEq
               (setPi (setPi singleton x6 \ singleton) x6 \
                 setPi singleton x7 \ singleton) x0 x1) =>
             locDecl x5
              (forall
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                forall singleton x7 \
                 propId singleton
                  (app
                    (elim_setSigma
                      (app
                        (elim_setSigma x3 (x8 \
                          setPi
                           (setSigma (setPi singleton x9 \ singleton) x9 \
                             forall singleton x10 \
                              forall singleton x11 \
                               forall (propId singleton x10 x11) x12 \
                                propId singleton (app x9 x10) (app x9 x11))
                           x9 \
                           setSigma (setPi singleton x10 \ singleton) x10 \
                            forall singleton x11 \
                             forall singleton x12 \
                              forall (propId singleton x11 x12) x13 \
                               propId singleton (app x10 x11) (app x10 x12))
                          x8 \ x9 \ x8) x6) (x8 \
                      setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
                  (app
                    (elim_setSigma
                      (app
                        (elim_setSigma x4 (x8 \
                          setPi
                           (setSigma (setPi singleton x9 \ singleton) x9 \
                             forall singleton x10 \
                              forall singleton x11 \
                               forall (propId singleton x10 x11) x12 \
                                propId singleton (app x9 x10) (app x9 x11))
                           x9 \
                           setSigma (setPi singleton x10 \ singleton) x10 \
                            forall singleton x11 \
                             forall singleton x12 \
                              forall (propId singleton x11 x12) x13 \
                               propId singleton (app x10 x11) (app x10 x12))
                          x8 \ x9 \ x8) x6) (x8 \
                      setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ singleton)
                  (setPi singleton x6 \ singleton) (X554 x3 x4 x5))
"
"4____[+[Begin 
tau (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
 (X554 x3 x4 x5)
"
"4----]-]Success  
tau (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton) x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0
       (setPi (setPi singleton x6 \ singleton) x6 \
         setPi singleton x7 \ singleton) =>
       locDecl x1
        (setPi (setPi singleton x6 \ singleton) x6 \
          setPi singleton x7 \ singleton) =>
        locDecl x3
         (setSigma
           (setPi
             (setSigma (setPi singleton x6 \ singleton) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton (app x6 x7) (app x6 x8)) x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x6 \
           forall
            (setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x7 \
            forall
             (setSigma (setPi singleton x8 \ singleton) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton (app x8 x9) (app x8 x10)) x8 \
             forall
              (forall singleton x9 \
                propId singleton
                 (app
                   (elim_setSigma x7 (x10 \ setPi singleton x11 \ singleton)
                     x10 \ x11 \ x10) x9)
                 (app
                   (elim_setSigma x8 (x10 \ setPi singleton x11 \ singleton)
                     x10 \ x11 \ x10) x9)) x9 \
              forall singleton x10 \
               propId singleton
                (app
                  (elim_setSigma (app x6 x7) (x11 \
                    setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                (app
                  (elim_setSigma (app x6 x8) (x11 \
                    setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
         =>
         locDecl x4
          (setSigma
            (setPi
              (setSigma (setPi singleton x6 \ singleton) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton (app x6 x7) (app x6 x8)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x6 \
            forall
             (setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x7 \
             forall
              (setSigma (setPi singleton x8 \ singleton) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton (app x8 x9) (app x8 x10)) x8 \
              forall
               (forall singleton x9 \
                 propId singleton
                  (app
                    (elim_setSigma x7 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)
                  (app
                    (elim_setSigma x8 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)) x9 \
               forall singleton x10 \
                propId singleton
                 (app
                   (elim_setSigma (app x6 x7) (x11 \
                     setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                 (app
                   (elim_setSigma (app x6 x8) (x11 \
                     setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
          =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2
             (propEq
               (setPi (setPi singleton x6 \ singleton) x6 \
                 setPi singleton x7 \ singleton) x0 x1) =>
             locDecl x5
              (forall
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                forall singleton x7 \
                 propId singleton
                  (app
                    (elim_setSigma
                      (app
                        (elim_setSigma x3 (x8 \
                          setPi
                           (setSigma (setPi singleton x9 \ singleton) x9 \
                             forall singleton x10 \
                              forall singleton x11 \
                               forall (propId singleton x10 x11) x12 \
                                propId singleton (app x9 x10) (app x9 x11))
                           x9 \
                           setSigma (setPi singleton x10 \ singleton) x10 \
                            forall singleton x11 \
                             forall singleton x12 \
                              forall (propId singleton x11 x12) x13 \
                               propId singleton (app x10 x11) (app x10 x12))
                          x8 \ x9 \ x8) x6) (x8 \
                      setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
                  (app
                    (elim_setSigma
                      (app
                        (elim_setSigma x4 (x8 \
                          setPi
                           (setSigma (setPi singleton x9 \ singleton) x9 \
                             forall singleton x10 \
                              forall singleton x11 \
                               forall (propId singleton x10 x11) x12 \
                                propId singleton (app x9 x10) (app x9 x11))
                           x9 \
                           setSigma (setPi singleton x10 \ singleton) x10 \
                            forall singleton x11 \
                             forall singleton x12 \
                              forall (propId singleton x11 x12) x13 \
                               propId singleton (app x10 x11) (app x10 x12))
                          x8 \ x9 \ x8) x6) (x8 \
                      setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ singleton)
                  (setPi singleton x6 \ singleton) x6 \ x6)
"
"2--]-]Success  
interp
 (setPi
   (setPi (setPi singleton x0 \ singleton) x0 \
     setPi singleton x1 \ singleton) x0 \ setPi singleton x1 \ singleton)
 (setSigma
   (setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x0 \ singleton) x0 \
           forall singleton x1 \
            forall singleton x2 \
             forall (propId singleton x1 x2) x3 \
              propId singleton (app x0 x1) (app x0 x2)) x0 \
         setSigma (setPi singleton x1 \ singleton) x1 \
          forall singleton x2 \
           forall singleton x3 \
            forall (propId singleton x2 x3) x4 \
             propId singleton (app x1 x2) (app x1 x3)) x0 \
       forall
        (setSigma (setPi singleton x1 \ singleton) x1 \
          forall singleton x2 \
           forall singleton x3 \
            forall (propId singleton x2 x3) x4 \
             propId singleton (app x1 x2) (app x1 x3)) x1 \
        forall
         (setSigma (setPi singleton x2 \ singleton) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \
         forall
          (forall singleton x3 \
            propId singleton
             (app
               (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
                 x5 \ x4) x3)
             (app
               (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \
                 x5 \ x4) x3)) x3 \
          forall singleton x4 \
           propId singleton
            (app
              (elim_setSigma (app x0 x1) (x5 \
                setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
            (app
              (elim_setSigma (app x0 x2) (x5 \
                setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)) x0 \
     setSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x0 \
   forall
    (setSigma
      (setPi
        (setSigma (setPi singleton x1 \ singleton) x1 \
          forall singleton x2 \
           forall singleton x3 \
            forall (propId singleton x2 x3) x4 \
             propId singleton (app x1 x2) (app x1 x3)) x1 \
        setSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x1 \
      forall
       (setSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \
       forall
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        forall
         (forall singleton x4 \
           propId singleton
            (app
              (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \
                x6 \ x5) x4)
            (app
              (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \
                x6 \ x5) x4)) x4 \
         forall singleton x5 \
          propId singleton
           (app
             (elim_setSigma (app x1 x2) (x6 \ setPi singleton x7 \ singleton)
               x6 \ x7 \ x6) x5)
           (app
             (elim_setSigma (app x1 x3) (x6 \ setPi singleton x7 \ singleton)
               x6 \ x7 \ x6) x5)) x1 \
    forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x2 \ singleton) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \
         setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x2 \
       forall
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        forall
         (setSigma (setPi singleton x4 \ singleton) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (forall singleton x5 \
            propId singleton
             (app
               (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                 x7 \ x6) x5)
             (app
               (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                 x7 \ x6) x5)) x5 \
          forall singleton x6 \
           propId singleton
            (app
              (elim_setSigma (app x2 x3) (x7 \
                setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)
            (app
              (elim_setSigma (app x2 x4) (x7 \
                setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)) x2 \
     forall
      (forall
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        forall singleton x4 \
         propId singleton
          (app
            (elim_setSigma
              (app
                (elim_setSigma x1 (x5 \
                  setPi
                   (setSigma (setPi singleton x6 \ singleton) x6 \
                     forall singleton x7 \
                      forall singleton x8 \
                       forall (propId singleton x7 x8) x9 \
                        propId singleton (app x6 x7) (app x6 x8)) x6 \
                   setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5)
                x3) (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
          (app
            (elim_setSigma
              (app
                (elim_setSigma x2 (x5 \
                  setPi
                   (setSigma (setPi singleton x6 \ singleton) x6 \
                     forall singleton x7 \
                      forall singleton x8 \
                       forall (propId singleton x7 x8) x9 \
                        propId singleton (app x6 x7) (app x6 x8)) x6 \
                   setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5)
                x3) (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4))
      x3 \
      forall singleton x4 \
       propId singleton
        (app
          (elim_setSigma (app x0 x1) (x5 \ setPi singleton x6 \ singleton)
            x5 \ x6 \ x5) x4)
        (app
          (elim_setSigma (app x0 x2) (x5 \ setPi singleton x6 \ singleton)
            x5 \ x6 \ x5) x4))
"
"2__[+[Begin 
setoid_eq
 (setPi
   (setPi (setPi singleton x0 \ singleton) x0 \
     setPi singleton x1 \ singleton) x0 \ setPi singleton x1 \ singleton)
 X555
"
"3___[+[Begin 
interp
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 X556
"
"4____[+[Begin 
interp (setPi singleton x0 \ singleton) X557
"
"5_____[+[Begin 
interp singleton X558
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X559 x1)
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X560
"
"5-----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X561 x1)
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X562 x3 x4 x5))
"
"6______[+[Begin 
tau singleton singleton (X562 x3 x4 x5)
"
"6------]-]Success  
tau singleton singleton x6 \ x6
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"4----]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp (setPi singleton x2 \ singleton) (X563 x1)
"
"5_____[+[Begin 
interp singleton X564^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X565^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X566^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X567^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X568^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X568^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ singleton)
      (setSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"4____[+[Begin 
setoid_eq (setPi singleton x0 \ singleton) X569
"
"5_____[+[Begin 
interp singleton X570
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X571 x1)
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"5_____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X572 x1)))
"
"5-----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"4----]-]Success  
setoid_eq (setPi singleton x0 \ singleton) x0 \ x1 \
 forall singleton x2 \
  propId singleton
   (app (elim_setSigma x0 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app (elim_setSigma x1 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => setoid_eq (setPi singleton x2 \ singleton) (X573 x1)
"
"5_____[+[Begin 
interp singleton X574^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X575^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X576^2 x3)))
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     (setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
       forall singleton x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)
         (app
           (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4))
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ singleton)
                  (setPi singleton x6 \ singleton) (X577 x3 x4 x5))
"
"5_____[+[Begin 
tau (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
 (X577 x3 x4 x5)
"
"5-----]-]Success  
tau (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton) x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ singleton)
                  (setPi singleton x6 \ singleton) x6 \ x6)
"
"3---]-]Success  
interp
 (setPi (setPi singleton x0 \ singleton) x0 \ setPi singleton x1 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x0 \ singleton) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \
          propId singleton (app x0 x1) (app x0 x2)) x0 \
     setSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x0 \
   forall
    (setSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \
    forall
     (setSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (forall singleton x3 \
        propId singleton
         (app
           (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)
         (app
           (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)) x3 \
      forall singleton x4 \
       propId singleton
        (app
          (elim_setSigma (app x0 x1) (x5 \ setPi singleton x6 \ singleton)
            x5 \ x6 \ x5) x4)
        (app
          (elim_setSigma (app x0 x2) (x5 \ setPi singleton x6 \ singleton)
            x5 \ x6 \ x5) x4))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0
   (setPi (setPi singleton x2 \ singleton) x2 \
     setPi singleton x3 \ singleton) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    interp x0 x1 => interp (setPi singleton x2 \ singleton) (X578 x1)
"
"4____[+[Begin 
interp singleton X579^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X580^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X581^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X582^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X583^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X583^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0
   (setPi (setPi singleton x2 \ singleton) x2 \
     setPi singleton x3 \ singleton) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ singleton)
      (setSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0
   (setPi (setPi singleton x2 \ singleton) x2 \
     setPi singleton x3 \ singleton) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    interp x0 x1 =>
     ((interp (setPi singleton x2 \ singleton)
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4))),
     (setoid_eq (setPi singleton x2 \ singleton) (X584 x1)))
"
"4____[+[Begin 
interp singleton X585^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X586^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X587^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X588^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X589^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X589^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4____[+[Begin 
interp singleton X590^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X591^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X592^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0
   (setPi (setPi singleton x2 \ singleton) x2 \
     setPi singleton x3 \ singleton) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    interp x0 x1 =>
     ((interp (setPi singleton x2 \ singleton)
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4))),
     (setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
       forall singleton x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)
         (app
           (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)))
"
"2--]-]Success  
setoid_eq
 (setPi
   (setPi (setPi singleton x0 \ singleton) x0 \
     setPi singleton x1 \ singleton) x0 \ setPi singleton x1 \ singleton)
 x0 \ x1 \
 forall
  (setSigma
    (setPi
      (setSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \
      setSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x2 \
    forall
     (setSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \
     forall
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (forall singleton x5 \
         propId singleton
          (app
            (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
              x6) x5)
          (app
            (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
              x6) x5)) x5 \
       forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
             x7 \ x8 \ x7) x6)
         (app
           (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
             x7 \ x8 \ x7) x6)) x2 \
  forall singleton x3 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x4 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x5 \ singleton) x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton (app x5 x6) (app x5 x7)) x5 \
                 setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x5 \
               forall
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                forall
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 forall
                  (forall singleton x8 \
                    propId singleton
                     (app
                       (elim_setSigma x6 (x9 \
                         setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8)
                     (app
                       (elim_setSigma x7 (x9 \
                         setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8))
                  x8 \
                  forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma (app x5 x6) (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma (app x5 x7) (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
             x5 \
             setSigma (setPi singleton x6 \ singleton) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4) x2)
        (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4) x3)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x4 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x5 \ singleton) x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton (app x5 x6) (app x5 x7)) x5 \
                 setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x5 \
               forall
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                forall
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 forall
                  (forall singleton x8 \
                    propId singleton
                     (app
                       (elim_setSigma x6 (x9 \
                         setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8)
                     (app
                       (elim_setSigma x7 (x9 \
                         setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8))
                  x8 \
                  forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma (app x5 x6) (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma (app x5 x7) (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
             x5 \
             setSigma (setPi singleton x6 \ singleton) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4) x2)
        (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4) x3)
"
"2__[+[Begin 
interp (setPi singleton x0 \ singleton) X593
"
"3___[+[Begin 
interp singleton X594
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X595 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq singleton X596
"
"3---]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X597 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X598 x3 x4 x5))
"
"4____[+[Begin 
tau singleton singleton (X598 x3 x4 x5)
"
"4----]-]Success  
tau singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2--]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => interp (setPi singleton x2 \ singleton) (X599 x1)
"
"3___[+[Begin 
interp singleton X600^2
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X601^2 x3)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq singleton X602^2
"
"3---]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X603^2 x3)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X604^2 x5 x6 x7))
"
"4____[+[Begin 
tau singleton singleton (X604^2 x5 x6 x7)
"
"4----]-]Success  
tau singleton singleton x8 \ x8
"
"3---]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ singleton)
      (setSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"2__[+[Begin 
setoid_eq (setPi singleton x0 \ singleton) X605
"
"3___[+[Begin 
interp singleton X606
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X607 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X608 x1)))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"2--]-]Success  
setoid_eq (setPi singleton x0 \ singleton) x0 \ x1 \
 forall singleton x2 \
  propId singleton
   (app (elim_setSigma x0 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app (elim_setSigma x1 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 => setoid_eq (setPi singleton x2 \ singleton) (X609 x1)
"
"3___[+[Begin 
interp singleton X610^2
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X611^2 x3)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X612^2 x3)))
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     (setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
       forall singleton x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)
         (app
           (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4))
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ singleton)
                  (setPi singleton x6 \ singleton) (X613 x3 x4 x5))
"
"3___[+[Begin 
tau (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
 (X613 x3 x4 x5)
"
"3---]-]Success  
tau (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton) x6 \ x6
"
"2--]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ singleton)
                  (setPi singleton x6 \ singleton) x6 \ x6)
"
"2__[+[Begin 
interp singleton X614^2
"
"2--]-]Success  
interp singleton singleton
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X615^2 x3)
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"2__[+[Begin 
setoid_eq singleton X616^2
"
"2--]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X617^2 x3)
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X618^2 x5 x6 x7))
"
"3___[+[Begin 
tau singleton singleton (X618^2 x5 x6 x7)
"
"3---]-]Success  
tau singleton singleton x8 \ x8
"
"2--]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0
   (setPi (setPi singleton x2 \ singleton) x2 \
     setPi singleton x3 \ singleton) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    interp x0 x1 => setoid_symm (setPi singleton x2 \ singleton) (X619 x1)
"
"3___[+[Begin 
interp (setPi singleton x2 \ singleton) X620^2
"
"4____[+[Begin 
interp singleton X621^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X622^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq singleton X623^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X624^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X625^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X625^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
interp (setPi singleton x2 \ singleton)
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
setoid_eq (setPi singleton x2 \ singleton) X626^2
"
"4____[+[Begin 
interp singleton X627^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X628^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X629^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
 forall singleton x4 \
  propId singleton
   (app (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
   (app (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_symm singleton (X630^2 x3)
"
"4____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   locDecl x4 singleton =>
    locDecl x5 singleton =>
     locDecl x6 (propId singleton x4 x5) =>
      of (elim_id x6 (x7 \ x8 \ propId singleton x8 x7) x7 \ id singleton x7)
       _ int
"
"5_____[+[Begin 
of x6 (propId X631^7 X632^7 X633^7) int
"
"5-----]-]Success  
of x6 (propId singleton x4 x5) int
"
"5_____[+[Begin 
pi x7 \
 pi x8 \
  locDecl x7 singleton =>
   locDecl x8 singleton => isaType (propId singleton x8 x7) propc int
"
"6______[+[Begin 
ofType (propId singleton x8 x7) X634^9 int
"
"7_______[+[Begin 
of x8 X635^9 int
"
"7-------]-]Success  
of x8 singleton int
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"7_______[+[Begin 
of x7 X636^9 int
"
"7-------]-]Success  
of x7 singleton int
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"7_______[+[Begin 
(pts_leq set set),
(X634^9 = props)
"
"7-------]-]Success  
(pts_leq set set),
(props = props)
"
"6------]-]Success  
ofType (propId singleton x8 x7) props int
"
"6______[+[Begin 
pts_leq props propc
"
"6------]-]Success  
pts_leq props propc
"
"5-----]-]Success  
pi x7 \
 pi x8 \
  locDecl x7 singleton =>
   locDecl x8 singleton => isaType (propId singleton x8 x7) propc int
"
"5_____[+[Begin 
pi x7 \
 locDecl x7 singleton => of (id singleton x7) (propId singleton x7 x7) int
"
"6______[+[Begin 
ofType singleton _ int
"
"6------]-]Success  
ofType singleton _ int
"
"6______[+[Begin 
isa x7 singleton int
"
"7_______[+[Begin 
of x7 X637^8 int
"
"7-------]-]Success  
of x7 singleton int
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"6------]-]Success  
isa x7 singleton int
"
"5-----]-]Success  
pi x7 \
 locDecl x7 singleton => of (id singleton x7) (propId singleton x7 x7) int
"
"4----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   locDecl x4 singleton =>
    locDecl x5 singleton =>
     locDecl x6 (propId singleton x4 x5) =>
      of (elim_id x6 (x7 \ x8 \ propId singleton x8 x7) x7 \ id singleton x7)
       _ int
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     (setoid_symm singleton x4 \ x5 \ x6 \
       elim_id x6 (x7 \ x8 \ propId singleton x8 x7) x7 \ id singleton x7)
"
"3___[+[Begin 
X619 x1 = (x2 \ x3 \ x4 \
 forall_lam singleton x5 \
  elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6) x6 \
   id singleton x6)
"
"3---]-]Success  
(x2 \ x3 \ x4 \
 forall_lam singleton x5 \
  elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6) x6 \
   id singleton x6) = (x2 \ x3 \ x4 \
 forall_lam singleton x5 \
  elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6) x6 \
   id singleton x6)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2
   (setSigma (setPi singleton x4 \ singleton) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    (pi x4 \
      locDecl x4
       (forall singleton x5 \
         propId singleton
          (app
            (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
              x6) x5)
          (app
            (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
              x6) x5)) =>
       spy
        (of
          (forall_lam singleton x5 \
            elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6)
             x6 \ id singleton x6)
          (forall singleton x5 \
            propId singleton
             (app
               (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                 x7 \ x6) x5)
             (app
               (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \
                 x7 \ x6) x5)) int))
"
"4____[+[Begin 
of
 (forall_lam singleton x5 \
   elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6) x6 \
    id singleton x6)
 (forall singleton x5 \
   propId singleton
    (app
      (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
      x5)
    (app
      (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
      x5)) int
"
"5_____[+[Begin 
ofType singleton _ int
"
"5-----]-]Success  
ofType singleton _ int
"
"5_____[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  isa
   (elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6) x6 \
     id singleton x6)
   (propId singleton
     (app
       (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
       x5)
     (app
       (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
       x5)) int
"
"6______[+[Begin 
of
 (elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6) x6 \
   id singleton x6) X638^6 int
"
"7_______[+[Begin 
of (forall_app x4 x5) (propId X639^6 X640^6 X641^6) int
"
"8________[+[Begin 
of x4 (forall X642^6 X643^6) int
"
"8--------]-]Success  
of x4
 (forall singleton x6 \
   propId singleton
    (app
      (elim_setSigma x2 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
      x6)
    (app
      (elim_setSigma x3 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
      x6)) int
"
"8________[+[Begin 
isa x5 singleton int
"
"9_________[+[Begin 
of x5 X644^6 int
"
"9---------]-]Success  
of x5 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"8--------]-]Success  
isa x5 singleton int
"
"8________[+[Begin 
propId X639^6 X640^6 X641^6 =
 propId singleton
  (app (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
    x5)
  (app (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
    x5)
"
"8--------]-]Success  
propId singleton
 (app (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
   x5)
 (app (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
   x5) =
 propId singleton
  (app (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
    x5)
  (app (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
    x5)
"
"7-------]-]Success  
of (forall_app x4 x5)
 (propId singleton
   (app (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5)
   (app (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5)) int
"
"7_______[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton => isaType (propId singleton x7 x6) propc int
"
"8________[+[Begin 
ofType (propId singleton x7 x6) X645^8 int
"
"9_________[+[Begin 
of x7 X646^8 int
"
"9---------]-]Success  
of x7 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
of x6 X647^8 int
"
"9---------]-]Success  
of x6 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
(pts_leq set set),
(X645^8 = props)
"
"9---------]-]Success  
(pts_leq set set),
(props = props)
"
"8--------]-]Success  
ofType (propId singleton x7 x6) props int
"
"8________[+[Begin 
pts_leq props propc
"
"8--------]-]Success  
pts_leq props propc
"
"7-------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton => isaType (propId singleton x7 x6) propc int
"
"7_______[+[Begin 
pi x6 \
 locDecl x6 singleton => of (id singleton x6) (propId singleton x6 x6) int
"
"8________[+[Begin 
ofType singleton _ int
"
"8--------]-]Success  
ofType singleton _ int
"
"8________[+[Begin 
isa x6 singleton int
"
"9_________[+[Begin 
of x6 X648^7 int
"
"9---------]-]Success  
of x6 singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"8--------]-]Success  
isa x6 singleton int
"
"7-------]-]Success  
pi x6 \
 locDecl x6 singleton => of (id singleton x6) (propId singleton x6 x6) int
"
"6------]-]Success  
of
 (elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6) x6 \
   id singleton x6)
 (propId singleton
   (app (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5)
   (app (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5)) int
"
"6______[+[Begin 
conv
 (propId singleton
   (app (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5)
   (app (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5))
 (propId singleton
   (app (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5)
   (app (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5))
"
"6------]-]Success  
conv
 (propId singleton
   (app (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5)
   (app (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5))
 (propId singleton
   (app (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5)
   (app (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
     x5))
"
"5-----]-]Success  
pi x5 \
 locDecl x5 singleton =>
  isa
   (elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6) x6 \
     id singleton x6)
   (propId singleton
     (app
       (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
       x5)
     (app
       (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
       x5)) int
"
"4----]-]Success  
of
 (forall_lam singleton x5 \
   elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6) x6 \
    id singleton x6)
 (forall singleton x5 \
   propId singleton
    (app
      (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
      x5)
    (app
      (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
      x5)) int
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2
   (setSigma (setPi singleton x4 \ singleton) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    (pi x4 \
      locDecl x4
       (forall singleton x5 \
         propId singleton
          (app
            (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
              x6) x5)
          (app
            (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
              x6) x5)) =>
       spy
        (of
          (forall_lam singleton x5 \
            elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6)
             x6 \ id singleton x6)
          (forall singleton x5 \
            propId singleton
             (app
               (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                 x7 \ x6) x5)
             (app
               (elim_setSigma x2 (x6 \ setPi singleton x7 \ singleton) x6 \
                 x7 \ x6) x5)) int))
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0
   (setPi (setPi singleton x2 \ singleton) x2 \
     setPi singleton x3 \ singleton) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall singleton x5 \
           propId singleton
            (app
              (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)
            (app
              (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                x7 \ x6) x5)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    interp x0 x1 =>
     (setoid_symm (setPi singleton x2 \ singleton) x2 \ x3 \ x4 \
       forall_lam singleton x5 \
        elim_id (forall_app x4 x5) (x6 \ x7 \ propId singleton x7 x6) x6 \
         id singleton x6)
"
"2__[+[Begin 
X649 = (x0 \ x1 \ x2 \
 forall_lam
  (setSigma
    (setPi
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x3 \
    forall
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (setSigma (setPi singleton x5 \ singleton) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)
          (app
            (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)) x6 \
       forall singleton x7 \
        propId singleton
         (app
           (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)
         (app
           (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)) x3 \
  forall_lam singleton x4 \
   elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
    propId singleton x6 x5) x5 \ id singleton x5)
"
"2--]-]Success  
(x0 \ x1 \ x2 \
 forall_lam
  (setSigma
    (setPi
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x3 \
    forall
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (setSigma (setPi singleton x5 \ singleton) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)
          (app
            (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)) x6 \
       forall singleton x7 \
        propId singleton
         (app
           (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)
         (app
           (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)) x3 \
  forall_lam singleton x4 \
   elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
    propId singleton x6 x5) x5 \ id singleton x5) = (x0 \ x1 \ x2 \
 forall_lam
  (setSigma
    (setPi
      (setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x3 \
    forall
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (setSigma (setPi singleton x5 \ singleton) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)
          (app
            (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)) x6 \
       forall singleton x7 \
        propId singleton
         (app
           (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)
         (app
           (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)) x3 \
  forall_lam singleton x4 \
   elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
    propId singleton x6 x5) x5 \ id singleton x5)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0
   (setSigma
     (setPi
       (setSigma
         (setPi
           (setSigma (setPi singleton x2 \ singleton) x2 \
             forall singleton x3 \
              forall singleton x4 \
               forall (propId singleton x3 x4) x5 \
                propId singleton (app x2 x3) (app x2 x4)) x2 \
           setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x2 \
         forall
          (setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \
          forall
           (setSigma (setPi singleton x4 \ singleton) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \
           forall
            (forall singleton x5 \
              propId singleton
               (app
                 (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                   x7 \ x6) x5)
               (app
                 (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                   x7 \ x6) x5)) x5 \
            forall singleton x6 \
             propId singleton
              (app
                (elim_setSigma (app x2 x3) (x7 \
                  setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)
              (app
                (elim_setSigma (app x2 x4) (x7 \
                  setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)) x2 \
       setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x2 \
     forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \
          setSigma (setPi singleton x4 \ singleton) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x3 \
        forall
         (setSigma (setPi singleton x4 \ singleton) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \
          forall
           (forall singleton x6 \
             propId singleton
              (app
                (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
                  x8 \ x7) x6)
              (app
                (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
                  x8 \ x7) x6)) x6 \
           forall singleton x7 \
            propId singleton
             (app
               (elim_setSigma (app x3 x4) (x8 \
                 setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
             (app
               (elim_setSigma (app x3 x5) (x8 \
                 setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)) x3 \
      forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x4 \ singleton) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \
           setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x4 \
         forall
          (setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \
          forall
           (setSigma (setPi singleton x6 \ singleton) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton (app x6 x7) (app x6 x8)) x6 \
           forall
            (forall singleton x7 \
              propId singleton
               (app
                 (elim_setSigma x5 (x8 \ setPi singleton x9 \ singleton) x8 \
                   x9 \ x8) x7)
               (app
                 (elim_setSigma x6 (x8 \ setPi singleton x9 \ singleton) x8 \
                   x9 \ x8) x7)) x7 \
            forall singleton x8 \
             propId singleton
              (app
                (elim_setSigma (app x4 x5) (x9 \
                  setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8)
              (app
                (elim_setSigma (app x4 x6) (x9 \
                  setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8)) x4 \
       forall
        (forall
          (setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \
          forall singleton x6 \
           propId singleton
            (app
              (elim_setSigma
                (app
                  (elim_setSigma x3 (x7 \
                    setPi
                     (setSigma (setPi singleton x8 \ singleton) x8 \
                       forall singleton x9 \
                        forall singleton x10 \
                         forall (propId singleton x9 x10) x11 \
                          propId singleton (app x8 x9) (app x8 x10)) x8 \
                     setSigma (setPi singleton x9 \ singleton) x9 \
                      forall singleton x10 \
                       forall singleton x11 \
                        forall (propId singleton x10 x11) x12 \
                         propId singleton (app x9 x10) (app x9 x11)) x7 \
                    x8 \ x7) x5) (x7 \ setPi singleton x8 \ singleton) x7 \
                x8 \ x7) x6)
            (app
              (elim_setSigma
                (app
                  (elim_setSigma x4 (x7 \
                    setPi
                     (setSigma (setPi singleton x8 \ singleton) x8 \
                       forall singleton x9 \
                        forall singleton x10 \
                         forall (propId singleton x9 x10) x11 \
                          propId singleton (app x8 x9) (app x8 x10)) x8 \
                     setSigma (setPi singleton x9 \ singleton) x9 \
                      forall singleton x10 \
                       forall singleton x11 \
                        forall (propId singleton x10 x11) x12 \
                         propId singleton (app x9 x10) (app x9 x11)) x7 \
                    x8 \ x7) x5) (x7 \ setPi singleton x8 \ singleton) x7 \
                x8 \ x7) x6)) x5 \
        forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
              x7 \ x8 \ x7) x6)
          (app
            (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
              x7 \ x8 \ x7) x6)) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma
          (setPi
            (setSigma (setPi singleton x2 \ singleton) x2 \
              forall singleton x3 \
               forall singleton x4 \
                forall (propId singleton x3 x4) x5 \
                 propId singleton (app x2 x3) (app x2 x4)) x2 \
            setSigma (setPi singleton x3 \ singleton) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x2 \
          forall
           (setSigma (setPi singleton x3 \ singleton) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x3 \
           forall
            (setSigma (setPi singleton x4 \ singleton) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (forall singleton x5 \
               propId singleton
                (app
                  (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton)
                    x6 \ x7 \ x6) x5)
                (app
                  (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton)
                    x6 \ x7 \ x6) x5)) x5 \
             forall singleton x6 \
              propId singleton
               (app
                 (elim_setSigma (app x2 x3) (x7 \
                   setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)
               (app
                 (elim_setSigma (app x2 x4) (x7 \
                   setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x3 \ singleton) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x3 \
           setSigma (setPi singleton x4 \ singleton) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x3 \
         forall
          (setSigma (setPi singleton x4 \ singleton) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \
          forall
           (setSigma (setPi singleton x5 \ singleton) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \
           forall
            (forall singleton x6 \
              propId singleton
               (app
                 (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
                   x8 \ x7) x6)
               (app
                 (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
                   x8 \ x7) x6)) x6 \
            forall singleton x7 \
             propId singleton
              (app
                (elim_setSigma (app x3 x4) (x8 \
                  setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
              (app
                (elim_setSigma (app x3 x5) (x8 \
                  setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)) x3 \
       forall
        (setSigma
          (setPi
            (setSigma (setPi singleton x4 \ singleton) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi singleton x5 \ singleton) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x4 \
          forall
           (setSigma (setPi singleton x5 \ singleton) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \
           forall
            (setSigma (setPi singleton x6 \ singleton) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x6 \
            forall
             (forall singleton x7 \
               propId singleton
                (app
                  (elim_setSigma x5 (x8 \ setPi singleton x9 \ singleton)
                    x8 \ x9 \ x8) x7)
                (app
                  (elim_setSigma x6 (x8 \ setPi singleton x9 \ singleton)
                    x8 \ x9 \ x8) x7)) x7 \
             forall singleton x8 \
              propId singleton
               (app
                 (elim_setSigma (app x4 x5) (x9 \
                   setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8)
               (app
                 (elim_setSigma (app x4 x6) (x9 \
                   setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8)) x4 \
        forall
         (forall
           (setSigma (setPi singleton x5 \ singleton) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \
           forall singleton x6 \
            propId singleton
             (app
               (elim_setSigma
                 (app
                   (elim_setSigma x3 (x7 \
                     setPi
                      (setSigma (setPi singleton x8 \ singleton) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton (app x8 x9) (app x8 x10)) x8 \
                      setSigma (setPi singleton x9 \ singleton) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton (app x9 x10) (app x9 x11)) x7 \
                     x8 \ x7) x5) (x7 \ setPi singleton x8 \ singleton) x7 \
                 x8 \ x7) x6)
             (app
               (elim_setSigma
                 (app
                   (elim_setSigma x4 (x7 \
                     setPi
                      (setSigma (setPi singleton x8 \ singleton) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton (app x8 x9) (app x8 x10)) x8 \
                      setSigma (setPi singleton x9 \ singleton) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton (app x9 x10) (app x9 x11)) x7 \
                     x8 \ x7) x5) (x7 \ setPi singleton x8 \ singleton) x7 \
                 x8 \ x7) x6)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    (pi x2 \
      locDecl x2
       (forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x3 \ singleton) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton (app x3 x4) (app x3 x5)) x3 \
             setSigma (setPi singleton x4 \ singleton) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x3 \
           forall
            (setSigma (setPi singleton x4 \ singleton) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (setSigma (setPi singleton x5 \ singleton) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x5 \
             forall
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) x6 \
              forall singleton x7 \
               propId singleton
                (app
                  (elim_setSigma (app x3 x4) (x8 \
                    setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
                (app
                  (elim_setSigma (app x3 x5) (x8 \
                    setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)) x3 \
         forall singleton x4 \
          propId singleton
           (app
             (elim_setSigma
               (app
                 (elim_setSigma x0 (x5 \
                   setPi
                    (setSigma
                      (setPi
                        (setSigma (setPi singleton x6 \ singleton) x6 \
                          forall singleton x7 \
                           forall singleton x8 \
                            forall (propId singleton x7 x8) x9 \
                             propId singleton (app x6 x7) (app x6 x8)) x6 \
                        setSigma (setPi singleton x7 \ singleton) x7 \
                         forall singleton x8 \
                          forall singleton x9 \
                           forall (propId singleton x8 x9) x10 \
                            propId singleton (app x7 x8) (app x7 x9)) x6 \
                      forall
                       (setSigma (setPi singleton x7 \ singleton) x7 \
                         forall singleton x8 \
                          forall singleton x9 \
                           forall (propId singleton x8 x9) x10 \
                            propId singleton (app x7 x8) (app x7 x9)) x7 \
                       forall
                        (setSigma (setPi singleton x8 \ singleton) x8 \
                          forall singleton x9 \
                           forall singleton x10 \
                            forall (propId singleton x9 x10) x11 \
                             propId singleton (app x8 x9) (app x8 x10)) x8 \
                        forall
                         (forall singleton x9 \
                           propId singleton
                            (app
                              (elim_setSigma x7 (x10 \
                                setPi singleton x11 \ singleton) x10 \ x11 \
                                x10) x9)
                            (app
                              (elim_setSigma x8 (x10 \
                                setPi singleton x11 \ singleton) x10 \ x11 \
                                x10) x9)) x9 \
                         forall singleton x10 \
                          propId singleton
                           (app
                             (elim_setSigma (app x6 x7) (x11 \
                               setPi singleton x12 \ singleton) x11 \ x12 \
                               x11) x10)
                           (app
                             (elim_setSigma (app x6 x8) (x11 \
                               setPi singleton x12 \ singleton) x11 \ x12 \
                               x11) x10)) x6 \
                    setSigma (setPi singleton x7 \ singleton) x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \
                   x5) x3) (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
             x4)
           (app
             (elim_setSigma
               (app
                 (elim_setSigma x1 (x5 \
                   setPi
                    (setSigma
                      (setPi
                        (setSigma (setPi singleton x6 \ singleton) x6 \
                          forall singleton x7 \
                           forall singleton x8 \
                            forall (propId singleton x7 x8) x9 \
                             propId singleton (app x6 x7) (app x6 x8)) x6 \
                        setSigma (setPi singleton x7 \ singleton) x7 \
                         forall singleton x8 \
                          forall singleton x9 \
                           forall (propId singleton x8 x9) x10 \
                            propId singleton (app x7 x8) (app x7 x9)) x6 \
                      forall
                       (setSigma (setPi singleton x7 \ singleton) x7 \
                         forall singleton x8 \
                          forall singleton x9 \
                           forall (propId singleton x8 x9) x10 \
                            propId singleton (app x7 x8) (app x7 x9)) x7 \
                       forall
                        (setSigma (setPi singleton x8 \ singleton) x8 \
                          forall singleton x9 \
                           forall singleton x10 \
                            forall (propId singleton x9 x10) x11 \
                             propId singleton (app x8 x9) (app x8 x10)) x8 \
                        forall
                         (forall singleton x9 \
                           propId singleton
                            (app
                              (elim_setSigma x7 (x10 \
                                setPi singleton x11 \ singleton) x10 \ x11 \
                                x10) x9)
                            (app
                              (elim_setSigma x8 (x10 \
                                setPi singleton x11 \ singleton) x10 \ x11 \
                                x10) x9)) x9 \
                         forall singleton x10 \
                          propId singleton
                           (app
                             (elim_setSigma (app x6 x7) (x11 \
                               setPi singleton x12 \ singleton) x11 \ x12 \
                               x11) x10)
                           (app
                             (elim_setSigma (app x6 x8) (x11 \
                               setPi singleton x12 \ singleton) x11 \ x12 \
                               x11) x10)) x6 \
                    setSigma (setPi singleton x7 \ singleton) x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \
                   x5) x3) (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
             x4)) =>
       spy
        (of
          (forall_lam
            (setSigma
              (setPi
                (setSigma (setPi singleton x3 \ singleton) x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton (app x3 x4) (app x3 x5)) x3 \
                setSigma (setPi singleton x4 \ singleton) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x3 \
              forall
               (setSigma (setPi singleton x4 \ singleton) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x4 \
               forall
                (setSigma (setPi singleton x5 \ singleton) x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton (app x5 x6) (app x5 x7)) x5 \
                forall
                 (forall singleton x6 \
                   propId singleton
                    (app
                      (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                        x7 \ x8 \ x7) x6)
                    (app
                      (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton)
                        x7 \ x8 \ x7) x6)) x6 \
                 forall singleton x7 \
                  propId singleton
                   (app
                     (elim_setSigma (app x3 x4) (x8 \
                       setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
                   (app
                     (elim_setSigma (app x3 x5) (x8 \
                       setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7))
            x3 \
            forall_lam singleton x4 \
             elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
              propId singleton x6 x5) x5 \ id singleton x5)
          (forall
            (setSigma
              (setPi
                (setSigma (setPi singleton x3 \ singleton) x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton (app x3 x4) (app x3 x5)) x3 \
                setSigma (setPi singleton x4 \ singleton) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x3 \
              forall
               (setSigma (setPi singleton x4 \ singleton) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x4 \
               forall
                (setSigma (setPi singleton x5 \ singleton) x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton (app x5 x6) (app x5 x7)) x5 \
                forall
                 (forall singleton x6 \
                   propId singleton
                    (app
                      (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                        x7 \ x8 \ x7) x6)
                    (app
                      (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton)
                        x7 \ x8 \ x7) x6)) x6 \
                 forall singleton x7 \
                  propId singleton
                   (app
                     (elim_setSigma (app x3 x4) (x8 \
                       setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
                   (app
                     (elim_setSigma (app x3 x5) (x8 \
                       setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7))
            x3 \
            forall singleton x4 \
             propId singleton
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x1 (x5 \
                      setPi
                       (setSigma
                         (setPi
                           (setSigma (setPi singleton x6 \ singleton) x6 \
                             forall singleton x7 \
                              forall singleton x8 \
                               forall (propId singleton x7 x8) x9 \
                                propId singleton (app x6 x7) (app x6 x8))
                           x6 \
                           setSigma (setPi singleton x7 \ singleton) x7 \
                            forall singleton x8 \
                             forall singleton x9 \
                              forall (propId singleton x8 x9) x10 \
                               propId singleton (app x7 x8) (app x7 x9)) x6 \
                         forall
                          (setSigma (setPi singleton x7 \ singleton) x7 \
                            forall singleton x8 \
                             forall singleton x9 \
                              forall (propId singleton x8 x9) x10 \
                               propId singleton (app x7 x8) (app x7 x9)) x7 \
                          forall
                           (setSigma (setPi singleton x8 \ singleton) x8 \
                             forall singleton x9 \
                              forall singleton x10 \
                               forall (propId singleton x9 x10) x11 \
                                propId singleton (app x8 x9) (app x8 x10))
                           x8 \
                           forall
                            (forall singleton x9 \
                              propId singleton
                               (app
                                 (elim_setSigma x7 (x10 \
                                   setPi singleton x11 \ singleton) x10 \
                                   x11 \ x10) x9)
                               (app
                                 (elim_setSigma x8 (x10 \
                                   setPi singleton x11 \ singleton) x10 \
                                   x11 \ x10) x9)) x9 \
                            forall singleton x10 \
                             propId singleton
                              (app
                                (elim_setSigma (app x6 x7) (x11 \
                                  setPi singleton x12 \ singleton) x11 \
                                  x12 \ x11) x10)
                              (app
                                (elim_setSigma (app x6 x8) (x11 \
                                  setPi singleton x12 \ singleton) x11 \
                                  x12 \ x11) x10)) x6 \
                       setSigma (setPi singleton x7 \ singleton) x7 \
                        forall singleton x8 \
                         forall singleton x9 \
                          forall (propId singleton x8 x9) x10 \
                           propId singleton (app x7 x8) (app x7 x9)) x5 \
                      x6 \ x5) x3) (x5 \ setPi singleton x6 \ singleton) x5 \
                  x6 \ x5) x4)
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x0 (x5 \
                      setPi
                       (setSigma
                         (setPi
                           (setSigma (setPi singleton x6 \ singleton) x6 \
                             forall singleton x7 \
                              forall singleton x8 \
                               forall (propId singleton x7 x8) x9 \
                                propId singleton (app x6 x7) (app x6 x8))
                           x6 \
                           setSigma (setPi singleton x7 \ singleton) x7 \
                            forall singleton x8 \
                             forall singleton x9 \
                              forall (propId singleton x8 x9) x10 \
                               propId singleton (app x7 x8) (app x7 x9)) x6 \
                         forall
                          (setSigma (setPi singleton x7 \ singleton) x7 \
                            forall singleton x8 \
                             forall singleton x9 \
                              forall (propId singleton x8 x9) x10 \
                               propId singleton (app x7 x8) (app x7 x9)) x7 \
                          forall
                           (setSigma (setPi singleton x8 \ singleton) x8 \
                             forall singleton x9 \
                              forall singleton x10 \
                               forall (propId singleton x9 x10) x11 \
                                propId singleton (app x8 x9) (app x8 x10))
                           x8 \
                           forall
                            (forall singleton x9 \
                              propId singleton
                               (app
                                 (elim_setSigma x7 (x10 \
                                   setPi singleton x11 \ singleton) x10 \
                                   x11 \ x10) x9)
                               (app
                                 (elim_setSigma x8 (x10 \
                                   setPi singleton x11 \ singleton) x10 \
                                   x11 \ x10) x9)) x9 \
                            forall singleton x10 \
                             propId singleton
                              (app
                                (elim_setSigma (app x6 x7) (x11 \
                                  setPi singleton x12 \ singleton) x11 \
                                  x12 \ x11) x10)
                              (app
                                (elim_setSigma (app x6 x8) (x11 \
                                  setPi singleton x12 \ singleton) x11 \
                                  x12 \ x11) x10)) x6 \
                       setSigma (setPi singleton x7 \ singleton) x7 \
                        forall singleton x8 \
                         forall singleton x9 \
                          forall (propId singleton x8 x9) x10 \
                           propId singleton (app x7 x8) (app x7 x9)) x5 \
                      x6 \ x5) x3) (x5 \ setPi singleton x6 \ singleton) x5 \
                  x6 \ x5) x4)) int))
"
"3___[+[Begin 
of
 (forall_lam
   (setSigma
     (setPi
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x3 \
     forall
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)
           (app
             (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)) x6 \
        forall singleton x7 \
         propId singleton
          (app
            (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)
          (app
            (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)) x3 \
   forall_lam singleton x4 \
    elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
     propId singleton x6 x5) x5 \ id singleton x5)
 (forall
   (setSigma
     (setPi
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x3 \
     forall
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)
           (app
             (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)) x6 \
        forall singleton x7 \
         propId singleton
          (app
            (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)
          (app
            (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)) x3 \
   forall singleton x4 \
    propId singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x1 (x5 \
             setPi
              (setSigma
                (setPi
                  (setSigma (setPi singleton x6 \ singleton) x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton (app x6 x7) (app x6 x8)) x6 \
                  setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x6 \
                forall
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 forall
                  (setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x8 \
                  forall
                   (forall singleton x9 \
                     propId singleton
                      (app
                        (elim_setSigma x7 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)
                      (app
                        (elim_setSigma x8 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)) x9 \
                   forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma (app x6 x7) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma (app x6 x8) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
         (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x5 \
             setPi
              (setSigma
                (setPi
                  (setSigma (setPi singleton x6 \ singleton) x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton (app x6 x7) (app x6 x8)) x6 \
                  setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x6 \
                forall
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 forall
                  (setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x8 \
                  forall
                   (forall singleton x9 \
                     propId singleton
                      (app
                        (elim_setSigma x7 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)
                      (app
                        (elim_setSigma x8 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)) x9 \
                   forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma (app x6 x7) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma (app x6 x8) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
         (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)) int
"
"4____[+[Begin 
ofType
 (setSigma
   (setPi
     (setSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \
     setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x3 \
   forall
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    forall
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)
         (app
           (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)) x6 \
      forall singleton x7 \
       propId singleton
        (app
          (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
            x8 \ x9 \ x8) x7)
        (app
          (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
            x8 \ x9 \ x8) x7)) _ int
"
"5_____[+[Begin 
ofType
 (setPi
   (setSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \
   setSigma (setPi singleton x4 \ singleton) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X650^3 int
"
"6______[+[Begin 
ofType (setPi singleton x3 \ singleton) X651^3 int
"
"7_______[+[Begin 
pts_fun set set X651^3
"
"8________[+[Begin 
pts_leq set set
"
"8--------]-]Success  
pts_leq set set
"
"8________[+[Begin 
pts_leq set set
"
"8--------]-]Success  
pts_leq set set
"
"7-------]-]Success  
pts_fun set set set
"
"6------]-]Success  
ofType (setPi singleton x3 \ singleton) set int
"
"6______[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ singleton) =>
  ofType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) X652^3 int
"
"7_______[+[Begin 
ofType singleton X653^4 int
"
"7-------]-]Success  
ofType singleton set int
"
"7_______[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (ofType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) X654^4 int)
"
"8________[+[Begin 
ofType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \
    propId singleton (app x3 x4) (app x3 x5)) X654^4 int
"
"9_________[+[Begin 
ofType singleton X655^5 int
"
"9---------]-]Success  
ofType singleton set int
"
"9_________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) X656^5 int)
"
"10__________[+[Begin 
ofType
 (forall (propId singleton x4 x5) x6 \
   propId singleton (app x3 x4) (app x3 x5)) X656^5 int
"
"11___________[+[Begin 
ofType (propId singleton x4 x5) X657^6 int
"
"12____________[+[Begin 
of x4 X658^6 int
"
"12------------]-]Success  
of x4 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
of x5 X659^6 int
"
"12------------]-]Success  
of x5 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
(pts_leq set set),
(X657^6 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"11-----------]-]Success  
ofType (propId singleton x4 x5) props int
"
"11___________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (ofType (propId singleton (app x3 x4) (app x3 x5)) X660^6 int)
"
"12____________[+[Begin 
ofType (propId singleton (app x3 x4) (app x3 x5)) X660^6 int
"
"13_____________[+[Begin 
of (app x3 x4) X661^7 int
"
"14______________[+[Begin 
of x3 (setPi X662^7 X663^7) int
"
"14--------------]-]Success  
of x3 (setPi singleton x7 \ singleton) int
"
"14______________[+[Begin 
isa x4 singleton int
"
"15_______________[+[Begin 
of x4 X664^7 int
"
"15---------------]-]Success  
of x4 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
isa x4 singleton int
"
"13-------------]-]Success  
of (app x3 x4) singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
of (app x3 x5) X665^7 int
"
"14______________[+[Begin 
of x3 (setPi X666^7 X667^7) int
"
"14--------------]-]Success  
of x3 (setPi singleton x7 \ singleton) int
"
"14______________[+[Begin 
isa x5 singleton int
"
"15_______________[+[Begin 
of x5 X668^7 int
"
"15---------------]-]Success  
of x5 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
isa x5 singleton int
"
"13-------------]-]Success  
of (app x3 x5) singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
(pts_leq set set),
(X660^6 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"12------------]-]Success  
ofType (propId singleton (app x3 x4) (app x3 x5)) props int
"
"11-----------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (ofType (propId singleton (app x3 x4) (app x3 x5)) props int)
"
"11___________[+[Begin 
pts_for props props X656^5
"
"11-----------]-]Success  
pts_for props props props
"
"10----------]-]Success  
ofType
 (forall (propId singleton x4 x5) x6 \
   propId singleton (app x3 x4) (app x3 x5)) props int
"
"9---------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) props int)
"
"9_________[+[Begin 
pts_for set props X654^4
"
"9---------]-]Success  
pts_for set props props
"
"8--------]-]Success  
ofType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \
    propId singleton (app x3 x4) (app x3 x5)) props int
"
"7-------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (ofType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) props int)
"
"7_______[+[Begin 
pts_for set props X652^3
"
"7-------]-]Success  
pts_for set props props
"
"6------]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ singleton) =>
  ofType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) props int
"
"6______[+[Begin 
pts_leq set set
"
"6------]-]Success  
pts_leq set set
"
"6______[+[Begin 
pts_leq props set
"
"6------]-]Success  
pts_leq props set
"
"6______[+[Begin 
ofType (setPi singleton x4 \ singleton) X669^4 int
"
"7_______[+[Begin 
pts_fun set set X669^4
"
"8________[+[Begin 
pts_leq set set
"
"8--------]-]Success  
pts_leq set set
"
"8________[+[Begin 
pts_leq set set
"
"8--------]-]Success  
pts_leq set set
"
"7-------]-]Success  
pts_fun set set set
"
"6------]-]Success  
ofType (setPi singleton x4 \ singleton) set int
"
"6______[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ singleton) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X670^4 int
"
"7_______[+[Begin 
ofType singleton X671^5 int
"
"7-------]-]Success  
ofType singleton set int
"
"7_______[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) X672^5 int)
"
"8________[+[Begin 
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \
    propId singleton (app x4 x5) (app x4 x6)) X672^5 int
"
"9_________[+[Begin 
ofType singleton X673^6 int
"
"9---------]-]Success  
ofType singleton set int
"
"9_________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X674^6 int)
"
"10__________[+[Begin 
ofType
 (forall (propId singleton x5 x6) x7 \
   propId singleton (app x4 x5) (app x4 x6)) X674^6 int
"
"11___________[+[Begin 
ofType (propId singleton x5 x6) X675^7 int
"
"12____________[+[Begin 
of x5 X676^7 int
"
"12------------]-]Success  
of x5 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
of x6 X677^7 int
"
"12------------]-]Success  
of x6 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
(pts_leq set set),
(X675^7 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"11-----------]-]Success  
ofType (propId singleton x5 x6) props int
"
"11___________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton (app x4 x5) (app x4 x6)) X678^7 int)
"
"12____________[+[Begin 
ofType (propId singleton (app x4 x5) (app x4 x6)) X678^7 int
"
"13_____________[+[Begin 
of (app x4 x5) X679^8 int
"
"14______________[+[Begin 
of x4 (setPi X680^8 X681^8) int
"
"14--------------]-]Success  
of x4 (setPi singleton x8 \ singleton) int
"
"14______________[+[Begin 
isa x5 singleton int
"
"15_______________[+[Begin 
of x5 X682^8 int
"
"15---------------]-]Success  
of x5 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
isa x5 singleton int
"
"13-------------]-]Success  
of (app x4 x5) singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
of (app x4 x6) X683^8 int
"
"14______________[+[Begin 
of x4 (setPi X684^8 X685^8) int
"
"14--------------]-]Success  
of x4 (setPi singleton x8 \ singleton) int
"
"14______________[+[Begin 
isa x6 singleton int
"
"15_______________[+[Begin 
of x6 X686^8 int
"
"15---------------]-]Success  
of x6 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
isa x6 singleton int
"
"13-------------]-]Success  
of (app x4 x6) singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
(pts_leq set set),
(X678^7 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"12------------]-]Success  
ofType (propId singleton (app x4 x5) (app x4 x6)) props int
"
"11-----------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton (app x4 x5) (app x4 x6)) props int)
"
"11___________[+[Begin 
pts_for props props X674^6
"
"11-----------]-]Success  
pts_for props props props
"
"10----------]-]Success  
ofType
 (forall (propId singleton x5 x6) x7 \
   propId singleton (app x4 x5) (app x4 x6)) props int
"
"9---------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int)
"
"9_________[+[Begin 
pts_for set props X672^5
"
"9---------]-]Success  
pts_for set props props
"
"8--------]-]Success  
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \
    propId singleton (app x4 x5) (app x4 x6)) props int
"
"7-------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) props int)
"
"7_______[+[Begin 
pts_for set props X670^4
"
"7-------]-]Success  
pts_for set props props
"
"6------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ singleton) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int
"
"6______[+[Begin 
pts_leq set set
"
"6------]-]Success  
pts_leq set set
"
"6______[+[Begin 
pts_leq props set
"
"6------]-]Success  
pts_leq props set
"
"6______[+[Begin 
pts_fun set set X650^3
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"6------]-]Success  
pts_fun set set set
"
"5-----]-]Success  
ofType
 (setPi
   (setSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \
   setSigma (setPi singleton x4 \ singleton) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) set int
"
"5_____[+[Begin 
pi x3 \
 locDecl x3
  (setPi
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    setSigma (setPi singleton x5 \ singleton) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \
        propId singleton (app x5 x6) (app x5 x7)) =>
  ofType
   (forall
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (setSigma (setPi singleton x5 \ singleton) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)
          (app
            (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)) x6 \
       forall singleton x7 \
        propId singleton
         (app
           (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)
         (app
           (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)) X687^3 int
"
"6______[+[Begin 
ofType
 (setSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) X688^4 int
"
"7_______[+[Begin 
ofType (setPi singleton x4 \ singleton) X689^4 int
"
"8________[+[Begin 
pts_fun set set X689^4
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"8--------]-]Success  
pts_fun set set set
"
"7-------]-]Success  
ofType (setPi singleton x4 \ singleton) set int
"
"7_______[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ singleton) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X690^4 int
"
"8________[+[Begin 
ofType singleton X691^5 int
"
"8--------]-]Success  
ofType singleton set int
"
"8________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) X692^5 int)
"
"9_________[+[Begin 
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \
    propId singleton (app x4 x5) (app x4 x6)) X692^5 int
"
"10__________[+[Begin 
ofType singleton X693^6 int
"
"10----------]-]Success  
ofType singleton set int
"
"10__________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X694^6 int)
"
"11___________[+[Begin 
ofType
 (forall (propId singleton x5 x6) x7 \
   propId singleton (app x4 x5) (app x4 x6)) X694^6 int
"
"12____________[+[Begin 
ofType (propId singleton x5 x6) X695^7 int
"
"13_____________[+[Begin 
of x5 X696^7 int
"
"13-------------]-]Success  
of x5 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
of x6 X697^7 int
"
"13-------------]-]Success  
of x6 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
(pts_leq set set),
(X695^7 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"12------------]-]Success  
ofType (propId singleton x5 x6) props int
"
"12____________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton (app x4 x5) (app x4 x6)) X698^7 int)
"
"13_____________[+[Begin 
ofType (propId singleton (app x4 x5) (app x4 x6)) X698^7 int
"
"14______________[+[Begin 
of (app x4 x5) X699^8 int
"
"15_______________[+[Begin 
of x4 (setPi X700^8 X701^8) int
"
"15---------------]-]Success  
of x4 (setPi singleton x8 \ singleton) int
"
"15_______________[+[Begin 
isa x5 singleton int
"
"16________________[+[Begin 
of x5 X702^8 int
"
"16----------------]-]Success  
of x5 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
isa x5 singleton int
"
"14--------------]-]Success  
of (app x4 x5) singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of (app x4 x6) X703^8 int
"
"15_______________[+[Begin 
of x4 (setPi X704^8 X705^8) int
"
"15---------------]-]Success  
of x4 (setPi singleton x8 \ singleton) int
"
"15_______________[+[Begin 
isa x6 singleton int
"
"16________________[+[Begin 
of x6 X706^8 int
"
"16----------------]-]Success  
of x6 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
isa x6 singleton int
"
"14--------------]-]Success  
of (app x4 x6) singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X698^7 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"13-------------]-]Success  
ofType (propId singleton (app x4 x5) (app x4 x6)) props int
"
"12------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton (app x4 x5) (app x4 x6)) props int)
"
"12____________[+[Begin 
pts_for props props X694^6
"
"12------------]-]Success  
pts_for props props props
"
"11-----------]-]Success  
ofType
 (forall (propId singleton x5 x6) x7 \
   propId singleton (app x4 x5) (app x4 x6)) props int
"
"10----------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int)
"
"10__________[+[Begin 
pts_for set props X692^5
"
"10----------]-]Success  
pts_for set props props
"
"9---------]-]Success  
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \
    propId singleton (app x4 x5) (app x4 x6)) props int
"
"8--------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) props int)
"
"8________[+[Begin 
pts_for set props X690^4
"
"8--------]-]Success  
pts_for set props props
"
"7-------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ singleton) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq props set
"
"7-------]-]Success  
pts_leq props set
"
"6------]-]Success  
ofType
 (setSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) set int
"
"6______[+[Begin 
pi x4 \
 locDecl x4
  (setSigma (setPi singleton x5 \ singleton) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)
           (app
             (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)) x6 \
        forall singleton x7 \
         propId singleton
          (app
            (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)
          (app
            (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)) X707^4 int)
"
"7_______[+[Begin 
ofType
 (forall
   (setSigma (setPi singleton x5 \ singleton) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \
   forall
    (forall singleton x6 \
      propId singleton
       (app
         (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
         x6)
       (app
         (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
         x6)) x6 \
    forall singleton x7 \
     propId singleton
      (app
        (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \
          x9 \ x8) x7)
      (app
        (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \
          x9 \ x8) x7)) X707^4 int
"
"8________[+[Begin 
ofType
 (setSigma (setPi singleton x5 \ singleton) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \
      propId singleton (app x5 x6) (app x5 x7)) X708^5 int
"
"9_________[+[Begin 
ofType (setPi singleton x5 \ singleton) X709^5 int
"
"10__________[+[Begin 
pts_fun set set X709^5
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"10----------]-]Success  
pts_fun set set set
"
"9---------]-]Success  
ofType (setPi singleton x5 \ singleton) set int
"
"9_________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ singleton) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) X710^5 int
"
"10__________[+[Begin 
ofType singleton X711^6 int
"
"10----------]-]Success  
ofType singleton set int
"
"10__________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \
        propId singleton (app x5 x6) (app x5 x7)) X712^6 int)
"
"11___________[+[Begin 
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \
    propId singleton (app x5 x6) (app x5 x7)) X712^6 int
"
"12____________[+[Begin 
ofType singleton X713^7 int
"
"12------------]-]Success  
ofType singleton set int
"
"12____________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) X714^7 int)
"
"13_____________[+[Begin 
ofType
 (forall (propId singleton x6 x7) x8 \
   propId singleton (app x5 x6) (app x5 x7)) X714^7 int
"
"14______________[+[Begin 
ofType (propId singleton x6 x7) X715^8 int
"
"15_______________[+[Begin 
of x6 X716^8 int
"
"15---------------]-]Success  
of x6 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of x7 X717^8 int
"
"15---------------]-]Success  
of x7 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X715^8 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"14--------------]-]Success  
ofType (propId singleton x6 x7) props int
"
"14______________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton (app x5 x6) (app x5 x7)) X718^8 int)
"
"15_______________[+[Begin 
ofType (propId singleton (app x5 x6) (app x5 x7)) X718^8 int
"
"16________________[+[Begin 
of (app x5 x6) X719^9 int
"
"17_________________[+[Begin 
of x5 (setPi X720^9 X721^9) int
"
"17-----------------]-]Success  
of x5 (setPi singleton x9 \ singleton) int
"
"17_________________[+[Begin 
isa x6 singleton int
"
"18__________________[+[Begin 
of x6 X722^9 int
"
"18------------------]-]Success  
of x6 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"17-----------------]-]Success  
isa x6 singleton int
"
"16----------------]-]Success  
of (app x5 x6) singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of (app x5 x7) X723^9 int
"
"17_________________[+[Begin 
of x5 (setPi X724^9 X725^9) int
"
"17-----------------]-]Success  
of x5 (setPi singleton x9 \ singleton) int
"
"17_________________[+[Begin 
isa x7 singleton int
"
"18__________________[+[Begin 
of x7 X726^9 int
"
"18------------------]-]Success  
of x7 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"17-----------------]-]Success  
isa x7 singleton int
"
"16----------------]-]Success  
of (app x5 x7) singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X718^8 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"15---------------]-]Success  
ofType (propId singleton (app x5 x6) (app x5 x7)) props int
"
"14--------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton (app x5 x6) (app x5 x7)) props int)
"
"14______________[+[Begin 
pts_for props props X714^7
"
"14--------------]-]Success  
pts_for props props props
"
"13-------------]-]Success  
ofType
 (forall (propId singleton x6 x7) x8 \
   propId singleton (app x5 x6) (app x5 x7)) props int
"
"12------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) props int)
"
"12____________[+[Begin 
pts_for set props X712^6
"
"12------------]-]Success  
pts_for set props props
"
"11-----------]-]Success  
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \
    propId singleton (app x5 x6) (app x5 x7)) props int
"
"10----------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \
        propId singleton (app x5 x6) (app x5 x7)) props int)
"
"10__________[+[Begin 
pts_for set props X710^5
"
"10----------]-]Success  
pts_for set props props
"
"9---------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ singleton) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) props int
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"9_________[+[Begin 
pts_leq props set
"
"9---------]-]Success  
pts_leq props set
"
"8--------]-]Success  
ofType
 (setSigma (setPi singleton x5 \ singleton) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \
      propId singleton (app x5 x6) (app x5 x7)) set int
"
"8________[+[Begin 
pi x5 \
 locDecl x5
  (setSigma (setPi singleton x6 \ singleton) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \
       propId singleton (app x6 x7) (app x6 x8)) =>
  spy
   (ofType
     (forall
       (forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)
          (app
            (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)) x6 \
       forall singleton x7 \
        propId singleton
         (app
           (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)
         (app
           (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)) X727^5 int)
"
"9_________[+[Begin 
ofType
 (forall
   (forall singleton x6 \
     propId singleton
      (app
        (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
        x6)
      (app
        (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
        x6)) x6 \
   forall singleton x7 \
    propId singleton
     (app
       (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \
         x9 \ x8) x7)
     (app
       (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \
         x9 \ x8) x7)) X727^5 int
"
"10__________[+[Begin 
ofType
 (forall singleton x6 \
   propId singleton
    (app
      (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
      x6)
    (app
      (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
      x6)) X728^6 int
"
"11___________[+[Begin 
ofType singleton X729^6 int
"
"11-----------]-]Success  
ofType singleton set int
"
"11___________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (propId singleton
       (app
         (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
         x6)
       (app
         (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
         x6)) X730^6 int)
"
"12____________[+[Begin 
ofType
 (propId singleton
   (app (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
     x6)
   (app (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
     x6)) X730^6 int
"
"13_____________[+[Begin 
of
 (app (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
   x6) X731^7 int
"
"14______________[+[Begin 
of (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
 (setPi X732^7 X733^7) int
"
"15_______________[+[Begin 
of x4 (setSigma X734^7 X735^7) int
"
"15---------------]-]Success  
of x4
 (setSigma (setPi singleton x7 \ singleton) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \
      propId singleton (app x7 x8) (app x7 x9)) int
"
"15_______________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ singleton) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \
       propId singleton (app x8 x9) (app x8 x10)) =>
  ofType (setPi singleton x8 \ singleton) _ int
"
"16________________[+[Begin 
pts_fun set set X736^8
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"16----------------]-]Success  
pts_fun set set set
"
"15---------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ singleton) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \
       propId singleton (app x8 x9) (app x8 x10)) =>
  ofType (setPi singleton x8 \ singleton) _ int
"
"15_______________[+[Begin 
pi x7 \
 pi x8 \
  locDecl x7 (setPi singleton x9 \ singleton) =>
   locDecl x8
    (forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \
        propId singleton (app x7 x9) (app x7 x10)) =>
    isa x7 (setPi singleton x9 \ singleton) int
"
"16________________[+[Begin 
of x7 X737^9 int
"
"16----------------]-]Success  
of x7 (setPi singleton x9 \ singleton) int
"
"16________________[+[Begin 
conv (setPi singleton x9 \ singleton) (setPi singleton x9 \ singleton)
"
"16----------------]-]Success  
conv (setPi singleton x9 \ singleton) (setPi singleton x9 \ singleton)
"
"15---------------]-]Success  
pi x7 \
 pi x8 \
  locDecl x7 (setPi singleton x9 \ singleton) =>
   locDecl x8
    (forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \
        propId singleton (app x7 x9) (app x7 x10)) =>
    isa x7 (setPi singleton x9 \ singleton) int
"
"14--------------]-]Success  
of (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
 (setPi singleton x7 \ singleton) int
"
"14______________[+[Begin 
isa x6 singleton int
"
"15_______________[+[Begin 
of x6 X738^7 int
"
"15---------------]-]Success  
of x6 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
isa x6 singleton int
"
"13-------------]-]Success  
of
 (app (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
   x6) singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
of
 (app (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
   x6) X739^7 int
"
"14______________[+[Begin 
of (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
 (setPi X740^7 X741^7) int
"
"15_______________[+[Begin 
of x5 (setSigma X742^7 X743^7) int
"
"15---------------]-]Success  
of x5
 (setSigma (setPi singleton x7 \ singleton) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \
      propId singleton (app x7 x8) (app x7 x9)) int
"
"15_______________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ singleton) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \
       propId singleton (app x8 x9) (app x8 x10)) =>
  ofType (setPi singleton x8 \ singleton) _ int
"
"16________________[+[Begin 
pts_fun set set X744^8
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"16----------------]-]Success  
pts_fun set set set
"
"15---------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ singleton) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \
       propId singleton (app x8 x9) (app x8 x10)) =>
  ofType (setPi singleton x8 \ singleton) _ int
"
"15_______________[+[Begin 
pi x7 \
 pi x8 \
  locDecl x7 (setPi singleton x9 \ singleton) =>
   locDecl x8
    (forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \
        propId singleton (app x7 x9) (app x7 x10)) =>
    isa x7 (setPi singleton x9 \ singleton) int
"
"16________________[+[Begin 
of x7 X745^9 int
"
"16----------------]-]Success  
of x7 (setPi singleton x9 \ singleton) int
"
"16________________[+[Begin 
conv (setPi singleton x9 \ singleton) (setPi singleton x9 \ singleton)
"
"16----------------]-]Success  
conv (setPi singleton x9 \ singleton) (setPi singleton x9 \ singleton)
"
"15---------------]-]Success  
pi x7 \
 pi x8 \
  locDecl x7 (setPi singleton x9 \ singleton) =>
   locDecl x8
    (forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \
        propId singleton (app x7 x9) (app x7 x10)) =>
    isa x7 (setPi singleton x9 \ singleton) int
"
"14--------------]-]Success  
of (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
 (setPi singleton x7 \ singleton) int
"
"14______________[+[Begin 
isa x6 singleton int
"
"15_______________[+[Begin 
of x6 X746^7 int
"
"15---------------]-]Success  
of x6 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
isa x6 singleton int
"
"13-------------]-]Success  
of
 (app (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
   x6) singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
(pts_leq set set),
(X730^6 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"12------------]-]Success  
ofType
 (propId singleton
   (app (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
     x6)
   (app (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
     x6)) props int
"
"11-----------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (propId singleton
       (app
         (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
         x6)
       (app
         (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
         x6)) props int)
"
"11___________[+[Begin 
pts_for set props X728^6
"
"11-----------]-]Success  
pts_for set props props
"
"10----------]-]Success  
ofType
 (forall singleton x6 \
   propId singleton
    (app
      (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
      x6)
    (app
      (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
      x6)) props int
"
"10__________[+[Begin 
pi x6 \
 locDecl x6
  (forall singleton x7 \
    propId singleton
     (app
       (elim_setSigma x4 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \ x8)
       x7)
     (app
       (elim_setSigma x5 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \ x8)
       x7)) =>
  spy
   (ofType
     (forall singleton x7 \
       propId singleton
        (app
          (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
            x8 \ x9 \ x8) x7)
        (app
          (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
            x8 \ x9 \ x8) x7)) X747^6 int)
"
"11___________[+[Begin 
ofType
 (forall singleton x7 \
   propId singleton
    (app
      (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \
        x9 \ x8) x7)
    (app
      (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \
        x9 \ x8) x7)) X747^6 int
"
"12____________[+[Begin 
ofType singleton X748^7 int
"
"12------------]-]Success  
ofType singleton set int
"
"12____________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (propId singleton
       (app
         (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
           x8 \ x9 \ x8) x7)
       (app
         (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
           x8 \ x9 \ x8) x7)) X749^7 int)
"
"13_____________[+[Begin 
ofType
 (propId singleton
   (app
     (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \
       x9 \ x8) x7)
   (app
     (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \
       x9 \ x8) x7)) X749^7 int
"
"14______________[+[Begin 
of
 (app
   (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
     x8) x7) X750^8 int
"
"15_______________[+[Begin 
of
 (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
   x8) (setPi X751^8 X752^8) int
"
"16________________[+[Begin 
of (app x3 x4) (setSigma X753^8 X754^8) int
"
"17_________________[+[Begin 
of x3 (setPi X755^8 X756^8) int
"
"17-----------------]-]Success  
of x3
 (setPi
   (setSigma (setPi singleton x8 \ singleton) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \
        propId singleton (app x8 x9) (app x8 x10)) x8 \
   setSigma (setPi singleton x9 \ singleton) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \
       propId singleton (app x9 x10) (app x9 x11)) int
"
"17_________________[+[Begin 
isa x4
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10)) int
"
"18__________________[+[Begin 
of x4 X757^8 int
"
"18------------------]-]Success  
of x4
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10)) int
"
"18__________________[+[Begin 
conv
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10))
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10))
"
"18------------------]-]Success  
conv
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10))
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10))
"
"17-----------------]-]Success  
isa x4
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10)) int
"
"16----------------]-]Success  
of (app x3 x4)
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10)) int
"
"16________________[+[Begin 
pi x8 \
 locDecl x8
  (setSigma (setPi singleton x9 \ singleton) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \
       propId singleton (app x9 x10) (app x9 x11)) =>
  ofType (setPi singleton x9 \ singleton) _ int
"
"17_________________[+[Begin 
pts_fun set set X758^9
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"17-----------------]-]Success  
pts_fun set set set
"
"16----------------]-]Success  
pi x8 \
 locDecl x8
  (setSigma (setPi singleton x9 \ singleton) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \
       propId singleton (app x9 x10) (app x9 x11)) =>
  ofType (setPi singleton x9 \ singleton) _ int
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ singleton) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \
        propId singleton (app x8 x10) (app x8 x11)) =>
    isa x8 (setPi singleton x10 \ singleton) int
"
"17_________________[+[Begin 
of x8 X759^10 int
"
"17-----------------]-]Success  
of x8 (setPi singleton x10 \ singleton) int
"
"17_________________[+[Begin 
conv (setPi singleton x10 \ singleton) (setPi singleton x10 \ singleton)
"
"17-----------------]-]Success  
conv (setPi singleton x10 \ singleton) (setPi singleton x10 \ singleton)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ singleton) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \
        propId singleton (app x8 x10) (app x8 x11)) =>
    isa x8 (setPi singleton x10 \ singleton) int
"
"15---------------]-]Success  
of
 (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
   x8) (setPi singleton x8 \ singleton) int
"
"15_______________[+[Begin 
isa x7 singleton int
"
"16________________[+[Begin 
of x7 X760^8 int
"
"16----------------]-]Success  
of x7 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
isa x7 singleton int
"
"14--------------]-]Success  
of
 (app
   (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
     x8) x7) singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of
 (app
   (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
     x8) x7) X761^8 int
"
"15_______________[+[Begin 
of
 (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
   x8) (setPi X762^8 X763^8) int
"
"16________________[+[Begin 
of (app x3 x5) (setSigma X764^8 X765^8) int
"
"17_________________[+[Begin 
of x3 (setPi X766^8 X767^8) int
"
"17-----------------]-]Success  
of x3
 (setPi
   (setSigma (setPi singleton x8 \ singleton) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \
        propId singleton (app x8 x9) (app x8 x10)) x8 \
   setSigma (setPi singleton x9 \ singleton) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \
       propId singleton (app x9 x10) (app x9 x11)) int
"
"17_________________[+[Begin 
isa x5
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10)) int
"
"18__________________[+[Begin 
of x5 X768^8 int
"
"18------------------]-]Success  
of x5
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10)) int
"
"18__________________[+[Begin 
conv
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10))
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10))
"
"18------------------]-]Success  
conv
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10))
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10))
"
"17-----------------]-]Success  
isa x5
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10)) int
"
"16----------------]-]Success  
of (app x3 x5)
 (setSigma (setPi singleton x8 \ singleton) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \
      propId singleton (app x8 x9) (app x8 x10)) int
"
"16________________[+[Begin 
pi x8 \
 locDecl x8
  (setSigma (setPi singleton x9 \ singleton) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \
       propId singleton (app x9 x10) (app x9 x11)) =>
  ofType (setPi singleton x9 \ singleton) _ int
"
"17_________________[+[Begin 
pts_fun set set X769^9
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"17-----------------]-]Success  
pts_fun set set set
"
"16----------------]-]Success  
pi x8 \
 locDecl x8
  (setSigma (setPi singleton x9 \ singleton) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \
       propId singleton (app x9 x10) (app x9 x11)) =>
  ofType (setPi singleton x9 \ singleton) _ int
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ singleton) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \
        propId singleton (app x8 x10) (app x8 x11)) =>
    isa x8 (setPi singleton x10 \ singleton) int
"
"17_________________[+[Begin 
of x8 X770^10 int
"
"17-----------------]-]Success  
of x8 (setPi singleton x10 \ singleton) int
"
"17_________________[+[Begin 
conv (setPi singleton x10 \ singleton) (setPi singleton x10 \ singleton)
"
"17-----------------]-]Success  
conv (setPi singleton x10 \ singleton) (setPi singleton x10 \ singleton)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ singleton) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \
        propId singleton (app x8 x10) (app x8 x11)) =>
    isa x8 (setPi singleton x10 \ singleton) int
"
"15---------------]-]Success  
of
 (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
   x8) (setPi singleton x8 \ singleton) int
"
"15_______________[+[Begin 
isa x7 singleton int
"
"16________________[+[Begin 
of x7 X771^8 int
"
"16----------------]-]Success  
of x7 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
isa x7 singleton int
"
"14--------------]-]Success  
of
 (app
   (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
     x8) x7) singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X749^7 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"13-------------]-]Success  
ofType
 (propId singleton
   (app
     (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \
       x9 \ x8) x7)
   (app
     (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \
       x9 \ x8) x7)) props int
"
"12------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (propId singleton
       (app
         (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
           x8 \ x9 \ x8) x7)
       (app
         (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
           x8 \ x9 \ x8) x7)) props int)
"
"12____________[+[Begin 
pts_for set props X747^6
"
"12------------]-]Success  
pts_for set props props
"
"11-----------]-]Success  
ofType
 (forall singleton x7 \
   propId singleton
    (app
      (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \
        x9 \ x8) x7)
    (app
      (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \
        x9 \ x8) x7)) props int
"
"10----------]-]Success  
pi x6 \
 locDecl x6
  (forall singleton x7 \
    propId singleton
     (app
       (elim_setSigma x4 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \ x8)
       x7)
     (app
       (elim_setSigma x5 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \ x8)
       x7)) =>
  spy
   (ofType
     (forall singleton x7 \
       propId singleton
        (app
          (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
            x8 \ x9 \ x8) x7)
        (app
          (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
            x8 \ x9 \ x8) x7)) props int)
"
"10__________[+[Begin 
pts_for props props X727^5
"
"10----------]-]Success  
pts_for props props props
"
"9---------]-]Success  
ofType
 (forall
   (forall singleton x6 \
     propId singleton
      (app
        (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
        x6)
      (app
        (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
        x6)) x6 \
   forall singleton x7 \
    propId singleton
     (app
       (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \
         x9 \ x8) x7)
     (app
       (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \
         x9 \ x8) x7)) props int
"
"8--------]-]Success  
pi x5 \
 locDecl x5
  (setSigma (setPi singleton x6 \ singleton) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \
       propId singleton (app x6 x7) (app x6 x8)) =>
  spy
   (ofType
     (forall
       (forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)
          (app
            (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)) x6 \
       forall singleton x7 \
        propId singleton
         (app
           (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)
         (app
           (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)) props int)
"
"8________[+[Begin 
pts_for set props X707^4
"
"8--------]-]Success  
pts_for set props props
"
"7-------]-]Success  
ofType
 (forall
   (setSigma (setPi singleton x5 \ singleton) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \
   forall
    (forall singleton x6 \
      propId singleton
       (app
         (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
         x6)
       (app
         (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
         x6)) x6 \
    forall singleton x7 \
     propId singleton
      (app
        (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton) x8 \
          x9 \ x8) x7)
      (app
        (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton) x8 \
          x9 \ x8) x7)) props int
"
"6------]-]Success  
pi x4 \
 locDecl x4
  (setSigma (setPi singleton x5 \ singleton) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)
           (app
             (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)) x6 \
        forall singleton x7 \
         propId singleton
          (app
            (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)
          (app
            (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)) props int)
"
"6______[+[Begin 
pts_for set props X687^3
"
"6------]-]Success  
pts_for set props props
"
"5-----]-]Success  
pi x3 \
 locDecl x3
  (setPi
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    setSigma (setPi singleton x5 \ singleton) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \
        propId singleton (app x5 x6) (app x5 x7)) =>
  ofType
   (forall
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (setSigma (setPi singleton x5 \ singleton) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)
          (app
            (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
              x7) x6)) x6 \
       forall singleton x7 \
        propId singleton
         (app
           (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)
         (app
           (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
             x8 \ x9 \ x8) x7)) props int
"
"5_____[+[Begin 
pts_leq set set
"
"5-----]-]Success  
pts_leq set set
"
"5_____[+[Begin 
pts_leq props set
"
"5-----]-]Success  
pts_leq props set
"
"4----]-]Success  
ofType
 (setSigma
   (setPi
     (setSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \
     setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x3 \
   forall
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    forall
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)
         (app
           (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)) x6 \
      forall singleton x7 \
       propId singleton
        (app
          (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
            x8 \ x9 \ x8) x7)
        (app
          (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
            x8 \ x9 \ x8) x7)) _ int
"
"4____[+[Begin 
pi x3 \
 locDecl x3
  (setSigma
    (setPi
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x4 \
    forall
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (setSigma (setPi singleton x6 \ singleton) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (forall singleton x7 \
         propId singleton
          (app
            (elim_setSigma x5 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
              x8) x7)
          (app
            (elim_setSigma x6 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
              x8) x7)) x7 \
       forall singleton x8 \
        propId singleton
         (app
           (elim_setSigma (app x4 x5) (x9 \ setPi singleton x10 \ singleton)
             x9 \ x10 \ x9) x8)
         (app
           (elim_setSigma (app x4 x6) (x9 \ setPi singleton x10 \ singleton)
             x9 \ x10 \ x9) x8)) =>
  isa
   (forall_lam singleton x4 \
     elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
      propId singleton x6 x5) x5 \ id singleton x5)
   (forall singleton x4 \
     propId singleton
      (app
        (elim_setSigma
          (app
            (elim_setSigma x1 (x5 \
              setPi
               (setSigma
                 (setPi
                   (setSigma (setPi singleton x6 \ singleton) x6 \
                     forall singleton x7 \
                      forall singleton x8 \
                       forall (propId singleton x7 x8) x9 \
                        propId singleton (app x6 x7) (app x6 x8)) x6 \
                   setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x6 \
                 forall
                  (setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x7 \
                  forall
                   (setSigma (setPi singleton x8 \ singleton) x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton (app x8 x9) (app x8 x10)) x8 \
                   forall
                    (forall singleton x9 \
                      propId singleton
                       (app
                         (elim_setSigma x7 (x10 \
                           setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                         x9)
                       (app
                         (elim_setSigma x8 (x10 \
                           setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                         x9)) x9 \
                    forall singleton x10 \
                     propId singleton
                      (app
                        (elim_setSigma (app x6 x7) (x11 \
                          setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                        x10)
                      (app
                        (elim_setSigma (app x6 x8) (x11 \
                          setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                        x10)) x6 \
               setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
          (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
      (app
        (elim_setSigma
          (app
            (elim_setSigma x0 (x5 \
              setPi
               (setSigma
                 (setPi
                   (setSigma (setPi singleton x6 \ singleton) x6 \
                     forall singleton x7 \
                      forall singleton x8 \
                       forall (propId singleton x7 x8) x9 \
                        propId singleton (app x6 x7) (app x6 x8)) x6 \
                   setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x6 \
                 forall
                  (setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x7 \
                  forall
                   (setSigma (setPi singleton x8 \ singleton) x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton (app x8 x9) (app x8 x10)) x8 \
                   forall
                    (forall singleton x9 \
                      propId singleton
                       (app
                         (elim_setSigma x7 (x10 \
                           setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                         x9)
                       (app
                         (elim_setSigma x8 (x10 \
                           setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                         x9)) x9 \
                    forall singleton x10 \
                     propId singleton
                      (app
                        (elim_setSigma (app x6 x7) (x11 \
                          setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                        x10)
                      (app
                        (elim_setSigma (app x6 x8) (x11 \
                          setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                        x10)) x6 \
               setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
          (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)) int
"
"5_____[+[Begin 
of
 (forall_lam singleton x4 \
   elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
    propId singleton x6 x5) x5 \ id singleton x5) X772^4 int
"
"6______[+[Begin 
ofType singleton _ int
"
"6------]-]Success  
ofType singleton _ int
"
"6______[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  isa
   (elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
     propId singleton x6 x5) x5 \ id singleton x5) (X773^4 x4) int
"
"7_______[+[Begin 
of
 (elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
   propId singleton x6 x5) x5 \ id singleton x5) X774^5 int
"
"8________[+[Begin 
of (forall_app (forall_app x2 x3) x4) (propId X775^5 X776^5 X777^5) int
"
"9_________[+[Begin 
of (forall_app x2 x3) (forall X778^5 X779^5) int
"
"10__________[+[Begin 
of x2 (forall X780^5 X781^5) int
"
"10----------]-]Success  
of x2
 (forall
   (setSigma
     (setPi
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       setSigma (setPi singleton x6 \ singleton) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x5 \
     forall
      (setSigma (setPi singleton x6 \ singleton) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (setSigma (setPi singleton x7 \ singleton) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \
            propId singleton (app x7 x8) (app x7 x9)) x7 \
       forall
        (forall singleton x8 \
          propId singleton
           (app
             (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton) x9 \
               x10 \ x9) x8)
           (app
             (elim_setSigma x7 (x9 \ setPi singleton x10 \ singleton) x9 \
               x10 \ x9) x8)) x8 \
        forall singleton x9 \
         propId singleton
          (app
            (elim_setSigma (app x5 x6) (x10 \
              setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
          (app
            (elim_setSigma (app x5 x7) (x10 \
              setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)) x5 \
   forall singleton x6 \
    propId singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x7 \
             setPi
              (setSigma
                (setPi
                  (setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x8 \
                  setSigma (setPi singleton x9 \ singleton) x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton (app x9 x10) (app x9 x11)) x8 \
                forall
                 (setSigma (setPi singleton x9 \ singleton) x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton (app x9 x10) (app x9 x11)) x9 \
                 forall
                  (setSigma (setPi singleton x10 \ singleton) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton (app x10 x11) (app x10 x12)) x10 \
                  forall
                   (forall singleton x11 \
                     propId singleton
                      (app
                        (elim_setSigma x9 (x12 \
                          setPi singleton x13 \ singleton) x12 \ x13 \ x12)
                        x11)
                      (app
                        (elim_setSigma x10 (x12 \
                          setPi singleton x13 \ singleton) x12 \ x13 \ x12)
                        x11)) x11 \
                   forall singleton x12 \
                    propId singleton
                     (app
                       (elim_setSigma (app x8 x9) (x13 \
                         setPi singleton x14 \ singleton) x13 \ x14 \ x13)
                       x12)
                     (app
                       (elim_setSigma (app x8 x10) (x13 \
                         setPi singleton x14 \ singleton) x13 \ x14 \ x13)
                       x12)) x8 \
              setSigma (setPi singleton x9 \ singleton) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton (app x9 x10) (app x9 x11)) x7 \ x8 \ x7)
           x5) (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)
     (app
       (elim_setSigma
         (app
           (elim_setSigma x1 (x7 \
             setPi
              (setSigma
                (setPi
                  (setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x8 \
                  setSigma (setPi singleton x9 \ singleton) x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton (app x9 x10) (app x9 x11)) x8 \
                forall
                 (setSigma (setPi singleton x9 \ singleton) x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton (app x9 x10) (app x9 x11)) x9 \
                 forall
                  (setSigma (setPi singleton x10 \ singleton) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton (app x10 x11) (app x10 x12)) x10 \
                  forall
                   (forall singleton x11 \
                     propId singleton
                      (app
                        (elim_setSigma x9 (x12 \
                          setPi singleton x13 \ singleton) x12 \ x13 \ x12)
                        x11)
                      (app
                        (elim_setSigma x10 (x12 \
                          setPi singleton x13 \ singleton) x12 \ x13 \ x12)
                        x11)) x11 \
                   forall singleton x12 \
                    propId singleton
                     (app
                       (elim_setSigma (app x8 x9) (x13 \
                         setPi singleton x14 \ singleton) x13 \ x14 \ x13)
                       x12)
                     (app
                       (elim_setSigma (app x8 x10) (x13 \
                         setPi singleton x14 \ singleton) x13 \ x14 \ x13)
                       x12)) x8 \
              setSigma (setPi singleton x9 \ singleton) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton (app x9 x10) (app x9 x11)) x7 \ x8 \ x7)
           x5) (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)) int
"
"10__________[+[Begin 
isa x3
 (setSigma
   (setPi
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x5 \
   forall
    (setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x6 \
    forall
     (setSigma (setPi singleton x7 \ singleton) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x7 \
     forall
      (forall singleton x8 \
        propId singleton
         (app
           (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)
         (app
           (elim_setSigma x7 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)) x8 \
      forall singleton x9 \
       propId singleton
        (app
          (elim_setSigma (app x5 x6) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9)
        (app
          (elim_setSigma (app x5 x7) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9)) int
"
"11___________[+[Begin 
of x3 X782^5 int
"
"11-----------]-]Success  
of x3
 (setSigma
   (setPi
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x5 \
   forall
    (setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x6 \
    forall
     (setSigma (setPi singleton x7 \ singleton) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x7 \
     forall
      (forall singleton x8 \
        propId singleton
         (app
           (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)
         (app
           (elim_setSigma x7 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)) x8 \
      forall singleton x9 \
       propId singleton
        (app
          (elim_setSigma (app x5 x6) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9)
        (app
          (elim_setSigma (app x5 x7) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9)) int
"
"11___________[+[Begin 
conv
 (setSigma
   (setPi
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x5 \
   forall
    (setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x6 \
    forall
     (setSigma (setPi singleton x7 \ singleton) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x7 \
     forall
      (forall singleton x8 \
        propId singleton
         (app
           (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)
         (app
           (elim_setSigma x7 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)) x8 \
      forall singleton x9 \
       propId singleton
        (app
          (elim_setSigma (app x5 x6) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9)
        (app
          (elim_setSigma (app x5 x7) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9))
 (setSigma
   (setPi
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x5 \
   forall
    (setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x6 \
    forall
     (setSigma (setPi singleton x7 \ singleton) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x7 \
     forall
      (forall singleton x8 \
        propId singleton
         (app
           (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)
         (app
           (elim_setSigma x7 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)) x8 \
      forall singleton x9 \
       propId singleton
        (app
          (elim_setSigma (app x5 x6) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9)
        (app
          (elim_setSigma (app x5 x7) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9))
"
"11-----------]-]Success  
conv
 (setSigma
   (setPi
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x5 \
   forall
    (setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x6 \
    forall
     (setSigma (setPi singleton x7 \ singleton) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x7 \
     forall
      (forall singleton x8 \
        propId singleton
         (app
           (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)
         (app
           (elim_setSigma x7 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)) x8 \
      forall singleton x9 \
       propId singleton
        (app
          (elim_setSigma (app x5 x6) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9)
        (app
          (elim_setSigma (app x5 x7) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9))
 (setSigma
   (setPi
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x5 \
   forall
    (setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x6 \
    forall
     (setSigma (setPi singleton x7 \ singleton) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x7 \
     forall
      (forall singleton x8 \
        propId singleton
         (app
           (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)
         (app
           (elim_setSigma x7 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)) x8 \
      forall singleton x9 \
       propId singleton
        (app
          (elim_setSigma (app x5 x6) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9)
        (app
          (elim_setSigma (app x5 x7) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9))
"
"10----------]-]Success  
isa x3
 (setSigma
   (setPi
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x5 \
   forall
    (setSigma (setPi singleton x6 \ singleton) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x6 \
    forall
     (setSigma (setPi singleton x7 \ singleton) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x7 \
     forall
      (forall singleton x8 \
        propId singleton
         (app
           (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)
         (app
           (elim_setSigma x7 (x9 \ setPi singleton x10 \ singleton) x9 \
             x10 \ x9) x8)) x8 \
      forall singleton x9 \
       propId singleton
        (app
          (elim_setSigma (app x5 x6) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9)
        (app
          (elim_setSigma (app x5 x7) (x10 \ setPi singleton x11 \ singleton)
            x10 \ x11 \ x10) x9)) int
"
"10__________[+[Begin 
forall X778^5 X779^5 =
 (forall singleton x5 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x6 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (setSigma (setPi singleton x9 \ singleton) x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton (app x9 x10) (app x9 x11)) x9 \
                 forall
                  (forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma x8 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma x9 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x10 \
                  forall singleton x11 \
                   propId singleton
                    (app
                      (elim_setSigma (app x7 x8) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11)
                    (app
                      (elim_setSigma (app x7 x9) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11))
             x7 \
             setSigma (setPi singleton x8 \ singleton) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6) x3)
        (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x6 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (setSigma (setPi singleton x9 \ singleton) x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton (app x9 x10) (app x9 x11)) x9 \
                 forall
                  (forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma x8 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma x9 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x10 \
                  forall singleton x11 \
                   propId singleton
                    (app
                      (elim_setSigma (app x7 x8) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11)
                    (app
                      (elim_setSigma (app x7 x9) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11))
             x7 \
             setSigma (setPi singleton x8 \ singleton) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6) x3)
        (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5))
"
"10----------]-]Success  
(forall singleton x5 \
  propId singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x6 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                setSigma (setPi singleton x8 \ singleton) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton (app x8 x9) (app x8 x10)) x7 \
              forall
               (setSigma (setPi singleton x8 \ singleton) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton (app x8 x9) (app x8 x10)) x8 \
               forall
                (setSigma (setPi singleton x9 \ singleton) x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton (app x9 x10) (app x9 x11)) x9 \
                forall
                 (forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma x8 (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma x9 (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
                 x10 \
                 forall singleton x11 \
                  propId singleton
                   (app
                     (elim_setSigma (app x7 x8) (x12 \
                       setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11)
                   (app
                     (elim_setSigma (app x7 x9) (x12 \
                       setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11))
            x7 \
            setSigma (setPi singleton x8 \ singleton) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6) x3)
       (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5)
   (app
     (elim_setSigma
       (app
         (elim_setSigma x1 (x6 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                setSigma (setPi singleton x8 \ singleton) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton (app x8 x9) (app x8 x10)) x7 \
              forall
               (setSigma (setPi singleton x8 \ singleton) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton (app x8 x9) (app x8 x10)) x8 \
               forall
                (setSigma (setPi singleton x9 \ singleton) x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton (app x9 x10) (app x9 x11)) x9 \
                forall
                 (forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma x8 (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma x9 (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
                 x10 \
                 forall singleton x11 \
                  propId singleton
                   (app
                     (elim_setSigma (app x7 x8) (x12 \
                       setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11)
                   (app
                     (elim_setSigma (app x7 x9) (x12 \
                       setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11))
            x7 \
            setSigma (setPi singleton x8 \ singleton) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6) x3)
       (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5)) =
 (forall singleton x5 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x6 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (setSigma (setPi singleton x9 \ singleton) x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton (app x9 x10) (app x9 x11)) x9 \
                 forall
                  (forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma x8 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma x9 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x10 \
                  forall singleton x11 \
                   propId singleton
                    (app
                      (elim_setSigma (app x7 x8) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11)
                    (app
                      (elim_setSigma (app x7 x9) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11))
             x7 \
             setSigma (setPi singleton x8 \ singleton) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6) x3)
        (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x6 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (setSigma (setPi singleton x9 \ singleton) x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton (app x9 x10) (app x9 x11)) x9 \
                 forall
                  (forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma x8 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma x9 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x10 \
                  forall singleton x11 \
                   propId singleton
                    (app
                      (elim_setSigma (app x7 x8) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11)
                    (app
                      (elim_setSigma (app x7 x9) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11))
             x7 \
             setSigma (setPi singleton x8 \ singleton) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6) x3)
        (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5))
"
"9---------]-]Success  
of (forall_app x2 x3)
 (forall singleton x5 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x6 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (setSigma (setPi singleton x9 \ singleton) x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton (app x9 x10) (app x9 x11)) x9 \
                 forall
                  (forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma x8 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma x9 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x10 \
                  forall singleton x11 \
                   propId singleton
                    (app
                      (elim_setSigma (app x7 x8) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11)
                    (app
                      (elim_setSigma (app x7 x9) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11))
             x7 \
             setSigma (setPi singleton x8 \ singleton) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6) x3)
        (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x6 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (setSigma (setPi singleton x9 \ singleton) x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton (app x9 x10) (app x9 x11)) x9 \
                 forall
                  (forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma x8 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma x9 (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x10 \
                  forall singleton x11 \
                   propId singleton
                    (app
                      (elim_setSigma (app x7 x8) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11)
                    (app
                      (elim_setSigma (app x7 x9) (x12 \
                        setPi singleton x13 \ singleton) x12 \ x13 \ x12) x11))
             x7 \
             setSigma (setPi singleton x8 \ singleton) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6) x3)
        (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5)) int
"
"9_________[+[Begin 
isa x4 singleton int
"
"10__________[+[Begin 
of x4 X783^5 int
"
"10----------]-]Success  
of x4 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"9---------]-]Success  
isa x4 singleton int
"
"9_________[+[Begin 
propId X775^5 X776^5 X777^5 =
 propId singleton
  (app
    (elim_setSigma
      (app
        (elim_setSigma x0 (x5 \
          setPi
           (setSigma
             (setPi
               (setSigma (setPi singleton x6 \ singleton) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton (app x6 x7) (app x6 x8)) x6 \
               setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x6 \
             forall
              (setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x7 \
              forall
               (setSigma (setPi singleton x8 \ singleton) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton (app x8 x9) (app x8 x10)) x8 \
               forall
                (forall singleton x9 \
                  propId singleton
                   (app
                     (elim_setSigma x7 (x10 \
                       setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                   (app
                     (elim_setSigma x8 (x10 \
                       setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                x9 \
                forall singleton x10 \
                 propId singleton
                  (app
                    (elim_setSigma (app x6 x7) (x11 \
                      setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                  (app
                    (elim_setSigma (app x6 x8) (x11 \
                      setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
           x6 \
           setSigma (setPi singleton x7 \ singleton) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
      (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
  (app
    (elim_setSigma
      (app
        (elim_setSigma x1 (x5 \
          setPi
           (setSigma
             (setPi
               (setSigma (setPi singleton x6 \ singleton) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton (app x6 x7) (app x6 x8)) x6 \
               setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x6 \
             forall
              (setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x7 \
              forall
               (setSigma (setPi singleton x8 \ singleton) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton (app x8 x9) (app x8 x10)) x8 \
               forall
                (forall singleton x9 \
                  propId singleton
                   (app
                     (elim_setSigma x7 (x10 \
                       setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                   (app
                     (elim_setSigma x8 (x10 \
                       setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                x9 \
                forall singleton x10 \
                 propId singleton
                  (app
                    (elim_setSigma (app x6 x7) (x11 \
                      setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                  (app
                    (elim_setSigma (app x6 x8) (x11 \
                      setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
           x6 \
           setSigma (setPi singleton x7 \ singleton) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
      (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
"
"9---------]-]Success  
propId singleton
 (app
   (elim_setSigma
     (app
       (elim_setSigma x0 (x5 \
         setPi
          (setSigma
            (setPi
              (setSigma (setPi singleton x6 \ singleton) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton (app x6 x7) (app x6 x8)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x6 \
            forall
             (setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x7 \
             forall
              (setSigma (setPi singleton x8 \ singleton) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton (app x8 x9) (app x8 x10)) x8 \
              forall
               (forall singleton x9 \
                 propId singleton
                  (app
                    (elim_setSigma x7 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)
                  (app
                    (elim_setSigma x8 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)) x9 \
               forall singleton x10 \
                propId singleton
                 (app
                   (elim_setSigma (app x6 x7) (x11 \
                     setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                 (app
                   (elim_setSigma (app x6 x8) (x11 \
                     setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
          x6 \
          setSigma (setPi singleton x7 \ singleton) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \
              propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
     (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
 (app
   (elim_setSigma
     (app
       (elim_setSigma x1 (x5 \
         setPi
          (setSigma
            (setPi
              (setSigma (setPi singleton x6 \ singleton) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton (app x6 x7) (app x6 x8)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x6 \
            forall
             (setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x7 \
             forall
              (setSigma (setPi singleton x8 \ singleton) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton (app x8 x9) (app x8 x10)) x8 \
              forall
               (forall singleton x9 \
                 propId singleton
                  (app
                    (elim_setSigma x7 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)
                  (app
                    (elim_setSigma x8 (x10 \ setPi singleton x11 \ singleton)
                      x10 \ x11 \ x10) x9)) x9 \
               forall singleton x10 \
                propId singleton
                 (app
                   (elim_setSigma (app x6 x7) (x11 \
                     setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                 (app
                   (elim_setSigma (app x6 x8) (x11 \
                     setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
          x6 \
          setSigma (setPi singleton x7 \ singleton) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \
              propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
     (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4) =
 propId singleton
  (app
    (elim_setSigma
      (app
        (elim_setSigma x0 (x5 \
          setPi
           (setSigma
             (setPi
               (setSigma (setPi singleton x6 \ singleton) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton (app x6 x7) (app x6 x8)) x6 \
               setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x6 \
             forall
              (setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x7 \
              forall
               (setSigma (setPi singleton x8 \ singleton) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton (app x8 x9) (app x8 x10)) x8 \
               forall
                (forall singleton x9 \
                  propId singleton
                   (app
                     (elim_setSigma x7 (x10 \
                       setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                   (app
                     (elim_setSigma x8 (x10 \
                       setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                x9 \
                forall singleton x10 \
                 propId singleton
                  (app
                    (elim_setSigma (app x6 x7) (x11 \
                      setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                  (app
                    (elim_setSigma (app x6 x8) (x11 \
                      setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
           x6 \
           setSigma (setPi singleton x7 \ singleton) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
      (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
  (app
    (elim_setSigma
      (app
        (elim_setSigma x1 (x5 \
          setPi
           (setSigma
             (setPi
               (setSigma (setPi singleton x6 \ singleton) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton (app x6 x7) (app x6 x8)) x6 \
               setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x6 \
             forall
              (setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x7 \
              forall
               (setSigma (setPi singleton x8 \ singleton) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton (app x8 x9) (app x8 x10)) x8 \
               forall
                (forall singleton x9 \
                  propId singleton
                   (app
                     (elim_setSigma x7 (x10 \
                       setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                   (app
                     (elim_setSigma x8 (x10 \
                       setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                x9 \
                forall singleton x10 \
                 propId singleton
                  (app
                    (elim_setSigma (app x6 x7) (x11 \
                      setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                  (app
                    (elim_setSigma (app x6 x8) (x11 \
                      setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
           x6 \
           setSigma (setPi singleton x7 \ singleton) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
      (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
"
"8--------]-]Success  
of (forall_app (forall_app x2 x3) x4)
 (propId singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x5 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x6 \
              forall
               (setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma x7 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma x8 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                 x9 \
                 forall singleton x10 \
                  propId singleton
                   (app
                     (elim_setSigma (app x6 x7) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                   (app
                     (elim_setSigma (app x6 x8) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
            x6 \
            setSigma (setPi singleton x7 \ singleton) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
       (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
   (app
     (elim_setSigma
       (app
         (elim_setSigma x1 (x5 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x6 \
              forall
               (setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma x7 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma x8 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                 x9 \
                 forall singleton x10 \
                  propId singleton
                   (app
                     (elim_setSigma (app x6 x7) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                   (app
                     (elim_setSigma (app x6 x8) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
            x6 \
            setSigma (setPi singleton x7 \ singleton) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
       (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)) int
"
"8________[+[Begin 
pi x5 \
 pi x6 \
  locDecl x5 singleton =>
   locDecl x6 singleton => isaType (propId singleton x6 x5) propc int
"
"9_________[+[Begin 
ofType (propId singleton x6 x5) X784^7 int
"
"10__________[+[Begin 
of x6 X785^7 int
"
"10----------]-]Success  
of x6 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of x5 X786^7 int
"
"10----------]-]Success  
of x5 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(X784^7 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
ofType (propId singleton x6 x5) props int
"
"9_________[+[Begin 
pts_leq props propc
"
"9---------]-]Success  
pts_leq props propc
"
"8--------]-]Success  
pi x5 \
 pi x6 \
  locDecl x5 singleton =>
   locDecl x6 singleton => isaType (propId singleton x6 x5) propc int
"
"8________[+[Begin 
pi x5 \
 locDecl x5 singleton => of (id singleton x5) (propId singleton x5 x5) int
"
"9_________[+[Begin 
ofType singleton _ int
"
"9---------]-]Success  
ofType singleton _ int
"
"9_________[+[Begin 
isa x5 singleton int
"
"10__________[+[Begin 
of x5 X787^6 int
"
"10----------]-]Success  
of x5 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"9---------]-]Success  
isa x5 singleton int
"
"8--------]-]Success  
pi x5 \
 locDecl x5 singleton => of (id singleton x5) (propId singleton x5 x5) int
"
"7-------]-]Success  
of
 (elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
   propId singleton x6 x5) x5 \ id singleton x5)
 (propId singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x1 (x5 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x6 \
              forall
               (setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma x7 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma x8 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                 x9 \
                 forall singleton x10 \
                  propId singleton
                   (app
                     (elim_setSigma (app x6 x7) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                   (app
                     (elim_setSigma (app x6 x8) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
            x6 \
            setSigma (setPi singleton x7 \ singleton) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
       (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x5 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x6 \
              forall
               (setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma x7 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma x8 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                 x9 \
                 forall singleton x10 \
                  propId singleton
                   (app
                     (elim_setSigma (app x6 x7) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                   (app
                     (elim_setSigma (app x6 x8) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
            x6 \
            setSigma (setPi singleton x7 \ singleton) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
       (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)) int
"
"7_______[+[Begin 
conv
 (propId singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x1 (x5 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x6 \
              forall
               (setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma x7 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma x8 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                 x9 \
                 forall singleton x10 \
                  propId singleton
                   (app
                     (elim_setSigma (app x6 x7) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                   (app
                     (elim_setSigma (app x6 x8) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
            x6 \
            setSigma (setPi singleton x7 \ singleton) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
       (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x5 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x6 \
              forall
               (setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma x7 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma x8 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                 x9 \
                 forall singleton x10 \
                  propId singleton
                   (app
                     (elim_setSigma (app x6 x7) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                   (app
                     (elim_setSigma (app x6 x8) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
            x6 \
            setSigma (setPi singleton x7 \ singleton) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
       (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)) (X773^4 x4)
"
"7-------]-]Success  
conv
 (propId singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x1 (x5 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x6 \
              forall
               (setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma x7 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma x8 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                 x9 \
                 forall singleton x10 \
                  propId singleton
                   (app
                     (elim_setSigma (app x6 x7) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                   (app
                     (elim_setSigma (app x6 x8) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
            x6 \
            setSigma (setPi singleton x7 \ singleton) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
       (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x5 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x6 \
              forall
               (setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma x7 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma x8 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                 x9 \
                 forall singleton x10 \
                  propId singleton
                   (app
                     (elim_setSigma (app x6 x7) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                   (app
                     (elim_setSigma (app x6 x8) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
            x6 \
            setSigma (setPi singleton x7 \ singleton) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
       (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4))
 (propId singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x1 (x5 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x6 \
              forall
               (setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma x7 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma x8 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                 x9 \
                 forall singleton x10 \
                  propId singleton
                   (app
                     (elim_setSigma (app x6 x7) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                   (app
                     (elim_setSigma (app x6 x8) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
            x6 \
            setSigma (setPi singleton x7 \ singleton) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
       (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x5 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x6 \ singleton) x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x6 \
                setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x6 \
              forall
               (setSigma (setPi singleton x7 \ singleton) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton (app x7 x8) (app x7 x9)) x7 \
               forall
                (setSigma (setPi singleton x8 \ singleton) x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x8 \
                forall
                 (forall singleton x9 \
                   propId singleton
                    (app
                      (elim_setSigma x7 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                    (app
                      (elim_setSigma x8 (x10 \
                        setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                 x9 \
                 forall singleton x10 \
                  propId singleton
                   (app
                     (elim_setSigma (app x6 x7) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                   (app
                     (elim_setSigma (app x6 x8) (x11 \
                       setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
            x6 \
            setSigma (setPi singleton x7 \ singleton) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
       (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4))
"
"6------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  isa
   (elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
     propId singleton x6 x5) x5 \ id singleton x5)
   (propId singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x1 (x5 \
             setPi
              (setSigma
                (setPi
                  (setSigma (setPi singleton x6 \ singleton) x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton (app x6 x7) (app x6 x8)) x6 \
                  setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x6 \
                forall
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 forall
                  (setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x8 \
                  forall
                   (forall singleton x9 \
                     propId singleton
                      (app
                        (elim_setSigma x7 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)
                      (app
                        (elim_setSigma x8 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)) x9 \
                   forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma (app x6 x7) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma (app x6 x8) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
         (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x5 \
             setPi
              (setSigma
                (setPi
                  (setSigma (setPi singleton x6 \ singleton) x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton (app x6 x7) (app x6 x8)) x6 \
                  setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x6 \
                forall
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 forall
                  (setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x8 \
                  forall
                   (forall singleton x9 \
                     propId singleton
                      (app
                        (elim_setSigma x7 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)
                      (app
                        (elim_setSigma x8 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)) x9 \
                   forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma (app x6 x7) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma (app x6 x8) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
         (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)) int
"
"5-----]-]Success  
of
 (forall_lam singleton x4 \
   elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
    propId singleton x6 x5) x5 \ id singleton x5)
 (forall singleton x4 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x5 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x6 \ singleton) x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x6 \
                 setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x6 \
               forall
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                forall
                 (setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x8 \
                 forall
                  (forall singleton x9 \
                    propId singleton
                     (app
                       (elim_setSigma x7 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                     (app
                       (elim_setSigma x8 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                  x9 \
                  forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma (app x6 x7) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma (app x6 x8) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
             x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
        (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x5 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x6 \ singleton) x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x6 \
                 setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x6 \
               forall
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                forall
                 (setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x8 \
                 forall
                  (forall singleton x9 \
                    propId singleton
                     (app
                       (elim_setSigma x7 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                     (app
                       (elim_setSigma x8 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                  x9 \
                  forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma (app x6 x7) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma (app x6 x8) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
             x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
        (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)) int
"
"5_____[+[Begin 
conv
 (forall singleton x4 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x5 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x6 \ singleton) x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x6 \
                 setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x6 \
               forall
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                forall
                 (setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x8 \
                 forall
                  (forall singleton x9 \
                    propId singleton
                     (app
                       (elim_setSigma x7 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                     (app
                       (elim_setSigma x8 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                  x9 \
                  forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma (app x6 x7) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma (app x6 x8) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
             x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
        (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x5 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x6 \ singleton) x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x6 \
                 setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x6 \
               forall
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                forall
                 (setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x8 \
                 forall
                  (forall singleton x9 \
                    propId singleton
                     (app
                       (elim_setSigma x7 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                     (app
                       (elim_setSigma x8 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                  x9 \
                  forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma (app x6 x7) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma (app x6 x8) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
             x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
        (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4))
 (forall singleton x4 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x5 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x6 \ singleton) x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x6 \
                 setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x6 \
               forall
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                forall
                 (setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x8 \
                 forall
                  (forall singleton x9 \
                    propId singleton
                     (app
                       (elim_setSigma x7 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                     (app
                       (elim_setSigma x8 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                  x9 \
                  forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma (app x6 x7) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma (app x6 x8) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
             x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
        (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x5 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x6 \ singleton) x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x6 \
                 setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x6 \
               forall
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                forall
                 (setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x8 \
                 forall
                  (forall singleton x9 \
                    propId singleton
                     (app
                       (elim_setSigma x7 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                     (app
                       (elim_setSigma x8 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                  x9 \
                  forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma (app x6 x7) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma (app x6 x8) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
             x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
        (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4))
"
"5-----]-]Success  
conv
 (forall singleton x4 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x5 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x6 \ singleton) x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x6 \
                 setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x6 \
               forall
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                forall
                 (setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x8 \
                 forall
                  (forall singleton x9 \
                    propId singleton
                     (app
                       (elim_setSigma x7 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                     (app
                       (elim_setSigma x8 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                  x9 \
                  forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma (app x6 x7) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma (app x6 x8) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
             x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
        (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x5 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x6 \ singleton) x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x6 \
                 setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x6 \
               forall
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                forall
                 (setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x8 \
                 forall
                  (forall singleton x9 \
                    propId singleton
                     (app
                       (elim_setSigma x7 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                     (app
                       (elim_setSigma x8 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                  x9 \
                  forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma (app x6 x7) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma (app x6 x8) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
             x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
        (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4))
 (forall singleton x4 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x5 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x6 \ singleton) x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x6 \
                 setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x6 \
               forall
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                forall
                 (setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x8 \
                 forall
                  (forall singleton x9 \
                    propId singleton
                     (app
                       (elim_setSigma x7 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                     (app
                       (elim_setSigma x8 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                  x9 \
                  forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma (app x6 x7) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma (app x6 x8) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
             x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
        (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x5 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x6 \ singleton) x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x6 \
                 setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x6 \
               forall
                (setSigma (setPi singleton x7 \ singleton) x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton (app x7 x8) (app x7 x9)) x7 \
                forall
                 (setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x8 \
                 forall
                  (forall singleton x9 \
                    propId singleton
                     (app
                       (elim_setSigma x7 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9)
                     (app
                       (elim_setSigma x8 (x10 \
                         setPi singleton x11 \ singleton) x10 \ x11 \ x10) x9))
                  x9 \
                  forall singleton x10 \
                   propId singleton
                    (app
                      (elim_setSigma (app x6 x7) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10)
                    (app
                      (elim_setSigma (app x6 x8) (x11 \
                        setPi singleton x12 \ singleton) x11 \ x12 \ x11) x10))
             x6 \
             setSigma (setPi singleton x7 \ singleton) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
        (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4))
"
"4----]-]Success  
pi x3 \
 locDecl x3
  (setSigma
    (setPi
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x4 \
    forall
     (setSigma (setPi singleton x5 \ singleton) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (setSigma (setPi singleton x6 \ singleton) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (forall singleton x7 \
         propId singleton
          (app
            (elim_setSigma x5 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
              x8) x7)
          (app
            (elim_setSigma x6 (x8 \ setPi singleton x9 \ singleton) x8 \ x9 \
              x8) x7)) x7 \
       forall singleton x8 \
        propId singleton
         (app
           (elim_setSigma (app x4 x5) (x9 \ setPi singleton x10 \ singleton)
             x9 \ x10 \ x9) x8)
         (app
           (elim_setSigma (app x4 x6) (x9 \ setPi singleton x10 \ singleton)
             x9 \ x10 \ x9) x8)) =>
  isa
   (forall_lam singleton x4 \
     elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
      propId singleton x6 x5) x5 \ id singleton x5)
   (forall singleton x4 \
     propId singleton
      (app
        (elim_setSigma
          (app
            (elim_setSigma x1 (x5 \
              setPi
               (setSigma
                 (setPi
                   (setSigma (setPi singleton x6 \ singleton) x6 \
                     forall singleton x7 \
                      forall singleton x8 \
                       forall (propId singleton x7 x8) x9 \
                        propId singleton (app x6 x7) (app x6 x8)) x6 \
                   setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x6 \
                 forall
                  (setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x7 \
                  forall
                   (setSigma (setPi singleton x8 \ singleton) x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton (app x8 x9) (app x8 x10)) x8 \
                   forall
                    (forall singleton x9 \
                      propId singleton
                       (app
                         (elim_setSigma x7 (x10 \
                           setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                         x9)
                       (app
                         (elim_setSigma x8 (x10 \
                           setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                         x9)) x9 \
                    forall singleton x10 \
                     propId singleton
                      (app
                        (elim_setSigma (app x6 x7) (x11 \
                          setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                        x10)
                      (app
                        (elim_setSigma (app x6 x8) (x11 \
                          setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                        x10)) x6 \
               setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
          (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
      (app
        (elim_setSigma
          (app
            (elim_setSigma x0 (x5 \
              setPi
               (setSigma
                 (setPi
                   (setSigma (setPi singleton x6 \ singleton) x6 \
                     forall singleton x7 \
                      forall singleton x8 \
                       forall (propId singleton x7 x8) x9 \
                        propId singleton (app x6 x7) (app x6 x8)) x6 \
                   setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x6 \
                 forall
                  (setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x7 \
                  forall
                   (setSigma (setPi singleton x8 \ singleton) x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton (app x8 x9) (app x8 x10)) x8 \
                   forall
                    (forall singleton x9 \
                      propId singleton
                       (app
                         (elim_setSigma x7 (x10 \
                           setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                         x9)
                       (app
                         (elim_setSigma x8 (x10 \
                           setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                         x9)) x9 \
                    forall singleton x10 \
                     propId singleton
                      (app
                        (elim_setSigma (app x6 x7) (x11 \
                          setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                        x10)
                      (app
                        (elim_setSigma (app x6 x8) (x11 \
                          setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                        x10)) x6 \
               setSigma (setPi singleton x7 \ singleton) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
          (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)) int
"
"3---]-]Success  
of
 (forall_lam
   (setSigma
     (setPi
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x3 \
     forall
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)
           (app
             (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)) x6 \
        forall singleton x7 \
         propId singleton
          (app
            (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)
          (app
            (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)) x3 \
   forall_lam singleton x4 \
    elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
     propId singleton x6 x5) x5 \ id singleton x5)
 (forall
   (setSigma
     (setPi
       (setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x3 \
     forall
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (setSigma (setPi singleton x5 \ singleton) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)
           (app
             (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
               x8 \ x7) x6)) x6 \
        forall singleton x7 \
         propId singleton
          (app
            (elim_setSigma (app x3 x4) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)
          (app
            (elim_setSigma (app x3 x5) (x8 \ setPi singleton x9 \ singleton)
              x8 \ x9 \ x8) x7)) x3 \
   forall singleton x4 \
    propId singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x1 (x5 \
             setPi
              (setSigma
                (setPi
                  (setSigma (setPi singleton x6 \ singleton) x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton (app x6 x7) (app x6 x8)) x6 \
                  setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x6 \
                forall
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 forall
                  (setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x8 \
                  forall
                   (forall singleton x9 \
                     propId singleton
                      (app
                        (elim_setSigma x7 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)
                      (app
                        (elim_setSigma x8 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)) x9 \
                   forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma (app x6 x7) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma (app x6 x8) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
         (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x5 \
             setPi
              (setSigma
                (setPi
                  (setSigma (setPi singleton x6 \ singleton) x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton (app x6 x7) (app x6 x8)) x6 \
                  setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x6 \
                forall
                 (setSigma (setPi singleton x7 \ singleton) x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton (app x7 x8) (app x7 x9)) x7 \
                 forall
                  (setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x8 \
                  forall
                   (forall singleton x9 \
                     propId singleton
                      (app
                        (elim_setSigma x7 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)
                      (app
                        (elim_setSigma x8 (x10 \
                          setPi singleton x11 \ singleton) x10 \ x11 \ x10)
                        x9)) x9 \
                   forall singleton x10 \
                    propId singleton
                     (app
                       (elim_setSigma (app x6 x7) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)
                     (app
                       (elim_setSigma (app x6 x8) (x11 \
                         setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                       x10)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
         (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)) int
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0
   (setSigma
     (setPi
       (setSigma
         (setPi
           (setSigma (setPi singleton x2 \ singleton) x2 \
             forall singleton x3 \
              forall singleton x4 \
               forall (propId singleton x3 x4) x5 \
                propId singleton (app x2 x3) (app x2 x4)) x2 \
           setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x2 \
         forall
          (setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \
          forall
           (setSigma (setPi singleton x4 \ singleton) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \
           forall
            (forall singleton x5 \
              propId singleton
               (app
                 (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                   x7 \ x6) x5)
               (app
                 (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                   x7 \ x6) x5)) x5 \
            forall singleton x6 \
             propId singleton
              (app
                (elim_setSigma (app x2 x3) (x7 \
                  setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)
              (app
                (elim_setSigma (app x2 x4) (x7 \
                  setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)) x2 \
       setSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x2 \
     forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x3 \ singleton) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \
          setSigma (setPi singleton x4 \ singleton) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x3 \
        forall
         (setSigma (setPi singleton x4 \ singleton) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \
          forall
           (forall singleton x6 \
             propId singleton
              (app
                (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
                  x8 \ x7) x6)
              (app
                (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
                  x8 \ x7) x6)) x6 \
           forall singleton x7 \
            propId singleton
             (app
               (elim_setSigma (app x3 x4) (x8 \
                 setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
             (app
               (elim_setSigma (app x3 x5) (x8 \
                 setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)) x3 \
      forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x4 \ singleton) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \
           setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x4 \
         forall
          (setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \
          forall
           (setSigma (setPi singleton x6 \ singleton) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton (app x6 x7) (app x6 x8)) x6 \
           forall
            (forall singleton x7 \
              propId singleton
               (app
                 (elim_setSigma x5 (x8 \ setPi singleton x9 \ singleton) x8 \
                   x9 \ x8) x7)
               (app
                 (elim_setSigma x6 (x8 \ setPi singleton x9 \ singleton) x8 \
                   x9 \ x8) x7)) x7 \
            forall singleton x8 \
             propId singleton
              (app
                (elim_setSigma (app x4 x5) (x9 \
                  setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8)
              (app
                (elim_setSigma (app x4 x6) (x9 \
                  setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8)) x4 \
       forall
        (forall
          (setSigma (setPi singleton x5 \ singleton) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \
          forall singleton x6 \
           propId singleton
            (app
              (elim_setSigma
                (app
                  (elim_setSigma x3 (x7 \
                    setPi
                     (setSigma (setPi singleton x8 \ singleton) x8 \
                       forall singleton x9 \
                        forall singleton x10 \
                         forall (propId singleton x9 x10) x11 \
                          propId singleton (app x8 x9) (app x8 x10)) x8 \
                     setSigma (setPi singleton x9 \ singleton) x9 \
                      forall singleton x10 \
                       forall singleton x11 \
                        forall (propId singleton x10 x11) x12 \
                         propId singleton (app x9 x10) (app x9 x11)) x7 \
                    x8 \ x7) x5) (x7 \ setPi singleton x8 \ singleton) x7 \
                x8 \ x7) x6)
            (app
              (elim_setSigma
                (app
                  (elim_setSigma x4 (x7 \
                    setPi
                     (setSigma (setPi singleton x8 \ singleton) x8 \
                       forall singleton x9 \
                        forall singleton x10 \
                         forall (propId singleton x9 x10) x11 \
                          propId singleton (app x8 x9) (app x8 x10)) x8 \
                     setSigma (setPi singleton x9 \ singleton) x9 \
                      forall singleton x10 \
                       forall singleton x11 \
                        forall (propId singleton x10 x11) x12 \
                         propId singleton (app x9 x10) (app x9 x11)) x7 \
                    x8 \ x7) x5) (x7 \ setPi singleton x8 \ singleton) x7 \
                x8 \ x7) x6)) x5 \
        forall singleton x6 \
         propId singleton
          (app
            (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
              x7 \ x8 \ x7) x6)
          (app
            (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
              x7 \ x8 \ x7) x6)) =>
   locDecl x1
    (setSigma
      (setPi
        (setSigma
          (setPi
            (setSigma (setPi singleton x2 \ singleton) x2 \
              forall singleton x3 \
               forall singleton x4 \
                forall (propId singleton x3 x4) x5 \
                 propId singleton (app x2 x3) (app x2 x4)) x2 \
            setSigma (setPi singleton x3 \ singleton) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x2 \
          forall
           (setSigma (setPi singleton x3 \ singleton) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x3 \
           forall
            (setSigma (setPi singleton x4 \ singleton) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (forall singleton x5 \
               propId singleton
                (app
                  (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton)
                    x6 \ x7 \ x6) x5)
                (app
                  (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton)
                    x6 \ x7 \ x6) x5)) x5 \
             forall singleton x6 \
              propId singleton
               (app
                 (elim_setSigma (app x2 x3) (x7 \
                   setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)
               (app
                 (elim_setSigma (app x2 x4) (x7 \
                   setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)) x2 \
        setSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x2 \
      forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x3 \ singleton) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x3 \
           setSigma (setPi singleton x4 \ singleton) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x3 \
         forall
          (setSigma (setPi singleton x4 \ singleton) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \
          forall
           (setSigma (setPi singleton x5 \ singleton) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \
           forall
            (forall singleton x6 \
              propId singleton
               (app
                 (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \
                   x8 \ x7) x6)
               (app
                 (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \
                   x8 \ x7) x6)) x6 \
            forall singleton x7 \
             propId singleton
              (app
                (elim_setSigma (app x3 x4) (x8 \
                  setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
              (app
                (elim_setSigma (app x3 x5) (x8 \
                  setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)) x3 \
       forall
        (setSigma
          (setPi
            (setSigma (setPi singleton x4 \ singleton) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi singleton x5 \ singleton) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x4 \
          forall
           (setSigma (setPi singleton x5 \ singleton) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \
           forall
            (setSigma (setPi singleton x6 \ singleton) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x6 \
            forall
             (forall singleton x7 \
               propId singleton
                (app
                  (elim_setSigma x5 (x8 \ setPi singleton x9 \ singleton)
                    x8 \ x9 \ x8) x7)
                (app
                  (elim_setSigma x6 (x8 \ setPi singleton x9 \ singleton)
                    x8 \ x9 \ x8) x7)) x7 \
             forall singleton x8 \
              propId singleton
               (app
                 (elim_setSigma (app x4 x5) (x9 \
                   setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8)
               (app
                 (elim_setSigma (app x4 x6) (x9 \
                   setPi singleton x10 \ singleton) x9 \ x10 \ x9) x8)) x4 \
        forall
         (forall
           (setSigma (setPi singleton x5 \ singleton) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \
           forall singleton x6 \
            propId singleton
             (app
               (elim_setSigma
                 (app
                   (elim_setSigma x3 (x7 \
                     setPi
                      (setSigma (setPi singleton x8 \ singleton) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton (app x8 x9) (app x8 x10)) x8 \
                      setSigma (setPi singleton x9 \ singleton) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton (app x9 x10) (app x9 x11)) x7 \
                     x8 \ x7) x5) (x7 \ setPi singleton x8 \ singleton) x7 \
                 x8 \ x7) x6)
             (app
               (elim_setSigma
                 (app
                   (elim_setSigma x4 (x7 \
                     setPi
                      (setSigma (setPi singleton x8 \ singleton) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton (app x8 x9) (app x8 x10)) x8 \
                      setSigma (setPi singleton x9 \ singleton) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton (app x9 x10) (app x9 x11)) x7 \
                     x8 \ x7) x5) (x7 \ setPi singleton x8 \ singleton) x7 \
                 x8 \ x7) x6)) x5 \
         forall singleton x6 \
          propId singleton
           (app
             (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)
           (app
             (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
               x7 \ x8 \ x7) x6)) =>
    (pi x2 \
      locDecl x2
       (forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x3 \ singleton) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton (app x3 x4) (app x3 x5)) x3 \
             setSigma (setPi singleton x4 \ singleton) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x3 \
           forall
            (setSigma (setPi singleton x4 \ singleton) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (setSigma (setPi singleton x5 \ singleton) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x5 \
             forall
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) x6 \
              forall singleton x7 \
               propId singleton
                (app
                  (elim_setSigma (app x3 x4) (x8 \
                    setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
                (app
                  (elim_setSigma (app x3 x5) (x8 \
                    setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)) x3 \
         forall singleton x4 \
          propId singleton
           (app
             (elim_setSigma
               (app
                 (elim_setSigma x0 (x5 \
                   setPi
                    (setSigma
                      (setPi
                        (setSigma (setPi singleton x6 \ singleton) x6 \
                          forall singleton x7 \
                           forall singleton x8 \
                            forall (propId singleton x7 x8) x9 \
                             propId singleton (app x6 x7) (app x6 x8)) x6 \
                        setSigma (setPi singleton x7 \ singleton) x7 \
                         forall singleton x8 \
                          forall singleton x9 \
                           forall (propId singleton x8 x9) x10 \
                            propId singleton (app x7 x8) (app x7 x9)) x6 \
                      forall
                       (setSigma (setPi singleton x7 \ singleton) x7 \
                         forall singleton x8 \
                          forall singleton x9 \
                           forall (propId singleton x8 x9) x10 \
                            propId singleton (app x7 x8) (app x7 x9)) x7 \
                       forall
                        (setSigma (setPi singleton x8 \ singleton) x8 \
                          forall singleton x9 \
                           forall singleton x10 \
                            forall (propId singleton x9 x10) x11 \
                             propId singleton (app x8 x9) (app x8 x10)) x8 \
                        forall
                         (forall singleton x9 \
                           propId singleton
                            (app
                              (elim_setSigma x7 (x10 \
                                setPi singleton x11 \ singleton) x10 \ x11 \
                                x10) x9)
                            (app
                              (elim_setSigma x8 (x10 \
                                setPi singleton x11 \ singleton) x10 \ x11 \
                                x10) x9)) x9 \
                         forall singleton x10 \
                          propId singleton
                           (app
                             (elim_setSigma (app x6 x7) (x11 \
                               setPi singleton x12 \ singleton) x11 \ x12 \
                               x11) x10)
                           (app
                             (elim_setSigma (app x6 x8) (x11 \
                               setPi singleton x12 \ singleton) x11 \ x12 \
                               x11) x10)) x6 \
                    setSigma (setPi singleton x7 \ singleton) x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \
                   x5) x3) (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
             x4)
           (app
             (elim_setSigma
               (app
                 (elim_setSigma x1 (x5 \
                   setPi
                    (setSigma
                      (setPi
                        (setSigma (setPi singleton x6 \ singleton) x6 \
                          forall singleton x7 \
                           forall singleton x8 \
                            forall (propId singleton x7 x8) x9 \
                             propId singleton (app x6 x7) (app x6 x8)) x6 \
                        setSigma (setPi singleton x7 \ singleton) x7 \
                         forall singleton x8 \
                          forall singleton x9 \
                           forall (propId singleton x8 x9) x10 \
                            propId singleton (app x7 x8) (app x7 x9)) x6 \
                      forall
                       (setSigma (setPi singleton x7 \ singleton) x7 \
                         forall singleton x8 \
                          forall singleton x9 \
                           forall (propId singleton x8 x9) x10 \
                            propId singleton (app x7 x8) (app x7 x9)) x7 \
                       forall
                        (setSigma (setPi singleton x8 \ singleton) x8 \
                          forall singleton x9 \
                           forall singleton x10 \
                            forall (propId singleton x9 x10) x11 \
                             propId singleton (app x8 x9) (app x8 x10)) x8 \
                        forall
                         (forall singleton x9 \
                           propId singleton
                            (app
                              (elim_setSigma x7 (x10 \
                                setPi singleton x11 \ singleton) x10 \ x11 \
                                x10) x9)
                            (app
                              (elim_setSigma x8 (x10 \
                                setPi singleton x11 \ singleton) x10 \ x11 \
                                x10) x9)) x9 \
                         forall singleton x10 \
                          propId singleton
                           (app
                             (elim_setSigma (app x6 x7) (x11 \
                               setPi singleton x12 \ singleton) x11 \ x12 \
                               x11) x10)
                           (app
                             (elim_setSigma (app x6 x8) (x11 \
                               setPi singleton x12 \ singleton) x11 \ x12 \
                               x11) x10)) x6 \
                    setSigma (setPi singleton x7 \ singleton) x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \
                   x5) x3) (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
             x4)) =>
       spy
        (of
          (forall_lam
            (setSigma
              (setPi
                (setSigma (setPi singleton x3 \ singleton) x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton (app x3 x4) (app x3 x5)) x3 \
                setSigma (setPi singleton x4 \ singleton) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x3 \
              forall
               (setSigma (setPi singleton x4 \ singleton) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x4 \
               forall
                (setSigma (setPi singleton x5 \ singleton) x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton (app x5 x6) (app x5 x7)) x5 \
                forall
                 (forall singleton x6 \
                   propId singleton
                    (app
                      (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                        x7 \ x8 \ x7) x6)
                    (app
                      (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton)
                        x7 \ x8 \ x7) x6)) x6 \
                 forall singleton x7 \
                  propId singleton
                   (app
                     (elim_setSigma (app x3 x4) (x8 \
                       setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
                   (app
                     (elim_setSigma (app x3 x5) (x8 \
                       setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7))
            x3 \
            forall_lam singleton x4 \
             elim_id (forall_app (forall_app x2 x3) x4) (x5 \ x6 \
              propId singleton x6 x5) x5 \ id singleton x5)
          (forall
            (setSigma
              (setPi
                (setSigma (setPi singleton x3 \ singleton) x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton (app x3 x4) (app x3 x5)) x3 \
                setSigma (setPi singleton x4 \ singleton) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x3 \
              forall
               (setSigma (setPi singleton x4 \ singleton) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x4 \
               forall
                (setSigma (setPi singleton x5 \ singleton) x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton (app x5 x6) (app x5 x7)) x5 \
                forall
                 (forall singleton x6 \
                   propId singleton
                    (app
                      (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton)
                        x7 \ x8 \ x7) x6)
                    (app
                      (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton)
                        x7 \ x8 \ x7) x6)) x6 \
                 forall singleton x7 \
                  propId singleton
                   (app
                     (elim_setSigma (app x3 x4) (x8 \
                       setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7)
                   (app
                     (elim_setSigma (app x3 x5) (x8 \
                       setPi singleton x9 \ singleton) x8 \ x9 \ x8) x7))
            x3 \
            forall singleton x4 \
             propId singleton
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x1 (x5 \
                      setPi
                       (setSigma
                         (setPi
                           (setSigma (setPi singleton x6 \ singleton) x6 \
                             forall singleton x7 \
                              forall singleton x8 \
                               forall (propId singleton x7 x8) x9 \
                                propId singleton (app x6 x7) (app x6 x8))
                           x6 \
                           setSigma (setPi singleton x7 \ singleton) x7 \
                            forall singleton x8 \
                             forall singleton x9 \
                              forall (propId singleton x8 x9) x10 \
                               propId singleton (app x7 x8) (app x7 x9)) x6 \
                         forall
                          (setSigma (setPi singleton x7 \ singleton) x7 \
                            forall singleton x8 \
                             forall singleton x9 \
                              forall (propId singleton x8 x9) x10 \
                               propId singleton (app x7 x8) (app x7 x9)) x7 \
                          forall
                           (setSigma (setPi singleton x8 \ singleton) x8 \
                             forall singleton x9 \
                              forall singleton x10 \
                               forall (propId singleton x9 x10) x11 \
                                propId singleton (app x8 x9) (app x8 x10))
                           x8 \
                           forall
                            (forall singleton x9 \
                              propId singleton
                               (app
                                 (elim_setSigma x7 (x10 \
                                   setPi singleton x11 \ singleton) x10 \
                                   x11 \ x10) x9)
                               (app
                                 (elim_setSigma x8 (x10 \
                                   setPi singleton x11 \ singleton) x10 \
                                   x11 \ x10) x9)) x9 \
                            forall singleton x10 \
                             propId singleton
                              (app
                                (elim_setSigma (app x6 x7) (x11 \
                                  setPi singleton x12 \ singleton) x11 \
                                  x12 \ x11) x10)
                              (app
                                (elim_setSigma (app x6 x8) (x11 \
                                  setPi singleton x12 \ singleton) x11 \
                                  x12 \ x11) x10)) x6 \
                       setSigma (setPi singleton x7 \ singleton) x7 \
                        forall singleton x8 \
                         forall singleton x9 \
                          forall (propId singleton x8 x9) x10 \
                           propId singleton (app x7 x8) (app x7 x9)) x5 \
                      x6 \ x5) x3) (x5 \ setPi singleton x6 \ singleton) x5 \
                  x6 \ x5) x4)
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x0 (x5 \
                      setPi
                       (setSigma
                         (setPi
                           (setSigma (setPi singleton x6 \ singleton) x6 \
                             forall singleton x7 \
                              forall singleton x8 \
                               forall (propId singleton x7 x8) x9 \
                                propId singleton (app x6 x7) (app x6 x8))
                           x6 \
                           setSigma (setPi singleton x7 \ singleton) x7 \
                            forall singleton x8 \
                             forall singleton x9 \
                              forall (propId singleton x8 x9) x10 \
                               propId singleton (app x7 x8) (app x7 x9)) x6 \
                         forall
                          (setSigma (setPi singleton x7 \ singleton) x7 \
                            forall singleton x8 \
                             forall singleton x9 \
                              forall (propId singleton x8 x9) x10 \
                               propId singleton (app x7 x8) (app x7 x9)) x7 \
                          forall
                           (setSigma (setPi singleton x8 \ singleton) x8 \
                             forall singleton x9 \
                              forall singleton x10 \
                               forall (propId singleton x9 x10) x11 \
                                propId singleton (app x8 x9) (app x8 x10))
                           x8 \
                           forall
                            (forall singleton x9 \
                              propId singleton
                               (app
                                 (elim_setSigma x7 (x10 \
                                   setPi singleton x11 \ singleton) x10 \
                                   x11 \ x10) x9)
                               (app
                                 (elim_setSigma x8 (x10 \
                                   setPi singleton x11 \ singleton) x10 \
                                   x11 \ x10) x9)) x9 \
                            forall singleton x10 \
                             propId singleton
                              (app
                                (elim_setSigma (app x6 x7) (x11 \
                                  setPi singleton x12 \ singleton) x11 \
                                  x12 \ x11) x10)
                              (app
                                (elim_setSigma (app x6 x8) (x11 \
                                  setPi singleton x12 \ singleton) x11 \
                                  x12 \ x11) x10)) x6 \
                       setSigma (setPi singleton x7 \ singleton) x7 \
                        forall singleton x8 \
                         forall singleton x9 \
                          forall (propId singleton x8 x9) x10 \
                           propId singleton (app x7 x8) (app x7 x9)) x5 \
                      x6 \ x5) x3) (x5 \ setPi singleton x6 \ singleton) x5 \
                  x6 \ x5) x4)) int))
"
"1-]-]Success  
setoid_symm
 (setPi
   (setPi (setPi singleton x0 \ singleton) x0 \
     setPi singleton x1 \ singleton) x0 \ setPi singleton x1 \ singleton) _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_tran
 (setPi (setPi singleton x0 \ propEq singleton x0 star) x0 \
   setPi (setPi singleton x1 \ singleton) x1 \ setPi singleton x2 \ singleton)
 _
"
"2__[+[Begin 
interp
 (setPi (setPi singleton x0 \ propEq singleton x0 star) x0 \
   setPi (setPi singleton x1 \ singleton) x1 \ setPi singleton x2 \ singleton)
 X788
"
"3___[+[Begin 
interp (setPi singleton x0 \ propEq singleton x0 star) X789
"
"4____[+[Begin 
interp singleton X790
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => interp (propEq singleton x0 star) (X791 x1)
"
"5_____[+[Begin 
setoid_eq singleton X792^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa x0 singleton X793^2
"
"6______[+[Begin 
of x0 X794^2 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X795^2
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X796^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X793^2 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa star singleton X797^2
"
"6______[+[Begin 
of star X798^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X799^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X800^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X797^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X791 x1 = propId singleton x1 star
"
"5-----]-]Success  
propId singleton x1 star = propId singleton x1 star
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     interp (propEq singleton x0 star) (propId singleton x1 star)
"
"4____[+[Begin 
setoid_eq singleton X801
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => setoid_eq (propEq singleton x0 star) (X802 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     (setoid_eq (propEq singleton x0 star) x2 \ x3 \
       propId singleton star star)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 =>
               spy
                (tau (propEq singleton x0 star) (propEq singleton x1 star)
                  (X803 x3 x4 x5))
"
"5_____[+[Begin 
tau (propEq singleton x0 star) (propEq singleton x1 star) (X803 x3 x4 x5)
"
"6______[+[Begin 
tau_proof_eq x0 x1 singleton X804^6
"
"7_______[+[Begin 
locDecl X805^6 (propEq _ x0 x1)
"
"7-------]-]Success  
locDecl x2 (propEq _ x0 x1)
"
"7_______[+[Begin 
interp_isa x2 (propEq singleton x0 x1) X804^6
"
"8________[+[Begin 
of x2 X806^6 ext
"
"8--------]-]Success  
of x2 (propEq singleton x0 x1) ext
"
"8________[+[Begin 
interp x2 X807^6
"
"8--------]-]Success  
interp x2 x5
"
"8________[+[Begin 
tau (propEq singleton x0 x1) (propEq singleton x0 x1) X808^6
"
"8--------]-]Success  
tau (propEq singleton x0 x1) (propEq singleton x0 x1) x6 \ x6
"
"8________[+[Begin 
X804^6 = x5
"
"8--------]-]Success  
x5 = x5
"
"7-------]-]Success  
interp_isa x2 (propEq singleton x0 x1) x5
"
"6------]-]Success  
tau_proof_eq x0 x1 singleton x5
"
"6______[+[Begin 
tau_proof_eq star star singleton X809^6
"
"7_______[+[Begin 
interp_isa star singleton X810^6
"
"8________[+[Begin 
of star X811^6 ext
"
"8--------]-]Success  
of star singleton ext
"
"8________[+[Begin 
interp star X812^6
"
"8--------]-]Success  
interp star star
"
"8________[+[Begin 
tau singleton singleton X813^6
"
"8--------]-]Success  
tau singleton singleton x6 \ x6
"
"8________[+[Begin 
X810^6 = star
"
"8--------]-]Success  
star = star
"
"7-------]-]Success  
interp_isa star singleton star
"
"7_______[+[Begin 
setoid_refl singleton X814^6
"
"7-------]-]Success  
setoid_refl singleton x6 \ id singleton x6
"
"7_______[+[Begin 
X809^6 = id singleton star
"
"7-------]-]Success  
id singleton star = id singleton star
"
"6------]-]Success  
tau_proof_eq star star singleton (id singleton star)
"
"6______[+[Begin 
interp_isa x0 singleton X815^6
"
"7_______[+[Begin 
of x0 X816^6 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X817^6
"
"7-------]-]Success  
interp x0 x3
"
"7_______[+[Begin 
tau singleton singleton X818^6
"
"7-------]-]Success  
tau singleton singleton x6 \ x6
"
"7_______[+[Begin 
X815^6 = x3
"
"7-------]-]Success  
x3 = x3
"
"6------]-]Success  
interp_isa x0 singleton x3
"
"6______[+[Begin 
interp_isa star singleton X819^6
"
"7_______[+[Begin 
of star X820^6 ext
"
"7-------]-]Success  
of star singleton ext
"
"7_______[+[Begin 
interp star X821^6
"
"7-------]-]Success  
interp star star
"
"7_______[+[Begin 
tau singleton singleton X822^6
"
"7-------]-]Success  
tau singleton singleton x6 \ x6
"
"7_______[+[Begin 
X819^6 = star
"
"7-------]-]Success  
star = star
"
"6------]-]Success  
interp_isa star singleton star
"
"6______[+[Begin 
interp_isa x1 singleton X823^6
"
"7_______[+[Begin 
of x1 X824^6 ext
"
"7-------]-]Success  
of x1 singleton ext
"
"7_______[+[Begin 
interp x1 X825^6
"
"7-------]-]Success  
interp x1 x4
"
"7_______[+[Begin 
tau singleton singleton X826^6
"
"7-------]-]Success  
tau singleton singleton x6 \ x6
"
"7_______[+[Begin 
X823^6 = x4
"
"7-------]-]Success  
x4 = x4
"
"6------]-]Success  
interp_isa x1 singleton x4
"
"6______[+[Begin 
interp_isa star singleton X827^6
"
"7_______[+[Begin 
of star X828^6 ext
"
"7-------]-]Success  
of star singleton ext
"
"7_______[+[Begin 
interp star X829^6
"
"7-------]-]Success  
interp star star
"
"7_______[+[Begin 
tau singleton singleton X830^6
"
"7-------]-]Success  
tau singleton singleton x6 \ x6
"
"7_______[+[Begin 
X827^6 = star
"
"7-------]-]Success  
star = star
"
"6------]-]Success  
interp_isa star singleton star
"
"6______[+[Begin 
interp singleton X831^6
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
X803 x3 x4 x5 = (x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6)
"
"6------]-]Success  
(x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6) = (x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6)
"
"5-----]-]Success  
tau (propEq singleton x0 star) (propEq singleton x1 star) x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 =>
               spy
                (tau (propEq singleton x0 star) (propEq singleton x1 star)
                  x6 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x3)
                             x4) x5) star) star) (id singleton star)) x6)
"
"3---]-]Success  
interp (setPi singleton x0 \ propEq singleton x0 star)
 (setSigma (setPi singleton x0 \ propId singleton x0 star) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \ propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton x2 star) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    interp x0 x1 =>
     interp
      (setPi (setPi singleton x2 \ singleton) x2 \
        setPi singleton x3 \ singleton) (X832 x1)
"
"4____[+[Begin 
interp (setPi singleton x2 \ singleton) X833^2
"
"5_____[+[Begin 
interp singleton X834^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X835^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X836^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X837^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X838^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X838^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4----]-]Success  
interp (setPi singleton x2 \ singleton)
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => interp (setPi singleton x4 \ singleton) (X839^2 x3)
"
"5_____[+[Begin 
interp singleton X840^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X841^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X842^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X843^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton (X844^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X844^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     interp (setPi singleton x4 \ singleton)
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6))
"
"4____[+[Begin 
setoid_eq (setPi singleton x2 \ singleton) X845^2
"
"5_____[+[Begin 
interp singleton X846^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X847^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X848^2 x3)))
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"4----]-]Success  
setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
 forall singleton x4 \
  propId singleton
   (app (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
   (app (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => setoid_eq (setPi singleton x4 \ singleton) (X849^2 x3)
"
"5_____[+[Begin 
interp singleton X850^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X851^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton (X852^4 x5)))
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     (setoid_eq (setPi singleton x4 \ singleton) x4 \ x5 \
       forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)
         (app
           (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (setPi singleton x8 \ singleton) =>
       locDecl x3 (setPi singleton x8 \ singleton) =>
        locDecl x5
         (setSigma (setPi singleton x8 \ singleton) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton (app x8 x9) (app x8 x10)) =>
         locDecl x6
          (setSigma (setPi singleton x8 \ singleton) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton (app x8 x9) (app x8 x10)) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (setPi singleton x8 \ singleton) x2 x3) =>
             locDecl x7
              (forall singleton x8 \
                propId singleton
                 (app
                   (elim_setSigma x5 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)
                 (app
                   (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)) =>
              interp x4 x7 =>
               spy
                (tau (setPi singleton x8 \ singleton)
                  (setPi singleton x8 \ singleton) (X853^2 x5 x6 x7))
"
"5_____[+[Begin 
tau (setPi singleton x8 \ singleton) (setPi singleton x8 \ singleton)
 (X853^2 x5 x6 x7)
"
"5-----]-]Success  
tau (setPi singleton x8 \ singleton) (setPi singleton x8 \ singleton) x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (setPi singleton x8 \ singleton) =>
       locDecl x3 (setPi singleton x8 \ singleton) =>
        locDecl x5
         (setSigma (setPi singleton x8 \ singleton) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton (app x8 x9) (app x8 x10)) =>
         locDecl x6
          (setSigma (setPi singleton x8 \ singleton) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton (app x8 x9) (app x8 x10)) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (setPi singleton x8 \ singleton) x2 x3) =>
             locDecl x7
              (forall singleton x8 \
                propId singleton
                 (app
                   (elim_setSigma x5 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)
                 (app
                   (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)) =>
              interp x4 x7 =>
               spy
                (tau (setPi singleton x8 \ singleton)
                  (setPi singleton x8 \ singleton) x8 \ x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton x2 star) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    interp x0 x1 =>
     interp
      (setPi (setPi singleton x2 \ singleton) x2 \
        setPi singleton x3 \ singleton)
      (setSigma
        (setPi
          (setSigma (setPi singleton x2 \ singleton) x2 \
            forall singleton x3 \
             forall singleton x4 \
              forall (propId singleton x3 x4) x5 \
               propId singleton (app x2 x3) (app x2 x4)) x2 \
          setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x2 \
        forall
         (setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \
         forall
          (setSigma (setPi singleton x4 \ singleton) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \
          forall
           (forall singleton x5 \
             propId singleton
              (app
                (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                  x7 \ x6) x5)
              (app
                (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                  x7 \ x6) x5)) x5 \
           forall singleton x6 \
            propId singleton
             (app
               (elim_setSigma (app x2 x3) (x7 \
                 setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)
             (app
               (elim_setSigma (app x2 x4) (x7 \
                 setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6))
"
"3___[+[Begin 
setoid_eq (setPi singleton x0 \ propEq singleton x0 star) X854
"
"4____[+[Begin 
interp singleton X855
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => interp (propEq singleton x0 star) (X856 x1)
"
"5_____[+[Begin 
setoid_eq singleton X857^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa x0 singleton X858^2
"
"6______[+[Begin 
of x0 X859^2 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X860^2
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X861^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X858^2 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa star singleton X862^2
"
"6______[+[Begin 
of star X863^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X864^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X865^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X862^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X856 x1 = propId singleton x1 star
"
"5-----]-]Success  
propId singleton x1 star = propId singleton x1 star
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     interp (propEq singleton x0 star) (propId singleton x1 star)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     ((interp (propEq singleton x0 star) (propId singleton x1 star)),
     (setoid_eq (propEq singleton x0 star) (X866 x1)))
"
"5_____[+[Begin 
setoid_eq singleton X867^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa x0 singleton X868^2
"
"6______[+[Begin 
of x0 X869^2 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X870^2
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X871^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X868^2 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa star singleton X872^2
"
"6______[+[Begin 
of star X873^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X874^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X875^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X872^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
propId singleton x1 star = propId singleton x1 star
"
"5-----]-]Success  
propId singleton x1 star = propId singleton x1 star
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     ((interp (propEq singleton x0 star) (propId singleton x1 star)),
     (setoid_eq (propEq singleton x0 star) x2 \ x3 \
       propId singleton star star))
"
"3---]-]Success  
setoid_eq (setPi singleton x0 \ propEq singleton x0 star) x0 \ x1 \
 forall singleton x2 \ propId singleton star star
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton x2 star) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    interp x0 x1 =>
     setoid_eq
      (setPi (setPi singleton x2 \ singleton) x2 \
        setPi singleton x3 \ singleton) (X876 x1)
"
"4____[+[Begin 
interp (setPi singleton x2 \ singleton) X877^2
"
"5_____[+[Begin 
interp singleton X878^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X879^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X880^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X881^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X882^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X882^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4----]-]Success  
interp (setPi singleton x2 \ singleton)
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => interp (setPi singleton x4 \ singleton) (X883^2 x3)
"
"5_____[+[Begin 
interp singleton X884^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X885^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X886^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X887^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton (X888^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X888^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     interp (setPi singleton x4 \ singleton)
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     ((interp (setPi singleton x4 \ singleton)
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6))),
     (setoid_eq (setPi singleton x4 \ singleton) (X889^2 x3)))
"
"5_____[+[Begin 
interp singleton X890^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X891^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X892^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X893^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton (X894^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X894^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"5_____[+[Begin 
interp singleton X895^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X896^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton (X897^4 x5)))
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     ((interp (setPi singleton x4 \ singleton)
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6))),
     (setoid_eq (setPi singleton x4 \ singleton) x4 \ x5 \
       forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)
         (app
           (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton x2 star) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    interp x0 x1 =>
     (setoid_eq
       (setPi (setPi singleton x2 \ singleton) x2 \
         setPi singleton x3 \ singleton) x2 \ x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall singleton x5 \
         propId singleton
          (app
            (elim_setSigma
              (app
                (elim_setSigma x2 (x6 \
                  setPi
                   (setSigma (setPi singleton x7 \ singleton) x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton (app x7 x8) (app x7 x9)) x7 \
                   setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \
                  x6) x4) (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
            x5)
          (app
            (elim_setSigma
              (app
                (elim_setSigma x3 (x6 \
                  setPi
                   (setSigma (setPi singleton x7 \ singleton) x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton (app x7 x8) (app x7 x9)) x7 \
                   setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \
                  x6) x4) (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
            x5))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ propEq singleton x6 star) =>
       locDecl x1 (setPi singleton x6 \ propEq singleton x6 star) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ propId singleton x6 star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         =>
         locDecl x4
          (setSigma (setPi singleton x6 \ propId singleton x6 star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2
             (propEq (setPi singleton x6 \ propEq singleton x6 star) x0 x1)
             =>
             locDecl x5 (forall singleton x6 \ propId singleton star star) =>
              interp x2 x5 =>
               spy
                (tau
                  (setPi (setPi singleton x6 \ singleton) x6 \
                    setPi singleton x7 \ singleton)
                  (setPi (setPi singleton x6 \ singleton) x6 \
                    setPi singleton x7 \ singleton) (X898 x3 x4 x5))
"
"4____[+[Begin 
tau
 (setPi (setPi singleton x6 \ singleton) x6 \ setPi singleton x7 \ singleton)
 (setPi (setPi singleton x6 \ singleton) x6 \ setPi singleton x7 \ singleton)
 (X898 x3 x4 x5)
"
"4----]-]Success  
tau
 (setPi (setPi singleton x6 \ singleton) x6 \ setPi singleton x7 \ singleton)
 (setPi (setPi singleton x6 \ singleton) x6 \ setPi singleton x7 \ singleton)
 x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ propEq singleton x6 star) =>
       locDecl x1 (setPi singleton x6 \ propEq singleton x6 star) =>
        locDecl x3
         (setSigma (setPi singleton x6 \ propId singleton x6 star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         =>
         locDecl x4
          (setSigma (setPi singleton x6 \ propId singleton x6 star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2
             (propEq (setPi singleton x6 \ propEq singleton x6 star) x0 x1)
             =>
             locDecl x5 (forall singleton x6 \ propId singleton star star) =>
              interp x2 x5 =>
               spy
                (tau
                  (setPi (setPi singleton x6 \ singleton) x6 \
                    setPi singleton x7 \ singleton)
                  (setPi (setPi singleton x6 \ singleton) x6 \
                    setPi singleton x7 \ singleton) x6 \ x6)
"
"2--]-]Success  
interp
 (setPi (setPi singleton x0 \ propEq singleton x0 star) x0 \
   setPi (setPi singleton x1 \ singleton) x1 \ setPi singleton x2 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x0 \ propId singleton x0 star) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \ propId singleton star star)
     x0 \
     setSigma
      (setPi
        (setSigma (setPi singleton x1 \ singleton) x1 \
          forall singleton x2 \
           forall singleton x3 \
            forall (propId singleton x2 x3) x4 \
             propId singleton (app x1 x2) (app x1 x3)) x1 \
        setSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x1 \
      forall
       (setSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \
       forall
        (setSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        forall
         (forall singleton x4 \
           propId singleton
            (app
              (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \
                x6 \ x5) x4)
            (app
              (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \
                x6 \ x5) x4)) x4 \
         forall singleton x5 \
          propId singleton
           (app
             (elim_setSigma (app x1 x2) (x6 \ setPi singleton x7 \ singleton)
               x6 \ x7 \ x6) x5)
           (app
             (elim_setSigma (app x1 x3) (x6 \ setPi singleton x7 \ singleton)
               x6 \ x7 \ x6) x5)) x0 \
   forall
    (setSigma (setPi singleton x1 \ propId singleton x1 star) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \ propId singleton star star) x1 \
    forall
     (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \ propId singleton star star)
     x2 \
     forall (forall singleton x3 \ propId singleton star star) x3 \
      forall
       (setSigma (setPi singleton x4 \ singleton) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall singleton x5 \
        propId singleton
         (app
           (elim_setSigma
             (app
               (elim_setSigma (app x0 x1) (x6 \
                 setPi
                  (setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x7 \
                  setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6)
               x4) (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5)
         (app
           (elim_setSigma
             (app
               (elim_setSigma (app x0 x2) (x6 \
                 setPi
                  (setSigma (setPi singleton x7 \ singleton) x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton (app x7 x8) (app x7 x9)) x7 \
                  setSigma (setPi singleton x8 \ singleton) x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6)
               x4) (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5))
"
"2__[+[Begin 
setoid_eq
 (setPi (setPi singleton x0 \ propEq singleton x0 star) x0 \
   setPi (setPi singleton x1 \ singleton) x1 \ setPi singleton x2 \ singleton)
 X899
"
"3___[+[Begin 
interp (setPi singleton x0 \ propEq singleton x0 star) X900
"
"4____[+[Begin 
interp singleton X901
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => interp (propEq singleton x0 star) (X902 x1)
"
"5_____[+[Begin 
setoid_eq singleton X903^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa x0 singleton X904^2
"
"6______[+[Begin 
of x0 X905^2 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X906^2
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X907^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X904^2 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa star singleton X908^2
"
"6______[+[Begin 
of star X909^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X910^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X911^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X908^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X902 x1 = propId singleton x1 star
"
"5-----]-]Success  
propId singleton x1 star = propId singleton x1 star
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     interp (propEq singleton x0 star) (propId singleton x1 star)
"
"4____[+[Begin 
setoid_eq singleton X912
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => setoid_eq (propEq singleton x0 star) (X913 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     (setoid_eq (propEq singleton x0 star) x2 \ x3 \
       propId singleton star star)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 =>
               spy
                (tau (propEq singleton x0 star) (propEq singleton x1 star)
                  (X914 x3 x4 x5))
"
"5_____[+[Begin 
tau (propEq singleton x0 star) (propEq singleton x1 star) (X914 x3 x4 x5)
"
"6______[+[Begin 
tau_proof_eq x0 x1 singleton X915^6
"
"7_______[+[Begin 
locDecl X916^6 (propEq _ x0 x1)
"
"7-------]-]Success  
locDecl x2 (propEq _ x0 x1)
"
"7_______[+[Begin 
interp_isa x2 (propEq singleton x0 x1) X915^6
"
"8________[+[Begin 
of x2 X917^6 ext
"
"8--------]-]Success  
of x2 (propEq singleton x0 x1) ext
"
"8________[+[Begin 
interp x2 X918^6
"
"8--------]-]Success  
interp x2 x5
"
"8________[+[Begin 
tau (propEq singleton x0 x1) (propEq singleton x0 x1) X919^6
"
"8--------]-]Success  
tau (propEq singleton x0 x1) (propEq singleton x0 x1) x6 \ x6
"
"8________[+[Begin 
X915^6 = x5
"
"8--------]-]Success  
x5 = x5
"
"7-------]-]Success  
interp_isa x2 (propEq singleton x0 x1) x5
"
"6------]-]Success  
tau_proof_eq x0 x1 singleton x5
"
"6______[+[Begin 
tau_proof_eq star star singleton X920^6
"
"7_______[+[Begin 
interp_isa star singleton X921^6
"
"8________[+[Begin 
of star X922^6 ext
"
"8--------]-]Success  
of star singleton ext
"
"8________[+[Begin 
interp star X923^6
"
"8--------]-]Success  
interp star star
"
"8________[+[Begin 
tau singleton singleton X924^6
"
"8--------]-]Success  
tau singleton singleton x6 \ x6
"
"8________[+[Begin 
X921^6 = star
"
"8--------]-]Success  
star = star
"
"7-------]-]Success  
interp_isa star singleton star
"
"7_______[+[Begin 
setoid_refl singleton X925^6
"
"7-------]-]Success  
setoid_refl singleton x6 \ id singleton x6
"
"7_______[+[Begin 
X920^6 = id singleton star
"
"7-------]-]Success  
id singleton star = id singleton star
"
"6------]-]Success  
tau_proof_eq star star singleton (id singleton star)
"
"6______[+[Begin 
interp_isa x0 singleton X926^6
"
"7_______[+[Begin 
of x0 X927^6 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X928^6
"
"7-------]-]Success  
interp x0 x3
"
"7_______[+[Begin 
tau singleton singleton X929^6
"
"7-------]-]Success  
tau singleton singleton x6 \ x6
"
"7_______[+[Begin 
X926^6 = x3
"
"7-------]-]Success  
x3 = x3
"
"6------]-]Success  
interp_isa x0 singleton x3
"
"6______[+[Begin 
interp_isa star singleton X930^6
"
"7_______[+[Begin 
of star X931^6 ext
"
"7-------]-]Success  
of star singleton ext
"
"7_______[+[Begin 
interp star X932^6
"
"7-------]-]Success  
interp star star
"
"7_______[+[Begin 
tau singleton singleton X933^6
"
"7-------]-]Success  
tau singleton singleton x6 \ x6
"
"7_______[+[Begin 
X930^6 = star
"
"7-------]-]Success  
star = star
"
"6------]-]Success  
interp_isa star singleton star
"
"6______[+[Begin 
interp_isa x1 singleton X934^6
"
"7_______[+[Begin 
of x1 X935^6 ext
"
"7-------]-]Success  
of x1 singleton ext
"
"7_______[+[Begin 
interp x1 X936^6
"
"7-------]-]Success  
interp x1 x4
"
"7_______[+[Begin 
tau singleton singleton X937^6
"
"7-------]-]Success  
tau singleton singleton x6 \ x6
"
"7_______[+[Begin 
X934^6 = x4
"
"7-------]-]Success  
x4 = x4
"
"6------]-]Success  
interp_isa x1 singleton x4
"
"6______[+[Begin 
interp_isa star singleton X938^6
"
"7_______[+[Begin 
of star X939^6 ext
"
"7-------]-]Success  
of star singleton ext
"
"7_______[+[Begin 
interp star X940^6
"
"7-------]-]Success  
interp star star
"
"7_______[+[Begin 
tau singleton singleton X941^6
"
"7-------]-]Success  
tau singleton singleton x6 \ x6
"
"7_______[+[Begin 
X938^6 = star
"
"7-------]-]Success  
star = star
"
"6------]-]Success  
interp_isa star singleton star
"
"6______[+[Begin 
interp singleton X942^6
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
X914 x3 x4 x5 = (x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6)
"
"6------]-]Success  
(x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6) = (x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6)
"
"5-----]-]Success  
tau (propEq singleton x0 star) (propEq singleton x1 star) x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 =>
               spy
                (tau (propEq singleton x0 star) (propEq singleton x1 star)
                  x6 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x3)
                             x4) x5) star) star) (id singleton star)) x6)
"
"3---]-]Success  
interp (setPi singleton x0 \ propEq singleton x0 star)
 (setSigma (setPi singleton x0 \ propId singleton x0 star) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \ propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton x2 star) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    interp x0 x1 =>
     interp
      (setPi (setPi singleton x2 \ singleton) x2 \
        setPi singleton x3 \ singleton) (X943 x1)
"
"4____[+[Begin 
interp (setPi singleton x2 \ singleton) X944^2
"
"5_____[+[Begin 
interp singleton X945^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X946^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X947^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X948^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X949^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X949^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4----]-]Success  
interp (setPi singleton x2 \ singleton)
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => interp (setPi singleton x4 \ singleton) (X950^2 x3)
"
"5_____[+[Begin 
interp singleton X951^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X952^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X953^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X954^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton (X955^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X955^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     interp (setPi singleton x4 \ singleton)
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6))
"
"4____[+[Begin 
setoid_eq (setPi singleton x2 \ singleton) X956^2
"
"5_____[+[Begin 
interp singleton X957^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X958^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X959^2 x3)))
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"4----]-]Success  
setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
 forall singleton x4 \
  propId singleton
   (app (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
   (app (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => setoid_eq (setPi singleton x4 \ singleton) (X960^2 x3)
"
"5_____[+[Begin 
interp singleton X961^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X962^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton (X963^4 x5)))
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     (setoid_eq (setPi singleton x4 \ singleton) x4 \ x5 \
       forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)
         (app
           (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (setPi singleton x8 \ singleton) =>
       locDecl x3 (setPi singleton x8 \ singleton) =>
        locDecl x5
         (setSigma (setPi singleton x8 \ singleton) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton (app x8 x9) (app x8 x10)) =>
         locDecl x6
          (setSigma (setPi singleton x8 \ singleton) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton (app x8 x9) (app x8 x10)) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (setPi singleton x8 \ singleton) x2 x3) =>
             locDecl x7
              (forall singleton x8 \
                propId singleton
                 (app
                   (elim_setSigma x5 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)
                 (app
                   (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)) =>
              interp x4 x7 =>
               spy
                (tau (setPi singleton x8 \ singleton)
                  (setPi singleton x8 \ singleton) (X964^2 x5 x6 x7))
"
"5_____[+[Begin 
tau (setPi singleton x8 \ singleton) (setPi singleton x8 \ singleton)
 (X964^2 x5 x6 x7)
"
"5-----]-]Success  
tau (setPi singleton x8 \ singleton) (setPi singleton x8 \ singleton) x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (setPi singleton x8 \ singleton) =>
       locDecl x3 (setPi singleton x8 \ singleton) =>
        locDecl x5
         (setSigma (setPi singleton x8 \ singleton) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton (app x8 x9) (app x8 x10)) =>
         locDecl x6
          (setSigma (setPi singleton x8 \ singleton) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton (app x8 x9) (app x8 x10)) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (setPi singleton x8 \ singleton) x2 x3) =>
             locDecl x7
              (forall singleton x8 \
                propId singleton
                 (app
                   (elim_setSigma x5 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)
                 (app
                   (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)) =>
              interp x4 x7 =>
               spy
                (tau (setPi singleton x8 \ singleton)
                  (setPi singleton x8 \ singleton) x8 \ x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton x2 star) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    interp x0 x1 =>
     interp
      (setPi (setPi singleton x2 \ singleton) x2 \
        setPi singleton x3 \ singleton)
      (setSigma
        (setPi
          (setSigma (setPi singleton x2 \ singleton) x2 \
            forall singleton x3 \
             forall singleton x4 \
              forall (propId singleton x3 x4) x5 \
               propId singleton (app x2 x3) (app x2 x4)) x2 \
          setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x2 \
        forall
         (setSigma (setPi singleton x3 \ singleton) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \
         forall
          (setSigma (setPi singleton x4 \ singleton) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \
          forall
           (forall singleton x5 \
             propId singleton
              (app
                (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                  x7 \ x6) x5)
              (app
                (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                  x7 \ x6) x5)) x5 \
           forall singleton x6 \
            propId singleton
             (app
               (elim_setSigma (app x2 x3) (x7 \
                 setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)
             (app
               (elim_setSigma (app x2 x4) (x7 \
                 setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton x2 star) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    interp x0 x1 =>
     ((interp
        (setPi (setPi singleton x2 \ singleton) x2 \
          setPi singleton x3 \ singleton)
        (setSigma
          (setPi
            (setSigma (setPi singleton x2 \ singleton) x2 \
              forall singleton x3 \
               forall singleton x4 \
                forall (propId singleton x3 x4) x5 \
                 propId singleton (app x2 x3) (app x2 x4)) x2 \
            setSigma (setPi singleton x3 \ singleton) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x2 \
          forall
           (setSigma (setPi singleton x3 \ singleton) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x3 \
           forall
            (setSigma (setPi singleton x4 \ singleton) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (forall singleton x5 \
               propId singleton
                (app
                  (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton)
                    x6 \ x7 \ x6) x5)
                (app
                  (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton)
                    x6 \ x7 \ x6) x5)) x5 \
             forall singleton x6 \
              propId singleton
               (app
                 (elim_setSigma (app x2 x3) (x7 \
                   setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)
               (app
                 (elim_setSigma (app x2 x4) (x7 \
                   setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6))),
     (setoid_eq
       (setPi (setPi singleton x2 \ singleton) x2 \
         setPi singleton x3 \ singleton) (X965 x1)))
"
"4____[+[Begin 
interp (setPi singleton x2 \ singleton) X966^2
"
"5_____[+[Begin 
interp singleton X967^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X968^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X969^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X970^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X971^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X971^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4----]-]Success  
interp (setPi singleton x2 \ singleton)
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => interp (setPi singleton x4 \ singleton) (X972^2 x3)
"
"5_____[+[Begin 
interp singleton X973^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X974^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X975^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X976^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton (X977^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X977^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     interp (setPi singleton x4 \ singleton)
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6))
"
"4____[+[Begin 
setoid_eq (setPi singleton x2 \ singleton) X978^2
"
"5_____[+[Begin 
interp singleton X979^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X980^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X981^2 x3)))
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"4----]-]Success  
setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
 forall singleton x4 \
  propId singleton
   (app (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
   (app (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => setoid_eq (setPi singleton x4 \ singleton) (X982^2 x3)
"
"5_____[+[Begin 
interp singleton X983^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X984^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton (X985^4 x5)))
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     (setoid_eq (setPi singleton x4 \ singleton) x4 \ x5 \
       forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)
         (app
           (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (setPi singleton x8 \ singleton) =>
       locDecl x3 (setPi singleton x8 \ singleton) =>
        locDecl x5
         (setSigma (setPi singleton x8 \ singleton) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton (app x8 x9) (app x8 x10)) =>
         locDecl x6
          (setSigma (setPi singleton x8 \ singleton) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton (app x8 x9) (app x8 x10)) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (setPi singleton x8 \ singleton) x2 x3) =>
             locDecl x7
              (forall singleton x8 \
                propId singleton
                 (app
                   (elim_setSigma x5 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)
                 (app
                   (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)) =>
              interp x4 x7 =>
               spy
                (tau (setPi singleton x8 \ singleton)
                  (setPi singleton x8 \ singleton) (X986^2 x5 x6 x7))
"
"5_____[+[Begin 
tau (setPi singleton x8 \ singleton) (setPi singleton x8 \ singleton)
 (X986^2 x5 x6 x7)
"
"5-----]-]Success  
tau (setPi singleton x8 \ singleton) (setPi singleton x8 \ singleton) x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (setPi singleton x8 \ singleton) =>
       locDecl x3 (setPi singleton x8 \ singleton) =>
        locDecl x5
         (setSigma (setPi singleton x8 \ singleton) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton (app x8 x9) (app x8 x10)) =>
         locDecl x6
          (setSigma (setPi singleton x8 \ singleton) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton (app x8 x9) (app x8 x10)) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (setPi singleton x8 \ singleton) x2 x3) =>
             locDecl x7
              (forall singleton x8 \
                propId singleton
                 (app
                   (elim_setSigma x5 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)
                 (app
                   (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)) =>
              interp x4 x7 =>
               spy
                (tau (setPi singleton x8 \ singleton)
                  (setPi singleton x8 \ singleton) x8 \ x8)
"
"4____[+[Begin 
interp (setPi singleton x2 \ singleton) X987^2
"
"5_____[+[Begin 
interp singleton X988^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X989^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X990^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X991^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton (X992^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X992^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4----]-]Success  
interp (setPi singleton x2 \ singleton)
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => interp (setPi singleton x4 \ singleton) (X993^2 x3)
"
"5_____[+[Begin 
interp singleton X994^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X995^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X996^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X997^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton (X998^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X998^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     interp (setPi singleton x4 \ singleton)
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     ((interp (setPi singleton x4 \ singleton)
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6))),
     (setoid_eq (setPi singleton x4 \ singleton) (X999^2 x3)))
"
"5_____[+[Begin 
interp singleton X1000^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1001^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X1002^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X1003^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 =>
               spy (tau singleton singleton (X1004^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X1004^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"5_____[+[Begin 
interp singleton X1005^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1006^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton (X1007^4 x5)))
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     ((interp (setPi singleton x4 \ singleton)
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6))),
     (setoid_eq (setPi singleton x4 \ singleton) x4 \ x5 \
       forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)
         (app
           (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton x2 star) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    interp x0 x1 =>
     ((interp
        (setPi (setPi singleton x2 \ singleton) x2 \
          setPi singleton x3 \ singleton)
        (setSigma
          (setPi
            (setSigma (setPi singleton x2 \ singleton) x2 \
              forall singleton x3 \
               forall singleton x4 \
                forall (propId singleton x3 x4) x5 \
                 propId singleton (app x2 x3) (app x2 x4)) x2 \
            setSigma (setPi singleton x3 \ singleton) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x2 \
          forall
           (setSigma (setPi singleton x3 \ singleton) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x3 \
           forall
            (setSigma (setPi singleton x4 \ singleton) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (forall singleton x5 \
               propId singleton
                (app
                  (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton)
                    x6 \ x7 \ x6) x5)
                (app
                  (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton)
                    x6 \ x7 \ x6) x5)) x5 \
             forall singleton x6 \
              propId singleton
               (app
                 (elim_setSigma (app x2 x3) (x7 \
                   setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6)
               (app
                 (elim_setSigma (app x2 x4) (x7 \
                   setPi singleton x8 \ singleton) x7 \ x8 \ x7) x6))),
     (setoid_eq
       (setPi (setPi singleton x2 \ singleton) x2 \
         setPi singleton x3 \ singleton) x2 \ x3 \
       forall
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall singleton x5 \
         propId singleton
          (app
            (elim_setSigma
              (app
                (elim_setSigma x2 (x6 \
                  setPi
                   (setSigma (setPi singleton x7 \ singleton) x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton (app x7 x8) (app x7 x9)) x7 \
                   setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \
                  x6) x4) (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
            x5)
          (app
            (elim_setSigma
              (app
                (elim_setSigma x3 (x6 \
                  setPi
                   (setSigma (setPi singleton x7 \ singleton) x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton (app x7 x8) (app x7 x9)) x7 \
                   setSigma (setPi singleton x8 \ singleton) x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \
                  x6) x4) (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6)
            x5)))
"
"2--]-]Success  
setoid_eq
 (setPi (setPi singleton x0 \ propEq singleton x0 star) x0 \
   setPi (setPi singleton x1 \ singleton) x1 \ setPi singleton x2 \ singleton)
 x0 \ x1 \
 forall
  (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \ propId singleton star star) x2 \
  forall
   (setSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \
   forall singleton x4 \
    propId singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma
             (app
               (elim_setSigma x0 (x5 \
                 setPi
                  (setSigma (setPi singleton x6 \ propId singleton x6 star)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  setSigma
                   (setPi
                     (setSigma (setPi singleton x7 \ singleton) x7 \
                       forall singleton x8 \
                        forall singleton x9 \
                         forall (propId singleton x8 x9) x10 \
                          propId singleton (app x7 x8) (app x7 x9)) x7 \
                     setSigma (setPi singleton x8 \ singleton) x8 \
                      forall singleton x9 \
                       forall singleton x10 \
                        forall (propId singleton x9 x10) x11 \
                         propId singleton (app x8 x9) (app x8 x10)) x7 \
                   forall
                    (setSigma (setPi singleton x8 \ singleton) x8 \
                      forall singleton x9 \
                       forall singleton x10 \
                        forall (propId singleton x9 x10) x11 \
                         propId singleton (app x8 x9) (app x8 x10)) x8 \
                    forall
                     (setSigma (setPi singleton x9 \ singleton) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton (app x9 x10) (app x9 x11)) x9 \
                     forall
                      (forall singleton x10 \
                        propId singleton
                         (app
                           (elim_setSigma x8 (x11 \
                             setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                           x10)
                         (app
                           (elim_setSigma x9 (x11 \
                             setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                           x10)) x10 \
                      forall singleton x11 \
                       propId singleton
                        (app
                          (elim_setSigma (app x7 x8) (x12 \
                            setPi singleton x13 \ singleton) x12 \ x13 \ x12)
                          x11)
                        (app
                          (elim_setSigma (app x7 x9) (x12 \
                            setPi singleton x13 \ singleton) x12 \ x13 \ x12)
                          x11)) x5 \ x6 \ x5) x2) (x5 \
             setPi
              (setSigma (setPi singleton x6 \ singleton) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton (app x6 x7) (app x6 x8)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
         (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
     (app
       (elim_setSigma
         (app
           (elim_setSigma
             (app
               (elim_setSigma x1 (x5 \
                 setPi
                  (setSigma (setPi singleton x6 \ propId singleton x6 star)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  setSigma
                   (setPi
                     (setSigma (setPi singleton x7 \ singleton) x7 \
                       forall singleton x8 \
                        forall singleton x9 \
                         forall (propId singleton x8 x9) x10 \
                          propId singleton (app x7 x8) (app x7 x9)) x7 \
                     setSigma (setPi singleton x8 \ singleton) x8 \
                      forall singleton x9 \
                       forall singleton x10 \
                        forall (propId singleton x9 x10) x11 \
                         propId singleton (app x8 x9) (app x8 x10)) x7 \
                   forall
                    (setSigma (setPi singleton x8 \ singleton) x8 \
                      forall singleton x9 \
                       forall singleton x10 \
                        forall (propId singleton x9 x10) x11 \
                         propId singleton (app x8 x9) (app x8 x10)) x8 \
                    forall
                     (setSigma (setPi singleton x9 \ singleton) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton (app x9 x10) (app x9 x11)) x9 \
                     forall
                      (forall singleton x10 \
                        propId singleton
                         (app
                           (elim_setSigma x8 (x11 \
                             setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                           x10)
                         (app
                           (elim_setSigma x9 (x11 \
                             setPi singleton x12 \ singleton) x11 \ x12 \ x11)
                           x10)) x10 \
                      forall singleton x11 \
                       propId singleton
                        (app
                          (elim_setSigma (app x7 x8) (x12 \
                            setPi singleton x13 \ singleton) x12 \ x13 \ x12)
                          x11)
                        (app
                          (elim_setSigma (app x7 x9) (x12 \
                            setPi singleton x13 \ singleton) x12 \ x13 \ x12)
                          x11)) x5 \ x6 \ x5) x2) (x5 \
             setPi
              (setSigma (setPi singleton x6 \ singleton) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton (app x6 x7) (app x6 x8)) x6 \
              setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \ x5) x3)
         (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5) x4)
"
"2__[+[Begin 
interp singleton X1008
"
"2--]-]Success  
interp singleton singleton
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => interp (propEq singleton x0 star) (X1009 x1)
"
"3___[+[Begin 
setoid_eq singleton X1010^2
"
"3---]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
interp_isa x0 singleton X1011^2
"
"4____[+[Begin 
of x0 X1012^2 ext
"
"4----]-]Success  
of x0 singleton ext
"
"4____[+[Begin 
interp x0 X1013^2
"
"4----]-]Success  
interp x0 x1
"
"4____[+[Begin 
tau singleton singleton X1014^2
"
"4----]-]Success  
tau singleton singleton x2 \ x2
"
"4____[+[Begin 
X1011^2 = x1
"
"4----]-]Success  
x1 = x1
"
"3---]-]Success  
interp_isa x0 singleton x1
"
"3___[+[Begin 
interp_isa star singleton X1015^2
"
"4____[+[Begin 
of star X1016^2 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1017^2
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1018^2
"
"4----]-]Success  
tau singleton singleton x2 \ x2
"
"4____[+[Begin 
X1015^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
X1009 x1 = propId singleton x1 star
"
"3---]-]Success  
propId singleton x1 star = propId singleton x1 star
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     interp (propEq singleton x0 star) (propId singleton x1 star)
"
"2__[+[Begin 
setoid_eq singleton X1019
"
"2--]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => setoid_eq (propEq singleton x0 star) (X1020 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     (setoid_eq (propEq singleton x0 star) x2 \ x3 \
       propId singleton star star)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 =>
               spy
                (tau (propEq singleton x0 star) (propEq singleton x1 star)
                  (X1021 x3 x4 x5))
"
"3___[+[Begin 
tau (propEq singleton x0 star) (propEq singleton x1 star) (X1021 x3 x4 x5)
"
"4____[+[Begin 
tau_proof_eq x0 x1 singleton X1022^6
"
"5_____[+[Begin 
locDecl X1023^6 (propEq _ x0 x1)
"
"5-----]-]Success  
locDecl x2 (propEq _ x0 x1)
"
"5_____[+[Begin 
interp_isa x2 (propEq singleton x0 x1) X1022^6
"
"6______[+[Begin 
of x2 X1024^6 ext
"
"6------]-]Success  
of x2 (propEq singleton x0 x1) ext
"
"6______[+[Begin 
interp x2 X1025^6
"
"6------]-]Success  
interp x2 x5
"
"6______[+[Begin 
tau (propEq singleton x0 x1) (propEq singleton x0 x1) X1026^6
"
"6------]-]Success  
tau (propEq singleton x0 x1) (propEq singleton x0 x1) x6 \ x6
"
"6______[+[Begin 
X1022^6 = x5
"
"6------]-]Success  
x5 = x5
"
"5-----]-]Success  
interp_isa x2 (propEq singleton x0 x1) x5
"
"4----]-]Success  
tau_proof_eq x0 x1 singleton x5
"
"4____[+[Begin 
tau_proof_eq star star singleton X1027^6
"
"5_____[+[Begin 
interp_isa star singleton X1028^6
"
"6______[+[Begin 
of star X1029^6 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1030^6
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1031^6
"
"6------]-]Success  
tau singleton singleton x6 \ x6
"
"6______[+[Begin 
X1028^6 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
setoid_refl singleton X1032^6
"
"5-----]-]Success  
setoid_refl singleton x6 \ id singleton x6
"
"5_____[+[Begin 
X1027^6 = id singleton star
"
"5-----]-]Success  
id singleton star = id singleton star
"
"4----]-]Success  
tau_proof_eq star star singleton (id singleton star)
"
"4____[+[Begin 
interp_isa x0 singleton X1033^6
"
"5_____[+[Begin 
of x0 X1034^6 ext
"
"5-----]-]Success  
of x0 singleton ext
"
"5_____[+[Begin 
interp x0 X1035^6
"
"5-----]-]Success  
interp x0 x3
"
"5_____[+[Begin 
tau singleton singleton X1036^6
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"5_____[+[Begin 
X1033^6 = x3
"
"5-----]-]Success  
x3 = x3
"
"4----]-]Success  
interp_isa x0 singleton x3
"
"4____[+[Begin 
interp_isa star singleton X1037^6
"
"5_____[+[Begin 
of star X1038^6 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X1039^6
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X1040^6
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"5_____[+[Begin 
X1037^6 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa x1 singleton X1041^6
"
"5_____[+[Begin 
of x1 X1042^6 ext
"
"5-----]-]Success  
of x1 singleton ext
"
"5_____[+[Begin 
interp x1 X1043^6
"
"5-----]-]Success  
interp x1 x4
"
"5_____[+[Begin 
tau singleton singleton X1044^6
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"5_____[+[Begin 
X1041^6 = x4
"
"5-----]-]Success  
x4 = x4
"
"4----]-]Success  
interp_isa x1 singleton x4
"
"4____[+[Begin 
interp_isa star singleton X1045^6
"
"5_____[+[Begin 
of star X1046^6 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X1047^6
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X1048^6
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"5_____[+[Begin 
X1045^6 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp singleton X1049^6
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
X1021 x3 x4 x5 = (x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6)
"
"4----]-]Success  
(x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6) = (x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6)
"
"3---]-]Success  
tau (propEq singleton x0 star) (propEq singleton x1 star) x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
        star) star) (id singleton star)) x6
"
"2--]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 =>
               spy
                (tau (propEq singleton x0 star) (propEq singleton x1 star)
                  x6 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x3)
                             x4) x5) star) star) (id singleton star)) x6)
"
"2__[+[Begin 
interp (setPi singleton x2 \ singleton) X1050^2
"
"3___[+[Begin 
interp singleton X1051^2
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X1052^2 x3)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq singleton X1053^2
"
"3---]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X1054^2 x3)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1055^2 x5 x6 x7))
"
"4____[+[Begin 
tau singleton singleton (X1055^2 x5 x6 x7)
"
"4----]-]Success  
tau singleton singleton x8 \ x8
"
"3---]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"2--]-]Success  
interp (setPi singleton x2 \ singleton)
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => interp (setPi singleton x4 \ singleton) (X1056^2 x3)
"
"3___[+[Begin 
interp singleton X1057^4
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1058^4 x5)
"
"3---]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq singleton X1059^4
"
"3---]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"3___[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X1060^4 x5)
"
"3---]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"3___[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 =>
               spy (tau singleton singleton (X1061^4 x7 x8 x9))
"
"4____[+[Begin 
tau singleton singleton (X1061^4 x7 x8 x9)
"
"4----]-]Success  
tau singleton singleton x10 \ x10
"
"3---]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     interp (setPi singleton x4 \ singleton)
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6))
"
"2__[+[Begin 
setoid_eq (setPi singleton x2 \ singleton) X1062^2
"
"3___[+[Begin 
interp singleton X1063^2
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X1064^2 x3)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X1065^2 x3)))
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"2--]-]Success  
setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
 forall singleton x4 \
  propId singleton
   (app (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
   (app (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => setoid_eq (setPi singleton x4 \ singleton) (X1066^2 x3)
"
"3___[+[Begin 
interp singleton X1067^4
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1068^4 x5)
"
"3---]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"3___[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton (X1069^4 x5)))
"
"3---]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7))
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     (setoid_eq (setPi singleton x4 \ singleton) x4 \ x5 \
       forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)
         (app
           (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6))
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (setPi singleton x8 \ singleton) =>
       locDecl x3 (setPi singleton x8 \ singleton) =>
        locDecl x5
         (setSigma (setPi singleton x8 \ singleton) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton (app x8 x9) (app x8 x10)) =>
         locDecl x6
          (setSigma (setPi singleton x8 \ singleton) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton (app x8 x9) (app x8 x10)) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (setPi singleton x8 \ singleton) x2 x3) =>
             locDecl x7
              (forall singleton x8 \
                propId singleton
                 (app
                   (elim_setSigma x5 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)
                 (app
                   (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)) =>
              interp x4 x7 =>
               spy
                (tau (setPi singleton x8 \ singleton)
                  (setPi singleton x8 \ singleton) (X1070^2 x5 x6 x7))
"
"3___[+[Begin 
tau (setPi singleton x8 \ singleton) (setPi singleton x8 \ singleton)
 (X1070^2 x5 x6 x7)
"
"3---]-]Success  
tau (setPi singleton x8 \ singleton) (setPi singleton x8 \ singleton) x8 \ x8
"
"2--]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (setPi singleton x8 \ singleton) =>
       locDecl x3 (setPi singleton x8 \ singleton) =>
        locDecl x5
         (setSigma (setPi singleton x8 \ singleton) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton (app x8 x9) (app x8 x10)) =>
         locDecl x6
          (setSigma (setPi singleton x8 \ singleton) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton (app x8 x9) (app x8 x10)) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (setPi singleton x8 \ singleton) x2 x3) =>
             locDecl x7
              (forall singleton x8 \
                propId singleton
                 (app
                   (elim_setSigma x5 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)
                 (app
                   (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)) =>
              interp x4 x7 =>
               spy
                (tau (setPi singleton x8 \ singleton)
                  (setPi singleton x8 \ singleton) x8 \ x8)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton x2 star) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    interp x0 x1 =>
     setoid_tran
      (setPi (setPi singleton x2 \ singleton) x2 \
        setPi singleton x3 \ singleton) (X1071 x1)
"
"3___[+[Begin 
interp
 (setPi (setPi singleton x2 \ singleton) x2 \ setPi singleton x3 \ singleton)
 X1072^2
"
"4____[+[Begin 
interp (setPi singleton x2 \ singleton) X1073^2
"
"5_____[+[Begin 
interp singleton X1074^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X1075^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X1076^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X1077^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1078^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X1078^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4----]-]Success  
interp (setPi singleton x2 \ singleton)
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => interp (setPi singleton x4 \ singleton) (X1079^2 x3)
"
"5_____[+[Begin 
interp singleton X1080^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1081^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X1082^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X1083^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 =>
               spy (tau singleton singleton (X1084^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X1084^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     interp (setPi singleton x4 \ singleton)
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6))
"
"4____[+[Begin 
setoid_eq (setPi singleton x2 \ singleton) X1085^2
"
"5_____[+[Begin 
interp singleton X1086^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X1087^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X1088^2 x3)))
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"4----]-]Success  
setoid_eq (setPi singleton x2 \ singleton) x2 \ x3 \
 forall singleton x4 \
  propId singleton
   (app (elim_setSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
   (app (elim_setSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
     x4)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => setoid_eq (setPi singleton x4 \ singleton) (X1089^2 x3)
"
"5_____[+[Begin 
interp singleton X1090^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1091^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton (X1092^4 x5)))
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     (setoid_eq (setPi singleton x4 \ singleton) x4 \ x5 \
       forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)
         (app
           (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (setPi singleton x8 \ singleton) =>
       locDecl x3 (setPi singleton x8 \ singleton) =>
        locDecl x5
         (setSigma (setPi singleton x8 \ singleton) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton (app x8 x9) (app x8 x10)) =>
         locDecl x6
          (setSigma (setPi singleton x8 \ singleton) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton (app x8 x9) (app x8 x10)) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (setPi singleton x8 \ singleton) x2 x3) =>
             locDecl x7
              (forall singleton x8 \
                propId singleton
                 (app
                   (elim_setSigma x5 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)
                 (app
                   (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)) =>
              interp x4 x7 =>
               spy
                (tau (setPi singleton x8 \ singleton)
                  (setPi singleton x8 \ singleton) (X1093^2 x5 x6 x7))
"
"5_____[+[Begin 
tau (setPi singleton x8 \ singleton) (setPi singleton x8 \ singleton)
 (X1093^2 x5 x6 x7)
"
"5-----]-]Success  
tau (setPi singleton x8 \ singleton) (setPi singleton x8 \ singleton) x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (setPi singleton x8 \ singleton) =>
       locDecl x3 (setPi singleton x8 \ singleton) =>
        locDecl x5
         (setSigma (setPi singleton x8 \ singleton) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton (app x8 x9) (app x8 x10)) =>
         locDecl x6
          (setSigma (setPi singleton x8 \ singleton) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton (app x8 x9) (app x8 x10)) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (setPi singleton x8 \ singleton) x2 x3) =>
             locDecl x7
              (forall singleton x8 \
                propId singleton
                 (app
                   (elim_setSigma x5 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)
                 (app
                   (elim_setSigma x6 (x9 \ setPi singleton x10 \ singleton)
                     x9 \ x10 \ x9) x8)) =>
              interp x4 x7 =>
               spy
                (tau (setPi singleton x8 \ singleton)
                  (setPi singleton x8 \ singleton) x8 \ x8)
"
"3---]-]Success  
interp
 (setPi (setPi singleton x2 \ singleton) x2 \ setPi singleton x3 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     setSigma (setPi singleton x3 \ singleton) x3 \
      forall singleton x4 \
       forall singleton x5 \
        forall (propId singleton x4 x5) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x2 \
   forall
    (setSigma (setPi singleton x3 \ singleton) x3 \
      forall singleton x4 \
       forall singleton x5 \
        forall (propId singleton x4 x5) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x3 \
    forall
     (setSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (forall singleton x5 \
        propId singleton
         (app
           (elim_setSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
             x6) x5)
         (app
           (elim_setSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
             x6) x5)) x5 \
      forall singleton x6 \
       propId singleton
        (app
          (elim_setSigma (app x2 x3) (x7 \ setPi singleton x8 \ singleton)
            x7 \ x8 \ x7) x6)
        (app
          (elim_setSigma (app x2 x4) (x7 \ setPi singleton x8 \ singleton)
            x7 \ x8 \ x7) x6))
"
"3___[+[Begin 
setoid_eq
 (setPi (setPi singleton x2 \ singleton) x2 \ setPi singleton x3 \ singleton)
 X1094^2
"
"4____[+[Begin 
interp (setPi singleton x2 \ singleton) X1095^2
"
"5_____[+[Begin 
interp singleton X1096^2
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X1097^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X1098^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X1099^2 x3)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1100^2 x5 x6 x7))
"
"6______[+[Begin 
tau singleton singleton (X1100^2 x5 x6 x7)
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4----]-]Success  
interp (setPi singleton x2 \ singleton)
 (setSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => interp (setPi singleton x4 \ singleton) (X1101^2 x3)
"
"5_____[+[Begin 
interp singleton X1102^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1103^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X1104^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X1105^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 =>
               spy (tau singleton singleton (X1106^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X1106^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     interp (setPi singleton x4 \ singleton)
      (setSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6))
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     ((interp (setPi singleton x4 \ singleton)
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6))),
     (setoid_eq (setPi singleton x4 \ singleton) (X1107^2 x3)))
"
"5_____[+[Begin 
interp singleton X1108^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1109^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X1110^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X1111^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 =>
               spy (tau singleton singleton (X1112^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X1112^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"5_____[+[Begin 
interp singleton X1113^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1114^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton (X1115^4 x5)))
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     ((interp (setPi singleton x4 \ singleton)
        (setSigma (setPi singleton x4 \ singleton) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \
             propId singleton (app x4 x5) (app x4 x6))),
     (setoid_eq (setPi singleton x4 \ singleton) x4 \ x5 \
       forall singleton x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)
         (app
           (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \
             x7) x6)))
"
"3---]-]Success  
setoid_eq
 (setPi (setPi singleton x2 \ singleton) x2 \ setPi singleton x3 \ singleton)
 x2 \ x3 \
 forall
  (setSigma (setPi singleton x4 \ singleton) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \
       propId singleton (app x4 x5) (app x4 x6)) x4 \
  forall singleton x5 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x2 (x6 \
            setPi
             (setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x7 \
             setSigma (setPi singleton x8 \ singleton) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6) x4)
        (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x3 (x6 \
            setPi
             (setSigma (setPi singleton x7 \ singleton) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton (app x7 x8) (app x7 x9)) x7 \
             setSigma (setPi singleton x8 \ singleton) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6) x4)
        (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \ x6) x5)
"
"3___[+[Begin 
interp singleton X1116^2
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton (X1117^2 x3)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq singleton X1118^2
"
"3---]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => interp x2 x3 => setoid_eq singleton (X1119^2 x3)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1120^2 x5 x6 x7))
"
"4____[+[Begin 
tau singleton singleton (X1120^2 x5 x6 x7)
"
"4----]-]Success  
tau singleton singleton x8 \ x8
"
"3---]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3___[+[Begin 
interp singleton X1121^4
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1122^4 x5)
"
"3---]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq singleton X1123^4
"
"3---]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"3___[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X1124^4 x5)
"
"3---]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"3___[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 =>
               spy (tau singleton singleton (X1125^4 x7 x8 x9))
"
"4____[+[Begin 
tau singleton singleton (X1125^4 x7 x8 x9)
"
"4----]-]Success  
tau singleton singleton x10 \ x10
"
"3---]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 => setoid_tran (setPi singleton x4 \ singleton) (X1126^2 x3)
"
"4____[+[Begin 
interp (setPi singleton x4 \ singleton) X1127^4
"
"5_____[+[Begin 
interp singleton X1128^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1129^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
setoid_eq singleton X1130^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_eq singleton (X1131^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 =>
               spy (tau singleton singleton (X1132^4 x7 x8 x9))
"
"6______[+[Begin 
tau singleton singleton (X1132^4 x7 x8 x9)
"
"6------]-]Success  
tau singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          interp x4 x7 =>
           interp x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              interp x6 x9 => spy (tau singleton singleton x10 \ x10)
"
"4----]-]Success  
interp (setPi singleton x4 \ singleton)
 (setSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"4____[+[Begin 
setoid_eq (setPi singleton x4 \ singleton) X1133^4
"
"5_____[+[Begin 
interp singleton X1134^4
"
"5-----]-]Success  
interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton (X1135^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => interp singleton singleton
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton (X1136^4 x5)))
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 => ((interp singleton singleton),
     (setoid_eq singleton x6 \ x7 \ propId singleton x6 x7))
"
"4----]-]Success  
setoid_eq (setPi singleton x4 \ singleton) x4 \ x5 \
 forall singleton x6 \
  propId singleton
   (app (elim_setSigma x4 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
     x6)
   (app (elim_setSigma x5 (x7 \ setPi singleton x8 \ singleton) x7 \ x8 \ x7)
     x6)
"
"4____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton => interp x4 x5 => setoid_tran singleton (X1137^4 x5)
"
"5_____[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     locDecl x6 singleton =>
      locDecl x7 singleton =>
       locDecl x8 singleton =>
        locDecl x9 (propId singleton x6 x7) =>
         locDecl x10 (propId singleton x7 x8) =>
          spy
           (of
             (impl_app
               (elim_id x9 (x11 \ x12 \
                 implies (propId singleton x12 x8) (propId singleton x11 x8))
                 x11 \ impl_lam (propId singleton x11 x8) x12 \ x12) x10)
             (propId singleton x6 x8) int)
"
"6______[+[Begin 
of
 (impl_app
   (elim_id x9 (x11 \ x12 \
     implies (propId singleton x12 x8) (propId singleton x11 x8)) x11 \
     impl_lam (propId singleton x11 x8) x12 \ x12) x10)
 (propId singleton x6 x8) int
"
"7_______[+[Begin 
isa
 (elim_id x9 (x11 \ x12 \
   implies (propId singleton x12 x8) (propId singleton x11 x8)) x11 \
   impl_lam (propId singleton x11 x8) x12 \ x12)
 (implies X1138^11 (propId singleton x6 x8)) int
"
"8________[+[Begin 
of
 (elim_id x9 (x11 \ x12 \
   implies (propId singleton x12 x8) (propId singleton x11 x8)) x11 \
   impl_lam (propId singleton x11 x8) x12 \ x12) X1139^11 int
"
"9_________[+[Begin 
of x9 (propId X1140^11 X1141^11 X1142^11) int
"
"9---------]-]Success  
of x9 (propId singleton x6 x7) int
"
"9_________[+[Begin 
pi x11 \
 pi x12 \
  locDecl x11 singleton =>
   locDecl x12 singleton =>
    isaType (implies (propId singleton x12 x8) (propId singleton x11 x8))
     propc int
"
"10__________[+[Begin 
ofType (implies (propId singleton x12 x8) (propId singleton x11 x8)) X1143^13
 int
"
"11___________[+[Begin 
of x12 X1144^13 int
"
"11-----------]-]Success  
of x12 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of x8 X1145^13 int
"
"11-----------]-]Success  
of x8 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X1143^13 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"11___________[+[Begin 
of x11 X1146^14 int
"
"11-----------]-]Success  
of x11 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of x8 X1147^14 int
"
"11-----------]-]Success  
of x8 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(props = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
ofType (implies (propId singleton x12 x8) (propId singleton x11 x8)) props
 int
"
"10__________[+[Begin 
pts_leq props propc
"
"10----------]-]Success  
pts_leq props propc
"
"9---------]-]Success  
pi x11 \
 pi x12 \
  locDecl x11 singleton =>
   locDecl x12 singleton =>
    isaType (implies (propId singleton x12 x8) (propId singleton x11 x8))
     propc int
"
"9_________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  of (impl_lam (propId singleton x11 x8) x12 \ x12)
   (implies (propId singleton x11 x8) (propId singleton x11 x8)) int
"
"10__________[+[Begin 
isaType (propId singleton x11 x8) propc int
"
"11___________[+[Begin 
ofType (propId singleton x11 x8) X1148^12 int
"
"12____________[+[Begin 
of x11 X1149^12 int
"
"12------------]-]Success  
of x11 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
of x8 X1150^12 int
"
"12------------]-]Success  
of x8 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
(pts_leq set set),
(X1148^12 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"11-----------]-]Success  
ofType (propId singleton x11 x8) props int
"
"11___________[+[Begin 
pts_leq props propc
"
"11-----------]-]Success  
pts_leq props propc
"
"10----------]-]Success  
isaType (propId singleton x11 x8) propc int
"
"10__________[+[Begin 
isaType (propId singleton x11 x8) propc int
"
"11___________[+[Begin 
ofType (propId singleton x11 x8) X1151^12 int
"
"12____________[+[Begin 
of x11 X1152^12 int
"
"12------------]-]Success  
of x11 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
of x8 X1153^12 int
"
"12------------]-]Success  
of x8 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
(pts_leq set set),
(X1151^12 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"11-----------]-]Success  
ofType (propId singleton x11 x8) props int
"
"11___________[+[Begin 
pts_leq props propc
"
"11-----------]-]Success  
pts_leq props propc
"
"10----------]-]Success  
isaType (propId singleton x11 x8) propc int
"
"10__________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x11 x8) =>
  isa x12 (propId singleton x11 x8) int
"
"11___________[+[Begin 
of x12 X1154^13 int
"
"11-----------]-]Success  
of x12 (propId singleton x11 x8) int
"
"11___________[+[Begin 
conv (propId singleton x11 x8) (propId singleton x11 x8)
"
"11-----------]-]Success  
conv (propId singleton x11 x8) (propId singleton x11 x8)
"
"10----------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x11 x8) =>
  isa x12 (propId singleton x11 x8) int
"
"9---------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  of (impl_lam (propId singleton x11 x8) x12 \ x12)
   (implies (propId singleton x11 x8) (propId singleton x11 x8)) int
"
"8--------]-]Success  
of
 (elim_id x9 (x11 \ x12 \
   implies (propId singleton x12 x8) (propId singleton x11 x8)) x11 \
   impl_lam (propId singleton x11 x8) x12 \ x12)
 (implies (propId singleton x7 x8) (propId singleton x6 x8)) int
"
"8________[+[Begin 
conv (implies (propId singleton x7 x8) (propId singleton x6 x8))
 (implies X1138^11 (propId singleton x6 x8))
"
"8--------]-]Success  
conv (implies (propId singleton x7 x8) (propId singleton x6 x8))
 (implies (propId singleton x7 x8) (propId singleton x6 x8))
"
"7-------]-]Success  
isa
 (elim_id x9 (x11 \ x12 \
   implies (propId singleton x12 x8) (propId singleton x11 x8)) x11 \
   impl_lam (propId singleton x11 x8) x12 \ x12)
 (implies (propId singleton x7 x8) (propId singleton x6 x8)) int
"
"7_______[+[Begin 
isa x10 (propId singleton x7 x8) int
"
"8________[+[Begin 
of x10 X1155^11 int
"
"8--------]-]Success  
of x10 (propId singleton x7 x8) int
"
"8________[+[Begin 
conv (propId singleton x7 x8) (propId singleton x7 x8)
"
"8--------]-]Success  
conv (propId singleton x7 x8) (propId singleton x7 x8)
"
"7-------]-]Success  
isa x10 (propId singleton x7 x8) int
"
"6------]-]Success  
of
 (impl_app
   (elim_id x9 (x11 \ x12 \
     implies (propId singleton x12 x8) (propId singleton x11 x8)) x11 \
     impl_lam (propId singleton x11 x8) x12 \ x12) x10)
 (propId singleton x6 x8) int
"
"5-----]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     locDecl x6 singleton =>
      locDecl x7 singleton =>
       locDecl x8 singleton =>
        locDecl x9 (propId singleton x6 x7) =>
         locDecl x10 (propId singleton x7 x8) =>
          spy
           (of
             (impl_app
               (elim_id x9 (x11 \ x12 \
                 implies (propId singleton x12 x8) (propId singleton x11 x8))
                 x11 \ impl_lam (propId singleton x11 x8) x12 \ x12) x10)
             (propId singleton x6 x8) int)
"
"4----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    interp x4 x5 =>
     (setoid_tran singleton x6 \ x7 \ x8 \ x9 \ x10 \
       impl_app
        (elim_id x9 (x11 \ x12 \
          implies (propId singleton x12 x8) (propId singleton x11 x8)) x11 \
          impl_lam (propId singleton x11 x8) x12 \ x12) x10)
"
"4____[+[Begin 
X1126^2 x3 = (x4 \ x5 \ x6 \ x7 \ x8 \
 forall_lam singleton x9 \
  impl_app
   (elim_id (forall_app x7 x9) (x10 \ x11 \
     implies
      (propId singleton x11
        (app
          (elim_setSigma x6 (x12 \ setPi singleton x13 \ singleton) x12 \
            x13 \ x12) x9))
      (propId singleton x10
        (app
          (elim_setSigma x6 (x12 \ setPi singleton x13 \ singleton) x12 \
            x13 \ x12) x9))) x10 \
     impl_lam
      (propId singleton x10
        (app
          (elim_setSigma x6 (x11 \ setPi singleton x12 \ singleton) x11 \
            x12 \ x11) x9)) x11 \ x11) (forall_app x8 x9))
"
"4----]-]Success  
(x4 \ x5 \ x6 \ x7 \ x8 \
 forall_lam singleton x9 \
  impl_app
   (elim_id (forall_app x7 x9) (x10 \ x11 \
     implies
      (propId singleton x11
        (app
          (elim_setSigma x6 (x12 \ setPi singleton x13 \ singleton) x12 \
            x13 \ x12) x9))
      (propId singleton x10
        (app
          (elim_setSigma x6 (x12 \ setPi singleton x13 \ singleton) x12 \
            x13 \ x12) x9))) x10 \
     impl_lam
      (propId singleton x10
        (app
          (elim_setSigma x6 (x11 \ setPi singleton x12 \ singleton) x11 \
            x12 \ x11) x9)) x11 \ x11) (forall_app x8 x9)) = (x4 \ x5 \ x6 \
 x7 \ x8 \
 forall_lam singleton x9 \
  impl_app
   (elim_id (forall_app x7 x9) (x10 \ x11 \
     implies
      (propId singleton x11
        (app
          (elim_setSigma x6 (x12 \ setPi singleton x13 \ singleton) x12 \
            x13 \ x12) x9))
      (propId singleton x10
        (app
          (elim_setSigma x6 (x12 \ setPi singleton x13 \ singleton) x12 \
            x13 \ x12) x9))) x10 \
     impl_lam
      (propId singleton x10
        (app
          (elim_setSigma x6 (x11 \ setPi singleton x12 \ singleton) x11 \
            x12 \ x11) x9)) x11 \ x11) (forall_app x8 x9))
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (setPi singleton x4 \ singleton) =>
   locDecl x3
    (setSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) =>
    interp x2 x3 =>
     (setoid_tran (setPi singleton x4 \ singleton) x4 \ x5 \ x6 \ x7 \ x8 \
       forall_lam singleton x9 \
        impl_app
         (elim_id (forall_app x7 x9) (x10 \ x11 \
           implies
            (propId singleton x11
              (app
                (elim_setSigma x6 (x12 \ setPi singleton x13 \ singleton)
                  x12 \ x13 \ x12) x9))
            (propId singleton x10
              (app
                (elim_setSigma x6 (x12 \ setPi singleton x13 \ singleton)
                  x12 \ x13 \ x12) x9))) x10 \
           impl_lam
            (propId singleton x10
              (app
                (elim_setSigma x6 (x11 \ setPi singleton x12 \ singleton)
                  x11 \ x12 \ x11) x9)) x11 \ x11) (forall_app x8 x9))
"
"3___[+[Begin 
X1071 x1 = (x2 \ x3 \ x4 \ x5 \ x6 \
 forall_lam
  (setSigma (setPi singleton x7 \ singleton) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \
       propId singleton (app x7 x8) (app x7 x9)) x7 \
  forall_lam singleton x8 \
   impl_app
    (elim_id (forall_app (forall_app x5 x7) x8) (x9 \ x10 \
      implies
       (propId singleton x10
         (app
           (elim_setSigma
             (app
               (elim_setSigma x4 (x11 \
                 setPi
                  (setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x12 \
                  setSigma (setPi singleton x13 \ singleton) x13 \
                   forall singleton x14 \
                    forall singleton x15 \
                     forall (propId singleton x14 x15) x16 \
                      propId singleton (app x13 x14) (app x13 x15)) x11 \
                 x12 \ x11) x7) (x11 \ setPi singleton x12 \ singleton) x11 \
             x12 \ x11) x8))
       (propId singleton x9
         (app
           (elim_setSigma
             (app
               (elim_setSigma x4 (x11 \
                 setPi
                  (setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x12 \
                  setSigma (setPi singleton x13 \ singleton) x13 \
                   forall singleton x14 \
                    forall singleton x15 \
                     forall (propId singleton x14 x15) x16 \
                      propId singleton (app x13 x14) (app x13 x15)) x11 \
                 x12 \ x11) x7) (x11 \ setPi singleton x12 \ singleton) x11 \
             x12 \ x11) x8))) x9 \
      impl_lam
       (propId singleton x9
         (app
           (elim_setSigma
             (app
               (elim_setSigma x4 (x10 \
                 setPi
                  (setSigma (setPi singleton x11 \ singleton) x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton (app x11 x12) (app x11 x13)) x11 \
                  setSigma (setPi singleton x12 \ singleton) x12 \
                   forall singleton x13 \
                    forall singleton x14 \
                     forall (propId singleton x13 x14) x15 \
                      propId singleton (app x12 x13) (app x12 x14)) x10 \
                 x11 \ x10) x7) (x10 \ setPi singleton x11 \ singleton) x10 \
             x11 \ x10) x8)) x10 \ x10) (forall_app (forall_app x6 x7) x8))
"
"3---]-]Success  
(x2 \ x3 \ x4 \ x5 \ x6 \
 forall_lam
  (setSigma (setPi singleton x7 \ singleton) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \
       propId singleton (app x7 x8) (app x7 x9)) x7 \
  forall_lam singleton x8 \
   impl_app
    (elim_id (forall_app (forall_app x5 x7) x8) (x9 \ x10 \
      implies
       (propId singleton x10
         (app
           (elim_setSigma
             (app
               (elim_setSigma x4 (x11 \
                 setPi
                  (setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x12 \
                  setSigma (setPi singleton x13 \ singleton) x13 \
                   forall singleton x14 \
                    forall singleton x15 \
                     forall (propId singleton x14 x15) x16 \
                      propId singleton (app x13 x14) (app x13 x15)) x11 \
                 x12 \ x11) x7) (x11 \ setPi singleton x12 \ singleton) x11 \
             x12 \ x11) x8))
       (propId singleton x9
         (app
           (elim_setSigma
             (app
               (elim_setSigma x4 (x11 \
                 setPi
                  (setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x12 \
                  setSigma (setPi singleton x13 \ singleton) x13 \
                   forall singleton x14 \
                    forall singleton x15 \
                     forall (propId singleton x14 x15) x16 \
                      propId singleton (app x13 x14) (app x13 x15)) x11 \
                 x12 \ x11) x7) (x11 \ setPi singleton x12 \ singleton) x11 \
             x12 \ x11) x8))) x9 \
      impl_lam
       (propId singleton x9
         (app
           (elim_setSigma
             (app
               (elim_setSigma x4 (x10 \
                 setPi
                  (setSigma (setPi singleton x11 \ singleton) x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton (app x11 x12) (app x11 x13)) x11 \
                  setSigma (setPi singleton x12 \ singleton) x12 \
                   forall singleton x13 \
                    forall singleton x14 \
                     forall (propId singleton x13 x14) x15 \
                      propId singleton (app x12 x13) (app x12 x14)) x10 \
                 x11 \ x10) x7) (x10 \ setPi singleton x11 \ singleton) x10 \
             x11 \ x10) x8)) x10 \ x10) (forall_app (forall_app x6 x7) x8)) =
 (x2 \ x3 \ x4 \ x5 \ x6 \
 forall_lam
  (setSigma (setPi singleton x7 \ singleton) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \
       propId singleton (app x7 x8) (app x7 x9)) x7 \
  forall_lam singleton x8 \
   impl_app
    (elim_id (forall_app (forall_app x5 x7) x8) (x9 \ x10 \
      implies
       (propId singleton x10
         (app
           (elim_setSigma
             (app
               (elim_setSigma x4 (x11 \
                 setPi
                  (setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x12 \
                  setSigma (setPi singleton x13 \ singleton) x13 \
                   forall singleton x14 \
                    forall singleton x15 \
                     forall (propId singleton x14 x15) x16 \
                      propId singleton (app x13 x14) (app x13 x15)) x11 \
                 x12 \ x11) x7) (x11 \ setPi singleton x12 \ singleton) x11 \
             x12 \ x11) x8))
       (propId singleton x9
         (app
           (elim_setSigma
             (app
               (elim_setSigma x4 (x11 \
                 setPi
                  (setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x12 \
                  setSigma (setPi singleton x13 \ singleton) x13 \
                   forall singleton x14 \
                    forall singleton x15 \
                     forall (propId singleton x14 x15) x16 \
                      propId singleton (app x13 x14) (app x13 x15)) x11 \
                 x12 \ x11) x7) (x11 \ setPi singleton x12 \ singleton) x11 \
             x12 \ x11) x8))) x9 \
      impl_lam
       (propId singleton x9
         (app
           (elim_setSigma
             (app
               (elim_setSigma x4 (x10 \
                 setPi
                  (setSigma (setPi singleton x11 \ singleton) x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton (app x11 x12) (app x11 x13)) x11 \
                  setSigma (setPi singleton x12 \ singleton) x12 \
                   forall singleton x13 \
                    forall singleton x14 \
                     forall (propId singleton x13 x14) x15 \
                      propId singleton (app x12 x13) (app x12 x14)) x10 \
                 x11 \ x10) x7) (x10 \ setPi singleton x11 \ singleton) x10 \
             x11 \ x10) x8)) x10 \ x10) (forall_app (forall_app x6 x7) x8))
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton x2 star) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ propId singleton x2 star) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    interp x0 x1 =>
     (setoid_tran
       (setPi (setPi singleton x2 \ singleton) x2 \
         setPi singleton x3 \ singleton) x2 \ x3 \ x4 \ x5 \ x6 \
       forall_lam
        (setSigma (setPi singleton x7 \ singleton) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \
             propId singleton (app x7 x8) (app x7 x9)) x7 \
        forall_lam singleton x8 \
         impl_app
          (elim_id (forall_app (forall_app x5 x7) x8) (x9 \ x10 \
            implies
             (propId singleton x10
               (app
                 (elim_setSigma
                   (app
                     (elim_setSigma x4 (x11 \
                       setPi
                        (setSigma (setPi singleton x12 \ singleton) x12 \
                          forall singleton x13 \
                           forall singleton x14 \
                            forall (propId singleton x13 x14) x15 \
                             propId singleton (app x12 x13) (app x12 x14))
                        x12 \
                        setSigma (setPi singleton x13 \ singleton) x13 \
                         forall singleton x14 \
                          forall singleton x15 \
                           forall (propId singleton x14 x15) x16 \
                            propId singleton (app x13 x14) (app x13 x15))
                       x11 \ x12 \ x11) x7) (x11 \
                   setPi singleton x12 \ singleton) x11 \ x12 \ x11) x8))
             (propId singleton x9
               (app
                 (elim_setSigma
                   (app
                     (elim_setSigma x4 (x11 \
                       setPi
                        (setSigma (setPi singleton x12 \ singleton) x12 \
                          forall singleton x13 \
                           forall singleton x14 \
                            forall (propId singleton x13 x14) x15 \
                             propId singleton (app x12 x13) (app x12 x14))
                        x12 \
                        setSigma (setPi singleton x13 \ singleton) x13 \
                         forall singleton x14 \
                          forall singleton x15 \
                           forall (propId singleton x14 x15) x16 \
                            propId singleton (app x13 x14) (app x13 x15))
                       x11 \ x12 \ x11) x7) (x11 \
                   setPi singleton x12 \ singleton) x11 \ x12 \ x11) x8)))
            x9 \
            impl_lam
             (propId singleton x9
               (app
                 (elim_setSigma
                   (app
                     (elim_setSigma x4 (x10 \
                       setPi
                        (setSigma (setPi singleton x11 \ singleton) x11 \
                          forall singleton x12 \
                           forall singleton x13 \
                            forall (propId singleton x12 x13) x14 \
                             propId singleton (app x11 x12) (app x11 x13))
                        x11 \
                        setSigma (setPi singleton x12 \ singleton) x12 \
                         forall singleton x13 \
                          forall singleton x14 \
                           forall (propId singleton x13 x14) x15 \
                            propId singleton (app x12 x13) (app x12 x14))
                       x10 \ x11 \ x10) x7) (x10 \
                   setPi singleton x11 \ singleton) x10 \ x11 \ x10) x8))
             x10 \ x10) (forall_app (forall_app x6 x7) x8))
"
"2__[+[Begin 
X1156 = (x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam
  (setSigma (setPi singleton x5 \ propId singleton x5 star) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
  forall_lam
   (setSigma (setPi singleton x6 \ singleton) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \
        propId singleton (app x6 x7) (app x6 x8)) x6 \
   forall_lam singleton x7 \
    impl_app
     (elim_id (forall_app (forall_app (forall_app x3 x5) x6) x7) (x8 \ x9 \
       implies
        (propId singleton x9
          (app
            (elim_setSigma
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x2 (x10 \
                      setPi
                       (setSigma
                         (setPi singleton x11 \ propId singleton x11 star)
                         x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star) x11 \
                       setSigma
                        (setPi
                          (setSigma (setPi singleton x12 \ singleton) x12 \
                            forall singleton x13 \
                             forall singleton x14 \
                              forall (propId singleton x13 x14) x15 \
                               propId singleton (app x12 x13) (app x12 x14))
                          x12 \
                          setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                        x12 \
                        forall
                         (setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                         x13 \
                         forall
                          (setSigma (setPi singleton x14 \ singleton) x14 \
                            forall singleton x15 \
                             forall singleton x16 \
                              forall (propId singleton x15 x16) x17 \
                               propId singleton (app x14 x15) (app x14 x16))
                          x14 \
                          forall
                           (forall singleton x15 \
                             propId singleton
                              (app
                                (elim_setSigma x13 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)
                              (app
                                (elim_setSigma x14 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)) x15 \
                           forall singleton x16 \
                            propId singleton
                             (app
                               (elim_setSigma (app x12 x13) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)
                             (app
                               (elim_setSigma (app x12 x14) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)) x10 \ x11 \ x10) x5) (x10 \
                  setPi
                   (setSigma (setPi singleton x11 \ singleton) x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton (app x11 x12) (app x11 x13)) x11 \
                   setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x10 \
                  x11 \ x10) x6) (x10 \ setPi singleton x11 \ singleton)
              x10 \ x11 \ x10) x7))
        (propId singleton x8
          (app
            (elim_setSigma
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x2 (x10 \
                      setPi
                       (setSigma
                         (setPi singleton x11 \ propId singleton x11 star)
                         x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star) x11 \
                       setSigma
                        (setPi
                          (setSigma (setPi singleton x12 \ singleton) x12 \
                            forall singleton x13 \
                             forall singleton x14 \
                              forall (propId singleton x13 x14) x15 \
                               propId singleton (app x12 x13) (app x12 x14))
                          x12 \
                          setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                        x12 \
                        forall
                         (setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                         x13 \
                         forall
                          (setSigma (setPi singleton x14 \ singleton) x14 \
                            forall singleton x15 \
                             forall singleton x16 \
                              forall (propId singleton x15 x16) x17 \
                               propId singleton (app x14 x15) (app x14 x16))
                          x14 \
                          forall
                           (forall singleton x15 \
                             propId singleton
                              (app
                                (elim_setSigma x13 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)
                              (app
                                (elim_setSigma x14 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)) x15 \
                           forall singleton x16 \
                            propId singleton
                             (app
                               (elim_setSigma (app x12 x13) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)
                             (app
                               (elim_setSigma (app x12 x14) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)) x10 \ x11 \ x10) x5) (x10 \
                  setPi
                   (setSigma (setPi singleton x11 \ singleton) x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton (app x11 x12) (app x11 x13)) x11 \
                   setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x10 \
                  x11 \ x10) x6) (x10 \ setPi singleton x11 \ singleton)
              x10 \ x11 \ x10) x7))) x8 \
       impl_lam
        (propId singleton x8
          (app
            (elim_setSigma
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x2 (x9 \
                      setPi
                       (setSigma
                         (setPi singleton x10 \ propId singleton x10 star)
                         x10 \
                         forall singleton x11 \
                          forall singleton x12 \
                           forall (propId singleton x11 x12) x13 \
                            propId singleton star star) x10 \
                       setSigma
                        (setPi
                          (setSigma (setPi singleton x11 \ singleton) x11 \
                            forall singleton x12 \
                             forall singleton x13 \
                              forall (propId singleton x12 x13) x14 \
                               propId singleton (app x11 x12) (app x11 x13))
                          x11 \
                          setSigma (setPi singleton x12 \ singleton) x12 \
                           forall singleton x13 \
                            forall singleton x14 \
                             forall (propId singleton x13 x14) x15 \
                              propId singleton (app x12 x13) (app x12 x14))
                        x11 \
                        forall
                         (setSigma (setPi singleton x12 \ singleton) x12 \
                           forall singleton x13 \
                            forall singleton x14 \
                             forall (propId singleton x13 x14) x15 \
                              propId singleton (app x12 x13) (app x12 x14))
                         x12 \
                         forall
                          (setSigma (setPi singleton x13 \ singleton) x13 \
                            forall singleton x14 \
                             forall singleton x15 \
                              forall (propId singleton x14 x15) x16 \
                               propId singleton (app x13 x14) (app x13 x15))
                          x13 \
                          forall
                           (forall singleton x14 \
                             propId singleton
                              (app
                                (elim_setSigma x12 (x15 \
                                  setPi singleton x16 \ singleton) x15 \
                                  x16 \ x15) x14)
                              (app
                                (elim_setSigma x13 (x15 \
                                  setPi singleton x16 \ singleton) x15 \
                                  x16 \ x15) x14)) x14 \
                           forall singleton x15 \
                            propId singleton
                             (app
                               (elim_setSigma (app x11 x12) (x16 \
                                 setPi singleton x17 \ singleton) x16 \ x17 \
                                 x16) x15)
                             (app
                               (elim_setSigma (app x11 x13) (x16 \
                                 setPi singleton x17 \ singleton) x16 \ x17 \
                                 x16) x15)) x9 \ x10 \ x9) x5) (x9 \
                  setPi
                   (setSigma (setPi singleton x10 \ singleton) x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton (app x10 x11) (app x10 x12)) x10 \
                   setSigma (setPi singleton x11 \ singleton) x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton (app x11 x12) (app x11 x13)) x9 \
                  x10 \ x9) x6) (x9 \ setPi singleton x10 \ singleton) x9 \
              x10 \ x9) x7)) x9 \ x9)
     (forall_app (forall_app (forall_app x4 x5) x6) x7))
"
"2--]-]Success  
(x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam
  (setSigma (setPi singleton x5 \ propId singleton x5 star) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
  forall_lam
   (setSigma (setPi singleton x6 \ singleton) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \
        propId singleton (app x6 x7) (app x6 x8)) x6 \
   forall_lam singleton x7 \
    impl_app
     (elim_id (forall_app (forall_app (forall_app x3 x5) x6) x7) (x8 \ x9 \
       implies
        (propId singleton x9
          (app
            (elim_setSigma
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x2 (x10 \
                      setPi
                       (setSigma
                         (setPi singleton x11 \ propId singleton x11 star)
                         x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star) x11 \
                       setSigma
                        (setPi
                          (setSigma (setPi singleton x12 \ singleton) x12 \
                            forall singleton x13 \
                             forall singleton x14 \
                              forall (propId singleton x13 x14) x15 \
                               propId singleton (app x12 x13) (app x12 x14))
                          x12 \
                          setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                        x12 \
                        forall
                         (setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                         x13 \
                         forall
                          (setSigma (setPi singleton x14 \ singleton) x14 \
                            forall singleton x15 \
                             forall singleton x16 \
                              forall (propId singleton x15 x16) x17 \
                               propId singleton (app x14 x15) (app x14 x16))
                          x14 \
                          forall
                           (forall singleton x15 \
                             propId singleton
                              (app
                                (elim_setSigma x13 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)
                              (app
                                (elim_setSigma x14 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)) x15 \
                           forall singleton x16 \
                            propId singleton
                             (app
                               (elim_setSigma (app x12 x13) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)
                             (app
                               (elim_setSigma (app x12 x14) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)) x10 \ x11 \ x10) x5) (x10 \
                  setPi
                   (setSigma (setPi singleton x11 \ singleton) x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton (app x11 x12) (app x11 x13)) x11 \
                   setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x10 \
                  x11 \ x10) x6) (x10 \ setPi singleton x11 \ singleton)
              x10 \ x11 \ x10) x7))
        (propId singleton x8
          (app
            (elim_setSigma
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x2 (x10 \
                      setPi
                       (setSigma
                         (setPi singleton x11 \ propId singleton x11 star)
                         x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star) x11 \
                       setSigma
                        (setPi
                          (setSigma (setPi singleton x12 \ singleton) x12 \
                            forall singleton x13 \
                             forall singleton x14 \
                              forall (propId singleton x13 x14) x15 \
                               propId singleton (app x12 x13) (app x12 x14))
                          x12 \
                          setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                        x12 \
                        forall
                         (setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                         x13 \
                         forall
                          (setSigma (setPi singleton x14 \ singleton) x14 \
                            forall singleton x15 \
                             forall singleton x16 \
                              forall (propId singleton x15 x16) x17 \
                               propId singleton (app x14 x15) (app x14 x16))
                          x14 \
                          forall
                           (forall singleton x15 \
                             propId singleton
                              (app
                                (elim_setSigma x13 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)
                              (app
                                (elim_setSigma x14 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)) x15 \
                           forall singleton x16 \
                            propId singleton
                             (app
                               (elim_setSigma (app x12 x13) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)
                             (app
                               (elim_setSigma (app x12 x14) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)) x10 \ x11 \ x10) x5) (x10 \
                  setPi
                   (setSigma (setPi singleton x11 \ singleton) x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton (app x11 x12) (app x11 x13)) x11 \
                   setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x10 \
                  x11 \ x10) x6) (x10 \ setPi singleton x11 \ singleton)
              x10 \ x11 \ x10) x7))) x8 \
       impl_lam
        (propId singleton x8
          (app
            (elim_setSigma
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x2 (x9 \
                      setPi
                       (setSigma
                         (setPi singleton x10 \ propId singleton x10 star)
                         x10 \
                         forall singleton x11 \
                          forall singleton x12 \
                           forall (propId singleton x11 x12) x13 \
                            propId singleton star star) x10 \
                       setSigma
                        (setPi
                          (setSigma (setPi singleton x11 \ singleton) x11 \
                            forall singleton x12 \
                             forall singleton x13 \
                              forall (propId singleton x12 x13) x14 \
                               propId singleton (app x11 x12) (app x11 x13))
                          x11 \
                          setSigma (setPi singleton x12 \ singleton) x12 \
                           forall singleton x13 \
                            forall singleton x14 \
                             forall (propId singleton x13 x14) x15 \
                              propId singleton (app x12 x13) (app x12 x14))
                        x11 \
                        forall
                         (setSigma (setPi singleton x12 \ singleton) x12 \
                           forall singleton x13 \
                            forall singleton x14 \
                             forall (propId singleton x13 x14) x15 \
                              propId singleton (app x12 x13) (app x12 x14))
                         x12 \
                         forall
                          (setSigma (setPi singleton x13 \ singleton) x13 \
                            forall singleton x14 \
                             forall singleton x15 \
                              forall (propId singleton x14 x15) x16 \
                               propId singleton (app x13 x14) (app x13 x15))
                          x13 \
                          forall
                           (forall singleton x14 \
                             propId singleton
                              (app
                                (elim_setSigma x12 (x15 \
                                  setPi singleton x16 \ singleton) x15 \
                                  x16 \ x15) x14)
                              (app
                                (elim_setSigma x13 (x15 \
                                  setPi singleton x16 \ singleton) x15 \
                                  x16 \ x15) x14)) x14 \
                           forall singleton x15 \
                            propId singleton
                             (app
                               (elim_setSigma (app x11 x12) (x16 \
                                 setPi singleton x17 \ singleton) x16 \ x17 \
                                 x16) x15)
                             (app
                               (elim_setSigma (app x11 x13) (x16 \
                                 setPi singleton x17 \ singleton) x16 \ x17 \
                                 x16) x15)) x9 \ x10 \ x9) x5) (x9 \
                  setPi
                   (setSigma (setPi singleton x10 \ singleton) x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton (app x10 x11) (app x10 x12)) x10 \
                   setSigma (setPi singleton x11 \ singleton) x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton (app x11 x12) (app x11 x13)) x9 \
                  x10 \ x9) x6) (x9 \ setPi singleton x10 \ singleton) x9 \
              x10 \ x9) x7)) x9 \ x9)
     (forall_app (forall_app (forall_app x4 x5) x6) x7)) = (x0 \ x1 \ x2 \
 x3 \ x4 \
 forall_lam
  (setSigma (setPi singleton x5 \ propId singleton x5 star) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
  forall_lam
   (setSigma (setPi singleton x6 \ singleton) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \
        propId singleton (app x6 x7) (app x6 x8)) x6 \
   forall_lam singleton x7 \
    impl_app
     (elim_id (forall_app (forall_app (forall_app x3 x5) x6) x7) (x8 \ x9 \
       implies
        (propId singleton x9
          (app
            (elim_setSigma
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x2 (x10 \
                      setPi
                       (setSigma
                         (setPi singleton x11 \ propId singleton x11 star)
                         x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star) x11 \
                       setSigma
                        (setPi
                          (setSigma (setPi singleton x12 \ singleton) x12 \
                            forall singleton x13 \
                             forall singleton x14 \
                              forall (propId singleton x13 x14) x15 \
                               propId singleton (app x12 x13) (app x12 x14))
                          x12 \
                          setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                        x12 \
                        forall
                         (setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                         x13 \
                         forall
                          (setSigma (setPi singleton x14 \ singleton) x14 \
                            forall singleton x15 \
                             forall singleton x16 \
                              forall (propId singleton x15 x16) x17 \
                               propId singleton (app x14 x15) (app x14 x16))
                          x14 \
                          forall
                           (forall singleton x15 \
                             propId singleton
                              (app
                                (elim_setSigma x13 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)
                              (app
                                (elim_setSigma x14 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)) x15 \
                           forall singleton x16 \
                            propId singleton
                             (app
                               (elim_setSigma (app x12 x13) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)
                             (app
                               (elim_setSigma (app x12 x14) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)) x10 \ x11 \ x10) x5) (x10 \
                  setPi
                   (setSigma (setPi singleton x11 \ singleton) x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton (app x11 x12) (app x11 x13)) x11 \
                   setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x10 \
                  x11 \ x10) x6) (x10 \ setPi singleton x11 \ singleton)
              x10 \ x11 \ x10) x7))
        (propId singleton x8
          (app
            (elim_setSigma
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x2 (x10 \
                      setPi
                       (setSigma
                         (setPi singleton x11 \ propId singleton x11 star)
                         x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star) x11 \
                       setSigma
                        (setPi
                          (setSigma (setPi singleton x12 \ singleton) x12 \
                            forall singleton x13 \
                             forall singleton x14 \
                              forall (propId singleton x13 x14) x15 \
                               propId singleton (app x12 x13) (app x12 x14))
                          x12 \
                          setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                        x12 \
                        forall
                         (setSigma (setPi singleton x13 \ singleton) x13 \
                           forall singleton x14 \
                            forall singleton x15 \
                             forall (propId singleton x14 x15) x16 \
                              propId singleton (app x13 x14) (app x13 x15))
                         x13 \
                         forall
                          (setSigma (setPi singleton x14 \ singleton) x14 \
                            forall singleton x15 \
                             forall singleton x16 \
                              forall (propId singleton x15 x16) x17 \
                               propId singleton (app x14 x15) (app x14 x16))
                          x14 \
                          forall
                           (forall singleton x15 \
                             propId singleton
                              (app
                                (elim_setSigma x13 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)
                              (app
                                (elim_setSigma x14 (x16 \
                                  setPi singleton x17 \ singleton) x16 \
                                  x17 \ x16) x15)) x15 \
                           forall singleton x16 \
                            propId singleton
                             (app
                               (elim_setSigma (app x12 x13) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)
                             (app
                               (elim_setSigma (app x12 x14) (x17 \
                                 setPi singleton x18 \ singleton) x17 \ x18 \
                                 x17) x16)) x10 \ x11 \ x10) x5) (x10 \
                  setPi
                   (setSigma (setPi singleton x11 \ singleton) x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton (app x11 x12) (app x11 x13)) x11 \
                   setSigma (setPi singleton x12 \ singleton) x12 \
                    forall singleton x13 \
                     forall singleton x14 \
                      forall (propId singleton x13 x14) x15 \
                       propId singleton (app x12 x13) (app x12 x14)) x10 \
                  x11 \ x10) x6) (x10 \ setPi singleton x11 \ singleton)
              x10 \ x11 \ x10) x7))) x8 \
       impl_lam
        (propId singleton x8
          (app
            (elim_setSigma
              (app
                (elim_setSigma
                  (app
                    (elim_setSigma x2 (x9 \
                      setPi
                       (setSigma
                         (setPi singleton x10 \ propId singleton x10 star)
                         x10 \
                         forall singleton x11 \
                          forall singleton x12 \
                           forall (propId singleton x11 x12) x13 \
                            propId singleton star star) x10 \
                       setSigma
                        (setPi
                          (setSigma (setPi singleton x11 \ singleton) x11 \
                            forall singleton x12 \
                             forall singleton x13 \
                              forall (propId singleton x12 x13) x14 \
                               propId singleton (app x11 x12) (app x11 x13))
                          x11 \
                          setSigma (setPi singleton x12 \ singleton) x12 \
                           forall singleton x13 \
                            forall singleton x14 \
                             forall (propId singleton x13 x14) x15 \
                              propId singleton (app x12 x13) (app x12 x14))
                        x11 \
                        forall
                         (setSigma (setPi singleton x12 \ singleton) x12 \
                           forall singleton x13 \
                            forall singleton x14 \
                             forall (propId singleton x13 x14) x15 \
                              propId singleton (app x12 x13) (app x12 x14))
                         x12 \
                         forall
                          (setSigma (setPi singleton x13 \ singleton) x13 \
                            forall singleton x14 \
                             forall singleton x15 \
                              forall (propId singleton x14 x15) x16 \
                               propId singleton (app x13 x14) (app x13 x15))
                          x13 \
                          forall
                           (forall singleton x14 \
                             propId singleton
                              (app
                                (elim_setSigma x12 (x15 \
                                  setPi singleton x16 \ singleton) x15 \
                                  x16 \ x15) x14)
                              (app
                                (elim_setSigma x13 (x15 \
                                  setPi singleton x16 \ singleton) x15 \
                                  x16 \ x15) x14)) x14 \
                           forall singleton x15 \
                            propId singleton
                             (app
                               (elim_setSigma (app x11 x12) (x16 \
                                 setPi singleton x17 \ singleton) x16 \ x17 \
                                 x16) x15)
                             (app
                               (elim_setSigma (app x11 x13) (x16 \
                                 setPi singleton x17 \ singleton) x16 \ x17 \
                                 x16) x15)) x9 \ x10 \ x9) x5) (x9 \
                  setPi
                   (setSigma (setPi singleton x10 \ singleton) x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton (app x10 x11) (app x10 x12)) x10 \
                   setSigma (setPi singleton x11 \ singleton) x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton (app x11 x12) (app x11 x13)) x9 \
                  x10 \ x9) x6) (x9 \ setPi singleton x10 \ singleton) x9 \
              x10 \ x9) x7)) x9 \ x9)
     (forall_app (forall_app (forall_app x4 x5) x6) x7))
"
"1-]-]Success  
setoid_tran
 (setPi (setPi singleton x0 \ propEq singleton x0 star) x0 \
   setPi (setPi singleton x1 \ singleton) x1 \ setPi singleton x2 \ singleton)
 _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_tran
 (setPi singleton x0 \ setPi singleton x1 \ propEq singleton x0 x1) _
"
"2__[+[Begin 
interp (setPi singleton x0 \ setPi singleton x1 \ propEq singleton x0 x1)
 X1157
"
"3___[+[Begin 
interp singleton X1158
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ propEq singleton x0 x2) (X1159 x1)
"
"4____[+[Begin 
interp singleton X1160^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (X1161^2 x3)
"
"5_____[+[Begin 
setoid_eq singleton X1162^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
interp_isa x0 singleton X1163^4
"
"6______[+[Begin 
of x0 X1164^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1165^4
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1166^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1163^4 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa x2 singleton X1167^4
"
"6______[+[Begin 
of x2 X1168^4 ext
"
"6------]-]Success  
of x2 singleton ext
"
"6______[+[Begin 
interp x2 X1169^4
"
"6------]-]Success  
interp x2 x3
"
"6______[+[Begin 
tau singleton singleton X1170^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1167^4 = x3
"
"6------]-]Success  
x3 = x3
"
"5-----]-]Success  
interp_isa x2 singleton x3
"
"5_____[+[Begin 
X1161^2 x3 = propId singleton x1 x3
"
"5-----]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (propId singleton x1 x3)
"
"4____[+[Begin 
setoid_eq singleton X1171^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => setoid_eq (propEq singleton x0 x2) (X1172^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     (setoid_eq (propEq singleton x0 x2) x4 \ x5 \ propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy
                (tau (propEq singleton x0 x2) (propEq singleton x0 x3)
                  (X1173^2 x5 x6 x7))
"
"5_____[+[Begin 
tau (propEq singleton x0 x2) (propEq singleton x0 x3) (X1173^2 x5 x6 x7)
"
"6______[+[Begin 
tau_proof_eq x0 x0 singleton X1174^8
"
"7_______[+[Begin 
interp_isa x0 singleton X1175^8
"
"8________[+[Begin 
of x0 X1176^8 ext
"
"8--------]-]Success  
of x0 singleton ext
"
"8________[+[Begin 
interp x0 X1177^8
"
"8--------]-]Success  
interp x0 x1
"
"8________[+[Begin 
tau singleton singleton X1178^8
"
"8--------]-]Success  
tau singleton singleton x8 \ x8
"
"8________[+[Begin 
X1175^8 = x1
"
"8--------]-]Success  
x1 = x1
"
"7-------]-]Success  
interp_isa x0 singleton x1
"
"7_______[+[Begin 
setoid_refl singleton X1179^8
"
"7-------]-]Success  
setoid_refl singleton x8 \ id singleton x8
"
"7_______[+[Begin 
X1174^8 = id singleton x1
"
"7-------]-]Success  
id singleton x1 = id singleton x1
"
"6------]-]Success  
tau_proof_eq x0 x0 singleton (id singleton x1)
"
"6______[+[Begin 
tau_proof_eq x2 x3 singleton X1180^8
"
"7_______[+[Begin 
locDecl X1181^8 (propEq _ x2 x3)
"
"7-------]-]Success  
locDecl x4 (propEq _ x2 x3)
"
"7_______[+[Begin 
interp_isa x4 (propEq singleton x2 x3) X1180^8
"
"8________[+[Begin 
of x4 X1182^8 ext
"
"8--------]-]Success  
of x4 (propEq singleton x2 x3) ext
"
"8________[+[Begin 
interp x4 X1183^8
"
"8--------]-]Success  
interp x4 x7
"
"8________[+[Begin 
tau (propEq singleton x2 x3) (propEq singleton x2 x3) X1184^8
"
"8--------]-]Success  
tau (propEq singleton x2 x3) (propEq singleton x2 x3) x8 \ x8
"
"8________[+[Begin 
X1180^8 = x7
"
"8--------]-]Success  
x7 = x7
"
"7-------]-]Success  
interp_isa x4 (propEq singleton x2 x3) x7
"
"6------]-]Success  
tau_proof_eq x2 x3 singleton x7
"
"6______[+[Begin 
interp_isa x0 singleton X1185^8
"
"7_______[+[Begin 
of x0 X1186^8 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X1187^8
"
"7-------]-]Success  
interp x0 x1
"
"7_______[+[Begin 
tau singleton singleton X1188^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1185^8 = x1
"
"7-------]-]Success  
x1 = x1
"
"6------]-]Success  
interp_isa x0 singleton x1
"
"6______[+[Begin 
interp_isa x2 singleton X1189^8
"
"7_______[+[Begin 
of x2 X1190^8 ext
"
"7-------]-]Success  
of x2 singleton ext
"
"7_______[+[Begin 
interp x2 X1191^8
"
"7-------]-]Success  
interp x2 x5
"
"7_______[+[Begin 
tau singleton singleton X1192^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1189^8 = x5
"
"7-------]-]Success  
x5 = x5
"
"6------]-]Success  
interp_isa x2 singleton x5
"
"6______[+[Begin 
interp_isa x0 singleton X1193^8
"
"7_______[+[Begin 
of x0 X1194^8 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X1195^8
"
"7-------]-]Success  
interp x0 x1
"
"7_______[+[Begin 
tau singleton singleton X1196^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1193^8 = x1
"
"7-------]-]Success  
x1 = x1
"
"6------]-]Success  
interp_isa x0 singleton x1
"
"6______[+[Begin 
interp_isa x3 singleton X1197^8
"
"7_______[+[Begin 
of x3 X1198^8 ext
"
"7-------]-]Success  
of x3 singleton ext
"
"7_______[+[Begin 
interp x3 X1199^8
"
"7-------]-]Success  
interp x3 x6
"
"7_______[+[Begin 
tau singleton singleton X1200^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1197^8 = x6
"
"7-------]-]Success  
x6 = x6
"
"6------]-]Success  
interp_isa x3 singleton x6
"
"6______[+[Begin 
interp singleton X1201^8
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
X1173^2 x5 x6 x7 = (x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8)
"
"6------]-]Success  
(x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8) = (x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8)
"
"5-----]-]Success  
tau (propEq singleton x0 x2) (propEq singleton x0 x3) x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy
                (tau (propEq singleton x0 x2) (propEq singleton x0 x3) x8 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x1)
                             x1) (id singleton x1)) x5) x6) x7) x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ propEq singleton x0 x2)
      (setSigma (setPi singleton x2 \ propId singleton x1 x2) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \ propId singleton star star)
"
"3___[+[Begin 
setoid_eq singleton X1202
"
"3---]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     setoid_eq (setPi singleton x2 \ propEq singleton x0 x2) (X1203 x1)
"
"4____[+[Begin 
interp singleton X1204^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (X1205^2 x3)
"
"5_____[+[Begin 
setoid_eq singleton X1206^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
interp_isa x0 singleton X1207^4
"
"6______[+[Begin 
of x0 X1208^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1209^4
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1210^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1207^4 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa x2 singleton X1211^4
"
"6______[+[Begin 
of x2 X1212^4 ext
"
"6------]-]Success  
of x2 singleton ext
"
"6______[+[Begin 
interp x2 X1213^4
"
"6------]-]Success  
interp x2 x3
"
"6______[+[Begin 
tau singleton singleton X1214^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1211^4 = x3
"
"6------]-]Success  
x3 = x3
"
"5-----]-]Success  
interp_isa x2 singleton x3
"
"5_____[+[Begin 
X1205^2 x3 = propId singleton x1 x3
"
"5-----]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (propId singleton x1 x3)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     ((interp (propEq singleton x0 x2) (propId singleton x1 x3)),
     (setoid_eq (propEq singleton x0 x2) (X1215^2 x3)))
"
"5_____[+[Begin 
setoid_eq singleton X1216^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
interp_isa x0 singleton X1217^4
"
"6______[+[Begin 
of x0 X1218^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1219^4
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1220^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1217^4 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa x2 singleton X1221^4
"
"6______[+[Begin 
of x2 X1222^4 ext
"
"6------]-]Success  
of x2 singleton ext
"
"6______[+[Begin 
interp x2 X1223^4
"
"6------]-]Success  
interp x2 x3
"
"6______[+[Begin 
tau singleton singleton X1224^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1221^4 = x3
"
"6------]-]Success  
x3 = x3
"
"5-----]-]Success  
interp_isa x2 singleton x3
"
"5_____[+[Begin 
propId singleton x1 x3 = propId singleton x1 x3
"
"5-----]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     ((interp (propEq singleton x0 x2) (propId singleton x1 x3)),
     (setoid_eq (propEq singleton x0 x2) x4 \ x5 \ propId singleton star star))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     (setoid_eq (setPi singleton x2 \ propEq singleton x0 x2) x2 \ x3 \
       forall singleton x4 \ propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ propEq singleton x0 x6)
                  (setPi singleton x6 \ propEq singleton x1 x6)
                  (X1225 x3 x4 x5))
"
"4____[+[Begin 
tau (setPi singleton x6 \ propEq singleton x0 x6)
 (setPi singleton x6 \ propEq singleton x1 x6) (X1225 x3 x4 x5)
"
"5_____[+[Begin 
interp (setPi singleton x6 \ propEq singleton x0 x6)
 (setSigma X1226^6 X1227^6)
"
"6______[+[Begin 
interp singleton X1228^6
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => interp (propEq singleton x0 x6) (X1229^6 x7)
"
"7_______[+[Begin 
setoid_eq singleton X1230^8
"
"7-------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"7_______[+[Begin 
interp_isa x0 singleton X1231^8
"
"8________[+[Begin 
of x0 X1232^8 ext
"
"8--------]-]Success  
of x0 singleton ext
"
"8________[+[Begin 
interp x0 X1233^8
"
"8--------]-]Success  
interp x0 x3
"
"8________[+[Begin 
tau singleton singleton X1234^8
"
"8--------]-]Success  
tau singleton singleton x8 \ x8
"
"8________[+[Begin 
X1231^8 = x3
"
"8--------]-]Success  
x3 = x3
"
"7-------]-]Success  
interp_isa x0 singleton x3
"
"7_______[+[Begin 
interp_isa x6 singleton X1235^8
"
"8________[+[Begin 
of x6 X1236^8 ext
"
"8--------]-]Success  
of x6 singleton ext
"
"8________[+[Begin 
interp x6 X1237^8
"
"8--------]-]Success  
interp x6 x7
"
"8________[+[Begin 
tau singleton singleton X1238^8
"
"8--------]-]Success  
tau singleton singleton x8 \ x8
"
"8________[+[Begin 
X1235^8 = x7
"
"8--------]-]Success  
x7 = x7
"
"7-------]-]Success  
interp_isa x6 singleton x7
"
"7_______[+[Begin 
X1229^6 x7 = propId singleton x3 x7
"
"7-------]-]Success  
propId singleton x3 x7 = propId singleton x3 x7
"
"6------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => interp (propEq singleton x0 x6) (propId singleton x3 x7)
"
"6______[+[Begin 
setoid_eq singleton X1239^6
"
"6------]-]Success  
setoid_eq singleton x6 \ x7 \ propId singleton x6 x7
"
"6______[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => setoid_eq (propEq singleton x0 x6) (X1240^6 x7)
"
"6------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 =>
     (setoid_eq (propEq singleton x0 x6) x8 \ x9 \ propId singleton star star)
"
"6______[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              interp x8 x11 =>
               spy
                (tau (propEq singleton x0 x6) (propEq singleton x0 x7)
                  (X1241^6 x9 x10 x11))
"
"7_______[+[Begin 
tau (propEq singleton x0 x6) (propEq singleton x0 x7) (X1241^6 x9 x10 x11)
"
"8________[+[Begin 
tau_proof_eq x0 x0 singleton X1242^12
"
"9_________[+[Begin 
interp_isa x0 singleton X1243^12
"
"10__________[+[Begin 
of x0 X1244^12 ext
"
"10----------]-]Success  
of x0 singleton ext
"
"10__________[+[Begin 
interp x0 X1245^12
"
"10----------]-]Success  
interp x0 x3
"
"10__________[+[Begin 
tau singleton singleton X1246^12
"
"10----------]-]Success  
tau singleton singleton x12 \ x12
"
"10__________[+[Begin 
X1243^12 = x3
"
"10----------]-]Success  
x3 = x3
"
"9---------]-]Success  
interp_isa x0 singleton x3
"
"9_________[+[Begin 
setoid_refl singleton X1247^12
"
"9---------]-]Success  
setoid_refl singleton x12 \ id singleton x12
"
"9_________[+[Begin 
X1242^12 = id singleton x3
"
"9---------]-]Success  
id singleton x3 = id singleton x3
"
"8--------]-]Success  
tau_proof_eq x0 x0 singleton (id singleton x3)
"
"8________[+[Begin 
tau_proof_eq x6 x7 singleton X1248^12
"
"9_________[+[Begin 
locDecl X1249^12 (propEq _ x6 x7)
"
"9---------]-]Success  
locDecl x8 (propEq _ x6 x7)
"
"9_________[+[Begin 
interp_isa x8 (propEq singleton x6 x7) X1248^12
"
"10__________[+[Begin 
of x8 X1250^12 ext
"
"10----------]-]Success  
of x8 (propEq singleton x6 x7) ext
"
"10__________[+[Begin 
interp x8 X1251^12
"
"10----------]-]Success  
interp x8 x11
"
"10__________[+[Begin 
tau (propEq singleton x6 x7) (propEq singleton x6 x7) X1252^12
"
"10----------]-]Success  
tau (propEq singleton x6 x7) (propEq singleton x6 x7) x12 \ x12
"
"10__________[+[Begin 
X1248^12 = x11
"
"10----------]-]Success  
x11 = x11
"
"9---------]-]Success  
interp_isa x8 (propEq singleton x6 x7) x11
"
"8--------]-]Success  
tau_proof_eq x6 x7 singleton x11
"
"8________[+[Begin 
interp_isa x0 singleton X1253^12
"
"9_________[+[Begin 
of x0 X1254^12 ext
"
"9---------]-]Success  
of x0 singleton ext
"
"9_________[+[Begin 
interp x0 X1255^12
"
"9---------]-]Success  
interp x0 x3
"
"9_________[+[Begin 
tau singleton singleton X1256^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1253^12 = x3
"
"9---------]-]Success  
x3 = x3
"
"8--------]-]Success  
interp_isa x0 singleton x3
"
"8________[+[Begin 
interp_isa x6 singleton X1257^12
"
"9_________[+[Begin 
of x6 X1258^12 ext
"
"9---------]-]Success  
of x6 singleton ext
"
"9_________[+[Begin 
interp x6 X1259^12
"
"9---------]-]Success  
interp x6 x9
"
"9_________[+[Begin 
tau singleton singleton X1260^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1257^12 = x9
"
"9---------]-]Success  
x9 = x9
"
"8--------]-]Success  
interp_isa x6 singleton x9
"
"8________[+[Begin 
interp_isa x0 singleton X1261^12
"
"9_________[+[Begin 
of x0 X1262^12 ext
"
"9---------]-]Success  
of x0 singleton ext
"
"9_________[+[Begin 
interp x0 X1263^12
"
"9---------]-]Success  
interp x0 x3
"
"9_________[+[Begin 
tau singleton singleton X1264^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1261^12 = x3
"
"9---------]-]Success  
x3 = x3
"
"8--------]-]Success  
interp_isa x0 singleton x3
"
"8________[+[Begin 
interp_isa x7 singleton X1265^12
"
"9_________[+[Begin 
of x7 X1266^12 ext
"
"9---------]-]Success  
of x7 singleton ext
"
"9_________[+[Begin 
interp x7 X1267^12
"
"9---------]-]Success  
interp x7 x10
"
"9_________[+[Begin 
tau singleton singleton X1268^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1265^12 = x10
"
"9---------]-]Success  
x10 = x10
"
"8--------]-]Success  
interp_isa x7 singleton x10
"
"8________[+[Begin 
interp singleton X1269^12
"
"8--------]-]Success  
interp singleton singleton
"
"8________[+[Begin 
X1241^6 x9 x10 x11 = (x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x3)
          (id singleton x3)) x9) x10) x11) x12)
"
"8--------]-]Success  
(x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x3)
          (id singleton x3)) x9) x10) x11) x12) = (x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x3)
          (id singleton x3)) x9) x10) x11) x12)
"
"7-------]-]Success  
tau (propEq singleton x0 x6) (propEq singleton x0 x7) x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x3)
          (id singleton x3)) x9) x10) x11) x12
"
"6------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              interp x8 x11 =>
               spy
                (tau (propEq singleton x0 x6) (propEq singleton x0 x7) x12 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x3)
                             x3) (id singleton x3)) x9) x10) x11) x12)
"
"5-----]-]Success  
interp (setPi singleton x6 \ propEq singleton x0 x6)
 (setSigma (setPi singleton x6 \ propId singleton x3 x6) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"5_____[+[Begin 
(setPi singleton x6 \ propId singleton x3 x6) = setPi X1270^6 X1271^6
"
"5-----]-]Success  
(setPi singleton x6 \ propId singleton x3 x6) =
 (setPi singleton x6 \ propId singleton x3 x6)
"
"5_____[+[Begin 
interp (setPi singleton x6 \ propEq singleton x1 x6)
 (setSigma X1272^6 X1273^6)
"
"6______[+[Begin 
interp singleton X1274^6
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => interp (propEq singleton x1 x6) (X1275^6 x7)
"
"7_______[+[Begin 
setoid_eq singleton X1276^8
"
"7-------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"7_______[+[Begin 
interp_isa x1 singleton X1277^8
"
"8________[+[Begin 
of x1 X1278^8 ext
"
"8--------]-]Success  
of x1 singleton ext
"
"8________[+[Begin 
interp x1 X1279^8
"
"8--------]-]Success  
interp x1 x4
"
"8________[+[Begin 
tau singleton singleton X1280^8
"
"8--------]-]Success  
tau singleton singleton x8 \ x8
"
"8________[+[Begin 
X1277^8 = x4
"
"8--------]-]Success  
x4 = x4
"
"7-------]-]Success  
interp_isa x1 singleton x4
"
"7_______[+[Begin 
interp_isa x6 singleton X1281^8
"
"8________[+[Begin 
of x6 X1282^8 ext
"
"8--------]-]Success  
of x6 singleton ext
"
"8________[+[Begin 
interp x6 X1283^8
"
"8--------]-]Success  
interp x6 x7
"
"8________[+[Begin 
tau singleton singleton X1284^8
"
"8--------]-]Success  
tau singleton singleton x8 \ x8
"
"8________[+[Begin 
X1281^8 = x7
"
"8--------]-]Success  
x7 = x7
"
"7-------]-]Success  
interp_isa x6 singleton x7
"
"7_______[+[Begin 
X1275^6 x7 = propId singleton x4 x7
"
"7-------]-]Success  
propId singleton x4 x7 = propId singleton x4 x7
"
"6------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => interp (propEq singleton x1 x6) (propId singleton x4 x7)
"
"6______[+[Begin 
setoid_eq singleton X1285^6
"
"6------]-]Success  
setoid_eq singleton x6 \ x7 \ propId singleton x6 x7
"
"6______[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => setoid_eq (propEq singleton x1 x6) (X1286^6 x7)
"
"6------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 =>
     (setoid_eq (propEq singleton x1 x6) x8 \ x9 \ propId singleton star star)
"
"6______[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              interp x8 x11 =>
               spy
                (tau (propEq singleton x1 x6) (propEq singleton x1 x7)
                  (X1287^6 x9 x10 x11))
"
"7_______[+[Begin 
tau (propEq singleton x1 x6) (propEq singleton x1 x7) (X1287^6 x9 x10 x11)
"
"8________[+[Begin 
tau_proof_eq x1 x1 singleton X1288^12
"
"9_________[+[Begin 
interp_isa x1 singleton X1289^12
"
"10__________[+[Begin 
of x1 X1290^12 ext
"
"10----------]-]Success  
of x1 singleton ext
"
"10__________[+[Begin 
interp x1 X1291^12
"
"10----------]-]Success  
interp x1 x4
"
"10__________[+[Begin 
tau singleton singleton X1292^12
"
"10----------]-]Success  
tau singleton singleton x12 \ x12
"
"10__________[+[Begin 
X1289^12 = x4
"
"10----------]-]Success  
x4 = x4
"
"9---------]-]Success  
interp_isa x1 singleton x4
"
"9_________[+[Begin 
setoid_refl singleton X1293^12
"
"9---------]-]Success  
setoid_refl singleton x12 \ id singleton x12
"
"9_________[+[Begin 
X1288^12 = id singleton x4
"
"9---------]-]Success  
id singleton x4 = id singleton x4
"
"8--------]-]Success  
tau_proof_eq x1 x1 singleton (id singleton x4)
"
"8________[+[Begin 
tau_proof_eq x6 x7 singleton X1294^12
"
"9_________[+[Begin 
locDecl X1295^12 (propEq _ x6 x7)
"
"9---------]-]Success  
locDecl x8 (propEq _ x6 x7)
"
"9_________[+[Begin 
interp_isa x8 (propEq singleton x6 x7) X1294^12
"
"10__________[+[Begin 
of x8 X1296^12 ext
"
"10----------]-]Success  
of x8 (propEq singleton x6 x7) ext
"
"10__________[+[Begin 
interp x8 X1297^12
"
"10----------]-]Success  
interp x8 x11
"
"10__________[+[Begin 
tau (propEq singleton x6 x7) (propEq singleton x6 x7) X1298^12
"
"10----------]-]Success  
tau (propEq singleton x6 x7) (propEq singleton x6 x7) x12 \ x12
"
"10__________[+[Begin 
X1294^12 = x11
"
"10----------]-]Success  
x11 = x11
"
"9---------]-]Success  
interp_isa x8 (propEq singleton x6 x7) x11
"
"8--------]-]Success  
tau_proof_eq x6 x7 singleton x11
"
"8________[+[Begin 
interp_isa x1 singleton X1299^12
"
"9_________[+[Begin 
of x1 X1300^12 ext
"
"9---------]-]Success  
of x1 singleton ext
"
"9_________[+[Begin 
interp x1 X1301^12
"
"9---------]-]Success  
interp x1 x4
"
"9_________[+[Begin 
tau singleton singleton X1302^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1299^12 = x4
"
"9---------]-]Success  
x4 = x4
"
"8--------]-]Success  
interp_isa x1 singleton x4
"
"8________[+[Begin 
interp_isa x6 singleton X1303^12
"
"9_________[+[Begin 
of x6 X1304^12 ext
"
"9---------]-]Success  
of x6 singleton ext
"
"9_________[+[Begin 
interp x6 X1305^12
"
"9---------]-]Success  
interp x6 x9
"
"9_________[+[Begin 
tau singleton singleton X1306^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1303^12 = x9
"
"9---------]-]Success  
x9 = x9
"
"8--------]-]Success  
interp_isa x6 singleton x9
"
"8________[+[Begin 
interp_isa x1 singleton X1307^12
"
"9_________[+[Begin 
of x1 X1308^12 ext
"
"9---------]-]Success  
of x1 singleton ext
"
"9_________[+[Begin 
interp x1 X1309^12
"
"9---------]-]Success  
interp x1 x4
"
"9_________[+[Begin 
tau singleton singleton X1310^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1307^12 = x4
"
"9---------]-]Success  
x4 = x4
"
"8--------]-]Success  
interp_isa x1 singleton x4
"
"8________[+[Begin 
interp_isa x7 singleton X1311^12
"
"9_________[+[Begin 
of x7 X1312^12 ext
"
"9---------]-]Success  
of x7 singleton ext
"
"9_________[+[Begin 
interp x7 X1313^12
"
"9---------]-]Success  
interp x7 x10
"
"9_________[+[Begin 
tau singleton singleton X1314^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1311^12 = x10
"
"9---------]-]Success  
x10 = x10
"
"8--------]-]Success  
interp_isa x7 singleton x10
"
"8________[+[Begin 
interp singleton X1315^12
"
"8--------]-]Success  
interp singleton singleton
"
"8________[+[Begin 
X1287^6 x9 x10 x11 = (x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x4) x4)
          (id singleton x4)) x9) x10) x11) x12)
"
"8--------]-]Success  
(x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x4) x4)
          (id singleton x4)) x9) x10) x11) x12) = (x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x4) x4)
          (id singleton x4)) x9) x10) x11) x12)
"
"7-------]-]Success  
tau (propEq singleton x1 x6) (propEq singleton x1 x7) x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x4) x4)
          (id singleton x4)) x9) x10) x11) x12
"
"6------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              interp x8 x11 =>
               spy
                (tau (propEq singleton x1 x6) (propEq singleton x1 x7) x12 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x4)
                             x4) (id singleton x4)) x9) x10) x11) x12)
"
"5-----]-]Success  
interp (setPi singleton x6 \ propEq singleton x1 x6)
 (setSigma (setPi singleton x6 \ propId singleton x4 x6) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"5_____[+[Begin 
(setPi singleton x6 \ propId singleton x4 x6) = setPi X1316^6 X1317^6
"
"5-----]-]Success  
(setPi singleton x6 \ propId singleton x4 x6) =
 (setPi singleton x6 \ propId singleton x4 x6)
"
"5_____[+[Begin 
setoid_eq singleton X1318^6
"
"5-----]-]Success  
setoid_eq singleton x6 \ x7 \ propId singleton x6 x7
"
"5_____[+[Begin 
tau singleton singleton X1319^6
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"5_____[+[Begin 
macro_tau singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 tau (propEq singleton x0 x6) (propEq singleton x1 x7) (X1320^6 x9 x10 x11)
"
"6______[+[Begin 
setoid_eq singleton X1321^6
"
"6------]-]Success  
setoid_eq singleton x6 \ x7 \ propId singleton x6 x7
"
"6______[+[Begin 
interp singleton X1322^6
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
interp singleton X1323^6
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
tau singleton singleton X1324^6
"
"6------]-]Success  
tau singleton singleton x6 \ x6
"
"6______[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x8 singleton =>
        locDecl x7 singleton =>
         locDecl x9 singleton =>
          interp x6 x7 =>
           interp x8 x9 =>
            locDecl x10 (propEq singleton x6 x8) =>
             locDecl x11 (propId singleton x7 x9) =>
              interp x10 x11 =>
               spy
                (tau (propEq singleton x0 x6) (propEq singleton x1 x8)
                  (X1320^6 x7 x9 x11))
"
"7_______[+[Begin 
tau (propEq singleton x0 x6) (propEq singleton x1 x8) (X1320^6 x7 x9 x11)
"
"8________[+[Begin 
tau_proof_eq x0 x1 singleton X1325^12
"
"9_________[+[Begin 
locDecl X1326^12 (propEq _ x0 x1)
"
"9---------]-]Success  
locDecl x2 (propEq _ x0 x1)
"
"9_________[+[Begin 
interp_isa x2 (propEq singleton x0 x1) X1325^12
"
"10__________[+[Begin 
of x2 X1327^12 ext
"
"10----------]-]Success  
of x2 (propEq singleton x0 x1) ext
"
"10__________[+[Begin 
interp x2 X1328^12
"
"10----------]-]Success  
interp x2 x5
"
"10__________[+[Begin 
tau (propEq singleton x0 x1) (propEq singleton x0 x1) X1329^12
"
"10----------]-]Success  
tau (propEq singleton x0 x1) (propEq singleton x0 x1) x12 \ x12
"
"10__________[+[Begin 
X1325^12 = x5
"
"10----------]-]Success  
x5 = x5
"
"9---------]-]Success  
interp_isa x2 (propEq singleton x0 x1) x5
"
"8--------]-]Success  
tau_proof_eq x0 x1 singleton x5
"
"8________[+[Begin 
tau_proof_eq x6 x8 singleton X1330^12
"
"9_________[+[Begin 
locDecl X1331^12 (propEq _ x6 x8)
"
"9---------]-]Success  
locDecl x10 (propEq _ x6 x8)
"
"9_________[+[Begin 
interp_isa x10 (propEq singleton x6 x8) X1330^12
"
"10__________[+[Begin 
of x10 X1332^12 ext
"
"10----------]-]Success  
of x10 (propEq singleton x6 x8) ext
"
"10__________[+[Begin 
interp x10 X1333^12
"
"10----------]-]Success  
interp x10 x11
"
"10__________[+[Begin 
tau (propEq singleton x6 x8) (propEq singleton x6 x8) X1334^12
"
"10----------]-]Success  
tau (propEq singleton x6 x8) (propEq singleton x6 x8) x12 \ x12
"
"10__________[+[Begin 
X1330^12 = x11
"
"10----------]-]Success  
x11 = x11
"
"9---------]-]Success  
interp_isa x10 (propEq singleton x6 x8) x11
"
"8--------]-]Success  
tau_proof_eq x6 x8 singleton x11
"
"8________[+[Begin 
interp_isa x0 singleton X1335^12
"
"9_________[+[Begin 
of x0 X1336^12 ext
"
"9---------]-]Success  
of x0 singleton ext
"
"9_________[+[Begin 
interp x0 X1337^12
"
"9---------]-]Success  
interp x0 x3
"
"9_________[+[Begin 
tau singleton singleton X1338^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1335^12 = x3
"
"9---------]-]Success  
x3 = x3
"
"8--------]-]Success  
interp_isa x0 singleton x3
"
"8________[+[Begin 
interp_isa x6 singleton X1339^12
"
"9_________[+[Begin 
of x6 X1340^12 ext
"
"9---------]-]Success  
of x6 singleton ext
"
"9_________[+[Begin 
interp x6 X1341^12
"
"9---------]-]Success  
interp x6 x7
"
"9_________[+[Begin 
tau singleton singleton X1342^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1339^12 = x7
"
"9---------]-]Success  
x7 = x7
"
"8--------]-]Success  
interp_isa x6 singleton x7
"
"8________[+[Begin 
interp_isa x1 singleton X1343^12
"
"9_________[+[Begin 
of x1 X1344^12 ext
"
"9---------]-]Success  
of x1 singleton ext
"
"9_________[+[Begin 
interp x1 X1345^12
"
"9---------]-]Success  
interp x1 x4
"
"9_________[+[Begin 
tau singleton singleton X1346^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1343^12 = x4
"
"9---------]-]Success  
x4 = x4
"
"8--------]-]Success  
interp_isa x1 singleton x4
"
"8________[+[Begin 
interp_isa x8 singleton X1347^12
"
"9_________[+[Begin 
of x8 X1348^12 ext
"
"9---------]-]Success  
of x8 singleton ext
"
"9_________[+[Begin 
interp x8 X1349^12
"
"9---------]-]Success  
interp x8 x9
"
"9_________[+[Begin 
tau singleton singleton X1350^12
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"9_________[+[Begin 
X1347^12 = x9
"
"9---------]-]Success  
x9 = x9
"
"8--------]-]Success  
interp_isa x8 singleton x9
"
"8________[+[Begin 
interp singleton X1351^12
"
"8--------]-]Success  
interp singleton singleton
"
"8________[+[Begin 
X1320^6 x7 x9 x11 = (x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5) x7)
      x9) x11) x12)
"
"8--------]-]Success  
(x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5) x7)
      x9) x11) x12) = (x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5) x7)
      x9) x11) x12)
"
"7-------]-]Success  
tau (propEq singleton x0 x6) (propEq singleton x1 x8) x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5) x7)
      x9) x11) x12
"
"6------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x8 singleton =>
        locDecl x7 singleton =>
         locDecl x9 singleton =>
          interp x6 x7 =>
           interp x8 x9 =>
            locDecl x10 (propEq singleton x6 x8) =>
             locDecl x11 (propId singleton x7 x9) =>
              interp x10 x11 =>
               spy
                (tau (propEq singleton x0 x6) (propEq singleton x1 x8) x12 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x3)
                             x4) x5) x7) x9) x11) x12)
"
"5-----]-]Success  
macro_tau singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 tau (propEq singleton x0 x6) (propEq singleton x1 x7) x12 \
  impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
         x9) x10) x11) x12
"
"5_____[+[Begin 
macro_interp singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 tau (propEq singleton x0 x6) (propEq singleton x0 x7) (X1352^6 x9 x10 x11)
"
"6______[+[Begin 
macro_tau singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 tau (propEq singleton x0 x6) (propEq singleton x0 x7) (X1352^6 x9 x10 x11)
"
"7_______[+[Begin 
setoid_eq singleton X1353^6
"
"7-------]-]Success  
setoid_eq singleton x6 \ x7 \ propId singleton x6 x7
"
"7_______[+[Begin 
interp singleton X1354^6
"
"7-------]-]Success  
interp singleton singleton
"
"7_______[+[Begin 
interp singleton X1355^6
"
"7-------]-]Success  
interp singleton singleton
"
"7_______[+[Begin 
tau singleton singleton X1356^6
"
"7-------]-]Success  
tau singleton singleton x6 \ x6
"
"7_______[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x8 singleton =>
        locDecl x7 singleton =>
         locDecl x9 singleton =>
          interp x6 x7 =>
           interp x8 x9 =>
            locDecl x10 (propEq singleton x6 x8) =>
             locDecl x11 (propId singleton x7 x9) =>
              interp x10 x11 =>
               spy
                (tau (propEq singleton x0 x6) (propEq singleton x0 x8)
                  (X1352^6 x7 x9 x11))
"
"8________[+[Begin 
tau (propEq singleton x0 x6) (propEq singleton x0 x8) (X1352^6 x7 x9 x11)
"
"9_________[+[Begin 
tau_proof_eq x0 x0 singleton X1357^12
"
"10__________[+[Begin 
interp_isa x0 singleton X1358^12
"
"11___________[+[Begin 
of x0 X1359^12 ext
"
"11-----------]-]Success  
of x0 singleton ext
"
"11___________[+[Begin 
interp x0 X1360^12
"
"11-----------]-]Success  
interp x0 x3
"
"11___________[+[Begin 
tau singleton singleton X1361^12
"
"11-----------]-]Success  
tau singleton singleton x12 \ x12
"
"11___________[+[Begin 
X1358^12 = x3
"
"11-----------]-]Success  
x3 = x3
"
"10----------]-]Success  
interp_isa x0 singleton x3
"
"10__________[+[Begin 
setoid_refl singleton X1362^12
"
"10----------]-]Success  
setoid_refl singleton x12 \ id singleton x12
"
"10__________[+[Begin 
X1357^12 = id singleton x3
"
"10----------]-]Success  
id singleton x3 = id singleton x3
"
"9---------]-]Success  
tau_proof_eq x0 x0 singleton (id singleton x3)
"
"9_________[+[Begin 
tau_proof_eq x6 x8 singleton X1363^12
"
"10__________[+[Begin 
locDecl X1364^12 (propEq _ x6 x8)
"
"10----------]-]Success  
locDecl x10 (propEq _ x6 x8)
"
"10__________[+[Begin 
interp_isa x10 (propEq singleton x6 x8) X1363^12
"
"11___________[+[Begin 
of x10 X1365^12 ext
"
"11-----------]-]Success  
of x10 (propEq singleton x6 x8) ext
"
"11___________[+[Begin 
interp x10 X1366^12
"
"11-----------]-]Success  
interp x10 x11
"
"11___________[+[Begin 
tau (propEq singleton x6 x8) (propEq singleton x6 x8) X1367^12
"
"11-----------]-]Success  
tau (propEq singleton x6 x8) (propEq singleton x6 x8) x12 \ x12
"
"11___________[+[Begin 
X1363^12 = x11
"
"11-----------]-]Success  
x11 = x11
"
"10----------]-]Success  
interp_isa x10 (propEq singleton x6 x8) x11
"
"9---------]-]Success  
tau_proof_eq x6 x8 singleton x11
"
"9_________[+[Begin 
interp_isa x0 singleton X1368^12
"
"10__________[+[Begin 
of x0 X1369^12 ext
"
"10----------]-]Success  
of x0 singleton ext
"
"10__________[+[Begin 
interp x0 X1370^12
"
"10----------]-]Success  
interp x0 x3
"
"10__________[+[Begin 
tau singleton singleton X1371^12
"
"10----------]-]Success  
tau singleton singleton x12 \ x12
"
"10__________[+[Begin 
X1368^12 = x3
"
"10----------]-]Success  
x3 = x3
"
"9---------]-]Success  
interp_isa x0 singleton x3
"
"9_________[+[Begin 
interp_isa x6 singleton X1372^12
"
"10__________[+[Begin 
of x6 X1373^12 ext
"
"10----------]-]Success  
of x6 singleton ext
"
"10__________[+[Begin 
interp x6 X1374^12
"
"10----------]-]Success  
interp x6 x7
"
"10__________[+[Begin 
tau singleton singleton X1375^12
"
"10----------]-]Success  
tau singleton singleton x12 \ x12
"
"10__________[+[Begin 
X1372^12 = x7
"
"10----------]-]Success  
x7 = x7
"
"9---------]-]Success  
interp_isa x6 singleton x7
"
"9_________[+[Begin 
interp_isa x0 singleton X1376^12
"
"10__________[+[Begin 
of x0 X1377^12 ext
"
"10----------]-]Success  
of x0 singleton ext
"
"10__________[+[Begin 
interp x0 X1378^12
"
"10----------]-]Success  
interp x0 x3
"
"10__________[+[Begin 
tau singleton singleton X1379^12
"
"10----------]-]Success  
tau singleton singleton x12 \ x12
"
"10__________[+[Begin 
X1376^12 = x3
"
"10----------]-]Success  
x3 = x3
"
"9---------]-]Success  
interp_isa x0 singleton x3
"
"9_________[+[Begin 
interp_isa x8 singleton X1380^12
"
"10__________[+[Begin 
of x8 X1381^12 ext
"
"10----------]-]Success  
of x8 singleton ext
"
"10__________[+[Begin 
interp x8 X1382^12
"
"10----------]-]Success  
interp x8 x9
"
"10__________[+[Begin 
tau singleton singleton X1383^12
"
"10----------]-]Success  
tau singleton singleton x12 \ x12
"
"10__________[+[Begin 
X1380^12 = x9
"
"10----------]-]Success  
x9 = x9
"
"9---------]-]Success  
interp_isa x8 singleton x9
"
"9_________[+[Begin 
interp singleton X1384^12
"
"9---------]-]Success  
interp singleton singleton
"
"9_________[+[Begin 
X1352^6 x7 x9 x11 = (x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x3)
          (id singleton x3)) x7) x9) x11) x12)
"
"9---------]-]Success  
(x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x3)
          (id singleton x3)) x7) x9) x11) x12) = (x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x3)
          (id singleton x3)) x7) x9) x11) x12)
"
"8--------]-]Success  
tau (propEq singleton x0 x6) (propEq singleton x0 x8) x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x3) x3)
          (id singleton x3)) x7) x9) x11) x12
"
"7-------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x8 singleton =>
        locDecl x7 singleton =>
         locDecl x9 singleton =>
          interp x6 x7 =>
           interp x8 x9 =>
            locDecl x10 (propEq singleton x6 x8) =>
             locDecl x11 (propId singleton x7 x9) =>
              interp x10 x11 =>
               spy
                (tau (propEq singleton x0 x6) (propEq singleton x0 x8) x12 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x3)
                             x3) (id singleton x3)) x7) x9) x11) x12)
"
"6------]-]Success  
macro_tau singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 tau (propEq singleton x0 x6) (propEq singleton x0 x7) x12 \
  impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) x3) x3)
           (id singleton x3)) x9) x10) x11) x12
"
"5-----]-]Success  
macro_interp singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 tau (propEq singleton x0 x6) (propEq singleton x0 x7) x12 \
  impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) x3) x3)
           (id singleton x3)) x9) x10) x11) x12
"
"5_____[+[Begin 
tau_trasp singleton singleton X1385^6
"
"5-----]-]Success  
tau_trasp singleton singleton x6 \ x7 \ x8 \ x8
"
"5_____[+[Begin 
macro_tau singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 tau_trasp (propEq singleton x0 x6) (propEq singleton x1 x7)
  (X1386^6 x9 x10 x11)
"
"6______[+[Begin 
setoid_eq singleton X1387^6
"
"6------]-]Success  
setoid_eq singleton x6 \ x7 \ propId singleton x6 x7
"
"6______[+[Begin 
interp singleton X1388^6
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
interp singleton X1389^6
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
tau singleton singleton X1390^6
"
"6------]-]Success  
tau singleton singleton x6 \ x6
"
"6______[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x8 singleton =>
        locDecl x7 singleton =>
         locDecl x9 singleton =>
          interp x6 x7 =>
           interp x8 x9 =>
            locDecl x10 (propEq singleton x6 x8) =>
             locDecl x11 (propId singleton x7 x9) =>
              interp x10 x11 =>
               spy
                (tau_trasp (propEq singleton x0 x6) (propEq singleton x1 x8)
                  (X1386^6 x7 x9 x11))
"
"7_______[+[Begin 
tau_trasp (propEq singleton x0 x6) (propEq singleton x1 x8)
 (X1386^6 x7 x9 x11)
"
"7-------]-]Success  
tau_trasp (propEq singleton x0 x6) (propEq singleton x1 x8) x12 \ x13 \ x14 \
 x14
"
"6------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x8 singleton =>
        locDecl x7 singleton =>
         locDecl x9 singleton =>
          interp x6 x7 =>
           interp x8 x9 =>
            locDecl x10 (propEq singleton x6 x8) =>
             locDecl x11 (propId singleton x7 x9) =>
              interp x10 x11 =>
               spy
                (tau_trasp (propEq singleton x0 x6) (propEq singleton x1 x8)
                  x12 \ x13 \ x14 \ x14)
"
"5-----]-]Success  
macro_tau singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 tau_trasp (propEq singleton x0 x6) (propEq singleton x1 x7) x12 \ x13 \
  x14 \ x14
"
"5_____[+[Begin 
setoid_refl singleton X1391^6
"
"5-----]-]Success  
setoid_refl singleton x6 \ id singleton x6
"
"5_____[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   locDecl x6 singleton =>
    locDecl x7 singleton =>
     locDecl x8 (X1392^6 x6 x7) =>
      tau_trasp singleton singleton (X1393^6 x6 x7 x8)
"
"5-----]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   locDecl x6 singleton =>
    locDecl x7 singleton =>
     locDecl x8 (X1392^6 x6 x7) =>
      (tau_trasp singleton singleton x9 \ x10 \ x11 \ x11)
"
"5_____[+[Begin 
X1225 x3 x4 x5 = (x6 \
 elim_setSigma x6 (x7 \
  setSigma (setPi singleton x8 \ propId singleton x4 x8) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) x7 \
  x8 \
  pair (setPi singleton x9 \ propId singleton x4 x9) (x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
   (lambda singleton x9 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
            x9) x9) (id singleton x9)) (app x7 x9))
   (forall_lam singleton x9 \
     forall_lam singleton x10 \
      forall_lam (propId singleton x9 x10) x11 \
       forall_app (forall_app (forall_app x8 x9) x10) x11))
"
"5-----]-]Success  
(x6 \
 elim_setSigma x6 (x7 \
  setSigma (setPi singleton x8 \ propId singleton x4 x8) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) x7 \
  x8 \
  pair (setPi singleton x9 \ propId singleton x4 x9) (x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
   (lambda singleton x9 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
            x9) x9) (id singleton x9)) (app x7 x9))
   (forall_lam singleton x9 \
     forall_lam singleton x10 \
      forall_lam (propId singleton x9 x10) x11 \
       forall_app (forall_app (forall_app x8 x9) x10) x11)) = (x6 \
 elim_setSigma x6 (x7 \
  setSigma (setPi singleton x8 \ propId singleton x4 x8) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) x7 \
  x8 \
  pair (setPi singleton x9 \ propId singleton x4 x9) (x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
   (lambda singleton x9 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
            x9) x9) (id singleton x9)) (app x7 x9))
   (forall_lam singleton x9 \
     forall_lam singleton x10 \
      forall_lam (propId singleton x9 x10) x11 \
       forall_app (forall_app (forall_app x8 x9) x10) x11))
"
"4----]-]Success  
tau (setPi singleton x6 \ propEq singleton x0 x6)
 (setPi singleton x6 \ propEq singleton x1 x6) x6 \
 elim_setSigma x6 (x7 \
  setSigma (setPi singleton x8 \ propId singleton x4 x8) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) x7 \
  x8 \
  pair (setPi singleton x9 \ propId singleton x4 x9) (x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
   (lambda singleton x9 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app (forall_app (forall_app (k_propId singleton) x3) x4) x5)
            x9) x9) (id singleton x9)) (app x7 x9))
   (forall_lam singleton x9 \
     forall_lam singleton x10 \
      forall_lam (propId singleton x9 x10) x11 \
       forall_app (forall_app (forall_app x8 x9) x10) x11)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 =>
               spy
                (tau (setPi singleton x6 \ propEq singleton x0 x6)
                  (setPi singleton x6 \ propEq singleton x1 x6) x6 \
                  elim_setSigma x6 (x7 \
                   setSigma (setPi singleton x8 \ propId singleton x4 x8)
                    x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star) x7 \ x8 \
                   pair (setPi singleton x9 \ propId singleton x4 x9) (x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton star star)
                    (lambda singleton x9 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) x3) x4) x5)
                             x9) x9) (id singleton x9)) (app x7 x9))
                    (forall_lam singleton x9 \
                      forall_lam singleton x10 \
                       forall_lam (propId singleton x9 x10) x11 \
                        forall_app (forall_app (forall_app x8 x9) x10) x11))
"
"2--]-]Success  
interp (setPi singleton x0 \ setPi singleton x1 \ propEq singleton x0 x1)
 (setSigma
   (setPi singleton x0 \
     setSigma (setPi singleton x1 \ propId singleton x0 x1) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \ propId singleton star star) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      forall singleton x4 \ propId singleton star star)
"
"2__[+[Begin 
setoid_eq (setPi singleton x0 \ setPi singleton x1 \ propEq singleton x0 x1)
 X1394
"
"3___[+[Begin 
interp singleton X1395
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ propEq singleton x0 x2) (X1396 x1)
"
"4____[+[Begin 
interp singleton X1397^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (X1398^2 x3)
"
"5_____[+[Begin 
setoid_eq singleton X1399^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
interp_isa x0 singleton X1400^4
"
"6______[+[Begin 
of x0 X1401^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1402^4
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1403^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1400^4 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa x2 singleton X1404^4
"
"6______[+[Begin 
of x2 X1405^4 ext
"
"6------]-]Success  
of x2 singleton ext
"
"6______[+[Begin 
interp x2 X1406^4
"
"6------]-]Success  
interp x2 x3
"
"6______[+[Begin 
tau singleton singleton X1407^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1404^4 = x3
"
"6------]-]Success  
x3 = x3
"
"5-----]-]Success  
interp_isa x2 singleton x3
"
"5_____[+[Begin 
X1398^2 x3 = propId singleton x1 x3
"
"5-----]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (propId singleton x1 x3)
"
"4____[+[Begin 
setoid_eq singleton X1408^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => setoid_eq (propEq singleton x0 x2) (X1409^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     (setoid_eq (propEq singleton x0 x2) x4 \ x5 \ propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy
                (tau (propEq singleton x0 x2) (propEq singleton x0 x3)
                  (X1410^2 x5 x6 x7))
"
"5_____[+[Begin 
tau (propEq singleton x0 x2) (propEq singleton x0 x3) (X1410^2 x5 x6 x7)
"
"6______[+[Begin 
tau_proof_eq x0 x0 singleton X1411^8
"
"7_______[+[Begin 
interp_isa x0 singleton X1412^8
"
"8________[+[Begin 
of x0 X1413^8 ext
"
"8--------]-]Success  
of x0 singleton ext
"
"8________[+[Begin 
interp x0 X1414^8
"
"8--------]-]Success  
interp x0 x1
"
"8________[+[Begin 
tau singleton singleton X1415^8
"
"8--------]-]Success  
tau singleton singleton x8 \ x8
"
"8________[+[Begin 
X1412^8 = x1
"
"8--------]-]Success  
x1 = x1
"
"7-------]-]Success  
interp_isa x0 singleton x1
"
"7_______[+[Begin 
setoid_refl singleton X1416^8
"
"7-------]-]Success  
setoid_refl singleton x8 \ id singleton x8
"
"7_______[+[Begin 
X1411^8 = id singleton x1
"
"7-------]-]Success  
id singleton x1 = id singleton x1
"
"6------]-]Success  
tau_proof_eq x0 x0 singleton (id singleton x1)
"
"6______[+[Begin 
tau_proof_eq x2 x3 singleton X1417^8
"
"7_______[+[Begin 
locDecl X1418^8 (propEq _ x2 x3)
"
"7-------]-]Success  
locDecl x4 (propEq _ x2 x3)
"
"7_______[+[Begin 
interp_isa x4 (propEq singleton x2 x3) X1417^8
"
"8________[+[Begin 
of x4 X1419^8 ext
"
"8--------]-]Success  
of x4 (propEq singleton x2 x3) ext
"
"8________[+[Begin 
interp x4 X1420^8
"
"8--------]-]Success  
interp x4 x7
"
"8________[+[Begin 
tau (propEq singleton x2 x3) (propEq singleton x2 x3) X1421^8
"
"8--------]-]Success  
tau (propEq singleton x2 x3) (propEq singleton x2 x3) x8 \ x8
"
"8________[+[Begin 
X1417^8 = x7
"
"8--------]-]Success  
x7 = x7
"
"7-------]-]Success  
interp_isa x4 (propEq singleton x2 x3) x7
"
"6------]-]Success  
tau_proof_eq x2 x3 singleton x7
"
"6______[+[Begin 
interp_isa x0 singleton X1422^8
"
"7_______[+[Begin 
of x0 X1423^8 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X1424^8
"
"7-------]-]Success  
interp x0 x1
"
"7_______[+[Begin 
tau singleton singleton X1425^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1422^8 = x1
"
"7-------]-]Success  
x1 = x1
"
"6------]-]Success  
interp_isa x0 singleton x1
"
"6______[+[Begin 
interp_isa x2 singleton X1426^8
"
"7_______[+[Begin 
of x2 X1427^8 ext
"
"7-------]-]Success  
of x2 singleton ext
"
"7_______[+[Begin 
interp x2 X1428^8
"
"7-------]-]Success  
interp x2 x5
"
"7_______[+[Begin 
tau singleton singleton X1429^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1426^8 = x5
"
"7-------]-]Success  
x5 = x5
"
"6------]-]Success  
interp_isa x2 singleton x5
"
"6______[+[Begin 
interp_isa x0 singleton X1430^8
"
"7_______[+[Begin 
of x0 X1431^8 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X1432^8
"
"7-------]-]Success  
interp x0 x1
"
"7_______[+[Begin 
tau singleton singleton X1433^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1430^8 = x1
"
"7-------]-]Success  
x1 = x1
"
"6------]-]Success  
interp_isa x0 singleton x1
"
"6______[+[Begin 
interp_isa x3 singleton X1434^8
"
"7_______[+[Begin 
of x3 X1435^8 ext
"
"7-------]-]Success  
of x3 singleton ext
"
"7_______[+[Begin 
interp x3 X1436^8
"
"7-------]-]Success  
interp x3 x6
"
"7_______[+[Begin 
tau singleton singleton X1437^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1434^8 = x6
"
"7-------]-]Success  
x6 = x6
"
"6------]-]Success  
interp_isa x3 singleton x6
"
"6______[+[Begin 
interp singleton X1438^8
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
X1410^2 x5 x6 x7 = (x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8)
"
"6------]-]Success  
(x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8) = (x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8)
"
"5-----]-]Success  
tau (propEq singleton x0 x2) (propEq singleton x0 x3) x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy
                (tau (propEq singleton x0 x2) (propEq singleton x0 x3) x8 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x1)
                             x1) (id singleton x1)) x5) x6) x7) x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     interp (setPi singleton x2 \ propEq singleton x0 x2)
      (setSigma (setPi singleton x2 \ propId singleton x1 x2) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \ propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     ((interp (setPi singleton x2 \ propEq singleton x0 x2)
        (setSigma (setPi singleton x2 \ propId singleton x1 x2) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \ propId singleton star star)),
     (setoid_eq (setPi singleton x2 \ propEq singleton x0 x2) (X1439 x1)))
"
"4____[+[Begin 
interp singleton X1440^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (X1441^2 x3)
"
"5_____[+[Begin 
setoid_eq singleton X1442^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
interp_isa x0 singleton X1443^4
"
"6______[+[Begin 
of x0 X1444^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1445^4
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1446^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1443^4 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa x2 singleton X1447^4
"
"6______[+[Begin 
of x2 X1448^4 ext
"
"6------]-]Success  
of x2 singleton ext
"
"6______[+[Begin 
interp x2 X1449^4
"
"6------]-]Success  
interp x2 x3
"
"6______[+[Begin 
tau singleton singleton X1450^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1447^4 = x3
"
"6------]-]Success  
x3 = x3
"
"5-----]-]Success  
interp_isa x2 singleton x3
"
"5_____[+[Begin 
X1441^2 x3 = propId singleton x1 x3
"
"5-----]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (propId singleton x1 x3)
"
"4____[+[Begin 
setoid_eq singleton X1451^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => setoid_eq (propEq singleton x0 x2) (X1452^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     (setoid_eq (propEq singleton x0 x2) x4 \ x5 \ propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy
                (tau (propEq singleton x0 x2) (propEq singleton x0 x3)
                  (X1453^2 x5 x6 x7))
"
"5_____[+[Begin 
tau (propEq singleton x0 x2) (propEq singleton x0 x3) (X1453^2 x5 x6 x7)
"
"6______[+[Begin 
tau_proof_eq x0 x0 singleton X1454^8
"
"7_______[+[Begin 
interp_isa x0 singleton X1455^8
"
"8________[+[Begin 
of x0 X1456^8 ext
"
"8--------]-]Success  
of x0 singleton ext
"
"8________[+[Begin 
interp x0 X1457^8
"
"8--------]-]Success  
interp x0 x1
"
"8________[+[Begin 
tau singleton singleton X1458^8
"
"8--------]-]Success  
tau singleton singleton x8 \ x8
"
"8________[+[Begin 
X1455^8 = x1
"
"8--------]-]Success  
x1 = x1
"
"7-------]-]Success  
interp_isa x0 singleton x1
"
"7_______[+[Begin 
setoid_refl singleton X1459^8
"
"7-------]-]Success  
setoid_refl singleton x8 \ id singleton x8
"
"7_______[+[Begin 
X1454^8 = id singleton x1
"
"7-------]-]Success  
id singleton x1 = id singleton x1
"
"6------]-]Success  
tau_proof_eq x0 x0 singleton (id singleton x1)
"
"6______[+[Begin 
tau_proof_eq x2 x3 singleton X1460^8
"
"7_______[+[Begin 
locDecl X1461^8 (propEq _ x2 x3)
"
"7-------]-]Success  
locDecl x4 (propEq _ x2 x3)
"
"7_______[+[Begin 
interp_isa x4 (propEq singleton x2 x3) X1460^8
"
"8________[+[Begin 
of x4 X1462^8 ext
"
"8--------]-]Success  
of x4 (propEq singleton x2 x3) ext
"
"8________[+[Begin 
interp x4 X1463^8
"
"8--------]-]Success  
interp x4 x7
"
"8________[+[Begin 
tau (propEq singleton x2 x3) (propEq singleton x2 x3) X1464^8
"
"8--------]-]Success  
tau (propEq singleton x2 x3) (propEq singleton x2 x3) x8 \ x8
"
"8________[+[Begin 
X1460^8 = x7
"
"8--------]-]Success  
x7 = x7
"
"7-------]-]Success  
interp_isa x4 (propEq singleton x2 x3) x7
"
"6------]-]Success  
tau_proof_eq x2 x3 singleton x7
"
"6______[+[Begin 
interp_isa x0 singleton X1465^8
"
"7_______[+[Begin 
of x0 X1466^8 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X1467^8
"
"7-------]-]Success  
interp x0 x1
"
"7_______[+[Begin 
tau singleton singleton X1468^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1465^8 = x1
"
"7-------]-]Success  
x1 = x1
"
"6------]-]Success  
interp_isa x0 singleton x1
"
"6______[+[Begin 
interp_isa x2 singleton X1469^8
"
"7_______[+[Begin 
of x2 X1470^8 ext
"
"7-------]-]Success  
of x2 singleton ext
"
"7_______[+[Begin 
interp x2 X1471^8
"
"7-------]-]Success  
interp x2 x5
"
"7_______[+[Begin 
tau singleton singleton X1472^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1469^8 = x5
"
"7-------]-]Success  
x5 = x5
"
"6------]-]Success  
interp_isa x2 singleton x5
"
"6______[+[Begin 
interp_isa x0 singleton X1473^8
"
"7_______[+[Begin 
of x0 X1474^8 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X1475^8
"
"7-------]-]Success  
interp x0 x1
"
"7_______[+[Begin 
tau singleton singleton X1476^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1473^8 = x1
"
"7-------]-]Success  
x1 = x1
"
"6------]-]Success  
interp_isa x0 singleton x1
"
"6______[+[Begin 
interp_isa x3 singleton X1477^8
"
"7_______[+[Begin 
of x3 X1478^8 ext
"
"7-------]-]Success  
of x3 singleton ext
"
"7_______[+[Begin 
interp x3 X1479^8
"
"7-------]-]Success  
interp x3 x6
"
"7_______[+[Begin 
tau singleton singleton X1480^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1477^8 = x6
"
"7-------]-]Success  
x6 = x6
"
"6------]-]Success  
interp_isa x3 singleton x6
"
"6______[+[Begin 
interp singleton X1481^8
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
X1453^2 x5 x6 x7 = (x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8)
"
"6------]-]Success  
(x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8) = (x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8)
"
"5-----]-]Success  
tau (propEq singleton x0 x2) (propEq singleton x0 x3) x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy
                (tau (propEq singleton x0 x2) (propEq singleton x0 x3) x8 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x1)
                             x1) (id singleton x1)) x5) x6) x7) x8)
"
"4____[+[Begin 
interp singleton X1482^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (X1483^2 x3)
"
"5_____[+[Begin 
setoid_eq singleton X1484^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
interp_isa x0 singleton X1485^4
"
"6______[+[Begin 
of x0 X1486^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1487^4
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1488^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1485^4 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa x2 singleton X1489^4
"
"6______[+[Begin 
of x2 X1490^4 ext
"
"6------]-]Success  
of x2 singleton ext
"
"6______[+[Begin 
interp x2 X1491^4
"
"6------]-]Success  
interp x2 x3
"
"6______[+[Begin 
tau singleton singleton X1492^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1489^4 = x3
"
"6------]-]Success  
x3 = x3
"
"5-----]-]Success  
interp_isa x2 singleton x3
"
"5_____[+[Begin 
X1483^2 x3 = propId singleton x1 x3
"
"5-----]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (propId singleton x1 x3)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     ((interp (propEq singleton x0 x2) (propId singleton x1 x3)),
     (setoid_eq (propEq singleton x0 x2) (X1493^2 x3)))
"
"5_____[+[Begin 
setoid_eq singleton X1494^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
interp_isa x0 singleton X1495^4
"
"6______[+[Begin 
of x0 X1496^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1497^4
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1498^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1495^4 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa x2 singleton X1499^4
"
"6______[+[Begin 
of x2 X1500^4 ext
"
"6------]-]Success  
of x2 singleton ext
"
"6______[+[Begin 
interp x2 X1501^4
"
"6------]-]Success  
interp x2 x3
"
"6______[+[Begin 
tau singleton singleton X1502^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1499^4 = x3
"
"6------]-]Success  
x3 = x3
"
"5-----]-]Success  
interp_isa x2 singleton x3
"
"5_____[+[Begin 
propId singleton x1 x3 = propId singleton x1 x3
"
"5-----]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     ((interp (propEq singleton x0 x2) (propId singleton x1 x3)),
     (setoid_eq (propEq singleton x0 x2) x4 \ x5 \ propId singleton star star))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     ((interp (setPi singleton x2 \ propEq singleton x0 x2)
        (setSigma (setPi singleton x2 \ propId singleton x1 x2) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \ propId singleton star star)),
     (setoid_eq (setPi singleton x2 \ propEq singleton x0 x2) x2 \ x3 \
       forall singleton x4 \ propId singleton star star))
"
"2--]-]Success  
setoid_eq (setPi singleton x0 \ setPi singleton x1 \ propEq singleton x0 x1)
 x0 \ x1 \
 forall singleton x2 \ forall singleton x3 \ propId singleton star star
"
"2__[+[Begin 
interp singleton X1503^2
"
"2--]-]Success  
interp singleton singleton
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (X1504^2 x3)
"
"3___[+[Begin 
setoid_eq singleton X1505^4
"
"3---]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"3___[+[Begin 
interp_isa x0 singleton X1506^4
"
"4____[+[Begin 
of x0 X1507^4 ext
"
"4----]-]Success  
of x0 singleton ext
"
"4____[+[Begin 
interp x0 X1508^4
"
"4----]-]Success  
interp x0 x1
"
"4____[+[Begin 
tau singleton singleton X1509^4
"
"4----]-]Success  
tau singleton singleton x4 \ x4
"
"4____[+[Begin 
X1506^4 = x1
"
"4----]-]Success  
x1 = x1
"
"3---]-]Success  
interp_isa x0 singleton x1
"
"3___[+[Begin 
interp_isa x2 singleton X1510^4
"
"4____[+[Begin 
of x2 X1511^4 ext
"
"4----]-]Success  
of x2 singleton ext
"
"4____[+[Begin 
interp x2 X1512^4
"
"4----]-]Success  
interp x2 x3
"
"4____[+[Begin 
tau singleton singleton X1513^4
"
"4----]-]Success  
tau singleton singleton x4 \ x4
"
"4____[+[Begin 
X1510^4 = x3
"
"4----]-]Success  
x3 = x3
"
"3---]-]Success  
interp_isa x2 singleton x3
"
"3___[+[Begin 
X1504^2 x3 = propId singleton x1 x3
"
"3---]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (propId singleton x1 x3)
"
"2__[+[Begin 
setoid_eq singleton X1514^2
"
"2--]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => setoid_eq (propEq singleton x0 x2) (X1515^2 x3)
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     (setoid_eq (propEq singleton x0 x2) x4 \ x5 \ propId singleton star star)
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy
                (tau (propEq singleton x0 x2) (propEq singleton x0 x3)
                  (X1516^2 x5 x6 x7))
"
"3___[+[Begin 
tau (propEq singleton x0 x2) (propEq singleton x0 x3) (X1516^2 x5 x6 x7)
"
"4____[+[Begin 
tau_proof_eq x0 x0 singleton X1517^8
"
"5_____[+[Begin 
interp_isa x0 singleton X1518^8
"
"6______[+[Begin 
of x0 X1519^8 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1520^8
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1521^8
"
"6------]-]Success  
tau singleton singleton x8 \ x8
"
"6______[+[Begin 
X1518^8 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
setoid_refl singleton X1522^8
"
"5-----]-]Success  
setoid_refl singleton x8 \ id singleton x8
"
"5_____[+[Begin 
X1517^8 = id singleton x1
"
"5-----]-]Success  
id singleton x1 = id singleton x1
"
"4----]-]Success  
tau_proof_eq x0 x0 singleton (id singleton x1)
"
"4____[+[Begin 
tau_proof_eq x2 x3 singleton X1523^8
"
"5_____[+[Begin 
locDecl X1524^8 (propEq _ x2 x3)
"
"5-----]-]Success  
locDecl x4 (propEq _ x2 x3)
"
"5_____[+[Begin 
interp_isa x4 (propEq singleton x2 x3) X1523^8
"
"6______[+[Begin 
of x4 X1525^8 ext
"
"6------]-]Success  
of x4 (propEq singleton x2 x3) ext
"
"6______[+[Begin 
interp x4 X1526^8
"
"6------]-]Success  
interp x4 x7
"
"6______[+[Begin 
tau (propEq singleton x2 x3) (propEq singleton x2 x3) X1527^8
"
"6------]-]Success  
tau (propEq singleton x2 x3) (propEq singleton x2 x3) x8 \ x8
"
"6______[+[Begin 
X1523^8 = x7
"
"6------]-]Success  
x7 = x7
"
"5-----]-]Success  
interp_isa x4 (propEq singleton x2 x3) x7
"
"4----]-]Success  
tau_proof_eq x2 x3 singleton x7
"
"4____[+[Begin 
interp_isa x0 singleton X1528^8
"
"5_____[+[Begin 
of x0 X1529^8 ext
"
"5-----]-]Success  
of x0 singleton ext
"
"5_____[+[Begin 
interp x0 X1530^8
"
"5-----]-]Success  
interp x0 x1
"
"5_____[+[Begin 
tau singleton singleton X1531^8
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"5_____[+[Begin 
X1528^8 = x1
"
"5-----]-]Success  
x1 = x1
"
"4----]-]Success  
interp_isa x0 singleton x1
"
"4____[+[Begin 
interp_isa x2 singleton X1532^8
"
"5_____[+[Begin 
of x2 X1533^8 ext
"
"5-----]-]Success  
of x2 singleton ext
"
"5_____[+[Begin 
interp x2 X1534^8
"
"5-----]-]Success  
interp x2 x5
"
"5_____[+[Begin 
tau singleton singleton X1535^8
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"5_____[+[Begin 
X1532^8 = x5
"
"5-----]-]Success  
x5 = x5
"
"4----]-]Success  
interp_isa x2 singleton x5
"
"4____[+[Begin 
interp_isa x0 singleton X1536^8
"
"5_____[+[Begin 
of x0 X1537^8 ext
"
"5-----]-]Success  
of x0 singleton ext
"
"5_____[+[Begin 
interp x0 X1538^8
"
"5-----]-]Success  
interp x0 x1
"
"5_____[+[Begin 
tau singleton singleton X1539^8
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"5_____[+[Begin 
X1536^8 = x1
"
"5-----]-]Success  
x1 = x1
"
"4----]-]Success  
interp_isa x0 singleton x1
"
"4____[+[Begin 
interp_isa x3 singleton X1540^8
"
"5_____[+[Begin 
of x3 X1541^8 ext
"
"5-----]-]Success  
of x3 singleton ext
"
"5_____[+[Begin 
interp x3 X1542^8
"
"5-----]-]Success  
interp x3 x6
"
"5_____[+[Begin 
tau singleton singleton X1543^8
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"5_____[+[Begin 
X1540^8 = x6
"
"5-----]-]Success  
x6 = x6
"
"4----]-]Success  
interp_isa x3 singleton x6
"
"4____[+[Begin 
interp singleton X1544^8
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
X1516^2 x5 x6 x7 = (x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8)
"
"4----]-]Success  
(x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8) = (x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8)
"
"3---]-]Success  
tau (propEq singleton x0 x2) (propEq singleton x0 x3) x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8
"
"2--]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy
                (tau (propEq singleton x0 x2) (propEq singleton x0 x3) x8 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x1)
                             x1) (id singleton x1)) x5) x6) x7) x8)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     setoid_tran (setPi singleton x2 \ propEq singleton x0 x2) (X1545 x1)
"
"3___[+[Begin 
interp (setPi singleton x2 \ propEq singleton x0 x2) X1546^2
"
"4____[+[Begin 
interp singleton X1547^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (X1548^2 x3)
"
"5_____[+[Begin 
setoid_eq singleton X1549^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
interp_isa x0 singleton X1550^4
"
"6______[+[Begin 
of x0 X1551^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1552^4
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1553^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1550^4 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa x2 singleton X1554^4
"
"6______[+[Begin 
of x2 X1555^4 ext
"
"6------]-]Success  
of x2 singleton ext
"
"6______[+[Begin 
interp x2 X1556^4
"
"6------]-]Success  
interp x2 x3
"
"6______[+[Begin 
tau singleton singleton X1557^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1554^4 = x3
"
"6------]-]Success  
x3 = x3
"
"5-----]-]Success  
interp_isa x2 singleton x3
"
"5_____[+[Begin 
X1548^2 x3 = propId singleton x1 x3
"
"5-----]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (propId singleton x1 x3)
"
"4____[+[Begin 
setoid_eq singleton X1558^2
"
"4----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => setoid_eq (propEq singleton x0 x2) (X1559^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     (setoid_eq (propEq singleton x0 x2) x4 \ x5 \ propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy
                (tau (propEq singleton x0 x2) (propEq singleton x0 x3)
                  (X1560^2 x5 x6 x7))
"
"5_____[+[Begin 
tau (propEq singleton x0 x2) (propEq singleton x0 x3) (X1560^2 x5 x6 x7)
"
"6______[+[Begin 
tau_proof_eq x0 x0 singleton X1561^8
"
"7_______[+[Begin 
interp_isa x0 singleton X1562^8
"
"8________[+[Begin 
of x0 X1563^8 ext
"
"8--------]-]Success  
of x0 singleton ext
"
"8________[+[Begin 
interp x0 X1564^8
"
"8--------]-]Success  
interp x0 x1
"
"8________[+[Begin 
tau singleton singleton X1565^8
"
"8--------]-]Success  
tau singleton singleton x8 \ x8
"
"8________[+[Begin 
X1562^8 = x1
"
"8--------]-]Success  
x1 = x1
"
"7-------]-]Success  
interp_isa x0 singleton x1
"
"7_______[+[Begin 
setoid_refl singleton X1566^8
"
"7-------]-]Success  
setoid_refl singleton x8 \ id singleton x8
"
"7_______[+[Begin 
X1561^8 = id singleton x1
"
"7-------]-]Success  
id singleton x1 = id singleton x1
"
"6------]-]Success  
tau_proof_eq x0 x0 singleton (id singleton x1)
"
"6______[+[Begin 
tau_proof_eq x2 x3 singleton X1567^8
"
"7_______[+[Begin 
locDecl X1568^8 (propEq _ x2 x3)
"
"7-------]-]Success  
locDecl x4 (propEq _ x2 x3)
"
"7_______[+[Begin 
interp_isa x4 (propEq singleton x2 x3) X1567^8
"
"8________[+[Begin 
of x4 X1569^8 ext
"
"8--------]-]Success  
of x4 (propEq singleton x2 x3) ext
"
"8________[+[Begin 
interp x4 X1570^8
"
"8--------]-]Success  
interp x4 x7
"
"8________[+[Begin 
tau (propEq singleton x2 x3) (propEq singleton x2 x3) X1571^8
"
"8--------]-]Success  
tau (propEq singleton x2 x3) (propEq singleton x2 x3) x8 \ x8
"
"8________[+[Begin 
X1567^8 = x7
"
"8--------]-]Success  
x7 = x7
"
"7-------]-]Success  
interp_isa x4 (propEq singleton x2 x3) x7
"
"6------]-]Success  
tau_proof_eq x2 x3 singleton x7
"
"6______[+[Begin 
interp_isa x0 singleton X1572^8
"
"7_______[+[Begin 
of x0 X1573^8 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X1574^8
"
"7-------]-]Success  
interp x0 x1
"
"7_______[+[Begin 
tau singleton singleton X1575^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1572^8 = x1
"
"7-------]-]Success  
x1 = x1
"
"6------]-]Success  
interp_isa x0 singleton x1
"
"6______[+[Begin 
interp_isa x2 singleton X1576^8
"
"7_______[+[Begin 
of x2 X1577^8 ext
"
"7-------]-]Success  
of x2 singleton ext
"
"7_______[+[Begin 
interp x2 X1578^8
"
"7-------]-]Success  
interp x2 x5
"
"7_______[+[Begin 
tau singleton singleton X1579^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1576^8 = x5
"
"7-------]-]Success  
x5 = x5
"
"6------]-]Success  
interp_isa x2 singleton x5
"
"6______[+[Begin 
interp_isa x0 singleton X1580^8
"
"7_______[+[Begin 
of x0 X1581^8 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X1582^8
"
"7-------]-]Success  
interp x0 x1
"
"7_______[+[Begin 
tau singleton singleton X1583^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1580^8 = x1
"
"7-------]-]Success  
x1 = x1
"
"6------]-]Success  
interp_isa x0 singleton x1
"
"6______[+[Begin 
interp_isa x3 singleton X1584^8
"
"7_______[+[Begin 
of x3 X1585^8 ext
"
"7-------]-]Success  
of x3 singleton ext
"
"7_______[+[Begin 
interp x3 X1586^8
"
"7-------]-]Success  
interp x3 x6
"
"7_______[+[Begin 
tau singleton singleton X1587^8
"
"7-------]-]Success  
tau singleton singleton x8 \ x8
"
"7_______[+[Begin 
X1584^8 = x6
"
"7-------]-]Success  
x6 = x6
"
"6------]-]Success  
interp_isa x3 singleton x6
"
"6______[+[Begin 
interp singleton X1588^8
"
"6------]-]Success  
interp singleton singleton
"
"6______[+[Begin 
X1560^2 x5 x6 x7 = (x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8)
"
"6------]-]Success  
(x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8) = (x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8)
"
"5-----]-]Success  
tau (propEq singleton x0 x2) (propEq singleton x0 x3) x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) x1) x1)
          (id singleton x1)) x5) x6) x7) x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              interp x4 x7 =>
               spy
                (tau (propEq singleton x0 x2) (propEq singleton x0 x3) x8 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) x1)
                             x1) (id singleton x1)) x5) x6) x7) x8)
"
"3---]-]Success  
interp (setPi singleton x2 \ propEq singleton x0 x2)
 (setSigma (setPi singleton x2 \ propId singleton x1 x2) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \ propId singleton star star)
"
"3___[+[Begin 
setoid_eq (setPi singleton x2 \ propEq singleton x0 x2) X1589^2
"
"4____[+[Begin 
interp singleton X1590^2
"
"4----]-]Success  
interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (X1591^2 x3)
"
"5_____[+[Begin 
setoid_eq singleton X1592^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
interp_isa x0 singleton X1593^4
"
"6______[+[Begin 
of x0 X1594^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1595^4
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1596^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1593^4 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa x2 singleton X1597^4
"
"6______[+[Begin 
of x2 X1598^4 ext
"
"6------]-]Success  
of x2 singleton ext
"
"6______[+[Begin 
interp x2 X1599^4
"
"6------]-]Success  
interp x2 x3
"
"6______[+[Begin 
tau singleton singleton X1600^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1597^4 = x3
"
"6------]-]Success  
x3 = x3
"
"5-----]-]Success  
interp_isa x2 singleton x3
"
"5_____[+[Begin 
X1591^2 x3 = propId singleton x1 x3
"
"5-----]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => interp (propEq singleton x0 x2) (propId singleton x1 x3)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     ((interp (propEq singleton x0 x2) (propId singleton x1 x3)),
     (setoid_eq (propEq singleton x0 x2) (X1601^2 x3)))
"
"5_____[+[Begin 
setoid_eq singleton X1602^4
"
"5-----]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"5_____[+[Begin 
interp_isa x0 singleton X1603^4
"
"6______[+[Begin 
of x0 X1604^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X1605^4
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X1606^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1603^4 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa x2 singleton X1607^4
"
"6______[+[Begin 
of x2 X1608^4 ext
"
"6------]-]Success  
of x2 singleton ext
"
"6______[+[Begin 
interp x2 X1609^4
"
"6------]-]Success  
interp x2 x3
"
"6______[+[Begin 
tau singleton singleton X1610^4
"
"6------]-]Success  
tau singleton singleton x4 \ x4
"
"6______[+[Begin 
X1607^4 = x3
"
"6------]-]Success  
x3 = x3
"
"5-----]-]Success  
interp_isa x2 singleton x3
"
"5_____[+[Begin 
propId singleton x1 x3 = propId singleton x1 x3
"
"5-----]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     ((interp (propEq singleton x0 x2) (propId singleton x1 x3)),
     (setoid_eq (propEq singleton x0 x2) x4 \ x5 \ propId singleton star star))
"
"3---]-]Success  
setoid_eq (setPi singleton x2 \ propEq singleton x0 x2) x2 \ x3 \
 forall singleton x4 \ propId singleton star star
"
"3___[+[Begin 
setoid_eq singleton X1611^4
"
"3---]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"3___[+[Begin 
interp_isa x0 singleton X1612^4
"
"4____[+[Begin 
of x0 X1613^4 ext
"
"4----]-]Success  
of x0 singleton ext
"
"4____[+[Begin 
interp x0 X1614^4
"
"4----]-]Success  
interp x0 x1
"
"4____[+[Begin 
tau singleton singleton X1615^4
"
"4----]-]Success  
tau singleton singleton x4 \ x4
"
"4____[+[Begin 
X1612^4 = x1
"
"4----]-]Success  
x1 = x1
"
"3---]-]Success  
interp_isa x0 singleton x1
"
"3___[+[Begin 
interp_isa x2 singleton X1616^4
"
"4____[+[Begin 
of x2 X1617^4 ext
"
"4----]-]Success  
of x2 singleton ext
"
"4____[+[Begin 
interp x2 X1618^4
"
"4----]-]Success  
interp x2 x3
"
"4____[+[Begin 
tau singleton singleton X1619^4
"
"4----]-]Success  
tau singleton singleton x4 \ x4
"
"4____[+[Begin 
X1616^4 = x3
"
"4----]-]Success  
x3 = x3
"
"3---]-]Success  
interp_isa x2 singleton x3
"
"3___[+[Begin 
X1620^2 x3 = propId singleton x1 x3
"
"3---]-]Success  
propId singleton x1 x3 = propId singleton x1 x3
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 => setoid_tran (propEq singleton x0 x2) (X1621^2 x3)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    interp x2 x3 =>
     (setoid_tran (propEq singleton x0 x2) x4 \ x5 \ x6 \ x7 \ x8 \
       id singleton star)
"
"3___[+[Begin 
X1545 x1 = (x2 \ x3 \ x4 \ x5 \ x6 \
 forall_lam singleton x7 \ id singleton star)
"
"3---]-]Success  
(x2 \ x3 \ x4 \ x5 \ x6 \ forall_lam singleton x7 \ id singleton star) =
 (x2 \ x3 \ x4 \ x5 \ x6 \ forall_lam singleton x7 \ id singleton star)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     (setoid_tran (setPi singleton x2 \ propEq singleton x0 x2) x2 \ x3 \
       x4 \ x5 \ x6 \ forall_lam singleton x7 \ id singleton star)
"
"2__[+[Begin 
X1622 = (x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam singleton x5 \ forall_lam singleton x6 \ id singleton star)
"
"2--]-]Success  
(x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam singleton x5 \ forall_lam singleton x6 \ id singleton star) =
 (x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam singleton x5 \ forall_lam singleton x6 \ id singleton star)
"
"1-]-]Success  
setoid_tran
 (setPi singleton x0 \ setPi singleton x1 \ propEq singleton x0 x1) _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_tran
 (setPi (propEq singleton star star) x0 \
   setPi (propEq singleton star star) x1 \ singleton) _
"
"2__[+[Begin 
interp
 (setPi (propEq singleton star star) x0 \
   setPi (propEq singleton star star) x1 \ singleton) X1623
"
"3___[+[Begin 
interp (propEq singleton star star) X1624
"
"4____[+[Begin 
setoid_eq singleton X1625
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
interp_isa star singleton X1626
"
"5_____[+[Begin 
of star X1627 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X1628
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X1629
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X1626 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X1630
"
"5_____[+[Begin 
of star X1631 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X1632
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X1633
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X1630 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
X1624 = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     interp (setPi (propEq singleton star star) x2 \ singleton) (X1634 x1)
"
"4____[+[Begin 
interp (propEq singleton star star) X1635^2
"
"5_____[+[Begin 
setoid_eq singleton X1636^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1637^2
"
"6______[+[Begin 
of star X1638^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1639^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1640^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1637^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1641^2
"
"6______[+[Begin 
of star X1642^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1643^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1644^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1641^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1635^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1645^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq (propEq singleton star star) X1646^2
"
"4----]-]Success  
setoid_eq (propEq singleton star star) x2 \ x3 \ propId singleton star star
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_eq singleton (X1647^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1648^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X1648^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     interp (setPi (propEq singleton star star) x2 \ singleton)
      (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
        forall (propId singleton star star) x3 \
         forall (propId singleton star star) x4 \
          forall (propId singleton star star) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
setoid_eq (propEq singleton star star) X1649
"
"3---]-]Success  
setoid_eq (propEq singleton star star) x0 \ x1 \ propId singleton star star
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     setoid_eq (setPi (propEq singleton star star) x2 \ singleton) (X1650 x1)
"
"4____[+[Begin 
interp (propEq singleton star star) X1651^2
"
"5_____[+[Begin 
setoid_eq singleton X1652^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1653^2
"
"6______[+[Begin 
of star X1654^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1655^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1656^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1653^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1657^2
"
"6______[+[Begin 
of star X1658^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1659^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1660^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1657^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1651^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1661^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X1662^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     (setoid_eq (setPi (propEq singleton star star) x2 \ singleton) x2 \ x3 \
       forall (propId singleton star star) x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \
             setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
           x4)
         (app
           (elim_setSigma x3 (x5 \
             setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
           x4))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 =>
               spy
                (tau (setPi (propEq singleton star star) x6 \ singleton)
                  (setPi (propEq singleton star star) x6 \ singleton)
                  (X1663 x3 x4 x5))
"
"4____[+[Begin 
tau (setPi (propEq singleton star star) x6 \ singleton)
 (setPi (propEq singleton star star) x6 \ singleton) (X1663 x3 x4 x5)
"
"4----]-]Success  
tau (setPi (propEq singleton star star) x6 \ singleton)
 (setPi (propEq singleton star star) x6 \ singleton) x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 =>
               spy
                (tau (setPi (propEq singleton star star) x6 \ singleton)
                  (setPi (propEq singleton star star) x6 \ singleton) x6 \ x6)
"
"2--]-]Success  
interp
 (setPi (propEq singleton star star) x0 \
   setPi (propEq singleton star star) x1 \ singleton)
 (setSigma
   (setPi (propId singleton star star) x0 \
     setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
      forall (propId singleton star star) x2 \
       forall (propId singleton star star) x3 \
        forall (propId singleton star star) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x0 \
   forall (propId singleton star star) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      forall (propId singleton star star) x4 \
       propId singleton
        (app
          (elim_setSigma (app x0 x1) (x5 \
            setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
          x4)
        (app
          (elim_setSigma (app x0 x2) (x5 \
            setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
          x4))
"
"2__[+[Begin 
setoid_eq
 (setPi (propEq singleton star star) x0 \
   setPi (propEq singleton star star) x1 \ singleton) X1664
"
"3___[+[Begin 
interp (propEq singleton star star) X1665
"
"4____[+[Begin 
setoid_eq singleton X1666
"
"4----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
interp_isa star singleton X1667
"
"5_____[+[Begin 
of star X1668 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X1669
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X1670
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X1667 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
interp_isa star singleton X1671
"
"5_____[+[Begin 
of star X1672 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
interp star X1673
"
"5-----]-]Success  
interp star star
"
"5_____[+[Begin 
tau singleton singleton X1674
"
"5-----]-]Success  
tau singleton singleton x0 \ x0
"
"5_____[+[Begin 
X1671 = star
"
"5-----]-]Success  
star = star
"
"4----]-]Success  
interp_isa star singleton star
"
"4____[+[Begin 
X1665 = propId singleton star star
"
"4----]-]Success  
propId singleton star star = propId singleton star star
"
"3---]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     interp (setPi (propEq singleton star star) x2 \ singleton) (X1675 x1)
"
"4____[+[Begin 
interp (propEq singleton star star) X1676^2
"
"5_____[+[Begin 
setoid_eq singleton X1677^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1678^2
"
"6______[+[Begin 
of star X1679^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1680^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1681^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1678^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1682^2
"
"6______[+[Begin 
of star X1683^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1684^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1685^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1682^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1676^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1686^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq (propEq singleton star star) X1687^2
"
"4----]-]Success  
setoid_eq (propEq singleton star star) x2 \ x3 \ propId singleton star star
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_eq singleton (X1688^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1689^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X1689^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     interp (setPi (propEq singleton star star) x2 \ singleton)
      (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
        forall (propId singleton star star) x3 \
         forall (propId singleton star star) x4 \
          forall (propId singleton star star) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     ((interp (setPi (propEq singleton star star) x2 \ singleton)
        (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
          forall (propId singleton star star) x3 \
           forall (propId singleton star star) x4 \
            forall (propId singleton star star) x5 \
             propId singleton (app x2 x3) (app x2 x4))),
     (setoid_eq (setPi (propEq singleton star star) x2 \ singleton)
       (X1690 x1)))
"
"4____[+[Begin 
interp (propEq singleton star star) X1691^2
"
"5_____[+[Begin 
setoid_eq singleton X1692^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1693^2
"
"6______[+[Begin 
of star X1694^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1695^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1696^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1693^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1697^2
"
"6______[+[Begin 
of star X1698^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1699^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1700^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1697^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1691^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1701^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq (propEq singleton star star) X1702^2
"
"4----]-]Success  
setoid_eq (propEq singleton star star) x2 \ x3 \ propId singleton star star
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_eq singleton (X1703^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1704^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X1704^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4____[+[Begin 
interp (propEq singleton star star) X1705^2
"
"5_____[+[Begin 
setoid_eq singleton X1706^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1707^2
"
"6______[+[Begin 
of star X1708^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1709^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1710^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1707^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1711^2
"
"6______[+[Begin 
of star X1712^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1713^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1714^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1711^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1705^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1715^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X1716^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     ((interp (setPi (propEq singleton star star) x2 \ singleton)
        (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
          forall (propId singleton star star) x3 \
           forall (propId singleton star star) x4 \
            forall (propId singleton star star) x5 \
             propId singleton (app x2 x3) (app x2 x4))),
     (setoid_eq (setPi (propEq singleton star star) x2 \ singleton) x2 \ x3 \
       forall (propId singleton star star) x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \
             setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
           x4)
         (app
           (elim_setSigma x3 (x5 \
             setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
           x4)))
"
"2--]-]Success  
setoid_eq
 (setPi (propEq singleton star star) x0 \
   setPi (propEq singleton star star) x1 \ singleton) x0 \ x1 \
 forall (propId singleton star star) x2 \
  forall (propId singleton star star) x3 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x4 \
            setPi (propId singleton star star) x5 \
             setSigma (setPi (propId singleton star star) x6 \ singleton)
              x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                forall (propId singleton star star) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4) x2)
        (x4 \ setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
      x3)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x4 \
            setPi (propId singleton star star) x5 \
             setSigma (setPi (propId singleton star star) x6 \ singleton)
              x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                forall (propId singleton star star) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4) x2)
        (x4 \ setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
      x3)
"
"2__[+[Begin 
setoid_eq singleton X1717
"
"2--]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"2__[+[Begin 
interp_isa star singleton X1718
"
"3___[+[Begin 
of star X1719 ext
"
"3---]-]Success  
of star singleton ext
"
"3___[+[Begin 
interp star X1720
"
"3---]-]Success  
interp star star
"
"3___[+[Begin 
tau singleton singleton X1721
"
"3---]-]Success  
tau singleton singleton x0 \ x0
"
"3___[+[Begin 
X1718 = star
"
"3---]-]Success  
star = star
"
"2--]-]Success  
interp_isa star singleton star
"
"2__[+[Begin 
interp_isa star singleton X1722
"
"3___[+[Begin 
of star X1723 ext
"
"3---]-]Success  
of star singleton ext
"
"3___[+[Begin 
interp star X1724
"
"3---]-]Success  
interp star star
"
"3___[+[Begin 
tau singleton singleton X1725
"
"3---]-]Success  
tau singleton singleton x0 \ x0
"
"3___[+[Begin 
X1722 = star
"
"3---]-]Success  
star = star
"
"2--]-]Success  
interp_isa star singleton star
"
"2__[+[Begin 
X1726 = propId singleton star star
"
"2--]-]Success  
propId singleton star star = propId singleton star star
"
"2__[+[Begin 
interp (propEq singleton star star) X1727^2
"
"3___[+[Begin 
setoid_eq singleton X1728^2
"
"3---]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
interp_isa star singleton X1729^2
"
"4____[+[Begin 
of star X1730^2 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1731^2
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1732^2
"
"4----]-]Success  
tau singleton singleton x2 \ x2
"
"4____[+[Begin 
X1729^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
interp_isa star singleton X1733^2
"
"4____[+[Begin 
of star X1734^2 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1735^2
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1736^2
"
"4----]-]Success  
tau singleton singleton x2 \ x2
"
"4____[+[Begin 
X1733^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
X1727^2 = propId singleton star star
"
"3---]-]Success  
propId singleton star star = propId singleton star star
"
"2--]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1737^2 x3)
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"2__[+[Begin 
setoid_eq (propEq singleton star star) X1738^2
"
"2--]-]Success  
setoid_eq (propEq singleton star star) x2 \ x3 \ propId singleton star star
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_eq singleton (X1739^2 x3)
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1740^2 x5 x6 x7))
"
"3___[+[Begin 
tau singleton singleton (X1740^2 x5 x6 x7)
"
"3---]-]Success  
tau singleton singleton x8 \ x8
"
"2--]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     setoid_tran (setPi (propEq singleton star star) x2 \ singleton)
      (X1741 x1)
"
"3___[+[Begin 
interp (setPi (propEq singleton star star) x2 \ singleton) X1742^2
"
"4____[+[Begin 
interp (propEq singleton star star) X1743^2
"
"5_____[+[Begin 
setoid_eq singleton X1744^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1745^2
"
"6______[+[Begin 
of star X1746^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1747^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1748^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1745^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1749^2
"
"6______[+[Begin 
of star X1750^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1751^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1752^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1749^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1743^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1753^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq (propEq singleton star star) X1754^2
"
"4----]-]Success  
setoid_eq (propEq singleton star star) x2 \ x3 \ propId singleton star star
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_eq singleton (X1755^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1756^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X1756^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
interp (setPi (propEq singleton star star) x2 \ singleton)
 (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
   forall (propId singleton star star) x3 \
    forall (propId singleton star star) x4 \
     forall (propId singleton star star) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
setoid_eq (setPi (propEq singleton star star) x2 \ singleton) X1757^2
"
"4____[+[Begin 
interp (propEq singleton star star) X1758^2
"
"5_____[+[Begin 
setoid_eq singleton X1759^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1760^2
"
"6______[+[Begin 
of star X1761^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1762^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1763^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1760^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1764^2
"
"6______[+[Begin 
of star X1765^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1766^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1767^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1764^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1758^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1768^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X1769^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
setoid_eq (setPi (propEq singleton star star) x2 \ singleton) x2 \ x3 \
 forall (propId singleton star star) x4 \
  propId singleton
   (app
     (elim_setSigma x2 (x5 \
       setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5) x4)
   (app
     (elim_setSigma x3 (x5 \
       setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5) x4)
"
"3___[+[Begin 
setoid_eq singleton X1770^2
"
"3---]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
interp_isa star singleton X1771^2
"
"4____[+[Begin 
of star X1772^2 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1773^2
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1774^2
"
"4----]-]Success  
tau singleton singleton x2 \ x2
"
"4____[+[Begin 
X1771^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
interp_isa star singleton X1775^2
"
"4____[+[Begin 
of star X1776^2 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1777^2
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1778^2
"
"4----]-]Success  
tau singleton singleton x2 \ x2
"
"4____[+[Begin 
X1775^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
X1779^2 = propId singleton star star
"
"3---]-]Success  
propId singleton star star = propId singleton star star
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_tran singleton (X1780^2 x3)
"
"4____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     locDecl x4 singleton =>
      locDecl x5 singleton =>
       locDecl x6 singleton =>
        locDecl x7 (propId singleton x4 x5) =>
         locDecl x8 (propId singleton x5 x6) =>
          spy
           (of
             (impl_app
               (elim_id x7 (x9 \ x10 \
                 implies (propId singleton x10 x6) (propId singleton x9 x6))
                 x9 \ impl_lam (propId singleton x9 x6) x10 \ x10) x8)
             (propId singleton x4 x6) int)
"
"5_____[+[Begin 
of
 (impl_app
   (elim_id x7 (x9 \ x10 \
     implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
     impl_lam (propId singleton x9 x6) x10 \ x10) x8)
 (propId singleton x4 x6) int
"
"6______[+[Begin 
isa
 (elim_id x7 (x9 \ x10 \
   implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
   impl_lam (propId singleton x9 x6) x10 \ x10)
 (implies X1781^9 (propId singleton x4 x6)) int
"
"7_______[+[Begin 
of
 (elim_id x7 (x9 \ x10 \
   implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
   impl_lam (propId singleton x9 x6) x10 \ x10) X1782^9 int
"
"8________[+[Begin 
of x7 (propId X1783^9 X1784^9 X1785^9) int
"
"8--------]-]Success  
of x7 (propId singleton x4 x5) int
"
"8________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 singleton =>
   locDecl x10 singleton =>
    isaType (implies (propId singleton x10 x6) (propId singleton x9 x6))
     propc int
"
"9_________[+[Begin 
ofType (implies (propId singleton x10 x6) (propId singleton x9 x6)) X1786^11
 int
"
"10__________[+[Begin 
of x10 X1787^11 int
"
"10----------]-]Success  
of x10 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of x6 X1788^11 int
"
"10----------]-]Success  
of x6 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(X1786^11 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"10__________[+[Begin 
of x9 X1789^12 int
"
"10----------]-]Success  
of x9 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of x6 X1790^12 int
"
"10----------]-]Success  
of x6 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
ofType (implies (propId singleton x10 x6) (propId singleton x9 x6)) props int
"
"9_________[+[Begin 
pts_leq props propc
"
"9---------]-]Success  
pts_leq props propc
"
"8--------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 singleton =>
   locDecl x10 singleton =>
    isaType (implies (propId singleton x10 x6) (propId singleton x9 x6))
     propc int
"
"8________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  of (impl_lam (propId singleton x9 x6) x10 \ x10)
   (implies (propId singleton x9 x6) (propId singleton x9 x6)) int
"
"9_________[+[Begin 
isaType (propId singleton x9 x6) propc int
"
"10__________[+[Begin 
ofType (propId singleton x9 x6) X1791^10 int
"
"11___________[+[Begin 
of x9 X1792^10 int
"
"11-----------]-]Success  
of x9 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of x6 X1793^10 int
"
"11-----------]-]Success  
of x6 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X1791^10 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
ofType (propId singleton x9 x6) props int
"
"10__________[+[Begin 
pts_leq props propc
"
"10----------]-]Success  
pts_leq props propc
"
"9---------]-]Success  
isaType (propId singleton x9 x6) propc int
"
"9_________[+[Begin 
isaType (propId singleton x9 x6) propc int
"
"10__________[+[Begin 
ofType (propId singleton x9 x6) X1794^10 int
"
"11___________[+[Begin 
of x9 X1795^10 int
"
"11-----------]-]Success  
of x9 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of x6 X1796^10 int
"
"11-----------]-]Success  
of x6 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X1794^10 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
ofType (propId singleton x9 x6) props int
"
"10__________[+[Begin 
pts_leq props propc
"
"10----------]-]Success  
pts_leq props propc
"
"9---------]-]Success  
isaType (propId singleton x9 x6) propc int
"
"9_________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x9 x6) => isa x10 (propId singleton x9 x6) int
"
"10__________[+[Begin 
of x10 X1797^11 int
"
"10----------]-]Success  
of x10 (propId singleton x9 x6) int
"
"10__________[+[Begin 
conv (propId singleton x9 x6) (propId singleton x9 x6)
"
"10----------]-]Success  
conv (propId singleton x9 x6) (propId singleton x9 x6)
"
"9---------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x9 x6) => isa x10 (propId singleton x9 x6) int
"
"8--------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  of (impl_lam (propId singleton x9 x6) x10 \ x10)
   (implies (propId singleton x9 x6) (propId singleton x9 x6)) int
"
"7-------]-]Success  
of
 (elim_id x7 (x9 \ x10 \
   implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
   impl_lam (propId singleton x9 x6) x10 \ x10)
 (implies (propId singleton x5 x6) (propId singleton x4 x6)) int
"
"7_______[+[Begin 
conv (implies (propId singleton x5 x6) (propId singleton x4 x6))
 (implies X1781^9 (propId singleton x4 x6))
"
"7-------]-]Success  
conv (implies (propId singleton x5 x6) (propId singleton x4 x6))
 (implies (propId singleton x5 x6) (propId singleton x4 x6))
"
"6------]-]Success  
isa
 (elim_id x7 (x9 \ x10 \
   implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
   impl_lam (propId singleton x9 x6) x10 \ x10)
 (implies (propId singleton x5 x6) (propId singleton x4 x6)) int
"
"6______[+[Begin 
isa x8 (propId singleton x5 x6) int
"
"7_______[+[Begin 
of x8 X1798^9 int
"
"7-------]-]Success  
of x8 (propId singleton x5 x6) int
"
"7_______[+[Begin 
conv (propId singleton x5 x6) (propId singleton x5 x6)
"
"7-------]-]Success  
conv (propId singleton x5 x6) (propId singleton x5 x6)
"
"6------]-]Success  
isa x8 (propId singleton x5 x6) int
"
"5-----]-]Success  
of
 (impl_app
   (elim_id x7 (x9 \ x10 \
     implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
     impl_lam (propId singleton x9 x6) x10 \ x10) x8)
 (propId singleton x4 x6) int
"
"4----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     locDecl x4 singleton =>
      locDecl x5 singleton =>
       locDecl x6 singleton =>
        locDecl x7 (propId singleton x4 x5) =>
         locDecl x8 (propId singleton x5 x6) =>
          spy
           (of
             (impl_app
               (elim_id x7 (x9 \ x10 \
                 implies (propId singleton x10 x6) (propId singleton x9 x6))
                 x9 \ impl_lam (propId singleton x9 x6) x10 \ x10) x8)
             (propId singleton x4 x6) int)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 =>
     (setoid_tran singleton x4 \ x5 \ x6 \ x7 \ x8 \
       impl_app
        (elim_id x7 (x9 \ x10 \
          implies (propId singleton x10 x6) (propId singleton x9 x6)) x9 \
          impl_lam (propId singleton x9 x6) x10 \ x10) x8)
"
"3___[+[Begin 
X1741 x1 = (x2 \ x3 \ x4 \ x5 \ x6 \
 forall_lam (propId singleton star star) x7 \
  impl_app
   (elim_id (forall_app x5 x7) (x8 \ x9 \
     implies
      (propId singleton x9
        (app
          (elim_setSigma x4 (x10 \
            setPi (propId singleton star star) x11 \ singleton) x10 \ x11 \
            x10) x7))
      (propId singleton x8
        (app
          (elim_setSigma x4 (x10 \
            setPi (propId singleton star star) x11 \ singleton) x10 \ x11 \
            x10) x7))) x8 \
     impl_lam
      (propId singleton x8
        (app
          (elim_setSigma x4 (x9 \
            setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \ x9)
          x7)) x9 \ x9) (forall_app x6 x7))
"
"3---]-]Success  
(x2 \ x3 \ x4 \ x5 \ x6 \
 forall_lam (propId singleton star star) x7 \
  impl_app
   (elim_id (forall_app x5 x7) (x8 \ x9 \
     implies
      (propId singleton x9
        (app
          (elim_setSigma x4 (x10 \
            setPi (propId singleton star star) x11 \ singleton) x10 \ x11 \
            x10) x7))
      (propId singleton x8
        (app
          (elim_setSigma x4 (x10 \
            setPi (propId singleton star star) x11 \ singleton) x10 \ x11 \
            x10) x7))) x8 \
     impl_lam
      (propId singleton x8
        (app
          (elim_setSigma x4 (x9 \
            setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \ x9)
          x7)) x9 \ x9) (forall_app x6 x7)) = (x2 \ x3 \ x4 \ x5 \ x6 \
 forall_lam (propId singleton star star) x7 \
  impl_app
   (elim_id (forall_app x5 x7) (x8 \ x9 \
     implies
      (propId singleton x9
        (app
          (elim_setSigma x4 (x10 \
            setPi (propId singleton star star) x11 \ singleton) x10 \ x11 \
            x10) x7))
      (propId singleton x8
        (app
          (elim_setSigma x4 (x10 \
            setPi (propId singleton star star) x11 \ singleton) x10 \ x11 \
            x10) x7))) x8 \
     impl_lam
      (propId singleton x8
        (app
          (elim_setSigma x4 (x9 \
            setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \ x9)
          x7)) x9 \ x9) (forall_app x6 x7))
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 =>
     (setoid_tran (setPi (propEq singleton star star) x2 \ singleton) x2 \
       x3 \ x4 \ x5 \ x6 \
       forall_lam (propId singleton star star) x7 \
        impl_app
         (elim_id (forall_app x5 x7) (x8 \ x9 \
           implies
            (propId singleton x9
              (app
                (elim_setSigma x4 (x10 \
                  setPi (propId singleton star star) x11 \ singleton) x10 \
                  x11 \ x10) x7))
            (propId singleton x8
              (app
                (elim_setSigma x4 (x10 \
                  setPi (propId singleton star star) x11 \ singleton) x10 \
                  x11 \ x10) x7))) x8 \
           impl_lam
            (propId singleton x8
              (app
                (elim_setSigma x4 (x9 \
                  setPi (propId singleton star star) x10 \ singleton) x9 \
                  x10 \ x9) x7)) x9 \ x9) (forall_app x6 x7))
"
"2__[+[Begin 
X1799 = (x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam (propId singleton star star) x5 \
  forall_lam (propId singleton star star) x6 \
   impl_app
    (elim_id (forall_app (forall_app x3 x5) x6) (x7 \ x8 \
      implies
       (propId singleton x8
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi (propId singleton star star) x10 \
                  setSigma
                   (setPi (propId singleton star star) x11 \ singleton) x11 \
                   forall (propId singleton star star) x12 \
                    forall (propId singleton star star) x13 \
                     forall (propId singleton star star) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \
             setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
             x9) x6))
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi (propId singleton star star) x10 \
                  setSigma
                   (setPi (propId singleton star star) x11 \ singleton) x11 \
                   forall (propId singleton star star) x12 \
                    forall (propId singleton star star) x13 \
                     forall (propId singleton star star) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \
             setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
             x9) x6))) x7 \
      impl_lam
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x8 \
                 setPi (propId singleton star star) x9 \
                  setSigma
                   (setPi (propId singleton star star) x10 \ singleton) x10 \
                   forall (propId singleton star star) x11 \
                    forall (propId singleton star star) x12 \
                     forall (propId singleton star star) x13 \
                      propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \
                 x8) x5) (x8 \
             setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
           x6)) x8 \ x8) (forall_app (forall_app x4 x5) x6))
"
"2--]-]Success  
(x0 \ x1 \ x2 \ x3 \ x4 \
 forall_lam (propId singleton star star) x5 \
  forall_lam (propId singleton star star) x6 \
   impl_app
    (elim_id (forall_app (forall_app x3 x5) x6) (x7 \ x8 \
      implies
       (propId singleton x8
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi (propId singleton star star) x10 \
                  setSigma
                   (setPi (propId singleton star star) x11 \ singleton) x11 \
                   forall (propId singleton star star) x12 \
                    forall (propId singleton star star) x13 \
                     forall (propId singleton star star) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \
             setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
             x9) x6))
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi (propId singleton star star) x10 \
                  setSigma
                   (setPi (propId singleton star star) x11 \ singleton) x11 \
                   forall (propId singleton star star) x12 \
                    forall (propId singleton star star) x13 \
                     forall (propId singleton star star) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \
             setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
             x9) x6))) x7 \
      impl_lam
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x8 \
                 setPi (propId singleton star star) x9 \
                  setSigma
                   (setPi (propId singleton star star) x10 \ singleton) x10 \
                   forall (propId singleton star star) x11 \
                    forall (propId singleton star star) x12 \
                     forall (propId singleton star star) x13 \
                      propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \
                 x8) x5) (x8 \
             setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
           x6)) x8 \ x8) (forall_app (forall_app x4 x5) x6)) = (x0 \ x1 \
 x2 \ x3 \ x4 \
 forall_lam (propId singleton star star) x5 \
  forall_lam (propId singleton star star) x6 \
   impl_app
    (elim_id (forall_app (forall_app x3 x5) x6) (x7 \ x8 \
      implies
       (propId singleton x8
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi (propId singleton star star) x10 \
                  setSigma
                   (setPi (propId singleton star star) x11 \ singleton) x11 \
                   forall (propId singleton star star) x12 \
                    forall (propId singleton star star) x13 \
                     forall (propId singleton star star) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \
             setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
             x9) x6))
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x9 \
                 setPi (propId singleton star star) x10 \
                  setSigma
                   (setPi (propId singleton star star) x11 \ singleton) x11 \
                   forall (propId singleton star star) x12 \
                    forall (propId singleton star star) x13 \
                     forall (propId singleton star star) x14 \
                      propId singleton (app x11 x12) (app x11 x13)) x9 \
                 x10 \ x9) x5) (x9 \
             setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
             x9) x6))) x7 \
      impl_lam
       (propId singleton x7
         (app
           (elim_setSigma
             (app
               (elim_setSigma x2 (x8 \
                 setPi (propId singleton star star) x9 \
                  setSigma
                   (setPi (propId singleton star star) x10 \ singleton) x10 \
                   forall (propId singleton star star) x11 \
                    forall (propId singleton star star) x12 \
                     forall (propId singleton star star) x13 \
                      propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \
                 x8) x5) (x8 \
             setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
           x6)) x8 \ x8) (forall_app (forall_app x4 x5) x6))
"
"1-]-]Success  
setoid_tran
 (setPi (propEq singleton star star) x0 \
   setPi (propEq singleton star star) x1 \ singleton) _
"
"||||||||||||||||||||||||||||||||||||||||||"
"1_[+[Begin 
setoid_refl
 (setPi (setPi (propEq singleton star star) x0 \ singleton) x0 \
   setPi (propEq singleton star star) x1 \ singleton) _
"
"2__[+[Begin 
interp
 (setPi (setPi (propEq singleton star star) x0 \ singleton) x0 \
   setPi (propEq singleton star star) x1 \ singleton) X1800
"
"3___[+[Begin 
interp (setPi (propEq singleton star star) x0 \ singleton) X1801
"
"4____[+[Begin 
interp (propEq singleton star star) X1802
"
"5_____[+[Begin 
setoid_eq singleton X1803
"
"5-----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"5_____[+[Begin 
interp_isa star singleton X1804
"
"6______[+[Begin 
of star X1805 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1806
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1807
"
"6------]-]Success  
tau singleton singleton x0 \ x0
"
"6______[+[Begin 
X1804 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1808
"
"6______[+[Begin 
of star X1809 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1810
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1811
"
"6------]-]Success  
tau singleton singleton x0 \ x0
"
"6______[+[Begin 
X1808 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1802 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton (X1812 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq (propEq singleton star star) X1813
"
"4----]-]Success  
setoid_eq (propEq singleton star star) x0 \ x1 \ propId singleton star star
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => setoid_eq singleton (X1814 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 => spy (tau singleton singleton (X1815 x3 x4 x5))
"
"5_____[+[Begin 
tau singleton singleton (X1815 x3 x4 x5)
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"3---]-]Success  
interp (setPi (propEq singleton star star) x0 \ singleton)
 (setSigma (setPi (propId singleton star star) x0 \ singleton) x0 \
   forall (propId singleton star star) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi (propEq singleton star star) x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     interp (setPi (propEq singleton star star) x2 \ singleton) (X1816 x1)
"
"4____[+[Begin 
interp (propEq singleton star star) X1817^2
"
"5_____[+[Begin 
setoid_eq singleton X1818^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1819^2
"
"6______[+[Begin 
of star X1820^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1821^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1822^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1819^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1823^2
"
"6______[+[Begin 
of star X1824^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1825^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1826^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1823^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1817^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1827^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq (propEq singleton star star) X1828^2
"
"4----]-]Success  
setoid_eq (propEq singleton star star) x2 \ x3 \ propId singleton star star
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_eq singleton (X1829^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1830^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X1830^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi (propEq singleton star star) x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     interp (setPi (propEq singleton star star) x2 \ singleton)
      (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
        forall (propId singleton star star) x3 \
         forall (propId singleton star star) x4 \
          forall (propId singleton star star) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
setoid_eq (setPi (propEq singleton star star) x0 \ singleton) X1831
"
"4____[+[Begin 
interp (propEq singleton star star) X1832
"
"5_____[+[Begin 
setoid_eq singleton X1833
"
"5-----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"5_____[+[Begin 
interp_isa star singleton X1834
"
"6______[+[Begin 
of star X1835 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1836
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1837
"
"6------]-]Success  
tau singleton singleton x0 \ x0
"
"6______[+[Begin 
X1834 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1838
"
"6______[+[Begin 
of star X1839 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1840
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1841
"
"6------]-]Success  
tau singleton singleton x0 \ x0
"
"6______[+[Begin 
X1838 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1832 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton (X1842 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X1843 x1)))
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"3---]-]Success  
setoid_eq (setPi (propEq singleton star star) x0 \ singleton) x0 \ x1 \
 forall (propId singleton star star) x2 \
  propId singleton
   (app
     (elim_setSigma x0 (x3 \
       setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3) x2)
   (app
     (elim_setSigma x1 (x3 \
       setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3) x2)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi (propEq singleton star star) x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     setoid_eq (setPi (propEq singleton star star) x2 \ singleton) (X1844 x1)
"
"4____[+[Begin 
interp (propEq singleton star star) X1845^2
"
"5_____[+[Begin 
setoid_eq singleton X1846^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1847^2
"
"6______[+[Begin 
of star X1848^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1849^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1850^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1847^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1851^2
"
"6______[+[Begin 
of star X1852^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1853^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1854^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1851^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1845^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1855^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X1856^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi (propEq singleton star star) x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     (setoid_eq (setPi (propEq singleton star star) x2 \ singleton) x2 \ x3 \
       forall (propId singleton star star) x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \
             setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
           x4)
         (app
           (elim_setSigma x3 (x5 \
             setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
           x4))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi (propEq singleton star star) x6 \ singleton) =>
       locDecl x1 (setPi (propEq singleton star star) x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
           forall (propId singleton star star) x7 \
            forall (propId singleton star star) x8 \
             forall (propId singleton star star) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
            forall (propId singleton star star) x7 \
             forall (propId singleton star star) x8 \
              forall (propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2
             (propEq (setPi (propEq singleton star star) x6 \ singleton) x0
               x1) =>
             locDecl x5
              (forall (propId singleton star star) x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \
                     setPi (propId singleton star star) x8 \ singleton) x7 \
                     x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \
                     setPi (propId singleton star star) x8 \ singleton) x7 \
                     x8 \ x7) x6)) =>
              interp x2 x5 =>
               spy
                (tau (setPi (propEq singleton star star) x6 \ singleton)
                  (setPi (propEq singleton star star) x6 \ singleton)
                  (X1857 x3 x4 x5))
"
"4____[+[Begin 
tau (setPi (propEq singleton star star) x6 \ singleton)
 (setPi (propEq singleton star star) x6 \ singleton) (X1857 x3 x4 x5)
"
"4----]-]Success  
tau (setPi (propEq singleton star star) x6 \ singleton)
 (setPi (propEq singleton star star) x6 \ singleton) x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi (propEq singleton star star) x6 \ singleton) =>
       locDecl x1 (setPi (propEq singleton star star) x6 \ singleton) =>
        locDecl x3
         (setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
           forall (propId singleton star star) x7 \
            forall (propId singleton star star) x8 \
             forall (propId singleton star star) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
            forall (propId singleton star star) x7 \
             forall (propId singleton star star) x8 \
              forall (propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2
             (propEq (setPi (propEq singleton star star) x6 \ singleton) x0
               x1) =>
             locDecl x5
              (forall (propId singleton star star) x6 \
                propId singleton
                 (app
                   (elim_setSigma x3 (x7 \
                     setPi (propId singleton star star) x8 \ singleton) x7 \
                     x8 \ x7) x6)
                 (app
                   (elim_setSigma x4 (x7 \
                     setPi (propId singleton star star) x8 \ singleton) x7 \
                     x8 \ x7) x6)) =>
              interp x2 x5 =>
               spy
                (tau (setPi (propEq singleton star star) x6 \ singleton)
                  (setPi (propEq singleton star star) x6 \ singleton) x6 \ x6)
"
"2--]-]Success  
interp
 (setPi (setPi (propEq singleton star star) x0 \ singleton) x0 \
   setPi (propEq singleton star star) x1 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi (propId singleton star star) x0 \ singleton) x0 \
       forall (propId singleton star star) x1 \
        forall (propId singleton star star) x2 \
         forall (propId singleton star star) x3 \
          propId singleton (app x0 x1) (app x0 x2)) x0 \
     setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
      forall (propId singleton star star) x2 \
       forall (propId singleton star star) x3 \
        forall (propId singleton star star) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x0 \
   forall
    (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
      forall (propId singleton star star) x2 \
       forall (propId singleton star star) x3 \
        forall (propId singleton star star) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \
    forall
     (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
       forall (propId singleton star star) x3 \
        forall (propId singleton star star) x4 \
         forall (propId singleton star star) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (forall (propId singleton star star) x3 \
        propId singleton
         (app
           (elim_setSigma x1 (x4 \
             setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
           x3)
         (app
           (elim_setSigma x2 (x4 \
             setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
           x3)) x3 \
      forall (propId singleton star star) x4 \
       propId singleton
        (app
          (elim_setSigma (app x0 x1) (x5 \
            setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
          x4)
        (app
          (elim_setSigma (app x0 x2) (x5 \
            setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
          x4))
"
"2__[+[Begin 
interp (propEq singleton star star) X1858
"
"3___[+[Begin 
setoid_eq singleton X1859
"
"3---]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"3___[+[Begin 
interp_isa star singleton X1860
"
"4____[+[Begin 
of star X1861 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1862
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1863
"
"4----]-]Success  
tau singleton singleton x0 \ x0
"
"4____[+[Begin 
X1860 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
interp_isa star singleton X1864
"
"4____[+[Begin 
of star X1865 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1866
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1867
"
"4----]-]Success  
tau singleton singleton x0 \ x0
"
"4____[+[Begin 
X1864 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
X1858 = propId singleton star star
"
"3---]-]Success  
propId singleton star star = propId singleton star star
"
"2--]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton (X1868 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton singleton
"
"2__[+[Begin 
setoid_eq (propEq singleton star star) X1869
"
"2--]-]Success  
setoid_eq (propEq singleton star star) x0 \ x1 \ propId singleton star star
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => setoid_eq singleton (X1870 x1)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 => spy (tau singleton singleton (X1871 x3 x4 x5))
"
"3___[+[Begin 
tau singleton singleton (X1871 x3 x4 x5)
"
"3---]-]Success  
tau singleton singleton x6 \ x6
"
"2--]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2__[+[Begin 
interp (propEq singleton star star) X1872^2
"
"3___[+[Begin 
setoid_eq singleton X1873^2
"
"3---]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
interp_isa star singleton X1874^2
"
"4____[+[Begin 
of star X1875^2 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1876^2
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1877^2
"
"4----]-]Success  
tau singleton singleton x2 \ x2
"
"4____[+[Begin 
X1874^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
interp_isa star singleton X1878^2
"
"4____[+[Begin 
of star X1879^2 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1880^2
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1881^2
"
"4----]-]Success  
tau singleton singleton x2 \ x2
"
"4____[+[Begin 
X1878^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
X1872^2 = propId singleton star star
"
"3---]-]Success  
propId singleton star star = propId singleton star star
"
"2--]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1882^2 x3)
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"2__[+[Begin 
setoid_eq (propEq singleton star star) X1883^2
"
"2--]-]Success  
setoid_eq (propEq singleton star star) x2 \ x3 \ propId singleton star star
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_eq singleton (X1884^2 x3)
"
"2--]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"2__[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1885^2 x5 x6 x7))
"
"3___[+[Begin 
tau singleton singleton (X1885^2 x5 x6 x7)
"
"3---]-]Success  
tau singleton singleton x8 \ x8
"
"2--]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi (propEq singleton star star) x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     setoid_refl (setPi (propEq singleton star star) x2 \ singleton)
      (X1886 x1)
"
"3___[+[Begin 
interp (setPi (propEq singleton star star) x2 \ singleton) X1887^2
"
"4____[+[Begin 
interp (propEq singleton star star) X1888^2
"
"5_____[+[Begin 
setoid_eq singleton X1889^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1890^2
"
"6______[+[Begin 
of star X1891^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1892^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1893^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1890^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1894^2
"
"6______[+[Begin 
of star X1895^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1896^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1897^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1894^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1888^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1898^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq (propEq singleton star star) X1899^2
"
"4----]-]Success  
setoid_eq (propEq singleton star star) x2 \ x3 \ propId singleton star star
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_eq singleton (X1900^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1901^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X1901^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
interp (setPi (propEq singleton star star) x2 \ singleton)
 (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
   forall (propId singleton star star) x3 \
    forall (propId singleton star star) x4 \
     forall (propId singleton star star) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
setoid_eq singleton X1902^2
"
"3---]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
interp_isa star singleton X1903^2
"
"4____[+[Begin 
of star X1904^2 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1905^2
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1906^2
"
"4----]-]Success  
tau singleton singleton x2 \ x2
"
"4____[+[Begin 
X1903^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
interp_isa star singleton X1907^2
"
"4____[+[Begin 
of star X1908^2 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
interp star X1909^2
"
"4----]-]Success  
interp star star
"
"4____[+[Begin 
tau singleton singleton X1910^2
"
"4----]-]Success  
tau singleton singleton x2 \ x2
"
"4____[+[Begin 
X1907^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
interp_isa star singleton star
"
"3___[+[Begin 
X1911^2 = propId singleton star star
"
"3---]-]Success  
propId singleton star star = propId singleton star star
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_refl singleton (X1912^2 x3)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_refl singleton x4 \ id singleton x4)
"
"3___[+[Begin 
X1886 x1 = (x2 \
 forall_lam (propId singleton star star) x3 \
  id singleton
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
"
"3---]-]Success  
(x2 \
 forall_lam (propId singleton star star) x3 \
  id singleton
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
 = (x2 \
 forall_lam (propId singleton star star) x3 \
  id singleton
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
"
"3___[+[Begin 
setoid_eq (setPi (propEq singleton star star) x2 \ singleton) X1913^2
"
"4____[+[Begin 
interp (propEq singleton star star) X1914^2
"
"5_____[+[Begin 
setoid_eq singleton X1915^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1916^2
"
"6______[+[Begin 
of star X1917^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1918^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1919^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1916^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1920^2
"
"6______[+[Begin 
of star X1921^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1922^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1923^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1920^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1914^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1924^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X1925^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
setoid_eq (setPi (propEq singleton star star) x2 \ singleton) x2 \ x3 \
 forall (propId singleton star star) x4 \
  propId singleton
   (app
     (elim_setSigma x2 (x5 \
       setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5) x4)
   (app
     (elim_setSigma x3 (x5 \
       setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5) x4)
"
"3___[+[Begin 
pi x2 \
 locDecl x2
  (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
    forall (propId singleton star star) x4 \
     forall (propId singleton star star) x5 \
      forall (propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) =>
  spy
   (of
     (forall_lam (propId singleton star star) x3 \
       id singleton
        (app
          (elim_setSigma x2 (x4 \
            setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
          x3))
     (forall (propId singleton star star) x3 \
       propId singleton
        (app
          (elim_setSigma x2 (x4 \
            setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
          x3)
        (app
          (elim_setSigma x2 (x4 \
            setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
          x3)) int)
"
"4____[+[Begin 
of
 (forall_lam (propId singleton star star) x3 \
   id singleton
    (app
      (elim_setSigma x2 (x4 \
        setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
 (forall (propId singleton star star) x3 \
   propId singleton
    (app
      (elim_setSigma x2 (x4 \
        setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3)
    (app
      (elim_setSigma x2 (x4 \
        setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
 int
"
"5_____[+[Begin 
ofType (propId singleton star star) _ int
"
"6______[+[Begin 
of star X1926^3 int
"
"6------]-]Success  
of star singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
of star X1927^3 int
"
"6------]-]Success  
of star singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
(pts_leq set set),
(X1928^3 = props)
"
"6------]-]Success  
(pts_leq set set),
(props = props)
"
"5-----]-]Success  
ofType (propId singleton star star) _ int
"
"5_____[+[Begin 
pi x3 \
 locDecl x3 (propId singleton star star) =>
  isa
   (id singleton
     (app
       (elim_setSigma x2 (x4 \
         setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
   (propId singleton
     (app
       (elim_setSigma x2 (x4 \
         setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3)
     (app
       (elim_setSigma x2 (x4 \
         setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
   int
"
"6______[+[Begin 
of
 (id singleton
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
 X1929^4 int
"
"7_______[+[Begin 
ofType singleton _ int
"
"7-------]-]Success  
ofType singleton _ int
"
"7_______[+[Begin 
isa
 (app
   (elim_setSigma x2 (x4 \ setPi (propId singleton star star) x5 \ singleton)
     x4 \ x5 \ x4) x3) singleton int
"
"8________[+[Begin 
of
 (app
   (elim_setSigma x2 (x4 \ setPi (propId singleton star star) x5 \ singleton)
     x4 \ x5 \ x4) x3) X1930^4 int
"
"9_________[+[Begin 
of
 (elim_setSigma x2 (x4 \ setPi (propId singleton star star) x5 \ singleton)
   x4 \ x5 \ x4) (setPi X1931^4 X1932^4) int
"
"10__________[+[Begin 
of x2 (setSigma X1933^4 X1934^4) int
"
"10----------]-]Success  
of x2
 (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
   forall (propId singleton star star) x5 \
    forall (propId singleton star star) x6 \
     forall (propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"10__________[+[Begin 
pi x4 \
 locDecl x4
  (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
    forall (propId singleton star star) x6 \
     forall (propId singleton star star) x7 \
      forall (propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  ofType (setPi (propId singleton star star) x5 \ singleton) _ int
"
"11___________[+[Begin 
of star X1935^5 int
"
"11-----------]-]Success  
of star singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of star X1936^5 int
"
"11-----------]-]Success  
of star singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X1937^5 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"11___________[+[Begin 
pts_fun props set X1938^5
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"11-----------]-]Success  
pts_fun props set set
"
"10----------]-]Success  
pi x4 \
 locDecl x4
  (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
    forall (propId singleton star star) x6 \
     forall (propId singleton star star) x7 \
      forall (propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  ofType (setPi (propId singleton star star) x5 \ singleton) _ int
"
"10__________[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 (setPi (propId singleton star star) x6 \ singleton) =>
   locDecl x5
    (forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x4 x6) (app x4 x7)) =>
    isa x4 (setPi (propId singleton star star) x6 \ singleton) int
"
"11___________[+[Begin 
of x4 X1939^6 int
"
"11-----------]-]Success  
of x4 (setPi (propId singleton star star) x6 \ singleton) int
"
"11___________[+[Begin 
conv (setPi (propId singleton star star) x6 \ singleton)
 (setPi (propId singleton star star) x6 \ singleton)
"
"11-----------]-]Success  
conv (setPi (propId singleton star star) x6 \ singleton)
 (setPi (propId singleton star star) x6 \ singleton)
"
"10----------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 (setPi (propId singleton star star) x6 \ singleton) =>
   locDecl x5
    (forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x4 x6) (app x4 x7)) =>
    isa x4 (setPi (propId singleton star star) x6 \ singleton) int
"
"9---------]-]Success  
of
 (elim_setSigma x2 (x4 \ setPi (propId singleton star star) x5 \ singleton)
   x4 \ x5 \ x4) (setPi (propId singleton star star) x4 \ singleton) int
"
"9_________[+[Begin 
isa x3 (propId singleton star star) int
"
"10__________[+[Begin 
of x3 X1940^4 int
"
"10----------]-]Success  
of x3 (propId singleton star star) int
"
"10__________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"10----------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"9---------]-]Success  
isa x3 (propId singleton star star) int
"
"8--------]-]Success  
of
 (app
   (elim_setSigma x2 (x4 \ setPi (propId singleton star star) x5 \ singleton)
     x4 \ x5 \ x4) x3) singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"7-------]-]Success  
isa
 (app
   (elim_setSigma x2 (x4 \ setPi (propId singleton star star) x5 \ singleton)
     x4 \ x5 \ x4) x3) singleton int
"
"6------]-]Success  
of
 (id singleton
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
 (propId singleton
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3)
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
 int
"
"6______[+[Begin 
conv
 (propId singleton
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3)
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
 (propId singleton
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3)
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
"
"6------]-]Success  
conv
 (propId singleton
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3)
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
 (propId singleton
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3)
   (app
     (elim_setSigma x2 (x4 \
       setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
"
"5-----]-]Success  
pi x3 \
 locDecl x3 (propId singleton star star) =>
  isa
   (id singleton
     (app
       (elim_setSigma x2 (x4 \
         setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
   (propId singleton
     (app
       (elim_setSigma x2 (x4 \
         setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3)
     (app
       (elim_setSigma x2 (x4 \
         setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
   int
"
"4----]-]Success  
of
 (forall_lam (propId singleton star star) x3 \
   id singleton
    (app
      (elim_setSigma x2 (x4 \
        setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
 (forall (propId singleton star star) x3 \
   propId singleton
    (app
      (elim_setSigma x2 (x4 \
        setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3)
    (app
      (elim_setSigma x2 (x4 \
        setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4) x3))
 int
"
"3---]-]Success  
pi x2 \
 locDecl x2
  (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
    forall (propId singleton star star) x4 \
     forall (propId singleton star star) x5 \
      forall (propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) =>
  spy
   (of
     (forall_lam (propId singleton star star) x3 \
       id singleton
        (app
          (elim_setSigma x2 (x4 \
            setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
          x3))
     (forall (propId singleton star star) x3 \
       propId singleton
        (app
          (elim_setSigma x2 (x4 \
            setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
          x3)
        (app
          (elim_setSigma x2 (x4 \
            setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
          x3)) int)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi (propEq singleton star star) x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     (setoid_refl (setPi (propEq singleton star star) x2 \ singleton) x2 \
       forall_lam (propId singleton star star) x3 \
        id singleton
         (app
           (elim_setSigma x2 (x4 \
             setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
           x3))
"
"2__[+[Begin 
X1941 = (x0 \
 forall_lam
  (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      forall (propId singleton star star) x4 \
       propId singleton (app x1 x2) (app x1 x3)) x1 \
  forall_lam (propId singleton star star) x2 \
   id singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2))
"
"2--]-]Success  
(x0 \
 forall_lam
  (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      forall (propId singleton star star) x4 \
       propId singleton (app x1 x2) (app x1 x3)) x1 \
  forall_lam (propId singleton star star) x2 \
   id singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2)) = (x0 \
 forall_lam
  (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      forall (propId singleton star star) x4 \
       propId singleton (app x1 x2) (app x1 x3)) x1 \
  forall_lam (propId singleton star star) x2 \
   id singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2))
"
"2__[+[Begin 
setoid_eq
 (setPi (setPi (propEq singleton star star) x0 \ singleton) x0 \
   setPi (propEq singleton star star) x1 \ singleton) X1942
"
"3___[+[Begin 
interp (setPi (propEq singleton star star) x0 \ singleton) X1943
"
"4____[+[Begin 
interp (propEq singleton star star) X1944
"
"5_____[+[Begin 
setoid_eq singleton X1945
"
"5-----]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"5_____[+[Begin 
interp_isa star singleton X1946
"
"6______[+[Begin 
of star X1947 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1948
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1949
"
"6------]-]Success  
tau singleton singleton x0 \ x0
"
"6______[+[Begin 
X1946 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1950
"
"6______[+[Begin 
of star X1951 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1952
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1953
"
"6------]-]Success  
tau singleton singleton x0 \ x0
"
"6______[+[Begin 
X1950 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1944 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton (X1954 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq (propEq singleton star star) X1955
"
"4----]-]Success  
setoid_eq (propEq singleton star star) x0 \ x1 \ propId singleton star star
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => setoid_eq singleton (X1956 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (propEq singleton star star) =>
   locDecl x1 (propId singleton star star) =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 => spy (tau singleton singleton (X1957 x3 x4 x5))
"
"5_____[+[Begin 
tau singleton singleton (X1957 x3 x4 x5)
"
"5-----]-]Success  
tau singleton singleton x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (propEq singleton star star) =>
       locDecl x1 (propEq singleton star star) =>
        locDecl x3 (propId singleton star star) =>
         locDecl x4 (propId singleton star star) =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq (propEq singleton star star) x0 x1) =>
             locDecl x5 (propId singleton star star) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"3---]-]Success  
interp (setPi (propEq singleton star star) x0 \ singleton)
 (setSigma (setPi (propId singleton star star) x0 \ singleton) x0 \
   forall (propId singleton star star) x1 \
    forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi (propEq singleton star star) x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     interp (setPi (propEq singleton star star) x2 \ singleton) (X1958 x1)
"
"4____[+[Begin 
interp (propEq singleton star star) X1959^2
"
"5_____[+[Begin 
setoid_eq singleton X1960^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1961^2
"
"6______[+[Begin 
of star X1962^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1963^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1964^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1961^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1965^2
"
"6______[+[Begin 
of star X1966^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1967^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1968^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1965^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1959^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1969^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq (propEq singleton star star) X1970^2
"
"4----]-]Success  
setoid_eq (propEq singleton star star) x2 \ x3 \ propId singleton star star
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_eq singleton (X1971^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1972^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X1972^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi (propEq singleton star star) x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     interp (setPi (propEq singleton star star) x2 \ singleton)
      (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
        forall (propId singleton star star) x3 \
         forall (propId singleton star star) x4 \
          forall (propId singleton star star) x5 \
           propId singleton (app x2 x3) (app x2 x4))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi (propEq singleton star star) x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     ((interp (setPi (propEq singleton star star) x2 \ singleton)
        (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
          forall (propId singleton star star) x3 \
           forall (propId singleton star star) x4 \
            forall (propId singleton star star) x5 \
             propId singleton (app x2 x3) (app x2 x4))),
     (setoid_eq (setPi (propEq singleton star star) x2 \ singleton)
       (X1973 x1)))
"
"4____[+[Begin 
interp (propEq singleton star star) X1974^2
"
"5_____[+[Begin 
setoid_eq singleton X1975^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1976^2
"
"6______[+[Begin 
of star X1977^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1978^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1979^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1976^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1980^2
"
"6______[+[Begin 
of star X1981^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1982^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1983^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1980^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1974^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1984^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
setoid_eq (propEq singleton star star) X1985^2
"
"4----]-]Success  
setoid_eq (propEq singleton star star) x2 \ x3 \ propId singleton star star
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => setoid_eq singleton (X1986^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 =>
               spy (tau singleton singleton (X1987^2 x5 x6 x7))
"
"5_____[+[Begin 
tau singleton singleton (X1987^2 x5 x6 x7)
"
"5-----]-]Success  
tau singleton singleton x8 \ x8
"
"4----]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 (propEq singleton star star) =>
       locDecl x3 (propEq singleton star star) =>
        locDecl x5 (propId singleton star star) =>
         locDecl x6 (propId singleton star star) =>
          interp x2 x5 =>
           interp x3 x6 =>
            locDecl x4 (propEq (propEq singleton star star) x2 x3) =>
             locDecl x7 (propId singleton star star) =>
              interp x4 x7 => spy (tau singleton singleton x8 \ x8)
"
"4____[+[Begin 
interp (propEq singleton star star) X1988^2
"
"5_____[+[Begin 
setoid_eq singleton X1989^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa star singleton X1990^2
"
"6______[+[Begin 
of star X1991^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1992^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1993^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1990^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
interp_isa star singleton X1994^2
"
"6______[+[Begin 
of star X1995^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X1996^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X1997^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X1994^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X1988^2 = propId singleton star star
"
"5-----]-]Success  
propId singleton star star = propId singleton star star
"
"4----]-]Success  
interp (propEq singleton star star) (propId singleton star star)
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton (X1998^2 x3)
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => interp singleton singleton
"
"4____[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton (X1999^2 x3)))
"
"4----]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 (propEq singleton star star) =>
   locDecl x3 (propId singleton star star) =>
    interp x2 x3 => ((interp singleton singleton),
     (setoid_eq singleton x4 \ x5 \ propId singleton x4 x5))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi (propEq singleton star star) x2 \ singleton) =>
   locDecl x1
    (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    interp x0 x1 =>
     ((interp (setPi (propEq singleton star star) x2 \ singleton)
        (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
          forall (propId singleton star star) x3 \
           forall (propId singleton star star) x4 \
            forall (propId singleton star star) x5 \
             propId singleton (app x2 x3) (app x2 x4))),
     (setoid_eq (setPi (propEq singleton star star) x2 \ singleton) x2 \ x3 \
       forall (propId singleton star star) x4 \
        propId singleton
         (app
           (elim_setSigma x2 (x5 \
             setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
           x4)
         (app
           (elim_setSigma x3 (x5 \
             setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
           x4)))
"
"2--]-]Success  
setoid_eq
 (setPi (setPi (propEq singleton star star) x0 \ singleton) x0 \
   setPi (propEq singleton star star) x1 \ singleton) x0 \ x1 \
 forall
  (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
    forall (propId singleton star star) x3 \
     forall (propId singleton star star) x4 \
      forall (propId singleton star star) x5 \
       propId singleton (app x2 x3) (app x2 x4)) x2 \
  forall (propId singleton star star) x3 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x4 \
            setPi
             (setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x5 \
             setSigma (setPi (propId singleton star star) x6 \ singleton)
              x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                forall (propId singleton star star) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4) x2)
        (x4 \ setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
      x3)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x1 (x4 \
            setPi
             (setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x5 \
             setSigma (setPi (propId singleton star star) x6 \ singleton)
              x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                forall (propId singleton star star) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4) x2)
        (x4 \ setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
      x3)
"
"2__[+[Begin 
pi x0 \
 locDecl x0
  (setSigma
    (setPi
      (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
        forall (propId singleton star star) x2 \
         forall (propId singleton star star) x3 \
          forall (propId singleton star star) x4 \
           propId singleton (app x1 x2) (app x1 x3)) x1 \
      setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
       forall (propId singleton star star) x3 \
        forall (propId singleton star star) x4 \
         forall (propId singleton star star) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x1 \
    forall
     (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
       forall (propId singleton star star) x3 \
        forall (propId singleton star star) x4 \
         forall (propId singleton star star) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
        forall (propId singleton star star) x4 \
         forall (propId singleton star star) x5 \
          forall (propId singleton star star) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (forall (propId singleton star star) x4 \
         propId singleton
          (app
            (elim_setSigma x2 (x5 \
              setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
            x4)
          (app
            (elim_setSigma x3 (x5 \
              setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
            x4)) x4 \
       forall (propId singleton star star) x5 \
        propId singleton
         (app
           (elim_setSigma (app x1 x2) (x6 \
             setPi (propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
           x5)
         (app
           (elim_setSigma (app x1 x3) (x6 \
             setPi (propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
           x5)) =>
  spy
   (of
     (forall_lam
       (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
         forall (propId singleton star star) x2 \
          forall (propId singleton star star) x3 \
           forall (propId singleton star star) x4 \
            propId singleton (app x1 x2) (app x1 x3)) x1 \
       forall_lam (propId singleton star star) x2 \
        id singleton
         (app
           (elim_setSigma
             (app
               (elim_setSigma x0 (x3 \
                 setPi
                  (setSigma
                    (setPi (propId singleton star star) x4 \ singleton) x4 \
                    forall (propId singleton star star) x5 \
                     forall (propId singleton star star) x6 \
                      forall (propId singleton star star) x7 \
                       propId singleton (app x4 x5) (app x4 x6)) x4 \
                  setSigma
                   (setPi (propId singleton star star) x5 \ singleton) x5 \
                   forall (propId singleton star star) x6 \
                    forall (propId singleton star star) x7 \
                     forall (propId singleton star star) x8 \
                      propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3)
               x1) (x3 \ setPi (propId singleton star star) x4 \ singleton)
             x3 \ x4 \ x3) x2))
     (forall
       (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
         forall (propId singleton star star) x2 \
          forall (propId singleton star star) x3 \
           forall (propId singleton star star) x4 \
            propId singleton (app x1 x2) (app x1 x3)) x1 \
       forall (propId singleton star star) x2 \
        propId singleton
         (app
           (elim_setSigma
             (app
               (elim_setSigma x0 (x3 \
                 setPi
                  (setSigma
                    (setPi (propId singleton star star) x4 \ singleton) x4 \
                    forall (propId singleton star star) x5 \
                     forall (propId singleton star star) x6 \
                      forall (propId singleton star star) x7 \
                       propId singleton (app x4 x5) (app x4 x6)) x4 \
                  setSigma
                   (setPi (propId singleton star star) x5 \ singleton) x5 \
                   forall (propId singleton star star) x6 \
                    forall (propId singleton star star) x7 \
                     forall (propId singleton star star) x8 \
                      propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3)
               x1) (x3 \ setPi (propId singleton star star) x4 \ singleton)
             x3 \ x4 \ x3) x2)
         (app
           (elim_setSigma
             (app
               (elim_setSigma x0 (x3 \
                 setPi
                  (setSigma
                    (setPi (propId singleton star star) x4 \ singleton) x4 \
                    forall (propId singleton star star) x5 \
                     forall (propId singleton star star) x6 \
                      forall (propId singleton star star) x7 \
                       propId singleton (app x4 x5) (app x4 x6)) x4 \
                  setSigma
                   (setPi (propId singleton star star) x5 \ singleton) x5 \
                   forall (propId singleton star star) x6 \
                    forall (propId singleton star star) x7 \
                     forall (propId singleton star star) x8 \
                      propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3)
               x1) (x3 \ setPi (propId singleton star star) x4 \ singleton)
             x3 \ x4 \ x3) x2)) int)
"
"3___[+[Begin 
of
 (forall_lam
   (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
     forall (propId singleton star star) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        propId singleton (app x1 x2) (app x1 x3)) x1 \
   forall_lam (propId singleton star star) x2 \
    id singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x3 \
             setPi
              (setSigma (setPi (propId singleton star star) x4 \ singleton)
                x4 \
                forall (propId singleton star star) x5 \
                 forall (propId singleton star star) x6 \
                  forall (propId singleton star star) x7 \
                   propId singleton (app x4 x5) (app x4 x6)) x4 \
              setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
         (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
         x3) x2))
 (forall
   (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
     forall (propId singleton star star) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        propId singleton (app x1 x2) (app x1 x3)) x1 \
   forall (propId singleton star star) x2 \
    propId singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x3 \
             setPi
              (setSigma (setPi (propId singleton star star) x4 \ singleton)
                x4 \
                forall (propId singleton star star) x5 \
                 forall (propId singleton star star) x6 \
                  forall (propId singleton star star) x7 \
                   propId singleton (app x4 x5) (app x4 x6)) x4 \
              setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
         (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
         x3) x2)
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x3 \
             setPi
              (setSigma (setPi (propId singleton star star) x4 \ singleton)
                x4 \
                forall (propId singleton star star) x5 \
                 forall (propId singleton star star) x6 \
                  forall (propId singleton star star) x7 \
                   propId singleton (app x4 x5) (app x4 x6)) x4 \
              setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
         (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
         x3) x2)) int
"
"4____[+[Begin 
ofType
 (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
   forall (propId singleton star star) x2 \
    forall (propId singleton star star) x3 \
     forall (propId singleton star star) x4 \
      propId singleton (app x1 x2) (app x1 x3)) _ int
"
"5_____[+[Begin 
ofType (setPi (propId singleton star star) x1 \ singleton) X2000^1 int
"
"6______[+[Begin 
of star X2001^1 int
"
"6------]-]Success  
of star singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
of star X2002^1 int
"
"6------]-]Success  
of star singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
(pts_leq set set),
(X2003^1 = props)
"
"6------]-]Success  
(pts_leq set set),
(props = props)
"
"6______[+[Begin 
pts_fun props set X2000^1
"
"7_______[+[Begin 
pts_leq props set
"
"7-------]-]Success  
pts_leq props set
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"6------]-]Success  
pts_fun props set set
"
"5-----]-]Success  
ofType (setPi (propId singleton star star) x1 \ singleton) set int
"
"5_____[+[Begin 
pi x1 \
 locDecl x1 (setPi (propId singleton star star) x2 \ singleton) =>
  ofType
   (forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      forall (propId singleton star star) x4 \
       propId singleton (app x1 x2) (app x1 x3)) X2004^1 int
"
"6______[+[Begin 
ofType (propId singleton star star) X2005^2 int
"
"7_______[+[Begin 
of star X2006^2 int
"
"7-------]-]Success  
of star singleton int
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"7_______[+[Begin 
of star X2007^2 int
"
"7-------]-]Success  
of star singleton int
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"7_______[+[Begin 
(pts_leq set set),
(X2005^2 = props)
"
"7-------]-]Success  
(pts_leq set set),
(props = props)
"
"6------]-]Success  
ofType (propId singleton star star) props int
"
"6______[+[Begin 
pi x2 \
 locDecl x2 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        propId singleton (app x1 x2) (app x1 x3)) X2008^2 int)
"
"7_______[+[Begin 
ofType
 (forall (propId singleton star star) x3 \
   forall (propId singleton star star) x4 \
    propId singleton (app x1 x2) (app x1 x3)) X2008^2 int
"
"8________[+[Begin 
ofType (propId singleton star star) X2009^3 int
"
"9_________[+[Begin 
of star X2010^3 int
"
"9---------]-]Success  
of star singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
of star X2011^3 int
"
"9---------]-]Success  
of star singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"9_________[+[Begin 
(pts_leq set set),
(X2009^3 = props)
"
"9---------]-]Success  
(pts_leq set set),
(props = props)
"
"8--------]-]Success  
ofType (propId singleton star star) props int
"
"8________[+[Begin 
pi x3 \
 locDecl x3 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x4 \
       propId singleton (app x1 x2) (app x1 x3)) X2012^3 int)
"
"9_________[+[Begin 
ofType
 (forall (propId singleton star star) x4 \
   propId singleton (app x1 x2) (app x1 x3)) X2012^3 int
"
"10__________[+[Begin 
ofType (propId singleton star star) X2013^4 int
"
"11___________[+[Begin 
of star X2014^4 int
"
"11-----------]-]Success  
of star singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of star X2015^4 int
"
"11-----------]-]Success  
of star singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X2013^4 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
ofType (propId singleton star star) props int
"
"10__________[+[Begin 
pi x4 \
 locDecl x4 (propId singleton star star) =>
  spy (ofType (propId singleton (app x1 x2) (app x1 x3)) X2016^4 int)
"
"11___________[+[Begin 
ofType (propId singleton (app x1 x2) (app x1 x3)) X2016^4 int
"
"12____________[+[Begin 
of (app x1 x2) X2017^5 int
"
"13_____________[+[Begin 
of x1 (setPi X2018^5 X2019^5) int
"
"13-------------]-]Success  
of x1 (setPi (propId singleton star star) x5 \ singleton) int
"
"13_____________[+[Begin 
isa x2 (propId singleton star star) int
"
"14______________[+[Begin 
of x2 X2020^5 int
"
"14--------------]-]Success  
of x2 (propId singleton star star) int
"
"14______________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"14--------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"13-------------]-]Success  
isa x2 (propId singleton star star) int
"
"12------------]-]Success  
of (app x1 x2) singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
of (app x1 x3) X2021^5 int
"
"13_____________[+[Begin 
of x1 (setPi X2022^5 X2023^5) int
"
"13-------------]-]Success  
of x1 (setPi (propId singleton star star) x5 \ singleton) int
"
"13_____________[+[Begin 
isa x3 (propId singleton star star) int
"
"14______________[+[Begin 
of x3 X2024^5 int
"
"14--------------]-]Success  
of x3 (propId singleton star star) int
"
"14______________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"14--------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"13-------------]-]Success  
isa x3 (propId singleton star star) int
"
"12------------]-]Success  
of (app x1 x3) singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
(pts_leq set set),
(X2016^4 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"11-----------]-]Success  
ofType (propId singleton (app x1 x2) (app x1 x3)) props int
"
"10----------]-]Success  
pi x4 \
 locDecl x4 (propId singleton star star) =>
  spy (ofType (propId singleton (app x1 x2) (app x1 x3)) props int)
"
"10__________[+[Begin 
pts_for props props X2012^3
"
"10----------]-]Success  
pts_for props props props
"
"9---------]-]Success  
ofType
 (forall (propId singleton star star) x4 \
   propId singleton (app x1 x2) (app x1 x3)) props int
"
"8--------]-]Success  
pi x3 \
 locDecl x3 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x4 \
       propId singleton (app x1 x2) (app x1 x3)) props int)
"
"8________[+[Begin 
pts_for props props X2008^2
"
"8--------]-]Success  
pts_for props props props
"
"7-------]-]Success  
ofType
 (forall (propId singleton star star) x3 \
   forall (propId singleton star star) x4 \
    propId singleton (app x1 x2) (app x1 x3)) props int
"
"6------]-]Success  
pi x2 \
 locDecl x2 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        propId singleton (app x1 x2) (app x1 x3)) props int)
"
"6______[+[Begin 
pts_for props props X2004^1
"
"6------]-]Success  
pts_for props props props
"
"5-----]-]Success  
pi x1 \
 locDecl x1 (setPi (propId singleton star star) x2 \ singleton) =>
  ofType
   (forall (propId singleton star star) x2 \
     forall (propId singleton star star) x3 \
      forall (propId singleton star star) x4 \
       propId singleton (app x1 x2) (app x1 x3)) props int
"
"5_____[+[Begin 
pts_leq set set
"
"5-----]-]Success  
pts_leq set set
"
"5_____[+[Begin 
pts_leq props set
"
"5-----]-]Success  
pts_leq props set
"
"4----]-]Success  
ofType
 (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
   forall (propId singleton star star) x2 \
    forall (propId singleton star star) x3 \
     forall (propId singleton star star) x4 \
      propId singleton (app x1 x2) (app x1 x3)) _ int
"
"4____[+[Begin 
pi x1 \
 locDecl x1
  (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
    forall (propId singleton star star) x3 \
     forall (propId singleton star star) x4 \
      forall (propId singleton star star) x5 \
       propId singleton (app x2 x3) (app x2 x4)) =>
  isa
   (forall_lam (propId singleton star star) x2 \
     id singleton
      (app
        (elim_setSigma
          (app
            (elim_setSigma x0 (x3 \
              setPi
               (setSigma (setPi (propId singleton star star) x4 \ singleton)
                 x4 \
                 forall (propId singleton star star) x5 \
                  forall (propId singleton star star) x6 \
                   forall (propId singleton star star) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x4 \
               setSigma (setPi (propId singleton star star) x5 \ singleton)
                x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  forall (propId singleton star star) x8 \
                   propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
          (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
          x3) x2))
   (forall (propId singleton star star) x2 \
     propId singleton
      (app
        (elim_setSigma
          (app
            (elim_setSigma x0 (x3 \
              setPi
               (setSigma (setPi (propId singleton star star) x4 \ singleton)
                 x4 \
                 forall (propId singleton star star) x5 \
                  forall (propId singleton star star) x6 \
                   forall (propId singleton star star) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x4 \
               setSigma (setPi (propId singleton star star) x5 \ singleton)
                x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  forall (propId singleton star star) x8 \
                   propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
          (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
          x3) x2)
      (app
        (elim_setSigma
          (app
            (elim_setSigma x0 (x3 \
              setPi
               (setSigma (setPi (propId singleton star star) x4 \ singleton)
                 x4 \
                 forall (propId singleton star star) x5 \
                  forall (propId singleton star star) x6 \
                   forall (propId singleton star star) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x4 \
               setSigma (setPi (propId singleton star star) x5 \ singleton)
                x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  forall (propId singleton star star) x8 \
                   propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
          (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
          x3) x2)) int
"
"5_____[+[Begin 
of
 (forall_lam (propId singleton star star) x2 \
   id singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2)) X2025^2 int
"
"6______[+[Begin 
ofType (propId singleton star star) _ int
"
"7_______[+[Begin 
of star X2026^2 int
"
"7-------]-]Success  
of star singleton int
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"7_______[+[Begin 
of star X2027^2 int
"
"7-------]-]Success  
of star singleton int
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"7_______[+[Begin 
(pts_leq set set),
(X2028^2 = props)
"
"7-------]-]Success  
(pts_leq set set),
(props = props)
"
"6------]-]Success  
ofType (propId singleton star star) _ int
"
"6______[+[Begin 
pi x2 \
 locDecl x2 (propId singleton star star) =>
  isa
   (id singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x3 \
             setPi
              (setSigma (setPi (propId singleton star star) x4 \ singleton)
                x4 \
                forall (propId singleton star star) x5 \
                 forall (propId singleton star star) x6 \
                  forall (propId singleton star star) x7 \
                   propId singleton (app x4 x5) (app x4 x6)) x4 \
              setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
         (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
         x3) x2)) (X2029^2 x2) int
"
"7_______[+[Begin 
of
 (id singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x3 \
           setPi
            (setSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
       (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
     x2)) X2030^3 int
"
"8________[+[Begin 
ofType singleton _ int
"
"8--------]-]Success  
ofType singleton _ int
"
"8________[+[Begin 
isa
 (app
   (elim_setSigma
     (app
       (elim_setSigma x0 (x3 \
         setPi
          (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
            forall (propId singleton star star) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \
          setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
           forall (propId singleton star star) x6 \
            forall (propId singleton star star) x7 \
             forall (propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
     (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
   x2) singleton int
"
"9_________[+[Begin 
of
 (app
   (elim_setSigma
     (app
       (elim_setSigma x0 (x3 \
         setPi
          (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
            forall (propId singleton star star) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \
          setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
           forall (propId singleton star star) x6 \
            forall (propId singleton star star) x7 \
             forall (propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
     (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
   x2) X2031^3 int
"
"10__________[+[Begin 
of
 (elim_setSigma
   (app
     (elim_setSigma x0 (x3 \
       setPi
        (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
          forall (propId singleton star star) x5 \
           forall (propId singleton star star) x6 \
            forall (propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           forall (propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1) (x3 \
   setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
 (setPi X2032^3 X2033^3) int
"
"11___________[+[Begin 
of
 (app
   (elim_setSigma x0 (x3 \
     setPi
      (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
        forall (propId singleton star star) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
 (setSigma X2034^3 X2035^3) int
"
"12____________[+[Begin 
of
 (elim_setSigma x0 (x3 \
   setPi
    (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
      forall (propId singleton star star) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3)
 (setPi X2036^3 X2037^3) int
"
"13_____________[+[Begin 
of x0 (setSigma X2038^3 X2039^3) int
"
"13-------------]-]Success  
of x0
 (setSigma
   (setPi
     (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
       forall (propId singleton star star) x4 \
        forall (propId singleton star star) x5 \
         forall (propId singleton star star) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \
     setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
      forall (propId singleton star star) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x3 \
   forall
    (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
      forall (propId singleton star star) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    forall
     (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (forall (propId singleton star star) x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \
             setPi (propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
           x6)
         (app
           (elim_setSigma x5 (x7 \
             setPi (propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
           x6)) x6 \
      forall (propId singleton star star) x7 \
       propId singleton
        (app
          (elim_setSigma (app x3 x4) (x8 \
            setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
          x7)
        (app
          (elim_setSigma (app x3 x5) (x8 \
            setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
          x7)) int
"
"13_____________[+[Begin 
pi x3 \
 locDecl x3
  (setSigma
    (setPi
      (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
        forall (propId singleton star star) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x4 \
    forall
     (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          forall (propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (forall (propId singleton star star) x7 \
         propId singleton
          (app
            (elim_setSigma x5 (x8 \
              setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)
          (app
            (elim_setSigma x6 (x8 \
              setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)) x7 \
       forall (propId singleton star star) x8 \
        propId singleton
         (app
           (elim_setSigma (app x4 x5) (x9 \
             setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
             x9) x8)
         (app
           (elim_setSigma (app x4 x6) (x9 \
             setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
             x9) x8)) =>
  ofType
   (setPi
     (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
       forall (propId singleton star star) x5 \
        forall (propId singleton star star) x6 \
         forall (propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
      forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        forall (propId singleton star star) x8 \
         propId singleton (app x5 x6) (app x5 x7)) _ int
"
"14______________[+[Begin 
ofType (setPi (propId singleton star star) x4 \ singleton) X2040^4 int
"
"15_______________[+[Begin 
of star X2041^4 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of star X2042^4 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X2043^4 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"15_______________[+[Begin 
pts_fun props set X2040^4
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"15---------------]-]Success  
pts_fun props set set
"
"14--------------]-]Success  
ofType (setPi (propId singleton star star) x4 \ singleton) set int
"
"14______________[+[Begin 
pi x4 \
 locDecl x4 (setPi (propId singleton star star) x5 \ singleton) =>
  ofType
   (forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X2044^4 int
"
"15_______________[+[Begin 
ofType (propId singleton star star) X2045^5 int
"
"16________________[+[Begin 
of star X2046^5 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of star X2047^5 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X2045^5 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"15---------------]-]Success  
ofType (propId singleton star star) props int
"
"15_______________[+[Begin 
pi x5 \
 locDecl x5 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) X2048^5 int)
"
"16________________[+[Begin 
ofType
 (forall (propId singleton star star) x6 \
   forall (propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) X2048^5 int
"
"17_________________[+[Begin 
ofType (propId singleton star star) X2049^6 int
"
"18__________________[+[Begin 
of star X2050^6 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of star X2051^6 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X2049^6 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
ofType (propId singleton star star) props int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X2052^6 int)
"
"18__________________[+[Begin 
ofType
 (forall (propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) X2052^6 int
"
"19___________________[+[Begin 
ofType (propId singleton star star) X2053^7 int
"
"20____________________[+[Begin 
of star X2054^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X2055^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X2053^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
ofType (propId singleton star star) props int
"
"19___________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton star star) =>
  spy (ofType (propId singleton (app x4 x5) (app x4 x6)) X2056^7 int)
"
"20____________________[+[Begin 
ofType (propId singleton (app x4 x5) (app x4 x6)) X2056^7 int
"
"21_____________________[+[Begin 
of (app x4 x5) X2057^8 int
"
"22______________________[+[Begin 
of x4 (setPi X2058^8 X2059^8) int
"
"22----------------------]-]Success  
of x4 (setPi (propId singleton star star) x8 \ singleton) int
"
"22______________________[+[Begin 
isa x5 (propId singleton star star) int
"
"23_______________________[+[Begin 
of x5 X2060^8 int
"
"23-----------------------]-]Success  
of x5 (propId singleton star star) int
"
"23_______________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"23-----------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"22----------------------]-]Success  
isa x5 (propId singleton star star) int
"
"21---------------------]-]Success  
of (app x4 x5) singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of (app x4 x6) X2061^8 int
"
"22______________________[+[Begin 
of x4 (setPi X2062^8 X2063^8) int
"
"22----------------------]-]Success  
of x4 (setPi (propId singleton star star) x8 \ singleton) int
"
"22______________________[+[Begin 
isa x6 (propId singleton star star) int
"
"23_______________________[+[Begin 
of x6 X2064^8 int
"
"23-----------------------]-]Success  
of x6 (propId singleton star star) int
"
"23_______________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"23-----------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"22----------------------]-]Success  
isa x6 (propId singleton star star) int
"
"21---------------------]-]Success  
of (app x4 x6) singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X2056^7 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType (propId singleton (app x4 x5) (app x4 x6)) props int
"
"19-------------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton star star) =>
  spy (ofType (propId singleton (app x4 x5) (app x4 x6)) props int)
"
"19___________________[+[Begin 
pts_for props props X2052^6
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
ofType
 (forall (propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) props int
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int)
"
"17_________________[+[Begin 
pts_for props props X2048^5
"
"17-----------------]-]Success  
pts_for props props props
"
"16----------------]-]Success  
ofType
 (forall (propId singleton star star) x6 \
   forall (propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) props int
"
"15---------------]-]Success  
pi x5 \
 locDecl x5 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) props int)
"
"15_______________[+[Begin 
pts_for props props X2044^4
"
"15---------------]-]Success  
pts_for props props props
"
"14--------------]-]Success  
pi x4 \
 locDecl x4 (setPi (propId singleton star star) x5 \ singleton) =>
  ofType
   (forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"14______________[+[Begin 
ofType (setPi (propId singleton star star) x5 \ singleton) X2065^5 int
"
"15_______________[+[Begin 
of star X2066^5 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of star X2067^5 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X2068^5 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"15_______________[+[Begin 
pts_fun props set X2065^5
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"15---------------]-]Success  
pts_fun props set set
"
"14--------------]-]Success  
ofType (setPi (propId singleton star star) x5 \ singleton) set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 (setPi (propId singleton star star) x6 \ singleton) =>
  ofType
   (forall (propId singleton star star) x6 \
     forall (propId singleton star star) x7 \
      forall (propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) X2069^5 int
"
"15_______________[+[Begin 
ofType (propId singleton star star) X2070^6 int
"
"16________________[+[Begin 
of star X2071^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of star X2072^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X2070^6 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"15---------------]-]Success  
ofType (propId singleton star star) props int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) X2073^6 int)
"
"16________________[+[Begin 
ofType
 (forall (propId singleton star star) x7 \
   forall (propId singleton star star) x8 \
    propId singleton (app x5 x6) (app x5 x7)) X2073^6 int
"
"17_________________[+[Begin 
ofType (propId singleton star star) X2074^7 int
"
"18__________________[+[Begin 
of star X2075^7 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of star X2076^7 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X2074^7 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
ofType (propId singleton star star) props int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) X2077^7 int)
"
"18__________________[+[Begin 
ofType
 (forall (propId singleton star star) x8 \
   propId singleton (app x5 x6) (app x5 x7)) X2077^7 int
"
"19___________________[+[Begin 
ofType (propId singleton star star) X2078^8 int
"
"20____________________[+[Begin 
of star X2079^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X2080^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X2078^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
ofType (propId singleton star star) props int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton star star) =>
  spy (ofType (propId singleton (app x5 x6) (app x5 x7)) X2081^8 int)
"
"20____________________[+[Begin 
ofType (propId singleton (app x5 x6) (app x5 x7)) X2081^8 int
"
"21_____________________[+[Begin 
of (app x5 x6) X2082^9 int
"
"22______________________[+[Begin 
of x5 (setPi X2083^9 X2084^9) int
"
"22----------------------]-]Success  
of x5 (setPi (propId singleton star star) x9 \ singleton) int
"
"22______________________[+[Begin 
isa x6 (propId singleton star star) int
"
"23_______________________[+[Begin 
of x6 X2085^9 int
"
"23-----------------------]-]Success  
of x6 (propId singleton star star) int
"
"23_______________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"23-----------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"22----------------------]-]Success  
isa x6 (propId singleton star star) int
"
"21---------------------]-]Success  
of (app x5 x6) singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of (app x5 x7) X2086^9 int
"
"22______________________[+[Begin 
of x5 (setPi X2087^9 X2088^9) int
"
"22----------------------]-]Success  
of x5 (setPi (propId singleton star star) x9 \ singleton) int
"
"22______________________[+[Begin 
isa x7 (propId singleton star star) int
"
"23_______________________[+[Begin 
of x7 X2089^9 int
"
"23-----------------------]-]Success  
of x7 (propId singleton star star) int
"
"23_______________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"23-----------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"22----------------------]-]Success  
isa x7 (propId singleton star star) int
"
"21---------------------]-]Success  
of (app x5 x7) singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X2081^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType (propId singleton (app x5 x6) (app x5 x7)) props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton star star) =>
  spy (ofType (propId singleton (app x5 x6) (app x5 x7)) props int)
"
"19___________________[+[Begin 
pts_for props props X2077^7
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
ofType
 (forall (propId singleton star star) x8 \
   propId singleton (app x5 x6) (app x5 x7)) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) props int)
"
"17_________________[+[Begin 
pts_for props props X2073^6
"
"17-----------------]-]Success  
pts_for props props props
"
"16----------------]-]Success  
ofType
 (forall (propId singleton star star) x7 \
   forall (propId singleton star star) x8 \
    propId singleton (app x5 x6) (app x5 x7)) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 (propId singleton star star) =>
  spy
   (ofType
     (forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) props int)
"
"15_______________[+[Begin 
pts_for props props X2069^5
"
"15---------------]-]Success  
pts_for props props props
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 (setPi (propId singleton star star) x6 \ singleton) =>
  ofType
   (forall (propId singleton star star) x6 \
     forall (propId singleton star star) x7 \
      forall (propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) props int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"14______________[+[Begin 
pts_fun set set X2090^4
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"14--------------]-]Success  
pts_fun set set set
"
"13-------------]-]Success  
pi x3 \
 locDecl x3
  (setSigma
    (setPi
      (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
        forall (propId singleton star star) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x4 \
    forall
     (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          forall (propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (forall (propId singleton star star) x7 \
         propId singleton
          (app
            (elim_setSigma x5 (x8 \
              setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)
          (app
            (elim_setSigma x6 (x8 \
              setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)) x7 \
       forall (propId singleton star star) x8 \
        propId singleton
         (app
           (elim_setSigma (app x4 x5) (x9 \
             setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
             x9) x8)
         (app
           (elim_setSigma (app x4 x6) (x9 \
             setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
             x9) x8)) =>
  ofType
   (setPi
     (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
       forall (propId singleton star star) x5 \
        forall (propId singleton star star) x6 \
         forall (propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
      forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        forall (propId singleton star star) x8 \
         propId singleton (app x5 x6) (app x5 x7)) _ int
"
"13_____________[+[Begin 
pi x3 \
 pi x4 \
  locDecl x3
   (setPi
     (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        forall (propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8)) =>
   locDecl x4
    (forall
      (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
        forall (propId singleton star star) x6 \
         forall (propId singleton star star) x7 \
          forall (propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
         forall (propId singleton star star) x7 \
          forall (propId singleton star star) x8 \
           forall (propId singleton star star) x9 \
            propId singleton (app x6 x7) (app x6 x8)) x6 \
       forall
        (forall (propId singleton star star) x7 \
          propId singleton
           (app
             (elim_setSigma x5 (x8 \
               setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \
               x8) x7)
           (app
             (elim_setSigma x6 (x8 \
               setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \
               x8) x7)) x7 \
        forall (propId singleton star star) x8 \
         propId singleton
          (app
            (elim_setSigma (app x3 x5) (x9 \
              setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
              x9) x8)
          (app
            (elim_setSigma (app x3 x6) (x9 \
              setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
              x9) x8)) =>
    isa x3
     (setPi
       (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           forall (propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          forall (propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8)) int
"
"14______________[+[Begin 
of x3 X2091^5 int
"
"14--------------]-]Success  
of x3
 (setPi
   (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \
   setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
    forall (propId singleton star star) x7 \
     forall (propId singleton star star) x8 \
      forall (propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8)) int
"
"14______________[+[Begin 
conv
 (setPi
   (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \
   setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
    forall (propId singleton star star) x7 \
     forall (propId singleton star star) x8 \
      forall (propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8))
 (setPi
   (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \
   setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
    forall (propId singleton star star) x7 \
     forall (propId singleton star star) x8 \
      forall (propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8))
"
"14--------------]-]Success  
conv
 (setPi
   (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \
   setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
    forall (propId singleton star star) x7 \
     forall (propId singleton star star) x8 \
      forall (propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8))
 (setPi
   (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \
   setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
    forall (propId singleton star star) x7 \
     forall (propId singleton star star) x8 \
      forall (propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8))
"
"13-------------]-]Success  
pi x3 \
 pi x4 \
  locDecl x3
   (setPi
     (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        forall (propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8)) =>
   locDecl x4
    (forall
      (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
        forall (propId singleton star star) x6 \
         forall (propId singleton star star) x7 \
          forall (propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
         forall (propId singleton star star) x7 \
          forall (propId singleton star star) x8 \
           forall (propId singleton star star) x9 \
            propId singleton (app x6 x7) (app x6 x8)) x6 \
       forall
        (forall (propId singleton star star) x7 \
          propId singleton
           (app
             (elim_setSigma x5 (x8 \
               setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \
               x8) x7)
           (app
             (elim_setSigma x6 (x8 \
               setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \
               x8) x7)) x7 \
        forall (propId singleton star star) x8 \
         propId singleton
          (app
            (elim_setSigma (app x3 x5) (x9 \
              setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
              x9) x8)
          (app
            (elim_setSigma (app x3 x6) (x9 \
              setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
              x9) x8)) =>
    isa x3
     (setPi
       (setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           forall (propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       setSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          forall (propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8)) int
"
"12------------]-]Success  
of
 (elim_setSigma x0 (x3 \
   setPi
    (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
      forall (propId singleton star star) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3)
 (setPi
   (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
     forall (propId singleton star star) x4 \
      forall (propId singleton star star) x5 \
       forall (propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \
   setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) int
"
"12____________[+[Begin 
isa x1
 (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
   forall (propId singleton star star) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5)) int
"
"13_____________[+[Begin 
of x1 X2092^3 int
"
"13-------------]-]Success  
of x1
 (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
   forall (propId singleton star star) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5)) int
"
"13_____________[+[Begin 
conv
 (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
   forall (propId singleton star star) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5))
 (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
   forall (propId singleton star star) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5))
"
"13-------------]-]Success  
conv
 (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
   forall (propId singleton star star) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5))
 (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
   forall (propId singleton star star) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5))
"
"12------------]-]Success  
isa x1
 (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
   forall (propId singleton star star) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5)) int
"
"11-----------]-]Success  
of
 (app
   (elim_setSigma x0 (x3 \
     setPi
      (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
        forall (propId singleton star star) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         forall (propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
 (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
   forall (propId singleton star star) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5)) int
"
"11___________[+[Begin 
pi x3 \
 locDecl x3
  (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) =>
  ofType (setPi (propId singleton star star) x4 \ singleton) _ int
"
"12____________[+[Begin 
of star X2093^4 int
"
"12------------]-]Success  
of star singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
of star X2094^4 int
"
"12------------]-]Success  
of star singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
(pts_leq set set),
(X2095^4 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"12____________[+[Begin 
pts_fun props set X2096^4
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"12------------]-]Success  
pts_fun props set set
"
"11-----------]-]Success  
pi x3 \
 locDecl x3
  (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) =>
  ofType (setPi (propId singleton star star) x4 \ singleton) _ int
"
"11___________[+[Begin 
pi x3 \
 pi x4 \
  locDecl x3 (setPi (propId singleton star star) x5 \ singleton) =>
   locDecl x4
    (forall (propId singleton star star) x5 \
      forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        propId singleton (app x3 x5) (app x3 x6)) =>
    isa x3 (setPi (propId singleton star star) x5 \ singleton) int
"
"12____________[+[Begin 
of x3 X2097^5 int
"
"12------------]-]Success  
of x3 (setPi (propId singleton star star) x5 \ singleton) int
"
"12____________[+[Begin 
conv (setPi (propId singleton star star) x5 \ singleton)
 (setPi (propId singleton star star) x5 \ singleton)
"
"12------------]-]Success  
conv (setPi (propId singleton star star) x5 \ singleton)
 (setPi (propId singleton star star) x5 \ singleton)
"
"11-----------]-]Success  
pi x3 \
 pi x4 \
  locDecl x3 (setPi (propId singleton star star) x5 \ singleton) =>
   locDecl x4
    (forall (propId singleton star star) x5 \
      forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        propId singleton (app x3 x5) (app x3 x6)) =>
    isa x3 (setPi (propId singleton star star) x5 \ singleton) int
"
"10----------]-]Success  
of
 (elim_setSigma
   (app
     (elim_setSigma x0 (x3 \
       setPi
        (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
          forall (propId singleton star star) x5 \
           forall (propId singleton star star) x6 \
            forall (propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           forall (propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1) (x3 \
   setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
 (setPi (propId singleton star star) x3 \ singleton) int
"
"10__________[+[Begin 
isa x2 (propId singleton star star) int
"
"11___________[+[Begin 
of x2 X2098^3 int
"
"11-----------]-]Success  
of x2 (propId singleton star star) int
"
"11___________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"11-----------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"10----------]-]Success  
isa x2 (propId singleton star star) int
"
"9---------]-]Success  
of
 (app
   (elim_setSigma
     (app
       (elim_setSigma x0 (x3 \
         setPi
          (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
            forall (propId singleton star star) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \
          setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
           forall (propId singleton star star) x6 \
            forall (propId singleton star star) x7 \
             forall (propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
     (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
   x2) singleton int
"
"9_________[+[Begin 
conv singleton singleton
"
"9---------]-]Success  
conv singleton singleton
"
"8--------]-]Success  
isa
 (app
   (elim_setSigma
     (app
       (elim_setSigma x0 (x3 \
         setPi
          (setSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
            forall (propId singleton star star) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \
          setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
           forall (propId singleton star star) x6 \
            forall (propId singleton star star) x7 \
             forall (propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
     (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
   x2) singleton int
"
"7-------]-]Success  
of
 (id singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x3 \
           setPi
            (setSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
       (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
     x2))
 (propId singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x3 \
           setPi
            (setSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
       (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x3 \
           setPi
            (setSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
       (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
     x2)) int
"
"7_______[+[Begin 
conv
 (propId singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x3 \
           setPi
            (setSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
       (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x3 \
           setPi
            (setSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
       (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
     x2)) (X2029^2 x2)
"
"7-------]-]Success  
conv
 (propId singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x3 \
           setPi
            (setSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
       (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x3 \
           setPi
            (setSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
       (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
     x2))
 (propId singleton
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x3 \
           setPi
            (setSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
       (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app
     (elim_setSigma
       (app
         (elim_setSigma x0 (x3 \
           setPi
            (setSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            setSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
       (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
     x2))
"
"6------]-]Success  
pi x2 \
 locDecl x2 (propId singleton star star) =>
  isa
   (id singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x3 \
             setPi
              (setSigma (setPi (propId singleton star star) x4 \ singleton)
                x4 \
                forall (propId singleton star star) x5 \
                 forall (propId singleton star star) x6 \
                  forall (propId singleton star star) x7 \
                   propId singleton (app x4 x5) (app x4 x6)) x4 \
              setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
         (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
         x3) x2))
   (propId singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x3 \
             setPi
              (setSigma (setPi (propId singleton star star) x4 \ singleton)
                x4 \
                forall (propId singleton star star) x5 \
                 forall (propId singleton star star) x6 \
                  forall (propId singleton star star) x7 \
                   propId singleton (app x4 x5) (app x4 x6)) x4 \
              setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
         (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
         x3) x2)
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x3 \
             setPi
              (setSigma (setPi (propId singleton star star) x4 \ singleton)
                x4 \
                forall (propId singleton star star) x5 \
                 forall (propId singleton star star) x6 \
                  forall (propId singleton star star) x7 \
                   propId singleton (app x4 x5) (app x4 x6)) x4 \
              setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
         (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
         x3) x2)) int
"
"5-----]-]Success  
of
 (forall_lam (propId singleton star star) x2 \
   id singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2))
 (forall (propId singleton star star) x2 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2)) int
"
"5_____[+[Begin 
conv
 (forall (propId singleton star star) x2 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2))
 (forall (propId singleton star star) x2 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2))
"
"5-----]-]Success  
conv
 (forall (propId singleton star star) x2 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2))
 (forall (propId singleton star star) x2 \
   propId singleton
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2)
    (app
      (elim_setSigma
        (app
          (elim_setSigma x0 (x3 \
            setPi
             (setSigma (setPi (propId singleton star star) x4 \ singleton)
               x4 \
               forall (propId singleton star star) x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  propId singleton (app x4 x5) (app x4 x6)) x4 \
             setSigma (setPi (propId singleton star star) x5 \ singleton)
              x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
        (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \ x3)
      x2))
"
"4----]-]Success  
pi x1 \
 locDecl x1
  (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
    forall (propId singleton star star) x3 \
     forall (propId singleton star star) x4 \
      forall (propId singleton star star) x5 \
       propId singleton (app x2 x3) (app x2 x4)) =>
  isa
   (forall_lam (propId singleton star star) x2 \
     id singleton
      (app
        (elim_setSigma
          (app
            (elim_setSigma x0 (x3 \
              setPi
               (setSigma (setPi (propId singleton star star) x4 \ singleton)
                 x4 \
                 forall (propId singleton star star) x5 \
                  forall (propId singleton star star) x6 \
                   forall (propId singleton star star) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x4 \
               setSigma (setPi (propId singleton star star) x5 \ singleton)
                x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  forall (propId singleton star star) x8 \
                   propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
          (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
          x3) x2))
   (forall (propId singleton star star) x2 \
     propId singleton
      (app
        (elim_setSigma
          (app
            (elim_setSigma x0 (x3 \
              setPi
               (setSigma (setPi (propId singleton star star) x4 \ singleton)
                 x4 \
                 forall (propId singleton star star) x5 \
                  forall (propId singleton star star) x6 \
                   forall (propId singleton star star) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x4 \
               setSigma (setPi (propId singleton star star) x5 \ singleton)
                x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  forall (propId singleton star star) x8 \
                   propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
          (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
          x3) x2)
      (app
        (elim_setSigma
          (app
            (elim_setSigma x0 (x3 \
              setPi
               (setSigma (setPi (propId singleton star star) x4 \ singleton)
                 x4 \
                 forall (propId singleton star star) x5 \
                  forall (propId singleton star star) x6 \
                   forall (propId singleton star star) x7 \
                    propId singleton (app x4 x5) (app x4 x6)) x4 \
               setSigma (setPi (propId singleton star star) x5 \ singleton)
                x5 \
                forall (propId singleton star star) x6 \
                 forall (propId singleton star star) x7 \
                  forall (propId singleton star star) x8 \
                   propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
          (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
          x3) x2)) int
"
"3---]-]Success  
of
 (forall_lam
   (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
     forall (propId singleton star star) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        propId singleton (app x1 x2) (app x1 x3)) x1 \
   forall_lam (propId singleton star star) x2 \
    id singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x3 \
             setPi
              (setSigma (setPi (propId singleton star star) x4 \ singleton)
                x4 \
                forall (propId singleton star star) x5 \
                 forall (propId singleton star star) x6 \
                  forall (propId singleton star star) x7 \
                   propId singleton (app x4 x5) (app x4 x6)) x4 \
              setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
         (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
         x3) x2))
 (forall
   (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
     forall (propId singleton star star) x2 \
      forall (propId singleton star star) x3 \
       forall (propId singleton star star) x4 \
        propId singleton (app x1 x2) (app x1 x3)) x1 \
   forall (propId singleton star star) x2 \
    propId singleton
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x3 \
             setPi
              (setSigma (setPi (propId singleton star star) x4 \ singleton)
                x4 \
                forall (propId singleton star star) x5 \
                 forall (propId singleton star star) x6 \
                  forall (propId singleton star star) x7 \
                   propId singleton (app x4 x5) (app x4 x6)) x4 \
              setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
         (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
         x3) x2)
     (app
       (elim_setSigma
         (app
           (elim_setSigma x0 (x3 \
             setPi
              (setSigma (setPi (propId singleton star star) x4 \ singleton)
                x4 \
                forall (propId singleton star star) x5 \
                 forall (propId singleton star star) x6 \
                  forall (propId singleton star star) x7 \
                   propId singleton (app x4 x5) (app x4 x6)) x4 \
              setSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3) x1)
         (x3 \ setPi (propId singleton star star) x4 \ singleton) x3 \ x4 \
         x3) x2)) int
"
"2--]-]Success  
pi x0 \
 locDecl x0
  (setSigma
    (setPi
      (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
        forall (propId singleton star star) x2 \
         forall (propId singleton star star) x3 \
          forall (propId singleton star star) x4 \
           propId singleton (app x1 x2) (app x1 x3)) x1 \
      setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
       forall (propId singleton star star) x3 \
        forall (propId singleton star star) x4 \
         forall (propId singleton star star) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x1 \
    forall
     (setSigma (setPi (propId singleton star star) x2 \ singleton) x2 \
       forall (propId singleton star star) x3 \
        forall (propId singleton star star) x4 \
         forall (propId singleton star star) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (setSigma (setPi (propId singleton star star) x3 \ singleton) x3 \
        forall (propId singleton star star) x4 \
         forall (propId singleton star star) x5 \
          forall (propId singleton star star) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (forall (propId singleton star star) x4 \
         propId singleton
          (app
            (elim_setSigma x2 (x5 \
              setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
            x4)
          (app
            (elim_setSigma x3 (x5 \
              setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \ x5)
            x4)) x4 \
       forall (propId singleton star star) x5 \
        propId singleton
         (app
           (elim_setSigma (app x1 x2) (x6 \
             setPi (propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
           x5)
         (app
           (elim_setSigma (app x1 x3) (x6 \
             setPi (propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
           x5)) =>
  spy
   (of
     (forall_lam
       (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
         forall (propId singleton star star) x2 \
          forall (propId singleton star star) x3 \
           forall (propId singleton star star) x4 \
            propId singleton (app x1 x2) (app x1 x3)) x1 \
       forall_lam (propId singleton star star) x2 \
        id singleton
         (app
           (elim_setSigma
             (app
               (elim_setSigma x0 (x3 \
                 setPi
                  (setSigma
                    (setPi (propId singleton star star) x4 \ singleton) x4 \
                    forall (propId singleton star star) x5 \
                     forall (propId singleton star star) x6 \
                      forall (propId singleton star star) x7 \
                       propId singleton (app x4 x5) (app x4 x6)) x4 \
                  setSigma
                   (setPi (propId singleton star star) x5 \ singleton) x5 \
                   forall (propId singleton star star) x6 \
                    forall (propId singleton star star) x7 \
                     forall (propId singleton star star) x8 \
                      propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3)
               x1) (x3 \ setPi (propId singleton star star) x4 \ singleton)
             x3 \ x4 \ x3) x2))
     (forall
       (setSigma (setPi (propId singleton star star) x1 \ singleton) x1 \
         forall (propId singleton star star) x2 \
          forall (propId singleton star star) x3 \
           forall (propId singleton star star) x4 \
            propId singleton (app x1 x2) (app x1 x3)) x1 \
       forall (propId singleton star star) x2 \
        propId singleton
         (app
           (elim_setSigma
             (app
               (elim_setSigma x0 (x3 \
                 setPi
                  (setSigma
                    (setPi (propId singleton star star) x4 \ singleton) x4 \
                    forall (propId singleton star star) x5 \
                     forall (propId singleton star star) x6 \
                      forall (propId singleton star star) x7 \
                       propId singleton (app x4 x5) (app x4 x6)) x4 \
                  setSigma
                   (setPi (propId singleton star star) x5 \ singleton) x5 \
                   forall (propId singleton star star) x6 \
                    forall (propId singleton star star) x7 \
                     forall (propId singleton star star) x8 \
                      propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3)
               x1) (x3 \ setPi (propId singleton star star) x4 \ singleton)
             x3 \ x4 \ x3) x2)
         (app
           (elim_setSigma
             (app
               (elim_setSigma x0 (x3 \
                 setPi
                  (setSigma
                    (setPi (propId singleton star star) x4 \ singleton) x4 \
                    forall (propId singleton star star) x5 \
                     forall (propId singleton star star) x6 \
                      forall (propId singleton star star) x7 \
                       propId singleton (app x4 x5) (app x4 x6)) x4 \
                  setSigma
                   (setPi (propId singleton star star) x5 \ singleton) x5 \
                   forall (propId singleton star star) x6 \
                    forall (propId singleton star star) x7 \
                     forall (propId singleton star star) x8 \
                      propId singleton (app x5 x6) (app x5 x7)) x3 \ x4 \ x3)
               x1) (x3 \ setPi (propId singleton star star) x4 \ singleton)
             x3 \ x4 \ x3) x2)) int)
"
"1-]-]Success  
setoid_refl
 (setPi (setPi (propEq singleton star star) x0 \ singleton) x0 \
   setPi (propEq singleton star star) x1 \ singleton) _
"
"||||||||||||||||||||||||||||||||||||||||||"
