"debug.elpi:   6: Warning: indent is undeclared"
"debug.elpi:   6: Warning: indent is undeclared"
"debug.elpi:  27: Warning: indent is undeclared"
"debug.elpi:  45: Error: (count_indent' TT) has type (X0 -> prop) but is used with type prop"
"debug.elpi:  47: Error: print_indent has type (string -> (string -> (string -> X1))) but is used with type prop"
"main.elpi: 140: Warning: fixMe is undeclared"
"main.elpi: 149: Warning: fixMe is undeclared"
"main.elpi: 195: Warning: k_propId is undeclared"
"setPi.elpi: 146: Error: (FH x25 x26 x27) has type (X2 -> (X3 -> (X4 -> X4))) but is used with type mttTerm"
"setPi.elpi: 146: Error: (locDecl x24 (EquB x22 x23)) has type prop but is used with type (list prop)"
"setPi.elpi: 146: Error: (locDecl x23 Bi') has type prop but is used with type (list prop)"
"setPi.elpi: 146: Error: (locDecl x22 Bi') has type prop but is used with type (list prop)"
"propEq.elpi:  47: Warning: k_propId is undeclared"
"letIn.elpi:   9: Error: (letIn KIND1 T S) has type mttTerm but is used with type mttType"
"test.elpi:  18: Warning: l is undeclared"
"test.elpi:  29: Warning: m is undeclared"
"test.elpi:  53: Warning: l is undeclared"
"test.elpi:  74: Warning: i is undeclared"
"test.elpi: 115: Warning: h is undeclared"
"test.elpi: 127: Warning: g is undeclared"
"test.elpi: 149: Warning: f is undeclared"
"1_[+[Begin 
setoid_symm (setPi singleton x0 \ singleton) X5
"
"2__[+[Begin 
interp (setPi singleton x0 \ singleton) X6
"
"3___[+[Begin 
interp singleton X7
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X8 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
setoid_eq singleton X9
"
"3---]-]Success  
setoid_eq singleton x0 \ x1 \ propId singleton x0 x1
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_eq singleton (X10 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton (X11 x3 x4 x5))
"
"4____[+[Begin 
tau singleton singleton (X11 x3 x4 x5)
"
"4----]-]Success  
tau singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          interp x0 x3 =>
           interp x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              interp x2 x5 => spy (tau singleton singleton x6 \ x6)
"
"2--]-]Success  
interp (setPi singleton x0 \ singleton)
 (setSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
setoid_eq (setPi singleton x0 \ singleton) X12
"
"3___[+[Begin 
interp singleton X13
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton (X14 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton (X15 x1)))
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 => ((interp singleton singleton),
     (setoid_eq singleton x2 \ x3 \ propId singleton x2 x3))
"
"2--]-]Success  
setoid_eq (setPi singleton x0 \ singleton) x0 \ x1 \
 forall singleton x2 \
  propId singleton
   (app (elim_setSigma x0 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app (elim_setSigma x1 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => interp x0 x1 => setoid_symm singleton (X16 x1)
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   locDecl x2 singleton =>
    locDecl x3 singleton =>
     locDecl x4 (propId singleton x2 x3) =>
      of (elim_id x4 (x5 \ x6 \ propId singleton x6 x5) x5 \ id singleton x5)
       _ int
"
"4____[+[Begin 
of x4 (propId X17^5 X18^5 X19^5) int
"
"4----]-]Success  
of x4 (propId singleton x2 x3) int
"
"4____[+[Begin 
pi x5 \
 pi x6 \
  locDecl x5 singleton =>
   locDecl x6 singleton => isaType (propId singleton x6 x5) propc int
"
"5_____[+[Begin 
ofType (propId singleton x6 x5) X20^7 int
"
"6______[+[Begin 
of x6 X21^7 int
"
"6------]-]Success  
of x6 singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
of x5 X22^7 int
"
"6------]-]Success  
of x5 singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
(pts_leq set set),
(X20^7 = props)
"
"6------]-]Success  
(pts_leq set set),
(props = props)
"
"5-----]-]Success  
ofType (propId singleton x6 x5) props int
"
"5_____[+[Begin 
pts_leq props propc
"
"5-----]-]Success  
pts_leq props propc
"
"4----]-]Success  
pi x5 \
 pi x6 \
  locDecl x5 singleton =>
   locDecl x6 singleton => isaType (propId singleton x6 x5) propc int
"
"4____[+[Begin 
pi x5 \
 locDecl x5 singleton => of (id singleton x5) (propId singleton x5 x5) int
"
"5_____[+[Begin 
ofType singleton _ int
"
"5-----]-]Success  
ofType singleton _ int
"
"5_____[+[Begin 
isa x5 singleton int
"
"6______[+[Begin 
of x5 X23^6 int
"
"6------]-]Success  
of x5 singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"5-----]-]Success  
isa x5 singleton int
"
"4----]-]Success  
pi x5 \
 locDecl x5 singleton => of (id singleton x5) (propId singleton x5 x5) int
"
"3---]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   locDecl x2 singleton =>
    locDecl x3 singleton =>
     locDecl x4 (propId singleton x2 x3) =>
      of (elim_id x4 (x5 \ x6 \ propId singleton x6 x5) x5 \ id singleton x5)
       _ int
"
"2--]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    interp x0 x1 =>
     (setoid_symm singleton x2 \ x3 \ x4 \
       elim_id x4 (x5 \ x6 \ propId singleton x6 x5) x5 \ id singleton x5)
"
"2__[+[Begin 
X5 = (x0 \ x1 \ x2 \
 forall_lam singleton x3 \
  elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4)
"
"2--]-]Success  
(x0 \ x1 \ x2 \
 forall_lam singleton x3 \
  elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4) = (x0 \ x1 \ x2 \
 forall_lam singleton x3 \
  elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4)
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0
   (setSigma (setPi singleton x2 \ singleton) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    (pi x2 \
      locDecl x2
       (forall singleton x3 \
         propId singleton
          (app
            (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)
          (app
            (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)) =>
       spy
        (of
          (forall_lam singleton x3 \
            elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4)
             x4 \ id singleton x4)
          (forall singleton x3 \
            propId singleton
             (app
               (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
                 x5 \ x4) x3)
             (app
               (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \
                 x5 \ x4) x3)) int))
"
"3___[+[Begin 
of
 (forall_lam singleton x3 \
   elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
    id singleton x4)
 (forall singleton x3 \
   propId singleton
    (app
      (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)
    (app
      (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)) int
"
"4____[+[Begin 
ofType singleton _ int
"
"4----]-]Success  
ofType singleton _ int
"
"4____[+[Begin 
pi x3 \
 locDecl x3 singleton =>
  isa
   (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
     id singleton x4)
   (propId singleton
     (app
       (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
       x3)
     (app
       (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
       x3)) int
"
"5_____[+[Begin 
of
 (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4) X24^4 int
"
"6______[+[Begin 
of (forall_app x2 x3) (propId X25^4 X26^4 X27^4) int
"
"6......].]Fail  
of (forall_app x2 x3) (propId X25^4 X26^4 X27^4) int
"
"5.....].]Fail  
of
 (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
   id singleton x4) X24^4 int
"
"4....].]Fail  
pi x3 \
 locDecl x3 singleton =>
  isa
   (elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
     id singleton x4)
   (propId singleton
     (app
       (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
       x3)
     (app
       (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
       x3)) int
"
"3...].]Fail  
of
 (forall_lam singleton x3 \
   elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4) x4 \
    id singleton x4)
 (forall singleton x3 \
   propId singleton
    (app
      (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)
    (app
      (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)) int
"
"2..].]Fail  
pi x0 \
 pi x1 \
  locDecl x0
   (setSigma (setPi singleton x2 \ singleton) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) =>
   locDecl x1
    (setSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    (pi x2 \
      locDecl x2
       (forall singleton x3 \
         propId singleton
          (app
            (elim_setSigma x0 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)
          (app
            (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)) =>
       spy
        (of
          (forall_lam singleton x3 \
            elim_id (forall_app x2 x3) (x4 \ x5 \ propId singleton x5 x4)
             x4 \ id singleton x4)
          (forall singleton x3 \
            propId singleton
             (app
               (elim_setSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
                 x5 \ x4) x3)
             (app
               (elim_setSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \
                 x5 \ x4) x3)) int))
"
"1.].]Fail  
setoid_symm (setPi singleton x0 \ singleton) X5
"
