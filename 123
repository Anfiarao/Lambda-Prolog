"debug.elpi:   6: Warning: indent is undeclared"
"debug.elpi:   6: Warning: indent is undeclared"
"debug.elpi:  27: Warning: indent is undeclared"
"debug.elpi:  45: Error: (count_indent' TT) has type (X0 -> prop) but is used with type prop"
"debug.elpi:  47: Error: print_indent has type (string -> (string -> (string -> X1))) but is used with type prop"
"main.elpi: 140: Warning: fixMe is undeclared"
"main.elpi: 149: Warning: fixMe is undeclared"
"main.elpi: 195: Warning: k_propId is undeclared"
"main.elpi: 202: Warning: fixMe is undeclared"
"main.elpi: 205: Warning: fixMe is undeclared"
"setPi.elpi: 146: Error: (FH x25 x26 x27) has type (X2 -> (X3 -> (X4 -> X4))) but is used with type mttTerm"
"setPi.elpi: 146: Error: (locDecl x24 (EquB x22 x23)) has type prop but is used with type (list prop)"
"setPi.elpi: 146: Error: (locDecl x23 Bi') has type prop but is used with type (list prop)"
"setPi.elpi: 146: Error: (locDecl x22 Bi') has type prop but is used with type (list prop)"
"propEq.elpi:  47: Warning: k_propId is undeclared"
"letIn.elpi:   9: Error: (letIn KIND1 T S) has type mttTerm but is used with type mttType"
"test.elpi:  18: Warning: l is undeclared"
"test.elpi:  26: Warning: m is undeclared"
"test.elpi:  50: Warning: l is undeclared"
"test.elpi:  71: Warning: i is undeclared"
"test.elpi: 112: Warning: h is undeclared"
"test.elpi: 124: Warning: g is undeclared"
"test.elpi: 146: Warning: f is undeclared"
"dummy:   1:query: Warning: m is undeclared"
"1_[+[Begin 
test m X5 X6 X7
"
"2__[+[Begin 
ofType
 (forall singleton x0 \
   implies (propEq singleton x0 star)
    (implies (propEq singleton star x0)
      (forall
        (setPi
          (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \
            singleton) x1 \ singleton) x1 \
        propEq singleton
         (app x1
           (lambda (setPi singleton x2 \ propEq singleton star star) x2 \
             star)) star))) X5 ext
"
"3___[+[Begin 
ofType singleton X8 ext
"
"3---]-]Success  
ofType singleton set ext
"
"3___[+[Begin 
pi x0 \
 locDecl x0 singleton =>
  spy
   (ofType
     (implies (propEq singleton x0 star)
       (implies (propEq singleton star x0)
         (forall
           (setPi
             (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \
               singleton) x1 \ singleton) x1 \
           propEq singleton
            (app x1
              (lambda (setPi singleton x2 \ propEq singleton star star) x2 \
                star)) star))) X9 ext)
"
"4____[+[Begin 
ofType
 (implies (propEq singleton x0 star)
   (implies (propEq singleton star x0)
     (forall
       (setPi
         (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \
           singleton) x1 \ singleton) x1 \
       propEq singleton
        (app x1
          (lambda (setPi singleton x2 \ propEq singleton star star) x2 \ star))
        star))) X9 ext
"
"5_____[+[Begin 
of x0 X10^1 ext
"
"5-----]-]Success  
of x0 singleton ext
"
"5_____[+[Begin 
conv singleton singleton
"
"5-----]-]Success  
conv singleton singleton
"
"5_____[+[Begin 
of star X11^1 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
conv singleton singleton
"
"5-----]-]Success  
conv singleton singleton
"
"5_____[+[Begin 
of star X12^2 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
conv singleton singleton
"
"5-----]-]Success  
conv singleton singleton
"
"5_____[+[Begin 
of x0 X13^2 ext
"
"5-----]-]Success  
of x0 singleton ext
"
"5_____[+[Begin 
conv singleton singleton
"
"5-----]-]Success  
conv singleton singleton
"
"5_____[+[Begin 
ofType
 (setPi
   (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
   x3 \ singleton) X14^3 ext
"
"6______[+[Begin 
of star X15^4 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
of x0 X16^4 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
pts_fun set props X17^3
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq props set
"
"7-------]-]Success  
pts_leq props set
"
"6------]-]Success  
pts_fun set props set
"
"6______[+[Begin 
pts_fun set set X18^3
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"6------]-]Success  
pts_fun set set set
"
"6______[+[Begin 
pts_fun set set X14^3
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"6------]-]Success  
pts_fun set set set
"
"5-----]-]Success  
ofType
 (setPi
   (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
   x3 \ singleton) set ext
"
"5_____[+[Begin 
pi x3 \
 locDecl x3
  (setPi
    (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
    x4 \ singleton) =>
  spy
   (ofType
     (propEq singleton
       (app x3
         (lambda (setPi singleton x4 \ propEq singleton star star) x4 \ star))
       star) X19^3 ext)
"
"6______[+[Begin 
ofType
 (propEq singleton
   (app x3
     (lambda (setPi singleton x4 \ propEq singleton star star) x4 \ star))
   star) X19^3 ext
"
"7_______[+[Begin 
of
 (app x3 (lambda (setPi singleton x4 \ propEq singleton star star) x4 \ star))
 X20^4 ext
"
"8________[+[Begin 
of x3 (setPi X21^4 X22^4) ext
"
"8--------]-]Success  
of x3
 (setPi
   (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
   x4 \ singleton) ext
"
"8________[+[Begin 
isa (lambda (setPi singleton x4 \ propEq singleton star star) x4 \ star)
 (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton) ext
"
"9_________[+[Begin 
of (lambda (setPi singleton x4 \ propEq singleton star star) x4 \ star) X23^4
 ext
"
"10__________[+[Begin 
ofType (setPi singleton x4 \ propEq singleton star star) _ ext
"
"11___________[+[Begin 
of star X24^5 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of star X25^5 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
pts_fun set props X26^4
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"11-----------]-]Success  
pts_fun set props set
"
"10----------]-]Success  
ofType (setPi singleton x4 \ propEq singleton star star) _ ext
"
"10__________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propEq singleton star star) =>
  isa star (X27^4 x4) ext
"
"11___________[+[Begin 
of star X28^5 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
conv singleton (X27^4 x4)
"
"11-----------]-]Success  
conv singleton singleton
"
"10----------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propEq singleton star star) =>
  isa star singleton ext
"
"9---------]-]Success  
of (lambda (setPi singleton x4 \ propEq singleton star star) x4 \ star)
 (setPi (setPi singleton x4 \ propEq singleton star star) x4 \ singleton) ext
"
"9_________[+[Begin 
conv (setPi (setPi singleton x4 \ propEq singleton star star) x4 \ singleton)
 (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
"
"10__________[+[Begin 
hnf (setPi (setPi singleton x4 \ propEq singleton star star) x4 \ singleton)
 X29^4
"
"10----------]-]Success  
hnf (setPi (setPi singleton x4 \ propEq singleton star star) x4 \ singleton)
 (setPi (setPi singleton x4 \ propEq singleton star star) x4 \ singleton)
"
"10__________[+[Begin 
hnf (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
 X30^4
"
"10----------]-]Success  
hnf (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
 (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
"
"10__________[+[Begin 
dconv
 (setPi (setPi singleton x4 \ propEq singleton star star) x4 \ singleton)
 (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
"
"11___________[+[Begin 
hnf (setPi singleton x4 \ propEq singleton star star) X31^4
"
"11-----------]-]Success  
hnf (setPi singleton x4 \ propEq singleton star star)
 (setPi singleton x4 \ propEq singleton star star)
"
"11___________[+[Begin 
hnf (setPi singleton x4 \ propEq singleton star x0) X32^4
"
"11-----------]-]Success  
hnf (setPi singleton x4 \ propEq singleton star x0)
 (setPi singleton x4 \ propEq singleton star x0)
"
"11___________[+[Begin 
dconv (setPi singleton x4 \ propEq singleton star star)
 (setPi singleton x4 \ propEq singleton star x0)
"
"12____________[+[Begin 
hnf (propEq singleton star star) X33^5
"
"12------------]-]Success  
hnf (propEq singleton star star) (propEq singleton star star)
"
"12____________[+[Begin 
hnf (propEq singleton star x0) X34^5
"
"12------------]-]Success  
hnf (propEq singleton star x0) (propEq singleton star x0)
"
"12____________[+[Begin 
dconv (propEq singleton star star) (propEq singleton star x0)
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
conv star star
"
"13-------------]-]Success  
conv star star
"
"13_____________[+[Begin 
conv star x0
"
"13-------------]-]Success  
conv star x0
"
"12------------]-]Success  
dconv (propEq singleton star star) (propEq singleton star x0)
"
"11-----------]-]Success  
dconv (setPi singleton x4 \ propEq singleton star star)
 (setPi singleton x4 \ propEq singleton star x0)
"
"10----------]-]Success  
dconv
 (setPi (setPi singleton x4 \ propEq singleton star star) x4 \ singleton)
 (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
"
"9---------]-]Success  
conv (setPi (setPi singleton x4 \ propEq singleton star star) x4 \ singleton)
 (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
"
"8--------]-]Success  
isa (lambda (setPi singleton x4 \ propEq singleton star star) x4 \ star)
 (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton) ext
"
"7-------]-]Success  
of
 (app x3 (lambda (setPi singleton x4 \ propEq singleton star star) x4 \ star))
 singleton ext
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"7_______[+[Begin 
of star X35^4 ext
"
"7-------]-]Success  
of star singleton ext
"
"7_______[+[Begin 
conv singleton singleton
"
"7-------]-]Success  
conv singleton singleton
"
"6------]-]Success  
ofType
 (propEq singleton
   (app x3
     (lambda (setPi singleton x4 \ propEq singleton star star) x4 \ star))
   star) props ext
"
"5-----]-]Success  
pi x3 \
 locDecl x3
  (setPi
    (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
    x4 \ singleton) =>
  spy
   (ofType
     (propEq singleton
       (app x3
         (lambda (setPi singleton x4 \ propEq singleton star star) x4 \ star))
       star) props ext)
"
"5_____[+[Begin 
pts_for set props props
"
"5-----]-]Success  
pts_for set props props
"
"4----]-]Success  
ofType
 (implies (propEq singleton x0 star)
   (implies (propEq singleton star x0)
     (forall
       (setPi
         (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \
           singleton) x1 \ singleton) x1 \
       propEq singleton
        (app x1
          (lambda (setPi singleton x2 \ propEq singleton star star) x2 \ star))
        star))) props ext
"
"3---]-]Success  
pi x0 \
 locDecl x0 singleton =>
  spy
   (ofType
     (implies (propEq singleton x0 star)
       (implies (propEq singleton star x0)
         (forall
           (setPi
             (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \
               singleton) x1 \ singleton) x1 \
           propEq singleton
            (app x1
              (lambda (setPi singleton x2 \ propEq singleton star star) x2 \
                star)) star))) props ext)
"
"3___[+[Begin 
pts_for set props X5
"
"3---]-]Success  
pts_for set props props
"
"2--]-]Success  
ofType
 (forall singleton x0 \
   implies (propEq singleton x0 star)
    (implies (propEq singleton star x0)
      (forall
        (setPi
          (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \
            singleton) x1 \ singleton) x1 \
        propEq singleton
         (app x1
           (lambda (setPi singleton x2 \ propEq singleton star star) x2 \
             star)) star))) props ext
"
"|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
"
"2__[+[Begin 
interp
 (forall singleton x0 \
   implies (propEq singleton x0 star)
    (implies (propEq singleton star x0)
      (forall
        (setPi
          (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \
            singleton) x1 \ singleton) x1 \
        propEq singleton
         (app x1
           (lambda (setPi singleton x2 \ propEq singleton star star) x2 \
             star)) star))) X6
"
"3___[+[Begin 
interp singleton X36
"
"3---]-]Success  
interp singleton singleton
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  interp x0 x1 =>
   locDecl x0 singleton =>
    locDecl x1 singleton =>
     spy
      (interp
        (implies (propEq singleton x0 star)
          (implies (propEq singleton star x0)
            (forall
              (setPi
                (setPi (setPi singleton x2 \ propEq singleton star x0) x2 \
                  singleton) x2 \ singleton) x2 \
              propEq singleton
               (app x2
                 (lambda (setPi singleton x3 \ propEq singleton star star)
                   x3 \ star)) star))) (X37 x1))
"
"4____[+[Begin 
interp
 (implies (propEq singleton x0 star)
   (implies (propEq singleton star x0)
     (forall
       (setPi
         (setPi (setPi singleton x2 \ propEq singleton star x0) x2 \
           singleton) x2 \ singleton) x2 \
       propEq singleton
        (app x2
          (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star))
        star))) (X37 x1)
"
"5_____[+[Begin 
setoid_eq singleton X38^2
"
"5-----]-]Success  
setoid_eq singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
interp_isa x0 singleton X39^2
"
"6______[+[Begin 
of x0 X40^2 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
interp x0 X41^2
"
"6------]-]Success  
interp x0 x1
"
"6______[+[Begin 
tau singleton singleton X42^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X39^2 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
interp_isa x0 singleton x1
"
"5_____[+[Begin 
interp_isa star singleton X43^2
"
"6______[+[Begin 
of star X44^2 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
interp star X45^2
"
"6------]-]Success  
interp star star
"
"6______[+[Begin 
tau singleton singleton X46^2
"
"6------]-]Success  
tau singleton singleton x2 \ x2
"
"6______[+[Begin 
X43^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
interp_isa star singleton star
"
"5_____[+[Begin 
X47 x1 = propId singleton x1 star
"
"5-----]-]Success  
propId singleton x1 star = propId singleton x1 star
"
"5_____[+[Begin 
pi x2 \
 pi x3 \
  ((interp x2 x3), (locDecl x2 (propEq singleton x0 star)),
   (locDecl x3 (propId singleton x1 star))) =>
   interp
    (implies (propEq singleton star x0)
      (forall
        (setPi
          (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \
            singleton) x4 \ singleton) x4 \
        propEq singleton
         (app x4
           (lambda (setPi singleton x5 \ propEq singleton star star) x5 \
             star)) star)) (X48 x1 x3)
"
"6______[+[Begin 
setoid_eq singleton X49^4
"
"6------]-]Success  
setoid_eq singleton x4 \ x5 \ propId singleton x4 x5
"
"6______[+[Begin 
interp_isa star singleton X50^4
"
"7_______[+[Begin 
of star X51^4 ext
"
"7-------]-]Success  
of star singleton ext
"
"7_______[+[Begin 
interp star X52^4
"
"7-------]-]Success  
interp star star
"
"7_______[+[Begin 
tau singleton singleton X53^4
"
"7-------]-]Success  
tau singleton singleton x4 \ x4
"
"7_______[+[Begin 
X50^4 = star
"
"7-------]-]Success  
star = star
"
"6------]-]Success  
interp_isa star singleton star
"
"6______[+[Begin 
interp_isa x0 singleton X54^4
"
"7_______[+[Begin 
of x0 X55^4 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
interp x0 X56^4
"
"7-------]-]Success  
interp x0 x1
"
"7_______[+[Begin 
tau singleton singleton X57^4
"
"7-------]-]Success  
tau singleton singleton x4 \ x4
"
"7_______[+[Begin 
X54^4 = x1
"
"7-------]-]Success  
x1 = x1
"
"6------]-]Success  
interp_isa x0 singleton x1
"
"6______[+[Begin 
X58 x1 x3 = propId singleton star x1
"
"6------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"6______[+[Begin 
pi x4 \
 pi x5 \
  ((interp x4 x5), (locDecl x4 (propEq singleton star x0)),
   (locDecl x5 (propId singleton star x1))) =>
   interp
    (forall
      (setPi
        (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
        x6 \ singleton) x6 \
      propEq singleton
       (app x6
         (lambda (setPi singleton x7 \ propEq singleton star star) x7 \ star))
       star) (X59 x1 x3 x5)
"
"7_______[+[Begin 
interp
 (setPi
   (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
   x6 \ singleton) (X60 x1 x3 x5)
"
"8________[+[Begin 
interp (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
 X61^6
"
"9_________[+[Begin 
interp (setPi singleton x6 \ propEq singleton star x0) X62^6
"
"10__________[+[Begin 
interp singleton X63^6
"
"10----------]-]Success  
interp singleton singleton
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => interp (propEq singleton star x0) (X64^6 x7)
"
"11___________[+[Begin 
setoid_eq singleton X65^8
"
"11-----------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
interp_isa star singleton X66^8
"
"12____________[+[Begin 
of star X67^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
interp star X68^8
"
"12------------]-]Success  
interp star star
"
"12____________[+[Begin 
tau singleton singleton X69^8
"
"12------------]-]Success  
tau singleton singleton x8 \ x8
"
"12____________[+[Begin 
X66^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
interp_isa star singleton star
"
"11___________[+[Begin 
interp_isa x0 singleton X70^8
"
"12____________[+[Begin 
of x0 X71^8 ext
"
"12------------]-]Success  
of x0 singleton ext
"
"12____________[+[Begin 
interp x0 X72^8
"
"12------------]-]Success  
interp x0 x1
"
"12____________[+[Begin 
tau singleton singleton X73^8
"
"12------------]-]Success  
tau singleton singleton x8 \ x8
"
"12____________[+[Begin 
X70^8 = x1
"
"12------------]-]Success  
x1 = x1
"
"11-----------]-]Success  
interp_isa x0 singleton x1
"
"11___________[+[Begin 
X64^6 x7 = propId singleton star x1
"
"11-----------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"10__________[+[Begin 
setoid_eq singleton X74^6
"
"10----------]-]Success  
setoid_eq singleton x6 \ x7 \ propId singleton x6 x7
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => setoid_eq (propEq singleton star x0) (X75^6 x7)
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 =>
     (setoid_eq (propEq singleton star x0) x8 \ x9 \
       propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              interp x8 x11 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X76^6 x9 x10 x11))
"
"11___________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0) (X76^6 x9 x10 x11)
"
"11-----------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x12 \ x12
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              interp x8 x11 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x12 \ x12)
"
"9---------]-]Success  
interp (setPi singleton x6 \ propEq singleton star x0)
 (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"9_________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    interp x6 x7 => interp singleton (X77^6 x7)
"
"9---------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    interp x6 x7 => interp singleton singleton
"
"9_________[+[Begin 
setoid_eq (setPi singleton x6 \ propEq singleton star x0) X78^6
"
"10__________[+[Begin 
interp singleton X79^6
"
"10----------]-]Success  
interp singleton singleton
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => interp (propEq singleton star x0) (X80^6 x7)
"
"11___________[+[Begin 
setoid_eq singleton X81^8
"
"11-----------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
interp_isa star singleton X82^8
"
"12____________[+[Begin 
of star X83^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
interp star X84^8
"
"12------------]-]Success  
interp star star
"
"12____________[+[Begin 
tau singleton singleton X85^8
"
"12------------]-]Success  
tau singleton singleton x8 \ x8
"
"12____________[+[Begin 
X82^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
interp_isa star singleton star
"
"11___________[+[Begin 
interp_isa x0 singleton X86^8
"
"12____________[+[Begin 
of x0 X87^8 ext
"
"12------------]-]Success  
of x0 singleton ext
"
"12____________[+[Begin 
interp x0 X88^8
"
"12------------]-]Success  
interp x0 x1
"
"12____________[+[Begin 
tau singleton singleton X89^8
"
"12------------]-]Success  
tau singleton singleton x8 \ x8
"
"12____________[+[Begin 
X86^8 = x1
"
"12------------]-]Success  
x1 = x1
"
"11-----------]-]Success  
interp_isa x0 singleton x1
"
"11___________[+[Begin 
X80^6 x7 = propId singleton star x1
"
"11-----------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 =>
     ((interp (propEq singleton star x0) (propId singleton star x1)),
     (setoid_eq (propEq singleton star x0) (X90^6 x7)))
"
"11___________[+[Begin 
setoid_eq singleton X91^8
"
"11-----------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
interp_isa star singleton X92^8
"
"12____________[+[Begin 
of star X93^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
interp star X94^8
"
"12------------]-]Success  
interp star star
"
"12____________[+[Begin 
tau singleton singleton X95^8
"
"12------------]-]Success  
tau singleton singleton x8 \ x8
"
"12____________[+[Begin 
X92^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
interp_isa star singleton star
"
"11___________[+[Begin 
interp_isa x0 singleton X96^8
"
"12____________[+[Begin 
of x0 X97^8 ext
"
"12------------]-]Success  
of x0 singleton ext
"
"12____________[+[Begin 
interp x0 X98^8
"
"12------------]-]Success  
interp x0 x1
"
"12____________[+[Begin 
tau singleton singleton X99^8
"
"12------------]-]Success  
tau singleton singleton x8 \ x8
"
"12____________[+[Begin 
X96^8 = x1
"
"12------------]-]Success  
x1 = x1
"
"11-----------]-]Success  
interp_isa x0 singleton x1
"
"11___________[+[Begin 
propId singleton star x1 = propId singleton star x1
"
"11-----------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 =>
     ((interp (propEq singleton star x0) (propId singleton star x1)),
     (setoid_eq (propEq singleton star x0) x8 \ x9 \
       propId singleton star star))
"
"9---------]-]Success  
setoid_eq (setPi singleton x6 \ propEq singleton star x0) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"9_________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    interp x6 x7 => setoid_eq singleton (X100^6 x7)
"
"9---------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    interp x6 x7 => (setoid_eq singleton x8 \ x9 \ propId singleton x8 x9)
"
"9_________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star x0) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star x0) =>
        locDecl x9
         (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star x0) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              interp x8 x11 =>
               spy (tau singleton singleton (X101^6 x9 x10 x11))
"
"10__________[+[Begin 
tau singleton singleton (X101^6 x9 x10 x11)
"
"10----------]-]Success  
tau singleton singleton x12 \ x12
"
"9---------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star x0) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star x0) =>
        locDecl x9
         (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star x0) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              => interp x8 x11 => spy (tau singleton singleton x12 \ x12)
"
"8--------]-]Success  
interp (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
"
"8________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6
   (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton) =>
   locDecl x7
    (setSigma
      (setPi
        (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10)) =>
    interp x6 x7 => interp singleton (X102^6 x7)
"
"8--------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6
   (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton) =>
   locDecl x7
    (setSigma
      (setPi
        (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10)) =>
    interp x6 x7 => interp singleton singleton
"
"8________[+[Begin 
setoid_eq
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
 X103^6
"
"9_________[+[Begin 
interp (setPi singleton x6 \ propEq singleton star x0) X104^6
"
"10__________[+[Begin 
interp singleton X105^6
"
"10----------]-]Success  
interp singleton singleton
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => interp (propEq singleton star x0) (X106^6 x7)
"
"11___________[+[Begin 
setoid_eq singleton X107^8
"
"11-----------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
interp_isa star singleton X108^8
"
"12____________[+[Begin 
of star X109^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
interp star X110^8
"
"12------------]-]Success  
interp star star
"
"12____________[+[Begin 
tau singleton singleton X111^8
"
"12------------]-]Success  
tau singleton singleton x8 \ x8
"
"12____________[+[Begin 
X108^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
interp_isa star singleton star
"
"11___________[+[Begin 
interp_isa x0 singleton X112^8
"
"12____________[+[Begin 
of x0 X113^8 ext
"
"12------------]-]Success  
of x0 singleton ext
"
"12____________[+[Begin 
interp x0 X114^8
"
"12------------]-]Success  
interp x0 x1
"
"12____________[+[Begin 
tau singleton singleton X115^8
"
"12------------]-]Success  
tau singleton singleton x8 \ x8
"
"12____________[+[Begin 
X112^8 = x1
"
"12------------]-]Success  
x1 = x1
"
"11-----------]-]Success  
interp_isa x0 singleton x1
"
"11___________[+[Begin 
X106^6 x7 = propId singleton star x1
"
"11-----------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"10__________[+[Begin 
setoid_eq singleton X116^6
"
"10----------]-]Success  
setoid_eq singleton x6 \ x7 \ propId singleton x6 x7
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 => setoid_eq (propEq singleton star x0) (X117^6 x7)
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    interp x6 x7 =>
     (setoid_eq (propEq singleton star x0) x8 \ x9 \
       propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              interp x8 x11 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X118^6 x9 x10 x11))
"
"11___________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0) (X118^6 x9 x10 x11)
"
"11-----------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x12 \ x12
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              interp x8 x11 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x12 \ x12)
"
"9---------]-]Success  
interp (setPi singleton x6 \ propEq singleton star x0)
 (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"9_________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    interp x6 x7 => interp singleton (X119^6 x7)
"
"9---------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    interp x6 x7 => interp singleton singleton
"
"9_________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    interp x6 x7 => ((interp singleton singleton),
     (setoid_eq singleton (X120^6 x7)))
"
"9---------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    interp x6 x7 => ((interp singleton singleton),
     (setoid_eq singleton x8 \ x9 \ propId singleton x8 x9))
"
"8--------]-]Success  
setoid_eq
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton) x6 \
 x7 \
 forall
  (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) x8 \
  propId singleton
   (app
     (elim_setSigma x6 (x9 \
       setPi
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \ singleton) x9 \ x10 \ x9) x8)
   (app
     (elim_setSigma x7 (x9 \
       setPi
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \ singleton) x9 \ x10 \ x9) x8)
"
"8________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6
   (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton) =>
   locDecl x7
    (setSigma
      (setPi
        (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10)) =>
    interp x6 x7 => setoid_eq singleton (X121^6 x7)
"
"8--------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6
   (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton) =>
   locDecl x7
    (setSigma
      (setPi
        (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10)) =>
    interp x6 x7 => (setoid_eq singleton x8 \ x9 \ propId singleton x8 x9)
"
"8________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6
       (setPi (setPi singleton x12 \ propEq singleton star x0) x12 \
         singleton) =>
       locDecl x7
        (setPi (setPi singleton x12 \ propEq singleton star x0) x12 \
          singleton) =>
        locDecl x9
         (setSigma
           (setPi
             (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star) x12 \ singleton) x12 \
           forall
            (setSigma (setPi singleton x13 \ propId singleton star x1) x13 \
              forall singleton x14 \
               forall singleton x15 \
                forall (propId singleton x14 x15) x16 \
                 propId singleton star star) x13 \
            forall
             (setSigma (setPi singleton x14 \ propId singleton star x1) x14 \
               forall singleton x15 \
                forall singleton x16 \
                 forall (propId singleton x15 x16) x17 \
                  propId singleton star star) x14 \
             forall (forall singleton x15 \ propId singleton star star) x15 \
              propId singleton (app x12 x13) (app x12 x14)) =>
         locDecl x10
          (setSigma
            (setPi
              (setSigma (setPi singleton x12 \ propId singleton star x1)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x12 \ singleton) x12 \
            forall
             (setSigma (setPi singleton x13 \ propId singleton star x1) x13 \
               forall singleton x14 \
                forall singleton x15 \
                 forall (propId singleton x14 x15) x16 \
                  propId singleton star star) x13 \
             forall
              (setSigma (setPi singleton x14 \ propId singleton star x1)
                x14 \
                forall singleton x15 \
                 forall singleton x16 \
                  forall (propId singleton x15 x16) x17 \
                   propId singleton star star) x14 \
              forall (forall singleton x15 \ propId singleton star star)
               x15 \ propId singleton (app x12 x13) (app x12 x14)) =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8
             (propEq
               (setPi (setPi singleton x12 \ propEq singleton star x0) x12 \
                 singleton) x6 x7) =>
             locDecl x11
              (forall
                (setSigma (setPi singleton x12 \ propId singleton star x1)
                  x12 \
                  forall singleton x13 \
                   forall singleton x14 \
                    forall (propId singleton x13 x14) x15 \
                     propId singleton star star) x12 \
                propId singleton
                 (app
                   (elim_setSigma x9 (x13 \
                     setPi
                      (setSigma
                        (setPi singleton x14 \ propId singleton star x1)
                        x14 \
                        forall singleton x15 \
                         forall singleton x16 \
                          forall (propId singleton x15 x16) x17 \
                           propId singleton star star) x14 \ singleton) x13 \
                     x14 \ x13) x12)
                 (app
                   (elim_setSigma x10 (x13 \
                     setPi
                      (setSigma
                        (setPi singleton x14 \ propId singleton star x1)
                        x14 \
                        forall singleton x15 \
                         forall singleton x16 \
                          forall (propId singleton x15 x16) x17 \
                           propId singleton star star) x14 \ singleton) x13 \
                     x14 \ x13) x12)) =>
              interp x8 x11 =>
               spy (tau singleton singleton (X122^6 x9 x10 x11))
"
"9_________[+[Begin 
tau singleton singleton (X122^6 x9 x10 x11)
"
"9---------]-]Success  
tau singleton singleton x12 \ x12
"
"8--------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6
       (setPi (setPi singleton x12 \ propEq singleton star x0) x12 \
         singleton) =>
       locDecl x7
        (setPi (setPi singleton x12 \ propEq singleton star x0) x12 \
          singleton) =>
        locDecl x9
         (setSigma
           (setPi
             (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star) x12 \ singleton) x12 \
           forall
            (setSigma (setPi singleton x13 \ propId singleton star x1) x13 \
              forall singleton x14 \
               forall singleton x15 \
                forall (propId singleton x14 x15) x16 \
                 propId singleton star star) x13 \
            forall
             (setSigma (setPi singleton x14 \ propId singleton star x1) x14 \
               forall singleton x15 \
                forall singleton x16 \
                 forall (propId singleton x15 x16) x17 \
                  propId singleton star star) x14 \
             forall (forall singleton x15 \ propId singleton star star) x15 \
              propId singleton (app x12 x13) (app x12 x14)) =>
         locDecl x10
          (setSigma
            (setPi
              (setSigma (setPi singleton x12 \ propId singleton star x1)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x12 \ singleton) x12 \
            forall
             (setSigma (setPi singleton x13 \ propId singleton star x1) x13 \
               forall singleton x14 \
                forall singleton x15 \
                 forall (propId singleton x14 x15) x16 \
                  propId singleton star star) x13 \
             forall
              (setSigma (setPi singleton x14 \ propId singleton star x1)
                x14 \
                forall singleton x15 \
                 forall singleton x16 \
                  forall (propId singleton x15 x16) x17 \
                   propId singleton star star) x14 \
              forall (forall singleton x15 \ propId singleton star star)
               x15 \ propId singleton (app x12 x13) (app x12 x14)) =>
          interp x6 x9 =>
           interp x7 x10 =>
            locDecl x8
             (propEq
               (setPi (setPi singleton x12 \ propEq singleton star x0) x12 \
                 singleton) x6 x7) =>
             locDecl x11
              (forall
                (setSigma (setPi singleton x12 \ propId singleton star x1)
                  x12 \
                  forall singleton x13 \
                   forall singleton x14 \
                    forall (propId singleton x13 x14) x15 \
                     propId singleton star star) x12 \
                propId singleton
                 (app
                   (elim_setSigma x9 (x13 \
                     setPi
                      (setSigma
                        (setPi singleton x14 \ propId singleton star x1)
                        x14 \
                        forall singleton x15 \
                         forall singleton x16 \
                          forall (propId singleton x15 x16) x17 \
                           propId singleton star star) x14 \ singleton) x13 \
                     x14 \ x13) x12)
                 (app
                   (elim_setSigma x10 (x13 \
                     setPi
                      (setSigma
                        (setPi singleton x14 \ propId singleton star x1)
                        x14 \
                        forall singleton x15 \
                         forall singleton x16 \
                          forall (propId singleton x15 x16) x17 \
                           propId singleton star star) x14 \ singleton) x13 \
                     x14 \ x13) x12)) =>
              interp x8 x11 => spy (tau singleton singleton x12 \ x12)
"
"7-------]-]Success  
interp
 (setPi
   (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
   x6 \ singleton)
 (setSigma
   (setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) x6 \
   forall
    (setSigma
      (setPi
        (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ singleton) x7 \
      forall
       (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall
        (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall (forall singleton x10 \ propId singleton star star) x10 \
         propId singleton (app x7 x8) (app x7 x9)) x7 \
    forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) x8 \
       forall
        (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall (forall singleton x11 \ propId singleton star star) x11 \
          propId singleton (app x8 x9) (app x8 x10)) x8 \
     forall
      (forall
        (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        propId singleton
         (app
           (elim_setSigma x7 (x10 \
             setPi
              (setSigma (setPi singleton x11 \ propId singleton star x1)
                x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star) x11 \ singleton) x10 \ x11 \
             x10) x9)
         (app
           (elim_setSigma x8 (x10 \
             setPi
              (setSigma (setPi singleton x11 \ propId singleton star x1)
                x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star) x11 \ singleton) x10 \ x11 \
             x10) x9)) x9 \ propId singleton (app x6 x7) (app x6 x8))
"
"7_______[+[Begin 
pi x6 \
 pi x7 \
  interp x6 x7 =>
   locDecl x6
    (setPi
      (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
      x8 \ singleton) =>
    locDecl x7
     (setSigma
       (setPi
         (setSigma
           (setPi
             (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \ singleton) x8 \
           forall
            (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            forall
             (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x10 \
             forall (forall singleton x11 \ propId singleton star star) x11 \
              propId singleton (app x8 x9) (app x8 x10)) x8 \ singleton) x8 \
       forall
        (setSigma
          (setPi
            (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \ singleton) x9 \
          forall
           (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x10 \
           forall
            (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x11 \
            forall (forall singleton x12 \ propId singleton star star) x12 \
             propId singleton (app x9 x10) (app x9 x11)) x9 \
        forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x10 \ singleton) x10 \
           forall
            (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x11 \
            forall
             (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star) x12 \
             forall (forall singleton x13 \ propId singleton star star) x13 \
              propId singleton (app x10 x11) (app x10 x12)) x10 \
         forall
          (forall
            (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x11 \
            propId singleton
             (app
               (elim_setSigma x9 (x12 \
                 setPi
                  (setSigma (setPi singleton x13 \ propId singleton star x1)
                    x13 \
                    forall singleton x14 \
                     forall singleton x15 \
                      forall (propId singleton x14 x15) x16 \
                       propId singleton star star) x13 \ singleton) x12 \
                 x13 \ x12) x11)
             (app
               (elim_setSigma x10 (x12 \
                 setPi
                  (setSigma (setPi singleton x13 \ propId singleton star x1)
                    x13 \
                    forall singleton x14 \
                     forall singleton x15 \
                      forall (propId singleton x14 x15) x16 \
                       propId singleton star star) x13 \ singleton) x12 \
                 x13 \ x12) x11)) x11 \
          propId singleton (app x8 x9) (app x8 x10)) =>
     spy
      (interp
        (propEq singleton
          (app x6
            (lambda (setPi singleton x8 \ propEq singleton star star) x8 \
              star)) star) (X123 x1 x3 x5 x7))
"
"8________[+[Begin 
interp
 (propEq singleton
   (app x6
     (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star))
   star) (X123 x1 x3 x5 x7)
"
"9_________[+[Begin 
setoid_eq singleton X124^8
"
"9---------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"9_________[+[Begin 
interp_isa
 (app x6 (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star))
 singleton X125^8
"
"10__________[+[Begin 
of
 (app x6 (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star))
 X126^8 ext
"
"11___________[+[Begin 
of x6 (setPi X127^8 X128^8) ext
"
"11-----------]-]Success  
of x6
 (setPi
   (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
   x8 \ singleton) ext
"
"11___________[+[Begin 
isa (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton) ext
"
"12____________[+[Begin 
of (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 X129^8 ext
"
"13_____________[+[Begin 
ofType (setPi singleton x8 \ propEq singleton star star) _ ext
"
"14______________[+[Begin 
of star X130^9 ext
"
"14--------------]-]Success  
of star singleton ext
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of star X131^9 ext
"
"14--------------]-]Success  
of star singleton ext
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
pts_fun set props X132^8
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
ofType (setPi singleton x8 \ propEq singleton star star) _ ext
"
"13_____________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propEq singleton star star) =>
  isa star (X133^8 x8) ext
"
"14______________[+[Begin 
of star X134^9 ext
"
"14--------------]-]Success  
of star singleton ext
"
"14______________[+[Begin 
conv singleton (X133^8 x8)
"
"14--------------]-]Success  
conv singleton singleton
"
"13-------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propEq singleton star star) =>
  isa star singleton ext
"
"12------------]-]Success  
of (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton) ext
"
"12____________[+[Begin 
conv (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
"
"13_____________[+[Begin 
hnf (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 X135^8
"
"13-------------]-]Success  
hnf (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
"
"13_____________[+[Begin 
hnf (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
 X136^8
"
"13-------------]-]Success  
hnf (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
"
"13_____________[+[Begin 
dconv
 (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
"
"14______________[+[Begin 
hnf (setPi singleton x8 \ propEq singleton star star) X137^8
"
"14--------------]-]Success  
hnf (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star)
"
"14______________[+[Begin 
hnf (setPi singleton x8 \ propEq singleton star x0) X138^8
"
"14--------------]-]Success  
hnf (setPi singleton x8 \ propEq singleton star x0)
 (setPi singleton x8 \ propEq singleton star x0)
"
"14______________[+[Begin 
dconv (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star x0)
"
"15_______________[+[Begin 
hnf (propEq singleton star star) X139^9
"
"15---------------]-]Success  
hnf (propEq singleton star star) (propEq singleton star star)
"
"15_______________[+[Begin 
hnf (propEq singleton star x0) X140^9
"
"15---------------]-]Success  
hnf (propEq singleton star x0) (propEq singleton star x0)
"
"15_______________[+[Begin 
dconv (propEq singleton star star) (propEq singleton star x0)
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
conv star star
"
"16----------------]-]Success  
conv star star
"
"16________________[+[Begin 
conv star x0
"
"16----------------]-]Success  
conv star x0
"
"15---------------]-]Success  
dconv (propEq singleton star star) (propEq singleton star x0)
"
"14--------------]-]Success  
dconv (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star x0)
"
"13-------------]-]Success  
dconv
 (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
"
"12------------]-]Success  
conv (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
"
"11-----------]-]Success  
isa (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton) ext
"
"10----------]-]Success  
of
 (app x6 (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star))
 singleton ext
"
"10__________[+[Begin 
interp
 (app x6 (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star))
 X141^8
"
"11___________[+[Begin 
of x6 (setPi X142^8 X143^8) ext
"
"11-----------]-]Success  
of x6
 (setPi
   (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
   x8 \ singleton) ext
"
"11___________[+[Begin 
interp_isa
 (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
 X144^8
"
"12____________[+[Begin 
of (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 X145^8 ext
"
"13_____________[+[Begin 
ofType (setPi singleton x8 \ propEq singleton star star) _ ext
"
"14______________[+[Begin 
of star X146^9 ext
"
"14--------------]-]Success  
of star singleton ext
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of star X147^9 ext
"
"14--------------]-]Success  
of star singleton ext
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
pts_fun set props X148^8
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
ofType (setPi singleton x8 \ propEq singleton star star) _ ext
"
"13_____________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propEq singleton star star) =>
  isa star (X149^8 x8) ext
"
"14______________[+[Begin 
of star X150^9 ext
"
"14--------------]-]Success  
of star singleton ext
"
"14______________[+[Begin 
conv singleton (X149^8 x8)
"
"14--------------]-]Success  
conv singleton singleton
"
"13-------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propEq singleton star star) =>
  isa star singleton ext
"
"12------------]-]Success  
of (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton) ext
"
"12____________[+[Begin 
interp (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 X151^8
"
"13_____________[+[Begin 
of (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 (setPi (setPi singleton x8 \ propEq singleton star star) X152^8) ext
"
"14______________[+[Begin 
ofType (setPi singleton x8 \ propEq singleton star star) _ ext
"
"15_______________[+[Begin 
of star X153^9 ext
"
"15---------------]-]Success  
of star singleton ext
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of star X154^9 ext
"
"15---------------]-]Success  
of star singleton ext
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
pts_fun set props X155^8
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
pts_fun set props set
"
"14--------------]-]Success  
ofType (setPi singleton x8 \ propEq singleton star star) _ ext
"
"14______________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propEq singleton star star) =>
  isa star (X152^8 x8) ext
"
"15_______________[+[Begin 
of star X156^9 ext
"
"15---------------]-]Success  
of star singleton ext
"
"15_______________[+[Begin 
conv singleton (X152^8 x8)
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propEq singleton star star) =>
  isa star singleton ext
"
"13-------------]-]Success  
of (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton) ext
"
"13_____________[+[Begin 
interp
 (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setSigma (setPi X157^8 X158^8) X159^8)
"
"14______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star) X160^8
"
"15_______________[+[Begin 
interp singleton X161^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X162^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X163^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X164^10
"
"17_________________[+[Begin 
of star X165^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X166^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X167^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X164^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X168^10
"
"17_________________[+[Begin 
of star X169^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X170^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X171^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X168^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
X162^8 x9 = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"15_______________[+[Begin 
setoid_eq singleton X172^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X173^8 x9)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X174^8 x11 x12 x13))
"
"16________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X174^8 x11 x12 x13)
"
"16----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"14--------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star star) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    => interp x8 x9 => interp singleton (X175^8 x9)
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star star) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    => interp x8 x9 => interp singleton singleton
"
"14______________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star star) X176^8
"
"15_______________[+[Begin 
interp singleton X177^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X178^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X179^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X180^10
"
"17_________________[+[Begin 
of star X181^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X182^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X183^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X180^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X184^10
"
"17_________________[+[Begin 
of star X185^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X186^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X187^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X184^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
X178^8 x9 = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) (X188^8 x9)))
"
"16________________[+[Begin 
setoid_eq singleton X189^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X190^10
"
"17_________________[+[Begin 
of star X191^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X192^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X193^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X190^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X194^10
"
"17_________________[+[Begin 
of star X195^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X196^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X197^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X194^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star))
"
"14--------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star star) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    => interp x8 x9 => setoid_eq singleton (X198^8 x9)
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star star) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    =>
    interp x8 x9 =>
     (setoid_eq singleton x10 \ x11 \ propId singleton x10 x11)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x9 (setPi singleton x14 \ propEq singleton star star) =>
        locDecl x11
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x12
          (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10
             (propEq (setPi singleton x14 \ propEq singleton star star) x8 x9)
             =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              =>
              interp x10 x13 =>
               spy (tau singleton singleton (X199^8 x11 x12 x13))
"
"15_______________[+[Begin 
tau singleton singleton (X199^8 x11 x12 x13)
"
"15---------------]-]Success  
tau singleton singleton x14 \ x14
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x9 (setPi singleton x14 \ propEq singleton star star) =>
        locDecl x11
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x12
          (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10
             (propEq (setPi singleton x14 \ propEq singleton star star) x8 x9)
             =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              => interp x10 x13 => spy (tau singleton singleton x14 \ x14)
"
"13-------------]-]Success  
interp
 (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) x8 \
   forall
    (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall
     (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall (forall singleton x11 \ propId singleton star star) x11 \
      propId singleton (app x8 x9) (app x8 x10))
"
"13_____________[+[Begin 
macro_interp (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 x10 \ x11 \ x12 \ x13 \ interp star (X200^8 x11)
"
"14______________[+[Begin 
macro_tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \ x10 \ x11 \
 x12 \ x13 \ interp star (X200^8 x11)
"
"15_______________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star star) X201^8
"
"16________________[+[Begin 
interp singleton X202^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X203^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X204^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X205^10
"
"18__________________[+[Begin 
of star X206^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X207^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X208^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X205^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X209^10
"
"18__________________[+[Begin 
of star X210^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X211^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X212^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X209^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X203^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) (X213^8 x9)))
"
"17_________________[+[Begin 
setoid_eq singleton X214^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X215^10
"
"18__________________[+[Begin 
of star X216^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X217^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X218^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X215^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X219^10
"
"18__________________[+[Begin 
of star X220^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X221^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X222^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X219^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
propId singleton star star = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star))
"
"15---------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"15_______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star) X223^8
"
"16________________[+[Begin 
interp singleton X224^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X225^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X226^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X227^10
"
"18__________________[+[Begin 
of star X228^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X229^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X230^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X227^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X231^10
"
"18__________________[+[Begin 
of star X232^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X233^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X234^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X231^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X225^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
setoid_eq singleton X235^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X236^8 x9)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X237^8 x11 x12 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X237^8 x11 x12 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"15---------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"15_______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star) X238^8
"
"16________________[+[Begin 
interp singleton X239^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X240^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X241^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X242^10
"
"18__________________[+[Begin 
of star X243^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X244^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X245^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X242^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X246^10
"
"18__________________[+[Begin 
of star X247^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X248^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X249^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X246^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X240^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
setoid_eq singleton X250^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X251^8 x9)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X252^8 x11 x12 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X252^8 x11 x12 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"15---------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"15_______________[+[Begin 
tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) X253^8
"
"15---------------]-]Success  
tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) x8 \ x8
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x10 (setPi singleton x14 \ propEq singleton star star) =>
        locDecl x9
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x11
          (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12
             (propEq (setPi singleton x14 \ propEq singleton star star) x8
               x10) =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              => interp x12 x13 => spy (interp star (X200^8 x9))
"
"16________________[+[Begin 
interp star (X200^8 x9)
"
"16----------------]-]Success  
interp star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x10 (setPi singleton x14 \ propEq singleton star star) =>
        locDecl x9
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x11
          (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12
             (propEq (setPi singleton x14 \ propEq singleton star star) x8
               x10) =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              => interp x12 x13 => spy (interp star star)
"
"14--------------]-]Success  
macro_tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \ x10 \ x11 \
 x12 \ x13 \ interp star star
"
"13-------------]-]Success  
macro_interp (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 x10 \ x11 \ x12 \ x13 \ interp star star
"
"13_____________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star star) X254^8
"
"14______________[+[Begin 
interp singleton X255^8
"
"14--------------]-]Success  
interp singleton singleton
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X256^8 x9)
"
"15_______________[+[Begin 
setoid_eq singleton X257^10
"
"15---------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"15_______________[+[Begin 
interp_isa star singleton X258^10
"
"16________________[+[Begin 
of star X259^10 ext
"
"16----------------]-]Success  
of star singleton ext
"
"16________________[+[Begin 
interp star X260^10
"
"16----------------]-]Success  
interp star star
"
"16________________[+[Begin 
tau singleton singleton X261^10
"
"16----------------]-]Success  
tau singleton singleton x10 \ x10
"
"16________________[+[Begin 
X258^10 = star
"
"16----------------]-]Success  
star = star
"
"15---------------]-]Success  
interp_isa star singleton star
"
"15_______________[+[Begin 
interp_isa star singleton X262^10
"
"16________________[+[Begin 
of star X263^10 ext
"
"16----------------]-]Success  
of star singleton ext
"
"16________________[+[Begin 
interp star X264^10
"
"16----------------]-]Success  
interp star star
"
"16________________[+[Begin 
tau singleton singleton X265^10
"
"16----------------]-]Success  
tau singleton singleton x10 \ x10
"
"16________________[+[Begin 
X262^10 = star
"
"16----------------]-]Success  
star = star
"
"15---------------]-]Success  
interp_isa star singleton star
"
"15_______________[+[Begin 
X256^8 x9 = propId singleton star star
"
"15---------------]-]Success  
propId singleton star star = propId singleton star star
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) (X266^8 x9)))
"
"15_______________[+[Begin 
setoid_eq singleton X267^10
"
"15---------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"15_______________[+[Begin 
interp_isa star singleton X268^10
"
"16________________[+[Begin 
of star X269^10 ext
"
"16----------------]-]Success  
of star singleton ext
"
"16________________[+[Begin 
interp star X270^10
"
"16----------------]-]Success  
interp star star
"
"16________________[+[Begin 
tau singleton singleton X271^10
"
"16----------------]-]Success  
tau singleton singleton x10 \ x10
"
"16________________[+[Begin 
X268^10 = star
"
"16----------------]-]Success  
star = star
"
"15---------------]-]Success  
interp_isa star singleton star
"
"15_______________[+[Begin 
interp_isa star singleton X272^10
"
"16________________[+[Begin 
of star X273^10 ext
"
"16----------------]-]Success  
of star singleton ext
"
"16________________[+[Begin 
interp star X274^10
"
"16----------------]-]Success  
interp star star
"
"16________________[+[Begin 
tau singleton singleton X275^10
"
"16----------------]-]Success  
tau singleton singleton x10 \ x10
"
"16________________[+[Begin 
X272^10 = star
"
"16----------------]-]Success  
star = star
"
"15---------------]-]Success  
interp_isa star singleton star
"
"15_______________[+[Begin 
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
propId singleton star star = propId singleton star star
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star))
"
"13-------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"13_____________[+[Begin 
macro_interp (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 x10 \ x11 \ x12 \ x13 \
 tau_proof_eq star star singleton (X276^8 x11 x12 x13)
"
"14______________[+[Begin 
macro_tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \ x10 \ x11 \
 x12 \ x13 \ tau_proof_eq star star singleton (X276^8 x11 x12 x13)
"
"15_______________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star star) X277^8
"
"16________________[+[Begin 
interp singleton X278^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X279^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X280^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X281^10
"
"18__________________[+[Begin 
of star X282^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X283^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X284^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X281^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X285^10
"
"18__________________[+[Begin 
of star X286^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X287^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X288^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X285^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X279^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) (X289^8 x9)))
"
"17_________________[+[Begin 
setoid_eq singleton X290^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X291^10
"
"18__________________[+[Begin 
of star X292^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X293^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X294^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X291^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X295^10
"
"18__________________[+[Begin 
of star X296^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X297^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X298^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X295^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
propId singleton star star = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star))
"
"15---------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"15_______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star) X299^8
"
"16________________[+[Begin 
interp singleton X300^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X301^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X302^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X303^10
"
"18__________________[+[Begin 
of star X304^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X305^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X306^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X303^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X307^10
"
"18__________________[+[Begin 
of star X308^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X309^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X310^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X307^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X301^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
setoid_eq singleton X311^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X312^8 x9)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X313^8 x11 x12 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X313^8 x11 x12 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"15---------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"15_______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star) X314^8
"
"16________________[+[Begin 
interp singleton X315^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X316^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X317^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X318^10
"
"18__________________[+[Begin 
of star X319^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X320^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X321^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X318^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X322^10
"
"18__________________[+[Begin 
of star X323^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X324^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X325^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X322^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X316^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
setoid_eq singleton X326^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X327^8 x9)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X328^8 x11 x12 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X328^8 x11 x12 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"15---------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"15_______________[+[Begin 
tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) X329^8
"
"15---------------]-]Success  
tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) x8 \ x8
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x10 (setPi singleton x14 \ propEq singleton star star) =>
        locDecl x9
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x11
          (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12
             (propEq (setPi singleton x14 \ propEq singleton star star) x8
               x10) =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              =>
              interp x12 x13 =>
               spy (tau_proof_eq star star singleton (X276^8 x9 x11 x13))
"
"16________________[+[Begin 
tau_proof_eq star star singleton (X276^8 x9 x11 x13)
"
"17_________________[+[Begin 
interp_isa star singleton X330^14
"
"18__________________[+[Begin 
of star X331^14 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X332^14
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X333^14
"
"18------------------]-]Success  
tau singleton singleton x14 \ x14
"
"18__________________[+[Begin 
X330^14 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
setoid_refl singleton X334^14
"
"18__________________[+[Begin 
setoid_eq singleton X335^14
"
"18------------------]-]Success  
setoid_eq singleton x14 \ x15 \ propId singleton x14 x15
"
"17-----------------]-]Success  
setoid_refl singleton x14 \
 fixMe "prova di riflessivita'" (propId singleton x14 x14)
"
"17_________________[+[Begin 
X276^8 x9 x11 x13 =
 fixMe "prova di riflessivita'" (propId singleton star star)
"
"17-----------------]-]Success  
fixMe "prova di riflessivita'" (propId singleton star star) =
 fixMe "prova di riflessivita'" (propId singleton star star)
"
"16----------------]-]Success  
tau_proof_eq star star singleton
 (fixMe "prova di riflessivita'" (propId singleton star star))
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x10 (setPi singleton x14 \ propEq singleton star star) =>
        locDecl x9
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x11
          (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12
             (propEq (setPi singleton x14 \ propEq singleton star star) x8
               x10) =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              =>
              interp x12 x13 =>
               spy
                (tau_proof_eq star star singleton
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star)))
"
"14--------------]-]Success  
macro_tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \ x10 \ x11 \
 x12 \ x13 \
 tau_proof_eq star star singleton
  (fixMe "prova di riflessivita'" (propId singleton star star))
"
"13-------------]-]Success  
macro_interp (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 x10 \ x11 \ x12 \ x13 \
 tau_proof_eq star star singleton
  (fixMe "prova di riflessivita'" (propId singleton star star))
"
"13_____________[+[Begin 
X151^8 =
 pair
  (setPi
    (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \ singleton) (x8 \
  forall
   (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   forall
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    x10 \
    forall (forall singleton x11 \ propId singleton star star) x11 \
     propId singleton (app x8 x9) (app x8 x10))
  (lambda
    (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \ star)
  (forall_lam
    (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall_lam
     (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall_lam (forall singleton x10 \ propId singleton star star) x10 \
      fixMe "prova di riflessivita'" (propId singleton star star))
"
"13-------------]-]Success  
pair
 (setPi
   (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) (x8 \
 forall
  (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
  x9 \
  forall
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x10 \
   forall (forall singleton x11 \ propId singleton star star) x11 \
    propId singleton (app x8 x9) (app x8 x10))
 (lambda
   (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ star)
 (forall_lam
   (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   forall_lam
    (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall_lam (forall singleton x10 \ propId singleton star star) x10 \
     fixMe "prova di riflessivita'" (propId singleton star star)) =
 pair
  (setPi
    (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \ singleton) (x8 \
  forall
   (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   forall
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    x10 \
    forall (forall singleton x11 \ propId singleton star star) x11 \
     propId singleton (app x8 x9) (app x8 x10))
  (lambda
    (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \ star)
  (forall_lam
    (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall_lam
     (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall_lam (forall singleton x10 \ propId singleton star star) x10 \
      fixMe "prova di riflessivita'" (propId singleton star star))
"
"12------------]-]Success  
interp (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 (pair
   (setPi
     (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) (x8 \
   forall
    (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall
     (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall (forall singleton x11 \ propId singleton star star) x11 \
      propId singleton (app x8 x9) (app x8 x10))
   (lambda
     (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ star)
   (forall_lam
     (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall_lam
      (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall_lam (forall singleton x10 \ propId singleton star star) x10 \
       fixMe "prova di riflessivita'" (propId singleton star star)))
"
"12____________[+[Begin 
tau (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
 X336^8
"
"13_____________[+[Begin 
interp
 (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setSigma X337^8 X338^8)
"
"14______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star) X339^8
"
"15_______________[+[Begin 
interp singleton X340^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X341^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X342^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X343^10
"
"17_________________[+[Begin 
of star X344^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X345^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X346^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X343^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X347^10
"
"17_________________[+[Begin 
of star X348^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X349^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X350^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X347^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
X341^8 x9 = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"15_______________[+[Begin 
setoid_eq singleton X351^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X352^8 x9)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X353^8 x11 x12 x13))
"
"16________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X353^8 x11 x12 x13)
"
"16----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"14--------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star star) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    => interp x8 x9 => interp singleton (X354^8 x9)
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star star) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    => interp x8 x9 => interp singleton singleton
"
"14______________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star star) X355^8
"
"15_______________[+[Begin 
interp singleton X356^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X357^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X358^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X359^10
"
"17_________________[+[Begin 
of star X360^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X361^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X362^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X359^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X363^10
"
"17_________________[+[Begin 
of star X364^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X365^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X366^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X363^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
X357^8 x9 = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) (X367^8 x9)))
"
"16________________[+[Begin 
setoid_eq singleton X368^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X369^10
"
"17_________________[+[Begin 
of star X370^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X371^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X372^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X369^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X373^10
"
"17_________________[+[Begin 
of star X374^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X375^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X376^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X373^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star))
"
"14--------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star star) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    => interp x8 x9 => setoid_eq singleton (X377^8 x9)
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star star) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    =>
    interp x8 x9 =>
     (setoid_eq singleton x10 \ x11 \ propId singleton x10 x11)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x9 (setPi singleton x14 \ propEq singleton star star) =>
        locDecl x11
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x12
          (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10
             (propEq (setPi singleton x14 \ propEq singleton star star) x8 x9)
             =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              =>
              interp x10 x13 =>
               spy (tau singleton singleton (X378^8 x11 x12 x13))
"
"15_______________[+[Begin 
tau singleton singleton (X378^8 x11 x12 x13)
"
"15---------------]-]Success  
tau singleton singleton x14 \ x14
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x9 (setPi singleton x14 \ propEq singleton star star) =>
        locDecl x11
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x12
          (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10
             (propEq (setPi singleton x14 \ propEq singleton star star) x8 x9)
             =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              => interp x10 x13 => spy (tau singleton singleton x14 \ x14)
"
"13-------------]-]Success  
interp
 (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) x8 \
   forall
    (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall
     (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall (forall singleton x11 \ propId singleton star star) x11 \
      propId singleton (app x8 x9) (app x8 x10))
"
"13_____________[+[Begin 
(setPi
  (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) x8 \
  singleton) = setPi X379^8 X380^8
"
"13-------------]-]Success  
(setPi
  (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) x8 \
  singleton) =
 (setPi
   (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton)
"
"13_____________[+[Begin 
interp (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
 (setSigma X381^8 X382^8)
"
"14______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star x0) X383^8
"
"15_______________[+[Begin 
interp singleton X384^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star x0) (X385^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X386^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X387^10
"
"17_________________[+[Begin 
of star X388^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X389^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X390^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X387^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa x0 singleton X391^10
"
"17_________________[+[Begin 
of x0 X392^10 ext
"
"17-----------------]-]Success  
of x0 singleton ext
"
"17_________________[+[Begin 
interp x0 X393^10
"
"17-----------------]-]Success  
interp x0 x1
"
"17_________________[+[Begin 
tau singleton singleton X394^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X391^10 = x1
"
"17-----------------]-]Success  
x1 = x1
"
"16----------------]-]Success  
interp_isa x0 singleton x1
"
"16________________[+[Begin 
X385^8 x9 = propId singleton star x1
"
"16----------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"15_______________[+[Begin 
setoid_eq singleton X395^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star x0) (X396^8 x9)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star x0) x10 \ x11 \
       propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X397^8 x11 x12 x13))
"
"16________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0)
 (X397^8 x11 x12 x13)
"
"16----------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x14 \ x14)
"
"14--------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star x0)
 (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star x0) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    => interp x8 x9 => interp singleton (X398^8 x9)
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star x0) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    => interp x8 x9 => interp singleton singleton
"
"14______________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star x0) X399^8
"
"15_______________[+[Begin 
interp singleton X400^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star x0) (X401^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X402^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X403^10
"
"17_________________[+[Begin 
of star X404^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X405^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X406^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X403^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa x0 singleton X407^10
"
"17_________________[+[Begin 
of x0 X408^10 ext
"
"17-----------------]-]Success  
of x0 singleton ext
"
"17_________________[+[Begin 
interp x0 X409^10
"
"17-----------------]-]Success  
interp x0 x1
"
"17_________________[+[Begin 
tau singleton singleton X410^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X407^10 = x1
"
"17-----------------]-]Success  
x1 = x1
"
"16----------------]-]Success  
interp_isa x0 singleton x1
"
"16________________[+[Begin 
X401^8 x9 = propId singleton star x1
"
"16----------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star x0) (propId singleton star x1)),
     (setoid_eq (propEq singleton star x0) (X411^8 x9)))
"
"16________________[+[Begin 
setoid_eq singleton X412^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X413^10
"
"17_________________[+[Begin 
of star X414^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X415^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X416^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X413^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa x0 singleton X417^10
"
"17_________________[+[Begin 
of x0 X418^10 ext
"
"17-----------------]-]Success  
of x0 singleton ext
"
"17_________________[+[Begin 
interp x0 X419^10
"
"17-----------------]-]Success  
interp x0 x1
"
"17_________________[+[Begin 
tau singleton singleton X420^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X417^10 = x1
"
"17-----------------]-]Success  
x1 = x1
"
"16----------------]-]Success  
interp_isa x0 singleton x1
"
"16________________[+[Begin 
propId singleton star x1 = propId singleton star x1
"
"16----------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star x0) (propId singleton star x1)),
     (setoid_eq (propEq singleton star x0) x10 \ x11 \
       propId singleton star star))
"
"14--------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star x0) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star x0) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    => interp x8 x9 => setoid_eq singleton (X421^8 x9)
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propEq singleton star x0) =>
   locDecl x9
    (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    =>
    interp x8 x9 =>
     (setoid_eq singleton x10 \ x11 \ propId singleton x10 x11)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star x0) =>
       locDecl x9 (setPi singleton x14 \ propEq singleton star x0) =>
        locDecl x11
         (setSigma (setPi singleton x14 \ propId singleton star x1) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x12
          (setSigma (setPi singleton x14 \ propId singleton star x1) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10
             (propEq (setPi singleton x14 \ propEq singleton star x0) x8 x9)
             =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              =>
              interp x10 x13 =>
               spy (tau singleton singleton (X422^8 x11 x12 x13))
"
"15_______________[+[Begin 
tau singleton singleton (X422^8 x11 x12 x13)
"
"15---------------]-]Success  
tau singleton singleton x14 \ x14
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star x0) =>
       locDecl x9 (setPi singleton x14 \ propEq singleton star x0) =>
        locDecl x11
         (setSigma (setPi singleton x14 \ propId singleton star x1) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x12
          (setSigma (setPi singleton x14 \ propId singleton star x1) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10
             (propEq (setPi singleton x14 \ propEq singleton star x0) x8 x9)
             =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              => interp x10 x13 => spy (tau singleton singleton x14 \ x14)
"
"13-------------]-]Success  
interp (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
 (setSigma
   (setPi
     (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) x8 \
   forall
    (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall
     (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall (forall singleton x11 \ propId singleton star star) x11 \
      propId singleton (app x8 x9) (app x8 x10))
"
"13_____________[+[Begin 
(setPi
  (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) x8 \
  singleton) = setPi X423^8 X424^8
"
"13-------------]-]Success  
(setPi
  (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) x8 \
  singleton) =
 (setPi
   (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton)
"
"13_____________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star x0) X425^8
"
"14______________[+[Begin 
interp singleton X426^8
"
"14--------------]-]Success  
interp singleton singleton
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star x0) (X427^8 x9)
"
"15_______________[+[Begin 
setoid_eq singleton X428^10
"
"15---------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"15_______________[+[Begin 
interp_isa star singleton X429^10
"
"16________________[+[Begin 
of star X430^10 ext
"
"16----------------]-]Success  
of star singleton ext
"
"16________________[+[Begin 
interp star X431^10
"
"16----------------]-]Success  
interp star star
"
"16________________[+[Begin 
tau singleton singleton X432^10
"
"16----------------]-]Success  
tau singleton singleton x10 \ x10
"
"16________________[+[Begin 
X429^10 = star
"
"16----------------]-]Success  
star = star
"
"15---------------]-]Success  
interp_isa star singleton star
"
"15_______________[+[Begin 
interp_isa x0 singleton X433^10
"
"16________________[+[Begin 
of x0 X434^10 ext
"
"16----------------]-]Success  
of x0 singleton ext
"
"16________________[+[Begin 
interp x0 X435^10
"
"16----------------]-]Success  
interp x0 x1
"
"16________________[+[Begin 
tau singleton singleton X436^10
"
"16----------------]-]Success  
tau singleton singleton x10 \ x10
"
"16________________[+[Begin 
X433^10 = x1
"
"16----------------]-]Success  
x1 = x1
"
"15---------------]-]Success  
interp_isa x0 singleton x1
"
"15_______________[+[Begin 
X427^8 x9 = propId singleton star x1
"
"15---------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star x0) (propId singleton star x1)),
     (setoid_eq (propEq singleton star x0) (X437^8 x9)))
"
"15_______________[+[Begin 
setoid_eq singleton X438^10
"
"15---------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"15_______________[+[Begin 
interp_isa star singleton X439^10
"
"16________________[+[Begin 
of star X440^10 ext
"
"16----------------]-]Success  
of star singleton ext
"
"16________________[+[Begin 
interp star X441^10
"
"16----------------]-]Success  
interp star star
"
"16________________[+[Begin 
tau singleton singleton X442^10
"
"16----------------]-]Success  
tau singleton singleton x10 \ x10
"
"16________________[+[Begin 
X439^10 = star
"
"16----------------]-]Success  
star = star
"
"15---------------]-]Success  
interp_isa star singleton star
"
"15_______________[+[Begin 
interp_isa x0 singleton X443^10
"
"16________________[+[Begin 
of x0 X444^10 ext
"
"16----------------]-]Success  
of x0 singleton ext
"
"16________________[+[Begin 
interp x0 X445^10
"
"16----------------]-]Success  
interp x0 x1
"
"16________________[+[Begin 
tau singleton singleton X446^10
"
"16----------------]-]Success  
tau singleton singleton x10 \ x10
"
"16________________[+[Begin 
X443^10 = x1
"
"16----------------]-]Success  
x1 = x1
"
"15---------------]-]Success  
interp_isa x0 singleton x1
"
"15_______________[+[Begin 
propId singleton star x1 = propId singleton star x1
"
"15---------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star x0) (propId singleton star x1)),
     (setoid_eq (propEq singleton star x0) x10 \ x11 \
       propId singleton star star))
"
"13-------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star x0) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"13_____________[+[Begin 
tau (setPi singleton x8 \ propEq singleton star x0)
 (setPi singleton x8 \ propEq singleton star star) X447^8
"
"14______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star x0)
 (setSigma X448^8 X449^8)
"
"15_______________[+[Begin 
interp singleton X450^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star x0) (X451^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X452^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X453^10
"
"17_________________[+[Begin 
of star X454^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X455^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X456^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X453^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa x0 singleton X457^10
"
"17_________________[+[Begin 
of x0 X458^10 ext
"
"17-----------------]-]Success  
of x0 singleton ext
"
"17_________________[+[Begin 
interp x0 X459^10
"
"17-----------------]-]Success  
interp x0 x1
"
"17_________________[+[Begin 
tau singleton singleton X460^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X457^10 = x1
"
"17-----------------]-]Success  
x1 = x1
"
"16----------------]-]Success  
interp_isa x0 singleton x1
"
"16________________[+[Begin 
X451^8 x9 = propId singleton star x1
"
"16----------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"15_______________[+[Begin 
setoid_eq singleton X461^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star x0) (X462^8 x9)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star x0) x10 \ x11 \
       propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X463^8 x11 x12 x13))
"
"16________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0)
 (X463^8 x11 x12 x13)
"
"16----------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x14 \ x14)
"
"14--------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star x0)
 (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"14______________[+[Begin 
(setPi singleton x8 \ propId singleton star x1) = setPi X464^8 X465^8
"
"14--------------]-]Success  
(setPi singleton x8 \ propId singleton star x1) =
 (setPi singleton x8 \ propId singleton star x1)
"
"14______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma X466^8 X467^8)
"
"15_______________[+[Begin 
interp singleton X468^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X469^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X470^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X471^10
"
"17_________________[+[Begin 
of star X472^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X473^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X474^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X471^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X475^10
"
"17_________________[+[Begin 
of star X476^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X477^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X478^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X475^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
X469^8 x9 = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"15_______________[+[Begin 
setoid_eq singleton X479^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X480^8 x9)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X481^8 x11 x12 x13))
"
"16________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X481^8 x11 x12 x13)
"
"16----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"14--------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"14______________[+[Begin 
(setPi singleton x8 \ propId singleton star star) = setPi X482^8 X483^8
"
"14--------------]-]Success  
(setPi singleton x8 \ propId singleton star star) =
 (setPi singleton x8 \ propId singleton star star)
"
"14______________[+[Begin 
setoid_eq singleton X484^8
"
"14--------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"14______________[+[Begin 
tau singleton singleton X485^8
"
"14--------------]-]Success  
tau singleton singleton x8 \ x8
"
"14______________[+[Begin 
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star star)
  (X486^8 x11 x12 x13)
"
"15_______________[+[Begin 
setoid_eq singleton X487^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
interp singleton X488^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
interp singleton X489^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
tau singleton singleton X490^8
"
"15---------------]-]Success  
tau singleton singleton x8 \ x8
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star star)
                  (X486^8 x9 x11 x13))
"
"16________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star star)
 (X486^8 x9 x11 x13)
"
"17_________________[+[Begin 
tau_proof_eq star star singleton X491^14
"
"18__________________[+[Begin 
interp_isa star singleton X492^14
"
"19___________________[+[Begin 
of star X493^14 ext
"
"19-------------------]-]Success  
of star singleton ext
"
"19___________________[+[Begin 
interp star X494^14
"
"19-------------------]-]Success  
interp star star
"
"19___________________[+[Begin 
tau singleton singleton X495^14
"
"19-------------------]-]Success  
tau singleton singleton x14 \ x14
"
"19___________________[+[Begin 
X492^14 = star
"
"19-------------------]-]Success  
star = star
"
"18------------------]-]Success  
interp_isa star singleton star
"
"18__________________[+[Begin 
setoid_refl singleton X496^14
"
"19___________________[+[Begin 
setoid_eq singleton X497^14
"
"19-------------------]-]Success  
setoid_eq singleton x14 \ x15 \ propId singleton x14 x15
"
"18------------------]-]Success  
setoid_refl singleton x14 \
 fixMe "prova di riflessivita'" (propId singleton x14 x14)
"
"18__________________[+[Begin 
X491^14 = fixMe "prova di riflessivita'" (propId singleton star star)
"
"18------------------]-]Success  
fixMe "prova di riflessivita'" (propId singleton star star) =
 fixMe "prova di riflessivita'" (propId singleton star star)
"
"17-----------------]-]Success  
tau_proof_eq star star singleton
 (fixMe "prova di riflessivita'" (propId singleton star star))
"
"17_________________[+[Begin 
tau_proof_eq x0 star singleton X498^14
"
"18__________________[+[Begin 
locDecl X499^14 (propEq X500^14 x0 star)
"
"18------------------]-]Success  
locDecl x2 (propEq singleton x0 star)
"
"18__________________[+[Begin 
interp_isa x2 (propEq singleton x0 star) X498^14
"
"19___________________[+[Begin 
of x2 X501^14 ext
"
"19-------------------]-]Success  
of x2 (propEq singleton x0 star) ext
"
"19___________________[+[Begin 
interp x2 X502^14
"
"19-------------------]-]Success  
interp x2 x3
"
"19___________________[+[Begin 
tau (propEq singleton x0 star) (propEq singleton x0 star) X503^14
"
"19-------------------]-]Success  
tau (propEq singleton x0 star) (propEq singleton x0 star) x14 \ x14
"
"19___________________[+[Begin 
X498^14 = x3
"
"19-------------------]-]Success  
x3 = x3
"
"18------------------]-]Success  
interp_isa x2 (propEq singleton x0 star) x3
"
"17-----------------]-]Success  
tau_proof_eq x0 star singleton x3
"
"17_________________[+[Begin 
interp_isa star singleton X504^14
"
"18__________________[+[Begin 
of star X505^14 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X506^14
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X507^14
"
"18------------------]-]Success  
tau singleton singleton x14 \ x14
"
"18__________________[+[Begin 
X504^14 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa x0 singleton X508^14
"
"18__________________[+[Begin 
of x0 X509^14 ext
"
"18------------------]-]Success  
of x0 singleton ext
"
"18__________________[+[Begin 
interp x0 X510^14
"
"18------------------]-]Success  
interp x0 x1
"
"18__________________[+[Begin 
tau singleton singleton X511^14
"
"18------------------]-]Success  
tau singleton singleton x14 \ x14
"
"18__________________[+[Begin 
X508^14 = x1
"
"18------------------]-]Success  
x1 = x1
"
"17-----------------]-]Success  
interp_isa x0 singleton x1
"
"17_________________[+[Begin 
interp_isa star singleton X512^14
"
"18__________________[+[Begin 
of star X513^14 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X514^14
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X515^14
"
"18------------------]-]Success  
tau singleton singleton x14 \ x14
"
"18__________________[+[Begin 
X512^14 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X516^14
"
"18__________________[+[Begin 
of star X517^14 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X518^14
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X519^14
"
"18------------------]-]Success  
tau singleton singleton x14 \ x14
"
"18__________________[+[Begin 
X516^14 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp singleton X520^14
"
"17-----------------]-]Success  
interp singleton singleton
"
"17_________________[+[Begin 
X486^8 x9 x11 x13 = (x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14)
"
"17-----------------]-]Success  
(x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14) = (x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14)
"
"16----------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star star) x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star star)
                  x14 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x1) star) x3) x14)
"
"14--------------]-]Success  
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star star) x14 \
  impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
       star) x3) x14
"
"14______________[+[Begin 
macro_interp singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0)
  (X521^8 x11 x12 x13)
"
"15_______________[+[Begin 
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0)
  (X521^8 x11 x12 x13)
"
"16________________[+[Begin 
setoid_eq singleton X522^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
interp singleton X523^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
interp singleton X524^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
tau singleton singleton X525^8
"
"16----------------]-]Success  
tau singleton singleton x8 \ x8
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X521^8 x9 x11 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0) (X521^8 x9 x11 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x14 \ x14)
"
"15---------------]-]Success  
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"14--------------]-]Success  
macro_interp singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"14______________[+[Begin 
tau_trasp singleton singleton X526^8
"
"14--------------]-]Success  
tau_trasp singleton singleton x8 \ x9 \ x10 \ x10
"
"14______________[+[Begin 
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau_trasp (propEq singleton star x0) (propEq singleton star star)
  (X527^8 x11 x12 x13)
"
"15_______________[+[Begin 
setoid_eq singleton X528^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
interp singleton X529^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
interp singleton X530^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
tau singleton singleton X531^8
"
"15---------------]-]Success  
tau singleton singleton x8 \ x8
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau_trasp (propEq singleton star x0)
                  (propEq singleton star star) (X527^8 x9 x11 x13))
"
"16________________[+[Begin 
tau_trasp (propEq singleton star x0) (propEq singleton star star)
 (X527^8 x9 x11 x13)
"
"16----------------]-]Success  
tau_trasp (propEq singleton star x0) (propEq singleton star star) x14 \ x15 \
 x16 \ x16
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau_trasp (propEq singleton star x0)
                  (propEq singleton star star) x14 \ x15 \ x16 \ x16)
"
"14--------------]-]Success  
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau_trasp (propEq singleton star x0) (propEq singleton star star) x14 \
  x15 \ x16 \ x16
"
"14______________[+[Begin 
setoid_refl singleton X532^8
"
"15_______________[+[Begin 
setoid_eq singleton X533^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"14--------------]-]Success  
setoid_refl singleton x8 \
 fixMe "prova di riflessivita'" (propId singleton x8 x8)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   locDecl x8 singleton =>
    locDecl x9 singleton =>
     locDecl x10 (X534^8 x8 x9) =>
      tau_trasp singleton singleton (X535^8 x8 x9 x10)
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   locDecl x8 singleton =>
    locDecl x9 singleton =>
     locDecl x10 (X534^8 x8 x9) =>
      (tau_trasp singleton singleton x11 \ x12 \ x13 \ x13)
"
"13-------------]-]Success  
tau (setPi singleton x8 \ propEq singleton star x0)
 (setPi singleton x8 \ propEq singleton star star) x8 \
 elim_setSigma x8 (x9 \
  setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) x9 \
  x10 \
  pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x1) star) x3) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)
"
"13_____________[+[Begin 
macro_tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star x0) x8 \ x9 \ x10 \ x11 \ x12 \
 x13 \ tau singleton singleton (X536^8 x11 x12 x13)
"
"14______________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star star) X537^8
"
"15_______________[+[Begin 
interp singleton X538^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X539^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X540^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X541^10
"
"17_________________[+[Begin 
of star X542^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X543^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X544^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X541^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X545^10
"
"17_________________[+[Begin 
of star X546^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X547^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X548^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X545^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
X539^8 x9 = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) (X549^8 x9)))
"
"16________________[+[Begin 
setoid_eq singleton X550^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X551^10
"
"17_________________[+[Begin 
of star X552^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X553^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X554^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X551^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X555^10
"
"17_________________[+[Begin 
of star X556^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X557^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X558^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X555^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star))
"
"14--------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"14______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star) X559^8
"
"15_______________[+[Begin 
interp singleton X560^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X561^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X562^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X563^10
"
"17_________________[+[Begin 
of star X564^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X565^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X566^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X563^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X567^10
"
"17_________________[+[Begin 
of star X568^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X569^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X570^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X567^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
X561^8 x9 = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"15_______________[+[Begin 
setoid_eq singleton X571^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X572^8 x9)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X573^8 x11 x12 x13))
"
"16________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X573^8 x11 x12 x13)
"
"16----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"14--------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"14______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star x0) X574^8
"
"15_______________[+[Begin 
interp singleton X575^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star x0) (X576^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X577^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X578^10
"
"17_________________[+[Begin 
of star X579^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X580^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X581^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X578^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa x0 singleton X582^10
"
"17_________________[+[Begin 
of x0 X583^10 ext
"
"17-----------------]-]Success  
of x0 singleton ext
"
"17_________________[+[Begin 
interp x0 X584^10
"
"17-----------------]-]Success  
interp x0 x1
"
"17_________________[+[Begin 
tau singleton singleton X585^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X582^10 = x1
"
"17-----------------]-]Success  
x1 = x1
"
"16----------------]-]Success  
interp_isa x0 singleton x1
"
"16________________[+[Begin 
X576^8 x9 = propId singleton star x1
"
"16----------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"15_______________[+[Begin 
setoid_eq singleton X586^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star x0) (X587^8 x9)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star x0) x10 \ x11 \
       propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X588^8 x11 x12 x13))
"
"16________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0)
 (X588^8 x11 x12 x13)
"
"16----------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x14 \ x14)
"
"14--------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star x0)
 (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"14______________[+[Begin 
tau (setPi singleton x8 \ propEq singleton star x0)
 (setPi singleton x8 \ propEq singleton star star) X589^8
"
"15_______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star x0)
 (setSigma X590^8 X591^8)
"
"16________________[+[Begin 
interp singleton X592^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star x0) (X593^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X594^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X595^10
"
"18__________________[+[Begin 
of star X596^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X597^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X598^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X595^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa x0 singleton X599^10
"
"18__________________[+[Begin 
of x0 X600^10 ext
"
"18------------------]-]Success  
of x0 singleton ext
"
"18__________________[+[Begin 
interp x0 X601^10
"
"18------------------]-]Success  
interp x0 x1
"
"18__________________[+[Begin 
tau singleton singleton X602^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X599^10 = x1
"
"18------------------]-]Success  
x1 = x1
"
"17-----------------]-]Success  
interp_isa x0 singleton x1
"
"17_________________[+[Begin 
X593^8 x9 = propId singleton star x1
"
"17-----------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"16________________[+[Begin 
setoid_eq singleton X603^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star x0) (X604^8 x9)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star x0) x10 \ x11 \
       propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X605^8 x11 x12 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0)
 (X605^8 x11 x12 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x14 \ x14)
"
"15---------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star x0)
 (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"15_______________[+[Begin 
(setPi singleton x8 \ propId singleton star x1) = setPi X606^8 X607^8
"
"15---------------]-]Success  
(setPi singleton x8 \ propId singleton star x1) =
 (setPi singleton x8 \ propId singleton star x1)
"
"15_______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma X608^8 X609^8)
"
"16________________[+[Begin 
interp singleton X610^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X611^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X612^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X613^10
"
"18__________________[+[Begin 
of star X614^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X615^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X616^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X613^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X617^10
"
"18__________________[+[Begin 
of star X618^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X619^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X620^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X617^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X611^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
setoid_eq singleton X621^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X622^8 x9)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X623^8 x11 x12 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X623^8 x11 x12 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"15---------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"15_______________[+[Begin 
(setPi singleton x8 \ propId singleton star star) = setPi X624^8 X625^8
"
"15---------------]-]Success  
(setPi singleton x8 \ propId singleton star star) =
 (setPi singleton x8 \ propId singleton star star)
"
"15_______________[+[Begin 
setoid_eq singleton X626^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
tau singleton singleton X627^8
"
"15---------------]-]Success  
tau singleton singleton x8 \ x8
"
"15_______________[+[Begin 
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star star)
  (X628^8 x11 x12 x13)
"
"16________________[+[Begin 
setoid_eq singleton X629^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
interp singleton X630^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
interp singleton X631^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
tau singleton singleton X632^8
"
"16----------------]-]Success  
tau singleton singleton x8 \ x8
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star star)
                  (X628^8 x9 x11 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star star)
 (X628^8 x9 x11 x13)
"
"18__________________[+[Begin 
tau_proof_eq star star singleton X633^14
"
"19___________________[+[Begin 
interp_isa star singleton X634^14
"
"20____________________[+[Begin 
of star X635^14 ext
"
"20--------------------]-]Success  
of star singleton ext
"
"20____________________[+[Begin 
interp star X636^14
"
"20--------------------]-]Success  
interp star star
"
"20____________________[+[Begin 
tau singleton singleton X637^14
"
"20--------------------]-]Success  
tau singleton singleton x14 \ x14
"
"20____________________[+[Begin 
X634^14 = star
"
"20--------------------]-]Success  
star = star
"
"19-------------------]-]Success  
interp_isa star singleton star
"
"19___________________[+[Begin 
setoid_refl singleton X638^14
"
"20____________________[+[Begin 
setoid_eq singleton X639^14
"
"20--------------------]-]Success  
setoid_eq singleton x14 \ x15 \ propId singleton x14 x15
"
"19-------------------]-]Success  
setoid_refl singleton x14 \
 fixMe "prova di riflessivita'" (propId singleton x14 x14)
"
"19___________________[+[Begin 
X633^14 = fixMe "prova di riflessivita'" (propId singleton star star)
"
"19-------------------]-]Success  
fixMe "prova di riflessivita'" (propId singleton star star) =
 fixMe "prova di riflessivita'" (propId singleton star star)
"
"18------------------]-]Success  
tau_proof_eq star star singleton
 (fixMe "prova di riflessivita'" (propId singleton star star))
"
"18__________________[+[Begin 
tau_proof_eq x0 star singleton X640^14
"
"19___________________[+[Begin 
locDecl X641^14 (propEq X642^14 x0 star)
"
"19-------------------]-]Success  
locDecl x2 (propEq singleton x0 star)
"
"19___________________[+[Begin 
interp_isa x2 (propEq singleton x0 star) X640^14
"
"20____________________[+[Begin 
of x2 X643^14 ext
"
"20--------------------]-]Success  
of x2 (propEq singleton x0 star) ext
"
"20____________________[+[Begin 
interp x2 X644^14
"
"20--------------------]-]Success  
interp x2 x3
"
"20____________________[+[Begin 
tau (propEq singleton x0 star) (propEq singleton x0 star) X645^14
"
"20--------------------]-]Success  
tau (propEq singleton x0 star) (propEq singleton x0 star) x14 \ x14
"
"20____________________[+[Begin 
X640^14 = x3
"
"20--------------------]-]Success  
x3 = x3
"
"19-------------------]-]Success  
interp_isa x2 (propEq singleton x0 star) x3
"
"18------------------]-]Success  
tau_proof_eq x0 star singleton x3
"
"18__________________[+[Begin 
interp_isa star singleton X646^14
"
"19___________________[+[Begin 
of star X647^14 ext
"
"19-------------------]-]Success  
of star singleton ext
"
"19___________________[+[Begin 
interp star X648^14
"
"19-------------------]-]Success  
interp star star
"
"19___________________[+[Begin 
tau singleton singleton X649^14
"
"19-------------------]-]Success  
tau singleton singleton x14 \ x14
"
"19___________________[+[Begin 
X646^14 = star
"
"19-------------------]-]Success  
star = star
"
"18------------------]-]Success  
interp_isa star singleton star
"
"18__________________[+[Begin 
interp_isa x0 singleton X650^14
"
"19___________________[+[Begin 
of x0 X651^14 ext
"
"19-------------------]-]Success  
of x0 singleton ext
"
"19___________________[+[Begin 
interp x0 X652^14
"
"19-------------------]-]Success  
interp x0 x1
"
"19___________________[+[Begin 
tau singleton singleton X653^14
"
"19-------------------]-]Success  
tau singleton singleton x14 \ x14
"
"19___________________[+[Begin 
X650^14 = x1
"
"19-------------------]-]Success  
x1 = x1
"
"18------------------]-]Success  
interp_isa x0 singleton x1
"
"18__________________[+[Begin 
interp_isa star singleton X654^14
"
"19___________________[+[Begin 
of star X655^14 ext
"
"19-------------------]-]Success  
of star singleton ext
"
"19___________________[+[Begin 
interp star X656^14
"
"19-------------------]-]Success  
interp star star
"
"19___________________[+[Begin 
tau singleton singleton X657^14
"
"19-------------------]-]Success  
tau singleton singleton x14 \ x14
"
"19___________________[+[Begin 
X654^14 = star
"
"19-------------------]-]Success  
star = star
"
"18------------------]-]Success  
interp_isa star singleton star
"
"18__________________[+[Begin 
interp_isa star singleton X658^14
"
"19___________________[+[Begin 
of star X659^14 ext
"
"19-------------------]-]Success  
of star singleton ext
"
"19___________________[+[Begin 
interp star X660^14
"
"19-------------------]-]Success  
interp star star
"
"19___________________[+[Begin 
tau singleton singleton X661^14
"
"19-------------------]-]Success  
tau singleton singleton x14 \ x14
"
"19___________________[+[Begin 
X658^14 = star
"
"19-------------------]-]Success  
star = star
"
"18------------------]-]Success  
interp_isa star singleton star
"
"18__________________[+[Begin 
interp singleton X662^14
"
"18------------------]-]Success  
interp singleton singleton
"
"18__________________[+[Begin 
X628^8 x9 x11 x13 = (x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14)
"
"18------------------]-]Success  
(x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14) = (x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14)
"
"17-----------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star star) x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star star)
                  x14 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x1) star) x3) x14)
"
"15---------------]-]Success  
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star star) x14 \
  impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
       star) x3) x14
"
"15_______________[+[Begin 
macro_interp singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0)
  (X663^8 x11 x12 x13)
"
"16________________[+[Begin 
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0)
  (X663^8 x11 x12 x13)
"
"17_________________[+[Begin 
setoid_eq singleton X664^8
"
"17-----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"17_________________[+[Begin 
interp singleton X665^8
"
"17-----------------]-]Success  
interp singleton singleton
"
"17_________________[+[Begin 
interp singleton X666^8
"
"17-----------------]-]Success  
interp singleton singleton
"
"17_________________[+[Begin 
tau singleton singleton X667^8
"
"17-----------------]-]Success  
tau singleton singleton x8 \ x8
"
"17_________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X663^8 x9 x11 x13))
"
"18__________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0) (X663^8 x9 x11 x13)
"
"18------------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"17-----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x14 \ x14)
"
"16----------------]-]Success  
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"15---------------]-]Success  
macro_interp singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"15_______________[+[Begin 
tau_trasp singleton singleton X668^8
"
"15---------------]-]Success  
tau_trasp singleton singleton x8 \ x9 \ x10 \ x10
"
"15_______________[+[Begin 
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau_trasp (propEq singleton star x0) (propEq singleton star star)
  (X669^8 x11 x12 x13)
"
"16________________[+[Begin 
setoid_eq singleton X670^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
interp singleton X671^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
interp singleton X672^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
tau singleton singleton X673^8
"
"16----------------]-]Success  
tau singleton singleton x8 \ x8
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau_trasp (propEq singleton star x0)
                  (propEq singleton star star) (X669^8 x9 x11 x13))
"
"17_________________[+[Begin 
tau_trasp (propEq singleton star x0) (propEq singleton star star)
 (X669^8 x9 x11 x13)
"
"17-----------------]-]Success  
tau_trasp (propEq singleton star x0) (propEq singleton star star) x14 \ x15 \
 x16 \ x16
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau_trasp (propEq singleton star x0)
                  (propEq singleton star star) x14 \ x15 \ x16 \ x16)
"
"15---------------]-]Success  
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau_trasp (propEq singleton star x0) (propEq singleton star star) x14 \
  x15 \ x16 \ x16
"
"15_______________[+[Begin 
setoid_refl singleton X674^8
"
"16________________[+[Begin 
setoid_eq singleton X675^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15---------------]-]Success  
setoid_refl singleton x8 \
 fixMe "prova di riflessivita'" (propId singleton x8 x8)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   locDecl x8 singleton =>
    locDecl x9 singleton =>
     locDecl x10 (X676^8 x8 x9) =>
      tau_trasp singleton singleton (X677^8 x8 x9 x10)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   locDecl x8 singleton =>
    locDecl x9 singleton =>
     locDecl x10 (X676^8 x8 x9) =>
      (tau_trasp singleton singleton x11 \ x12 \ x13 \ x13)
"
"14--------------]-]Success  
tau (setPi singleton x8 \ propEq singleton star x0)
 (setPi singleton x8 \ propEq singleton star star) x8 \
 elim_setSigma x8 (x9 \
  setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) x9 \
  x10 \
  pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x1) star) x3) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x10 (setPi singleton x14 \ propEq singleton star x0) =>
        locDecl x9
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x11
          (setSigma (setPi singleton x14 \ propId singleton star x1) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12
             (propEq (setPi singleton x14 \ propEq singleton star star) x8
               x10) =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              =>
              interp x12 x13 =>
               spy (tau singleton singleton (X536^8 x9 x11 x13))
"
"15_______________[+[Begin 
tau singleton singleton (X536^8 x9 x11 x13)
"
"15---------------]-]Success  
tau singleton singleton x14 \ x14
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x10 (setPi singleton x14 \ propEq singleton star x0) =>
        locDecl x9
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x11
          (setSigma (setPi singleton x14 \ propId singleton star x1) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12
             (propEq (setPi singleton x14 \ propEq singleton star star) x8
               x10) =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              => interp x12 x13 => spy (tau singleton singleton x14 \ x14)
"
"13-------------]-]Success  
macro_tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star x0) x8 \ x9 \ x10 \ x11 \ x12 \
 x13 \ tau singleton singleton x14 \ x14
"
"13_____________[+[Begin 
macro_interp (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 x10 \ x11 \ x12 \ x13 \ tau singleton singleton (X678^8 x11 x12 x13)
"
"14______________[+[Begin 
macro_tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \ x10 \ x11 \
 x12 \ x13 \ tau singleton singleton (X678^8 x11 x12 x13)
"
"15_______________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star star) X679^8
"
"16________________[+[Begin 
interp singleton X680^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X681^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X682^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X683^10
"
"18__________________[+[Begin 
of star X684^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X685^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X686^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X683^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X687^10
"
"18__________________[+[Begin 
of star X688^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X689^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X690^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X687^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X681^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) (X691^8 x9)))
"
"17_________________[+[Begin 
setoid_eq singleton X692^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X693^10
"
"18__________________[+[Begin 
of star X694^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X695^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X696^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X693^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X697^10
"
"18__________________[+[Begin 
of star X698^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X699^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X700^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X697^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
propId singleton star star = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star))
"
"15---------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"15_______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star) X701^8
"
"16________________[+[Begin 
interp singleton X702^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X703^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X704^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X705^10
"
"18__________________[+[Begin 
of star X706^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X707^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X708^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X705^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X709^10
"
"18__________________[+[Begin 
of star X710^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X711^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X712^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X709^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X703^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
setoid_eq singleton X713^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X714^8 x9)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X715^8 x11 x12 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X715^8 x11 x12 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"15---------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"15_______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star) X716^8
"
"16________________[+[Begin 
interp singleton X717^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X718^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X719^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X720^10
"
"18__________________[+[Begin 
of star X721^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X722^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X723^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X720^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X724^10
"
"18__________________[+[Begin 
of star X725^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X726^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X727^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X724^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X718^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
setoid_eq singleton X728^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X729^8 x9)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X730^8 x11 x12 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X730^8 x11 x12 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"15---------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"15_______________[+[Begin 
tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) X731^8
"
"15---------------]-]Success  
tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) x8 \ x8
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x10 (setPi singleton x14 \ propEq singleton star star) =>
        locDecl x9
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x11
          (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12
             (propEq (setPi singleton x14 \ propEq singleton star star) x8
               x10) =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              =>
              interp x12 x13 =>
               spy (tau singleton singleton (X678^8 x9 x11 x13))
"
"16________________[+[Begin 
tau singleton singleton (X678^8 x9 x11 x13)
"
"16----------------]-]Success  
tau singleton singleton x14 \ x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x10 (setPi singleton x14 \ propEq singleton star star) =>
        locDecl x9
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x11
          (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12
             (propEq (setPi singleton x14 \ propEq singleton star star) x8
               x10) =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              => interp x12 x13 => spy (tau singleton singleton x14 \ x14)
"
"14--------------]-]Success  
macro_tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \ x10 \ x11 \
 x12 \ x13 \ tau singleton singleton x14 \ x14
"
"13-------------]-]Success  
macro_interp (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 x10 \ x11 \ x12 \ x13 \ tau singleton singleton x14 \ x14
"
"13_____________[+[Begin 
tau_trasp (setPi singleton x8 \ propEq singleton star x0)
 (setPi singleton x8 \ propEq singleton star star) X732^8
"
"14______________[+[Begin 
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau_trasp (propEq singleton star x0) (propEq singleton star star)
  (X733^8 x11 x12 x13)
"
"15_______________[+[Begin 
setoid_eq singleton X734^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
interp singleton X735^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
interp singleton X736^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
tau singleton singleton X737^8
"
"15---------------]-]Success  
tau singleton singleton x8 \ x8
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau_trasp (propEq singleton star x0)
                  (propEq singleton star star) (X733^8 x9 x11 x13))
"
"16________________[+[Begin 
tau_trasp (propEq singleton star x0) (propEq singleton star star)
 (X733^8 x9 x11 x13)
"
"16----------------]-]Success  
tau_trasp (propEq singleton star x0) (propEq singleton star star) x14 \ x15 \
 x16 \ x16
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau_trasp (propEq singleton star x0)
                  (propEq singleton star star) x14 \ x15 \ x16 \ x16)
"
"14--------------]-]Success  
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau_trasp (propEq singleton star x0) (propEq singleton star star) x14 \
  x15 \ x16 \ x16
"
"14______________[+[Begin 
tau singleton singleton X738^8
"
"14--------------]-]Success  
tau singleton singleton x8 \ x8
"
"13-------------]-]Success  
tau_trasp (setPi singleton x8 \ propEq singleton star x0)
 (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \ x10 \
 forall_lam singleton x11 \ forall_app x10 x11
"
"13_____________[+[Begin 
macro_tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star x0) x8 \ x9 \ x10 \ x11 \ x12 \
 x13 \ tau_trasp singleton singleton (X739^8 x11 x12 x13)
"
"14______________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star star) X740^8
"
"15_______________[+[Begin 
interp singleton X741^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X742^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X743^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X744^10
"
"17_________________[+[Begin 
of star X745^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X746^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X747^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X744^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X748^10
"
"17_________________[+[Begin 
of star X749^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X750^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X751^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X748^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
X742^8 x9 = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) (X752^8 x9)))
"
"16________________[+[Begin 
setoid_eq singleton X753^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X754^10
"
"17_________________[+[Begin 
of star X755^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X756^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X757^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X754^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X758^10
"
"17_________________[+[Begin 
of star X759^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X760^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X761^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X758^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star))
"
"14--------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"14______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star) X762^8
"
"15_______________[+[Begin 
interp singleton X763^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X764^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X765^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X766^10
"
"17_________________[+[Begin 
of star X767^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X768^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X769^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X766^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X770^10
"
"17_________________[+[Begin 
of star X771^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X772^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X773^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X770^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
X764^8 x9 = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"15_______________[+[Begin 
setoid_eq singleton X774^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X775^8 x9)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X776^8 x11 x12 x13))
"
"16________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X776^8 x11 x12 x13)
"
"16----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"14--------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"14______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star x0) X777^8
"
"15_______________[+[Begin 
interp singleton X778^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star x0) (X779^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X780^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X781^10
"
"17_________________[+[Begin 
of star X782^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X783^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X784^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X781^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa x0 singleton X785^10
"
"17_________________[+[Begin 
of x0 X786^10 ext
"
"17-----------------]-]Success  
of x0 singleton ext
"
"17_________________[+[Begin 
interp x0 X787^10
"
"17-----------------]-]Success  
interp x0 x1
"
"17_________________[+[Begin 
tau singleton singleton X788^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X785^10 = x1
"
"17-----------------]-]Success  
x1 = x1
"
"16----------------]-]Success  
interp_isa x0 singleton x1
"
"16________________[+[Begin 
X779^8 x9 = propId singleton star x1
"
"16----------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"15_______________[+[Begin 
setoid_eq singleton X789^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star x0) (X790^8 x9)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star x0) x10 \ x11 \
       propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X791^8 x11 x12 x13))
"
"16________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0)
 (X791^8 x11 x12 x13)
"
"16----------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x14 \ x14)
"
"14--------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star x0)
 (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"14______________[+[Begin 
tau (setPi singleton x8 \ propEq singleton star x0)
 (setPi singleton x8 \ propEq singleton star star) X792^8
"
"15_______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star x0)
 (setSigma X793^8 X794^8)
"
"16________________[+[Begin 
interp singleton X795^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star x0) (X796^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X797^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X798^10
"
"18__________________[+[Begin 
of star X799^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X800^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X801^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X798^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa x0 singleton X802^10
"
"18__________________[+[Begin 
of x0 X803^10 ext
"
"18------------------]-]Success  
of x0 singleton ext
"
"18__________________[+[Begin 
interp x0 X804^10
"
"18------------------]-]Success  
interp x0 x1
"
"18__________________[+[Begin 
tau singleton singleton X805^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X802^10 = x1
"
"18------------------]-]Success  
x1 = x1
"
"17-----------------]-]Success  
interp_isa x0 singleton x1
"
"17_________________[+[Begin 
X796^8 x9 = propId singleton star x1
"
"17-----------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star x0) (propId singleton star x1)
"
"16________________[+[Begin 
setoid_eq singleton X806^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star x0) (X807^8 x9)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star x0) x10 \ x11 \
       propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X808^8 x11 x12 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0)
 (X808^8 x11 x12 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x14 \ x14)
"
"15---------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star x0)
 (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"15_______________[+[Begin 
(setPi singleton x8 \ propId singleton star x1) = setPi X809^8 X810^8
"
"15---------------]-]Success  
(setPi singleton x8 \ propId singleton star x1) =
 (setPi singleton x8 \ propId singleton star x1)
"
"15_______________[+[Begin 
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma X811^8 X812^8)
"
"16________________[+[Begin 
interp singleton X813^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X814^8 x9)
"
"17_________________[+[Begin 
setoid_eq singleton X815^10
"
"17-----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"17_________________[+[Begin 
interp_isa star singleton X816^10
"
"18__________________[+[Begin 
of star X817^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X818^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X819^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X816^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
interp_isa star singleton X820^10
"
"18__________________[+[Begin 
of star X821^10 ext
"
"18------------------]-]Success  
of star singleton ext
"
"18__________________[+[Begin 
interp star X822^10
"
"18------------------]-]Success  
interp star star
"
"18__________________[+[Begin 
tau singleton singleton X823^10
"
"18------------------]-]Success  
tau singleton singleton x10 \ x10
"
"18__________________[+[Begin 
X820^10 = star
"
"18------------------]-]Success  
star = star
"
"17-----------------]-]Success  
interp_isa star singleton star
"
"17_________________[+[Begin 
X814^8 x9 = propId singleton star star
"
"17-----------------]-]Success  
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
setoid_eq singleton X824^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => setoid_eq (propEq singleton star star) (X825^8 x9)
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star)
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) (X826^8 x11 x12 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star star) (propEq singleton star star)
 (X826^8 x11 x12 x13)
"
"17-----------------]-]Success  
tau (propEq singleton star star) (propEq singleton star star) x14 \ x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x9 singleton =>
        locDecl x11 singleton =>
         locDecl x12 singleton =>
          interp x8 x11 =>
           interp x9 x12 =>
            locDecl x10 (propEq singleton x8 x9) =>
             locDecl x13 (propId singleton x11 x12) =>
              interp x10 x13 =>
               spy
                (tau (propEq singleton star star)
                  (propEq singleton star star) x14 \ x14)
"
"15---------------]-]Success  
interp (setPi singleton x8 \ propEq singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"15_______________[+[Begin 
(setPi singleton x8 \ propId singleton star star) = setPi X827^8 X828^8
"
"15---------------]-]Success  
(setPi singleton x8 \ propId singleton star star) =
 (setPi singleton x8 \ propId singleton star star)
"
"15_______________[+[Begin 
setoid_eq singleton X829^8
"
"15---------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15_______________[+[Begin 
tau singleton singleton X830^8
"
"15---------------]-]Success  
tau singleton singleton x8 \ x8
"
"15_______________[+[Begin 
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star star)
  (X831^8 x11 x12 x13)
"
"16________________[+[Begin 
setoid_eq singleton X832^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
interp singleton X833^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
interp singleton X834^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
tau singleton singleton X835^8
"
"16----------------]-]Success  
tau singleton singleton x8 \ x8
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star star)
                  (X831^8 x9 x11 x13))
"
"17_________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star star)
 (X831^8 x9 x11 x13)
"
"18__________________[+[Begin 
tau_proof_eq star star singleton X836^14
"
"19___________________[+[Begin 
interp_isa star singleton X837^14
"
"20____________________[+[Begin 
of star X838^14 ext
"
"20--------------------]-]Success  
of star singleton ext
"
"20____________________[+[Begin 
interp star X839^14
"
"20--------------------]-]Success  
interp star star
"
"20____________________[+[Begin 
tau singleton singleton X840^14
"
"20--------------------]-]Success  
tau singleton singleton x14 \ x14
"
"20____________________[+[Begin 
X837^14 = star
"
"20--------------------]-]Success  
star = star
"
"19-------------------]-]Success  
interp_isa star singleton star
"
"19___________________[+[Begin 
setoid_refl singleton X841^14
"
"20____________________[+[Begin 
setoid_eq singleton X842^14
"
"20--------------------]-]Success  
setoid_eq singleton x14 \ x15 \ propId singleton x14 x15
"
"19-------------------]-]Success  
setoid_refl singleton x14 \
 fixMe "prova di riflessivita'" (propId singleton x14 x14)
"
"19___________________[+[Begin 
X836^14 = fixMe "prova di riflessivita'" (propId singleton star star)
"
"19-------------------]-]Success  
fixMe "prova di riflessivita'" (propId singleton star star) =
 fixMe "prova di riflessivita'" (propId singleton star star)
"
"18------------------]-]Success  
tau_proof_eq star star singleton
 (fixMe "prova di riflessivita'" (propId singleton star star))
"
"18__________________[+[Begin 
tau_proof_eq x0 star singleton X843^14
"
"19___________________[+[Begin 
locDecl X844^14 (propEq X845^14 x0 star)
"
"19-------------------]-]Success  
locDecl x2 (propEq singleton x0 star)
"
"19___________________[+[Begin 
interp_isa x2 (propEq singleton x0 star) X843^14
"
"20____________________[+[Begin 
of x2 X846^14 ext
"
"20--------------------]-]Success  
of x2 (propEq singleton x0 star) ext
"
"20____________________[+[Begin 
interp x2 X847^14
"
"20--------------------]-]Success  
interp x2 x3
"
"20____________________[+[Begin 
tau (propEq singleton x0 star) (propEq singleton x0 star) X848^14
"
"20--------------------]-]Success  
tau (propEq singleton x0 star) (propEq singleton x0 star) x14 \ x14
"
"20____________________[+[Begin 
X843^14 = x3
"
"20--------------------]-]Success  
x3 = x3
"
"19-------------------]-]Success  
interp_isa x2 (propEq singleton x0 star) x3
"
"18------------------]-]Success  
tau_proof_eq x0 star singleton x3
"
"18__________________[+[Begin 
interp_isa star singleton X849^14
"
"19___________________[+[Begin 
of star X850^14 ext
"
"19-------------------]-]Success  
of star singleton ext
"
"19___________________[+[Begin 
interp star X851^14
"
"19-------------------]-]Success  
interp star star
"
"19___________________[+[Begin 
tau singleton singleton X852^14
"
"19-------------------]-]Success  
tau singleton singleton x14 \ x14
"
"19___________________[+[Begin 
X849^14 = star
"
"19-------------------]-]Success  
star = star
"
"18------------------]-]Success  
interp_isa star singleton star
"
"18__________________[+[Begin 
interp_isa x0 singleton X853^14
"
"19___________________[+[Begin 
of x0 X854^14 ext
"
"19-------------------]-]Success  
of x0 singleton ext
"
"19___________________[+[Begin 
interp x0 X855^14
"
"19-------------------]-]Success  
interp x0 x1
"
"19___________________[+[Begin 
tau singleton singleton X856^14
"
"19-------------------]-]Success  
tau singleton singleton x14 \ x14
"
"19___________________[+[Begin 
X853^14 = x1
"
"19-------------------]-]Success  
x1 = x1
"
"18------------------]-]Success  
interp_isa x0 singleton x1
"
"18__________________[+[Begin 
interp_isa star singleton X857^14
"
"19___________________[+[Begin 
of star X858^14 ext
"
"19-------------------]-]Success  
of star singleton ext
"
"19___________________[+[Begin 
interp star X859^14
"
"19-------------------]-]Success  
interp star star
"
"19___________________[+[Begin 
tau singleton singleton X860^14
"
"19-------------------]-]Success  
tau singleton singleton x14 \ x14
"
"19___________________[+[Begin 
X857^14 = star
"
"19-------------------]-]Success  
star = star
"
"18------------------]-]Success  
interp_isa star singleton star
"
"18__________________[+[Begin 
interp_isa star singleton X861^14
"
"19___________________[+[Begin 
of star X862^14 ext
"
"19-------------------]-]Success  
of star singleton ext
"
"19___________________[+[Begin 
interp star X863^14
"
"19-------------------]-]Success  
interp star star
"
"19___________________[+[Begin 
tau singleton singleton X864^14
"
"19-------------------]-]Success  
tau singleton singleton x14 \ x14
"
"19___________________[+[Begin 
X861^14 = star
"
"19-------------------]-]Success  
star = star
"
"18------------------]-]Success  
interp_isa star singleton star
"
"18__________________[+[Begin 
interp singleton X865^14
"
"18------------------]-]Success  
interp singleton singleton
"
"18__________________[+[Begin 
X831^8 x9 x11 x13 = (x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14)
"
"18------------------]-]Success  
(x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14) = (x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14)
"
"17-----------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star star) x14 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
      star) x3) x14
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star star)
                  x14 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x1) star) x3) x14)
"
"15---------------]-]Success  
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star star) x14 \
  impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x1)
       star) x3) x14
"
"15_______________[+[Begin 
macro_interp singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0)
  (X866^8 x11 x12 x13)
"
"16________________[+[Begin 
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0)
  (X866^8 x11 x12 x13)
"
"17_________________[+[Begin 
setoid_eq singleton X867^8
"
"17-----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"17_________________[+[Begin 
interp singleton X868^8
"
"17-----------------]-]Success  
interp singleton singleton
"
"17_________________[+[Begin 
interp singleton X869^8
"
"17-----------------]-]Success  
interp singleton singleton
"
"17_________________[+[Begin 
tau singleton singleton X870^8
"
"17-----------------]-]Success  
tau singleton singleton x8 \ x8
"
"17_________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  (X866^8 x9 x11 x13))
"
"18__________________[+[Begin 
tau (propEq singleton star x0) (propEq singleton star x0) (X866^8 x9 x11 x13)
"
"18------------------]-]Success  
tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"17-----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau (propEq singleton star x0) (propEq singleton star x0)
                  x14 \ x14)
"
"16----------------]-]Success  
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"15---------------]-]Success  
macro_interp singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau (propEq singleton star x0) (propEq singleton star x0) x14 \ x14
"
"15_______________[+[Begin 
tau_trasp singleton singleton X871^8
"
"15---------------]-]Success  
tau_trasp singleton singleton x8 \ x9 \ x10 \ x10
"
"15_______________[+[Begin 
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau_trasp (propEq singleton star x0) (propEq singleton star star)
  (X872^8 x11 x12 x13)
"
"16________________[+[Begin 
setoid_eq singleton X873^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"16________________[+[Begin 
interp singleton X874^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
interp singleton X875^8
"
"16----------------]-]Success  
interp singleton singleton
"
"16________________[+[Begin 
tau singleton singleton X876^8
"
"16----------------]-]Success  
tau singleton singleton x8 \ x8
"
"16________________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau_trasp (propEq singleton star x0)
                  (propEq singleton star star) (X872^8 x9 x11 x13))
"
"17_________________[+[Begin 
tau_trasp (propEq singleton star x0) (propEq singleton star star)
 (X872^8 x9 x11 x13)
"
"17-----------------]-]Success  
tau_trasp (propEq singleton star x0) (propEq singleton star star) x14 \ x15 \
 x16 \ x16
"
"16----------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 singleton =>
       locDecl x10 singleton =>
        locDecl x9 singleton =>
         locDecl x11 singleton =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12 (propEq singleton x8 x10) =>
             locDecl x13 (propId singleton x9 x11) =>
              interp x12 x13 =>
               spy
                (tau_trasp (propEq singleton star x0)
                  (propEq singleton star star) x14 \ x15 \ x16 \ x16)
"
"15---------------]-]Success  
macro_tau singleton singleton x8 \ x9 \ x10 \ x11 \ x12 \ x13 \
 tau_trasp (propEq singleton star x0) (propEq singleton star star) x14 \
  x15 \ x16 \ x16
"
"15_______________[+[Begin 
setoid_refl singleton X877^8
"
"16________________[+[Begin 
setoid_eq singleton X878^8
"
"16----------------]-]Success  
setoid_eq singleton x8 \ x9 \ propId singleton x8 x9
"
"15---------------]-]Success  
setoid_refl singleton x8 \
 fixMe "prova di riflessivita'" (propId singleton x8 x8)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   locDecl x8 singleton =>
    locDecl x9 singleton =>
     locDecl x10 (X879^8 x8 x9) =>
      tau_trasp singleton singleton (X880^8 x8 x9 x10)
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   locDecl x8 singleton =>
    locDecl x9 singleton =>
     locDecl x10 (X879^8 x8 x9) =>
      (tau_trasp singleton singleton x11 \ x12 \ x13 \ x13)
"
"14--------------]-]Success  
tau (setPi singleton x8 \ propEq singleton star x0)
 (setPi singleton x8 \ propEq singleton star star) x8 \
 elim_setSigma x8 (x9 \
  setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) x9 \
  x10 \
  pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x1) star) x3) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)
"
"14______________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x10 (setPi singleton x14 \ propEq singleton star x0) =>
        locDecl x9
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x11
          (setSigma (setPi singleton x14 \ propId singleton star x1) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12
             (propEq (setPi singleton x14 \ propEq singleton star star) x8
               x10) =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              =>
              interp x12 x13 =>
               spy (tau_trasp singleton singleton (X739^8 x9 x11 x13))
"
"15_______________[+[Begin 
tau_trasp singleton singleton (X739^8 x9 x11 x13)
"
"15---------------]-]Success  
tau_trasp singleton singleton x14 \ x15 \ x16 \ x16
"
"14--------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8 (setPi singleton x14 \ propEq singleton star star) =>
       locDecl x10 (setPi singleton x14 \ propEq singleton star x0) =>
        locDecl x9
         (setSigma (setPi singleton x14 \ propId singleton star star) x14 \
           forall singleton x15 \
            forall singleton x16 \
             forall (propId singleton x15 x16) x17 \
              propId singleton star star) =>
         locDecl x11
          (setSigma (setPi singleton x14 \ propId singleton star x1) x14 \
            forall singleton x15 \
             forall singleton x16 \
              forall (propId singleton x15 x16) x17 \
               propId singleton star star) =>
          interp x8 x9 =>
           interp x10 x11 =>
            locDecl x12
             (propEq (setPi singleton x14 \ propEq singleton star star) x8
               x10) =>
             locDecl x13 (forall singleton x14 \ propId singleton star star)
              =>
              interp x12 x13 =>
               spy (tau_trasp singleton singleton x14 \ x15 \ x16 \ x16)
"
"13-------------]-]Success  
macro_tau (setPi singleton x8 \ propEq singleton star star)
 (setPi singleton x8 \ propEq singleton star x0) x8 \ x9 \ x10 \ x11 \ x12 \
 x13 \ tau_trasp singleton singleton x14 \ x15 \ x16 \ x16
"
"13_____________[+[Begin 
setoid_refl (setPi singleton x8 \ propEq singleton star star) X881^8
"
"14______________[+[Begin 
setoid_eq (setPi singleton x8 \ propEq singleton star star) X882^8
"
"15_______________[+[Begin 
interp singleton X883^8
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 => interp (propEq singleton star star) (X884^8 x9)
"
"16________________[+[Begin 
setoid_eq singleton X885^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X886^10
"
"17_________________[+[Begin 
of star X887^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X888^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X889^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X886^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X890^10
"
"17_________________[+[Begin 
of star X891^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X892^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X893^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X890^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
X884^8 x9 = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     interp (propEq singleton star star) (propId singleton star star)
"
"15_______________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) (X894^8 x9)))
"
"16________________[+[Begin 
setoid_eq singleton X895^10
"
"16----------------]-]Success  
setoid_eq singleton x10 \ x11 \ propId singleton x10 x11
"
"16________________[+[Begin 
interp_isa star singleton X896^10
"
"17_________________[+[Begin 
of star X897^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X898^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X899^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X896^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
interp_isa star singleton X900^10
"
"17_________________[+[Begin 
of star X901^10 ext
"
"17-----------------]-]Success  
of star singleton ext
"
"17_________________[+[Begin 
interp star X902^10
"
"17-----------------]-]Success  
interp star star
"
"17_________________[+[Begin 
tau singleton singleton X903^10
"
"17-----------------]-]Success  
tau singleton singleton x10 \ x10
"
"17_________________[+[Begin 
X900^10 = star
"
"17-----------------]-]Success  
star = star
"
"16----------------]-]Success  
interp_isa star singleton star
"
"16________________[+[Begin 
propId singleton star star = propId singleton star star
"
"16----------------]-]Success  
propId singleton star star = propId singleton star star
"
"15---------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 singleton =>
   locDecl x9 singleton =>
    interp x8 x9 =>
     ((interp (propEq singleton star star) (propId singleton star star)),
     (setoid_eq (propEq singleton star star) x10 \ x11 \
       propId singleton star star))
"
"14--------------]-]Success  
setoid_eq (setPi singleton x8 \ propEq singleton star star) x8 \ x9 \
 forall singleton x10 \ propId singleton star star
"
"13-------------]-]Success  
setoid_refl (setPi singleton x8 \ propEq singleton star star) x8 \
 fixMe "prova di riflessivita'"
  (forall singleton x9 \ propId singleton star star)
"
"13_____________[+[Begin 
pi x8 \
 pi x9 \
  pi x10 \
   locDecl x8
    (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
    =>
    locDecl x9
     (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     =>
     locDecl x10 (X904^8 x8 x9) =>
      tau_trasp (setPi singleton x11 \ propEq singleton star x0)
       (setPi singleton x11 \ propEq singleton star star) (X905^8 x8 x9 x10)
"
"14______________[+[Begin 
macro_tau singleton singleton x11 \ x12 \ x13 \ x14 \ x15 \ x16 \
 tau_trasp (propEq singleton star x0) (propEq singleton star star)
  (X906^11 x14 x15 x16)
"
"15_______________[+[Begin 
setoid_eq singleton X907^11
"
"15---------------]-]Success  
setoid_eq singleton x11 \ x12 \ propId singleton x11 x12
"
"15_______________[+[Begin 
interp singleton X908^11
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
interp singleton X909^11
"
"15---------------]-]Success  
interp singleton singleton
"
"15_______________[+[Begin 
tau singleton singleton X910^11
"
"15---------------]-]Success  
tau singleton singleton x11 \ x11
"
"15_______________[+[Begin 
pi x11 \
 pi x12 \
  pi x13 \
   pi x14 \
    pi x15 \
     pi x16 \
      locDecl x11 singleton =>
       locDecl x13 singleton =>
        locDecl x12 singleton =>
         locDecl x14 singleton =>
          interp x11 x12 =>
           interp x13 x14 =>
            locDecl x15 (propEq singleton x11 x13) =>
             locDecl x16 (propId singleton x12 x14) =>
              interp x15 x16 =>
               spy
                (tau_trasp (propEq singleton star x0)
                  (propEq singleton star star) (X906^11 x12 x14 x16))
"
"16________________[+[Begin 
tau_trasp (propEq singleton star x0) (propEq singleton star star)
 (X906^11 x12 x14 x16)
"
"16----------------]-]Success  
tau_trasp (propEq singleton star x0) (propEq singleton star star) x17 \ x18 \
 x19 \ x19
"
"15---------------]-]Success  
pi x11 \
 pi x12 \
  pi x13 \
   pi x14 \
    pi x15 \
     pi x16 \
      locDecl x11 singleton =>
       locDecl x13 singleton =>
        locDecl x12 singleton =>
         locDecl x14 singleton =>
          interp x11 x12 =>
           interp x13 x14 =>
            locDecl x15 (propEq singleton x11 x13) =>
             locDecl x16 (propId singleton x12 x14) =>
              interp x15 x16 =>
               spy
                (tau_trasp (propEq singleton star x0)
                  (propEq singleton star star) x17 \ x18 \ x19 \ x19)
"
"14--------------]-]Success  
macro_tau singleton singleton x11 \ x12 \ x13 \ x14 \ x15 \ x16 \
 tau_trasp (propEq singleton star x0) (propEq singleton star star) x17 \
  x18 \ x19 \ x19
"
"14______________[+[Begin 
tau singleton singleton X911^11
"
"14--------------]-]Success  
tau singleton singleton x11 \ x11
"
"13-------------]-]Success  
pi x8 \
 pi x9 \
  pi x10 \
   locDecl x8
    (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
    =>
    locDecl x9
     (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     =>
     locDecl x10 (X904^8 x8 x9) =>
      (tau_trasp (setPi singleton x11 \ propEq singleton star x0)
        (setPi singleton x11 \ propEq singleton star star) x11 \ x12 \ x13 \
        forall_lam singleton x14 \ forall_app x13 x14)
"
"12------------]-]Success  
tau (setPi (setPi singleton x8 \ propEq singleton star star) x8 \ singleton)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton) x8 \
 elim_setSigma x8 (x9 \
  setSigma
   (setPi
     (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \ singleton) x10 \
   forall
    (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
    x11 \
    forall
     (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     x12 \
     forall (forall singleton x13 \ propId singleton star star) x13 \
      propId singleton (app x10 x11) (app x10 x12)) x9 \ x10 \
  pair
   (setPi
     (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x11 \ singleton) (x11 \
   forall
    (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
    x12 \
    forall
     (setSigma (setPi singleton x13 \ propId singleton star x1) x13 \
       forall singleton x14 \
        forall singleton x15 \
         forall (propId singleton x14 x15) x16 \ propId singleton star star)
     x13 \
     forall (forall singleton x14 \ propId singleton star star) x14 \
      propId singleton (app x11 x12) (app x11 x13))
   (lambda
     (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x11 \
     app x9
      (elim_setSigma x11 (x12 \
        setSigma (setPi singleton x13 \ propId singleton star star) x13 \
         forall singleton x14 \
          forall singleton x15 \
           forall (propId singleton x14 x15) x16 \ propId singleton star star)
        x12 \ x13 \
        pair (setPi singleton x14 \ propId singleton star star) (x14 \
         forall singleton x15 \
          forall singleton x16 \
           forall (propId singleton x15 x16) x17 \ propId singleton star star)
         (lambda singleton x14 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x1) star) x3)
            (app x12 x14))
         (forall_lam singleton x14 \
           forall_lam singleton x15 \
            forall_lam (propId singleton x14 x15) x16 \
             forall_app (forall_app (forall_app x13 x14) x15) x16)))
   (forall_lam
     (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x11 \
     forall_lam
      (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
      x12 \
      forall_lam (forall singleton x13 \ propId singleton star star) x13 \
       forall_app
        (forall_app
          (forall_app x10
            (elim_setSigma x11 (x14 \
              setSigma (setPi singleton x15 \ propId singleton star star)
               x15 \
               forall singleton x16 \
                forall singleton x17 \
                 forall (propId singleton x16 x17) x18 \
                  propId singleton star star) x14 \ x15 \
              pair (setPi singleton x16 \ propId singleton star star) (x16 \
               forall singleton x17 \
                forall singleton x18 \
                 forall (propId singleton x17 x18) x19 \
                  propId singleton star star)
               (lambda singleton x16 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x1) star) x3)
                  (app x14 x16))
               (forall_lam singleton x16 \
                 forall_lam singleton x17 \
                  forall_lam (propId singleton x16 x17) x18 \
                   forall_app (forall_app (forall_app x15 x16) x17) x18)))
          (elim_setSigma x12 (x14 \
            setSigma (setPi singleton x15 \ propId singleton star star) x15 \
             forall singleton x16 \
              forall singleton x17 \
               forall (propId singleton x16 x17) x18 \
                propId singleton star star) x14 \ x15 \
            pair (setPi singleton x16 \ propId singleton star star) (x16 \
             forall singleton x17 \
              forall singleton x18 \
               forall (propId singleton x17 x18) x19 \
                propId singleton star star)
             (lambda singleton x16 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x1) star) x3)
                (app x14 x16))
             (forall_lam singleton x16 \
               forall_lam singleton x17 \
                forall_lam (propId singleton x16 x17) x18 \
                 forall_app (forall_app (forall_app x15 x16) x17) x18)))
        (forall_lam singleton x14 \ forall_app x13 x14))
"
"12____________[+[Begin 
X144^8 =
 (elim_setSigma
   (pair
     (setPi
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ singleton) (x8 \
     forall
      (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall (forall singleton x11 \ propId singleton star star) x11 \
        propId singleton (app x8 x9) (app x8 x10))
     (lambda
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ star)
     (forall_lam
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall_lam
        (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall_lam (forall singleton x10 \ propId singleton star star) x10 \
         fixMe "prova di riflessivita'" (propId singleton star star))) (x8 \
   setSigma
    (setPi
      (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \ singleton) x9 \
    forall
     (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall
      (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x11 \
      forall (forall singleton x12 \ propId singleton star star) x12 \
       propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
   pair
    (setPi
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \ singleton) (x10 \
    forall
     (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x11 \
     forall
      (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
      x12 \
      forall (forall singleton x13 \ propId singleton star star) x13 \
       propId singleton (app x10 x11) (app x10 x12))
    (lambda
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      app x8
       (elim_setSigma x10 (x11 \
         setSigma (setPi singleton x12 \ propId singleton star star) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x11 \ x12 \
         pair (setPi singleton x13 \ propId singleton star star) (x13 \
          forall singleton x14 \
           forall singleton x15 \
            forall (propId singleton x14 x15) x16 \
             propId singleton star star)
          (lambda singleton x13 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x1) star) x3)
             (app x11 x13))
          (forall_lam singleton x13 \
            forall_lam singleton x14 \
             forall_lam (propId singleton x13 x14) x15 \
              forall_app (forall_app (forall_app x12 x13) x14) x15)))
    (forall_lam
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall_lam
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall_lam (forall singleton x12 \ propId singleton star star) x12 \
        forall_app
         (forall_app
           (forall_app x9
             (elim_setSigma x10 (x13 \
               setSigma (setPi singleton x14 \ propId singleton star star)
                x14 \
                forall singleton x15 \
                 forall singleton x16 \
                  forall (propId singleton x15 x16) x17 \
                   propId singleton star star) x13 \ x14 \
               pair (setPi singleton x15 \ propId singleton star star) (x15 \
                forall singleton x16 \
                 forall singleton x17 \
                  forall (propId singleton x16 x17) x18 \
                   propId singleton star star)
                (lambda singleton x15 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x1) star) x3)
                   (app x13 x15))
                (forall_lam singleton x15 \
                  forall_lam singleton x16 \
                   forall_lam (propId singleton x15 x16) x17 \
                    forall_app (forall_app (forall_app x14 x15) x16) x17)))
           (elim_setSigma x11 (x13 \
             setSigma (setPi singleton x14 \ propId singleton star star)
              x14 \
              forall singleton x15 \
               forall singleton x16 \
                forall (propId singleton x15 x16) x17 \
                 propId singleton star star) x13 \ x14 \
             pair (setPi singleton x15 \ propId singleton star star) (x15 \
              forall singleton x16 \
               forall singleton x17 \
                forall (propId singleton x16 x17) x18 \
                 propId singleton star star)
              (lambda singleton x15 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x1) star) x3)
                 (app x13 x15))
              (forall_lam singleton x15 \
                forall_lam singleton x16 \
                 forall_lam (propId singleton x15 x16) x17 \
                  forall_app (forall_app (forall_app x14 x15) x16) x17)))
         (forall_lam singleton x13 \ forall_app x12 x13)))
"
"12------------]-]Success  
(elim_setSigma
  (pair
    (setPi
      (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) (x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall
      (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall (forall singleton x11 \ propId singleton star star) x11 \
       propId singleton (app x8 x9) (app x8 x10))
    (lambda
      (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ star)
    (forall_lam
      (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall_lam
       (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall_lam (forall singleton x10 \ propId singleton star star) x10 \
        fixMe "prova di riflessivita'" (propId singleton star star))) (x8 \
  setSigma
   (setPi
     (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \ singleton) x9 \
   forall
    (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    x10 \
    forall
     (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x11 \
     forall (forall singleton x12 \ propId singleton star star) x12 \
      propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
  pair
   (setPi
     (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \ singleton) (x10 \
   forall
    (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
    x11 \
    forall
     (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     x12 \
     forall (forall singleton x13 \ propId singleton star star) x13 \
      propId singleton (app x10 x11) (app x10 x12))
   (lambda
     (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     app x8
      (elim_setSigma x10 (x11 \
        setSigma (setPi singleton x12 \ propId singleton star star) x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
        x11 \ x12 \
        pair (setPi singleton x13 \ propId singleton star star) (x13 \
         forall singleton x14 \
          forall singleton x15 \
           forall (propId singleton x14 x15) x16 \ propId singleton star star)
         (lambda singleton x13 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x1) star) x3)
            (app x11 x13))
         (forall_lam singleton x13 \
           forall_lam singleton x14 \
            forall_lam (propId singleton x13 x14) x15 \
             forall_app (forall_app (forall_app x12 x13) x14) x15)))
   (forall_lam
     (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall_lam
      (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x11 \
      forall_lam (forall singleton x12 \ propId singleton star star) x12 \
       forall_app
        (forall_app
          (forall_app x9
            (elim_setSigma x10 (x13 \
              setSigma (setPi singleton x14 \ propId singleton star star)
               x14 \
               forall singleton x15 \
                forall singleton x16 \
                 forall (propId singleton x15 x16) x17 \
                  propId singleton star star) x13 \ x14 \
              pair (setPi singleton x15 \ propId singleton star star) (x15 \
               forall singleton x16 \
                forall singleton x17 \
                 forall (propId singleton x16 x17) x18 \
                  propId singleton star star)
               (lambda singleton x15 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x1) star) x3)
                  (app x13 x15))
               (forall_lam singleton x15 \
                 forall_lam singleton x16 \
                  forall_lam (propId singleton x15 x16) x17 \
                   forall_app (forall_app (forall_app x14 x15) x16) x17)))
          (elim_setSigma x11 (x13 \
            setSigma (setPi singleton x14 \ propId singleton star star) x14 \
             forall singleton x15 \
              forall singleton x16 \
               forall (propId singleton x15 x16) x17 \
                propId singleton star star) x13 \ x14 \
            pair (setPi singleton x15 \ propId singleton star star) (x15 \
             forall singleton x16 \
              forall singleton x17 \
               forall (propId singleton x16 x17) x18 \
                propId singleton star star)
             (lambda singleton x15 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x1) star) x3)
                (app x13 x15))
             (forall_lam singleton x15 \
               forall_lam singleton x16 \
                forall_lam (propId singleton x15 x16) x17 \
                 forall_app (forall_app (forall_app x14 x15) x16) x17)))
        (forall_lam singleton x13 \ forall_app x12 x13))) =
 (elim_setSigma
   (pair
     (setPi
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ singleton) (x8 \
     forall
      (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall (forall singleton x11 \ propId singleton star star) x11 \
        propId singleton (app x8 x9) (app x8 x10))
     (lambda
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ star)
     (forall_lam
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall_lam
        (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall_lam (forall singleton x10 \ propId singleton star star) x10 \
         fixMe "prova di riflessivita'" (propId singleton star star))) (x8 \
   setSigma
    (setPi
      (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \ singleton) x9 \
    forall
     (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall
      (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x11 \
      forall (forall singleton x12 \ propId singleton star star) x12 \
       propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
   pair
    (setPi
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \ singleton) (x10 \
    forall
     (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x11 \
     forall
      (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
      x12 \
      forall (forall singleton x13 \ propId singleton star star) x13 \
       propId singleton (app x10 x11) (app x10 x12))
    (lambda
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      app x8
       (elim_setSigma x10 (x11 \
         setSigma (setPi singleton x12 \ propId singleton star star) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x11 \ x12 \
         pair (setPi singleton x13 \ propId singleton star star) (x13 \
          forall singleton x14 \
           forall singleton x15 \
            forall (propId singleton x14 x15) x16 \
             propId singleton star star)
          (lambda singleton x13 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x1) star) x3)
             (app x11 x13))
          (forall_lam singleton x13 \
            forall_lam singleton x14 \
             forall_lam (propId singleton x13 x14) x15 \
              forall_app (forall_app (forall_app x12 x13) x14) x15)))
    (forall_lam
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall_lam
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall_lam (forall singleton x12 \ propId singleton star star) x12 \
        forall_app
         (forall_app
           (forall_app x9
             (elim_setSigma x10 (x13 \
               setSigma (setPi singleton x14 \ propId singleton star star)
                x14 \
                forall singleton x15 \
                 forall singleton x16 \
                  forall (propId singleton x15 x16) x17 \
                   propId singleton star star) x13 \ x14 \
               pair (setPi singleton x15 \ propId singleton star star) (x15 \
                forall singleton x16 \
                 forall singleton x17 \
                  forall (propId singleton x16 x17) x18 \
                   propId singleton star star)
                (lambda singleton x15 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x1) star) x3)
                   (app x13 x15))
                (forall_lam singleton x15 \
                  forall_lam singleton x16 \
                   forall_lam (propId singleton x15 x16) x17 \
                    forall_app (forall_app (forall_app x14 x15) x16) x17)))
           (elim_setSigma x11 (x13 \
             setSigma (setPi singleton x14 \ propId singleton star star)
              x14 \
              forall singleton x15 \
               forall singleton x16 \
                forall (propId singleton x15 x16) x17 \
                 propId singleton star star) x13 \ x14 \
             pair (setPi singleton x15 \ propId singleton star star) (x15 \
              forall singleton x16 \
               forall singleton x17 \
                forall (propId singleton x16 x17) x18 \
                 propId singleton star star)
              (lambda singleton x15 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x1) star) x3)
                 (app x13 x15))
              (forall_lam singleton x15 \
                forall_lam singleton x16 \
                 forall_lam (propId singleton x15 x16) x17 \
                  forall_app (forall_app (forall_app x14 x15) x16) x17)))
         (forall_lam singleton x13 \ forall_app x12 x13)))
"
"11-----------]-]Success  
interp_isa
 (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star)
 (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
 (elim_setSigma
   (pair
     (setPi
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ singleton) (x8 \
     forall
      (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall (forall singleton x11 \ propId singleton star star) x11 \
        propId singleton (app x8 x9) (app x8 x10))
     (lambda
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ star)
     (forall_lam
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall_lam
        (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall_lam (forall singleton x10 \ propId singleton star star) x10 \
         fixMe "prova di riflessivita'" (propId singleton star star))) (x8 \
   setSigma
    (setPi
      (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \ singleton) x9 \
    forall
     (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall
      (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x11 \
      forall (forall singleton x12 \ propId singleton star star) x12 \
       propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
   pair
    (setPi
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \ singleton) (x10 \
    forall
     (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x11 \
     forall
      (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
      x12 \
      forall (forall singleton x13 \ propId singleton star star) x13 \
       propId singleton (app x10 x11) (app x10 x12))
    (lambda
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      app x8
       (elim_setSigma x10 (x11 \
         setSigma (setPi singleton x12 \ propId singleton star star) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x11 \ x12 \
         pair (setPi singleton x13 \ propId singleton star star) (x13 \
          forall singleton x14 \
           forall singleton x15 \
            forall (propId singleton x14 x15) x16 \
             propId singleton star star)
          (lambda singleton x13 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x1) star) x3)
             (app x11 x13))
          (forall_lam singleton x13 \
            forall_lam singleton x14 \
             forall_lam (propId singleton x13 x14) x15 \
              forall_app (forall_app (forall_app x12 x13) x14) x15)))
    (forall_lam
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall_lam
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall_lam (forall singleton x12 \ propId singleton star star) x12 \
        forall_app
         (forall_app
           (forall_app x9
             (elim_setSigma x10 (x13 \
               setSigma (setPi singleton x14 \ propId singleton star star)
                x14 \
                forall singleton x15 \
                 forall singleton x16 \
                  forall (propId singleton x15 x16) x17 \
                   propId singleton star star) x13 \ x14 \
               pair (setPi singleton x15 \ propId singleton star star) (x15 \
                forall singleton x16 \
                 forall singleton x17 \
                  forall (propId singleton x16 x17) x18 \
                   propId singleton star star)
                (lambda singleton x15 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x1) star) x3)
                   (app x13 x15))
                (forall_lam singleton x15 \
                  forall_lam singleton x16 \
                   forall_lam (propId singleton x15 x16) x17 \
                    forall_app (forall_app (forall_app x14 x15) x16) x17)))
           (elim_setSigma x11 (x13 \
             setSigma (setPi singleton x14 \ propId singleton star star)
              x14 \
              forall singleton x15 \
               forall singleton x16 \
                forall (propId singleton x15 x16) x17 \
                 propId singleton star star) x13 \ x14 \
             pair (setPi singleton x15 \ propId singleton star star) (x15 \
              forall singleton x16 \
               forall singleton x17 \
                forall (propId singleton x16 x17) x18 \
                 propId singleton star star)
              (lambda singleton x15 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x1) star) x3)
                 (app x13 x15))
              (forall_lam singleton x15 \
                forall_lam singleton x16 \
                 forall_lam (propId singleton x15 x16) x17 \
                  forall_app (forall_app (forall_app x14 x15) x16) x17)))
         (forall_lam singleton x13 \ forall_app x12 x13)))
"
"11___________[+[Begin 
interp x6 X912^8
"
"11-----------]-]Success  
interp x6 x7
"
"11___________[+[Begin 
of x7 X913^8 int
"
"11-----------]-]Success  
of x7
 (setSigma
   (setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) x8 \
       forall
        (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall (forall singleton x11 \ propId singleton star star) x11 \
          propId singleton (app x8 x9) (app x8 x10)) x8 \ singleton) x8 \
   forall
    (setSigma
      (setPi
        (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \ singleton) x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        forall (forall singleton x12 \ propId singleton star star) x12 \
         propId singleton (app x9 x10) (app x9 x11)) x9 \
    forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \ singleton) x10 \
       forall
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        forall
         (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) x12 \
         forall (forall singleton x13 \ propId singleton star star) x13 \
          propId singleton (app x10 x11) (app x10 x12)) x10 \
     forall
      (forall
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        propId singleton
         (app
           (elim_setSigma x9 (x12 \
             setPi
              (setSigma (setPi singleton x13 \ propId singleton star x1)
                x13 \
                forall singleton x14 \
                 forall singleton x15 \
                  forall (propId singleton x14 x15) x16 \
                   propId singleton star star) x13 \ singleton) x12 \ x13 \
             x12) x11)
         (app
           (elim_setSigma x10 (x12 \
             setPi
              (setSigma (setPi singleton x13 \ propId singleton star x1)
                x13 \
                forall singleton x14 \
                 forall singleton x15 \
                  forall (propId singleton x14 x15) x16 \
                   propId singleton star star) x13 \ singleton) x12 \ x13 \
             x12) x11)) x11 \ propId singleton (app x8 x9) (app x8 x10)) int
"
"11___________[+[Begin 
(setSigma
  (setPi
    (setSigma
      (setPi
        (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10)) x8 \ singleton) x8 \
  forall
   (setSigma
     (setPi
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \ singleton) x9 \
     forall
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall (forall singleton x12 \ propId singleton star star) x12 \
        propId singleton (app x9 x10) (app x9 x11)) x9 \
   forall
    (setSigma
      (setPi
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \ singleton) x10 \
      forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall
        (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x12 \
        forall (forall singleton x13 \ propId singleton star star) x13 \
         propId singleton (app x10 x11) (app x10 x12)) x10 \
    forall
     (forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       propId singleton
        (app
          (elim_setSigma x9 (x12 \
            setPi
             (setSigma (setPi singleton x13 \ propId singleton star x1) x13 \
               forall singleton x14 \
                forall singleton x15 \
                 forall (propId singleton x14 x15) x16 \
                  propId singleton star star) x13 \ singleton) x12 \ x13 \
            x12) x11)
        (app
          (elim_setSigma x10 (x12 \
            setPi
             (setSigma (setPi singleton x13 \ propId singleton star x1) x13 \
               forall singleton x14 \
                forall singleton x15 \
                 forall (propId singleton x14 x15) x16 \
                  propId singleton star star) x13 \ singleton) x12 \ x13 \
            x12) x11)) x11 \ propId singleton (app x8 x9) (app x8 x10)) =
 setSigma X914^8 _
"
"11-----------]-]Success  
(setSigma
  (setPi
    (setSigma
      (setPi
        (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10)) x8 \ singleton) x8 \
  forall
   (setSigma
     (setPi
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \ singleton) x9 \
     forall
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall (forall singleton x12 \ propId singleton star star) x12 \
        propId singleton (app x9 x10) (app x9 x11)) x9 \
   forall
    (setSigma
      (setPi
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \ singleton) x10 \
      forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall
        (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x12 \
        forall (forall singleton x13 \ propId singleton star star) x13 \
         propId singleton (app x10 x11) (app x10 x12)) x10 \
    forall
     (forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       propId singleton
        (app
          (elim_setSigma x9 (x12 \
            setPi
             (setSigma (setPi singleton x13 \ propId singleton star x1) x13 \
               forall singleton x14 \
                forall singleton x15 \
                 forall (propId singleton x14 x15) x16 \
                  propId singleton star star) x13 \ singleton) x12 \ x13 \
            x12) x11)
        (app
          (elim_setSigma x10 (x12 \
            setPi
             (setSigma (setPi singleton x13 \ propId singleton star x1) x13 \
               forall singleton x14 \
                forall singleton x15 \
                 forall (propId singleton x14 x15) x16 \
                  propId singleton star star) x13 \ singleton) x12 \ x13 \
            x12) x11)) x11 \ propId singleton (app x8 x9) (app x8 x10)) =
 setSigma
  (setPi
    (setSigma
      (setPi
        (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10)) x8 \ singleton) _
"
"10----------]-]Success  
interp
 (app x6 (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star))
 (app
   (elim_setSigma x7 (x8 \
     setPi
      (setSigma
        (setPi
          (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \ singleton) x9 \
        forall
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall
          (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x11 \
          forall (forall singleton x12 \ propId singleton star star) x12 \
           propId singleton (app x9 x10) (app x9 x11)) x9 \ singleton) x8 \
     x9 \ x8)
   (elim_setSigma
     (pair
       (setPi
         (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) (x8 \
       forall
        (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall
         (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall (forall singleton x11 \ propId singleton star star) x11 \
          propId singleton (app x8 x9) (app x8 x10))
       (lambda
         (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ star)
       (forall_lam
         (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall_lam
          (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall_lam (forall singleton x10 \ propId singleton star star)
           x10 \ fixMe "prova di riflessivita'" (propId singleton star star)))
     (x8 \
     setSigma
      (setPi
        (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \ singleton) x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        forall (forall singleton x12 \ propId singleton star star) x12 \
         propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
     pair
      (setPi
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \ singleton) (x10 \
      forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall
        (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x12 \
        forall (forall singleton x13 \ propId singleton star star) x13 \
         propId singleton (app x10 x11) (app x10 x12))
      (lambda
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        app x8
         (elim_setSigma x10 (x11 \
           setSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) x11 \ x12 \
           pair (setPi singleton x13 \ propId singleton star star) (x13 \
            forall singleton x14 \
             forall singleton x15 \
              forall (propId singleton x14 x15) x16 \
               propId singleton star star)
            (lambda singleton x13 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x1) star) x3)
               (app x11 x13))
            (forall_lam singleton x13 \
              forall_lam singleton x14 \
               forall_lam (propId singleton x13 x14) x15 \
                forall_app (forall_app (forall_app x12 x13) x14) x15)))
      (forall_lam
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall_lam
         (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x11 \
         forall_lam (forall singleton x12 \ propId singleton star star) x12 \
          forall_app
           (forall_app
             (forall_app x9
               (elim_setSigma x10 (x13 \
                 setSigma (setPi singleton x14 \ propId singleton star star)
                  x14 \
                  forall singleton x15 \
                   forall singleton x16 \
                    forall (propId singleton x15 x16) x17 \
                     propId singleton star star) x13 \ x14 \
                 pair (setPi singleton x15 \ propId singleton star star)
                  (x15 \
                  forall singleton x16 \
                   forall singleton x17 \
                    forall (propId singleton x16 x17) x18 \
                     propId singleton star star)
                  (lambda singleton x15 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x1) star) x3)
                     (app x13 x15))
                  (forall_lam singleton x15 \
                    forall_lam singleton x16 \
                     forall_lam (propId singleton x15 x16) x17 \
                      forall_app (forall_app (forall_app x14 x15) x16) x17)))
             (elim_setSigma x11 (x13 \
               setSigma (setPi singleton x14 \ propId singleton star star)
                x14 \
                forall singleton x15 \
                 forall singleton x16 \
                  forall (propId singleton x15 x16) x17 \
                   propId singleton star star) x13 \ x14 \
               pair (setPi singleton x15 \ propId singleton star star) (x15 \
                forall singleton x16 \
                 forall singleton x17 \
                  forall (propId singleton x16 x17) x18 \
                   propId singleton star star)
                (lambda singleton x15 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x1) star) x3)
                   (app x13 x15))
                (forall_lam singleton x15 \
                  forall_lam singleton x16 \
                   forall_lam (propId singleton x15 x16) x17 \
                    forall_app (forall_app (forall_app x14 x15) x16) x17)))
           (forall_lam singleton x13 \ forall_app x12 x13))))
"
"10__________[+[Begin 
tau singleton singleton X915^8
"
"10----------]-]Success  
tau singleton singleton x8 \ x8
"
"10__________[+[Begin 
X125^8 =
 app
  (elim_setSigma x7 (x8 \
    setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \ singleton) x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall
         (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x11 \
         forall (forall singleton x12 \ propId singleton star star) x12 \
          propId singleton (app x9 x10) (app x9 x11)) x9 \ singleton) x8 \
    x9 \ x8)
  (elim_setSigma
    (pair
      (setPi
        (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) (x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10))
      (lambda
        (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ star)
      (forall_lam
        (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall_lam
         (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall_lam (forall singleton x10 \ propId singleton star star) x10 \
          fixMe "prova di riflessivita'" (propId singleton star star))) (x8 \
    setSigma
     (setPi
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \ singleton) x9 \
     forall
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall (forall singleton x12 \ propId singleton star star) x12 \
        propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
    pair
     (setPi
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \ singleton) (x10 \
     forall
      (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x11 \
      forall
       (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
       x12 \
       forall (forall singleton x13 \ propId singleton star star) x13 \
        propId singleton (app x10 x11) (app x10 x12))
     (lambda
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       app x8
        (elim_setSigma x10 (x11 \
          setSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) x11 \ x12 \
          pair (setPi singleton x13 \ propId singleton star star) (x13 \
           forall singleton x14 \
            forall singleton x15 \
             forall (propId singleton x14 x15) x16 \
              propId singleton star star)
           (lambda singleton x13 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x1) star) x3)
              (app x11 x13))
           (forall_lam singleton x13 \
             forall_lam singleton x14 \
              forall_lam (propId singleton x13 x14) x15 \
               forall_app (forall_app (forall_app x12 x13) x14) x15)))
     (forall_lam
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall_lam
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        forall_lam (forall singleton x12 \ propId singleton star star) x12 \
         forall_app
          (forall_app
            (forall_app x9
              (elim_setSigma x10 (x13 \
                setSigma (setPi singleton x14 \ propId singleton star star)
                 x14 \
                 forall singleton x15 \
                  forall singleton x16 \
                   forall (propId singleton x15 x16) x17 \
                    propId singleton star star) x13 \ x14 \
                pair (setPi singleton x15 \ propId singleton star star)
                 (x15 \
                 forall singleton x16 \
                  forall singleton x17 \
                   forall (propId singleton x16 x17) x18 \
                    propId singleton star star)
                 (lambda singleton x15 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x1) star) x3)
                    (app x13 x15))
                 (forall_lam singleton x15 \
                   forall_lam singleton x16 \
                    forall_lam (propId singleton x15 x16) x17 \
                     forall_app (forall_app (forall_app x14 x15) x16) x17)))
            (elim_setSigma x11 (x13 \
              setSigma (setPi singleton x14 \ propId singleton star star)
               x14 \
               forall singleton x15 \
                forall singleton x16 \
                 forall (propId singleton x15 x16) x17 \
                  propId singleton star star) x13 \ x14 \
              pair (setPi singleton x15 \ propId singleton star star) (x15 \
               forall singleton x16 \
                forall singleton x17 \
                 forall (propId singleton x16 x17) x18 \
                  propId singleton star star)
               (lambda singleton x15 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x1) star) x3)
                  (app x13 x15))
               (forall_lam singleton x15 \
                 forall_lam singleton x16 \
                  forall_lam (propId singleton x15 x16) x17 \
                   forall_app (forall_app (forall_app x14 x15) x16) x17)))
          (forall_lam singleton x13 \ forall_app x12 x13)))
"
"10----------]-]Success  
app
 (elim_setSigma x7 (x8 \
   setPi
    (setSigma
      (setPi
        (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \ singleton) x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        forall (forall singleton x12 \ propId singleton star star) x12 \
         propId singleton (app x9 x10) (app x9 x11)) x9 \ singleton) x8 \
   x9 \ x8)
 (elim_setSigma
   (pair
     (setPi
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ singleton) (x8 \
     forall
      (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall (forall singleton x11 \ propId singleton star star) x11 \
        propId singleton (app x8 x9) (app x8 x10))
     (lambda
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ star)
     (forall_lam
       (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall_lam
        (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall_lam (forall singleton x10 \ propId singleton star star) x10 \
         fixMe "prova di riflessivita'" (propId singleton star star))) (x8 \
   setSigma
    (setPi
      (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \ singleton) x9 \
    forall
     (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall
      (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x11 \
      forall (forall singleton x12 \ propId singleton star star) x12 \
       propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
   pair
    (setPi
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \ singleton) (x10 \
    forall
     (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x11 \
     forall
      (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
      x12 \
      forall (forall singleton x13 \ propId singleton star star) x13 \
       propId singleton (app x10 x11) (app x10 x12))
    (lambda
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      app x8
       (elim_setSigma x10 (x11 \
         setSigma (setPi singleton x12 \ propId singleton star star) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x11 \ x12 \
         pair (setPi singleton x13 \ propId singleton star star) (x13 \
          forall singleton x14 \
           forall singleton x15 \
            forall (propId singleton x14 x15) x16 \
             propId singleton star star)
          (lambda singleton x13 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x1) star) x3)
             (app x11 x13))
          (forall_lam singleton x13 \
            forall_lam singleton x14 \
             forall_lam (propId singleton x13 x14) x15 \
              forall_app (forall_app (forall_app x12 x13) x14) x15)))
    (forall_lam
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall_lam
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall_lam (forall singleton x12 \ propId singleton star star) x12 \
        forall_app
         (forall_app
           (forall_app x9
             (elim_setSigma x10 (x13 \
               setSigma (setPi singleton x14 \ propId singleton star star)
                x14 \
                forall singleton x15 \
                 forall singleton x16 \
                  forall (propId singleton x15 x16) x17 \
                   propId singleton star star) x13 \ x14 \
               pair (setPi singleton x15 \ propId singleton star star) (x15 \
                forall singleton x16 \
                 forall singleton x17 \
                  forall (propId singleton x16 x17) x18 \
                   propId singleton star star)
                (lambda singleton x15 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x1) star) x3)
                   (app x13 x15))
                (forall_lam singleton x15 \
                  forall_lam singleton x16 \
                   forall_lam (propId singleton x15 x16) x17 \
                    forall_app (forall_app (forall_app x14 x15) x16) x17)))
           (elim_setSigma x11 (x13 \
             setSigma (setPi singleton x14 \ propId singleton star star)
              x14 \
              forall singleton x15 \
               forall singleton x16 \
                forall (propId singleton x15 x16) x17 \
                 propId singleton star star) x13 \ x14 \
             pair (setPi singleton x15 \ propId singleton star star) (x15 \
              forall singleton x16 \
               forall singleton x17 \
                forall (propId singleton x16 x17) x18 \
                 propId singleton star star)
              (lambda singleton x15 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x1) star) x3)
                 (app x13 x15))
              (forall_lam singleton x15 \
                forall_lam singleton x16 \
                 forall_lam (propId singleton x15 x16) x17 \
                  forall_app (forall_app (forall_app x14 x15) x16) x17)))
         (forall_lam singleton x13 \ forall_app x12 x13))) =
 app
  (elim_setSigma x7 (x8 \
    setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \ singleton) x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall
         (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x11 \
         forall (forall singleton x12 \ propId singleton star star) x12 \
          propId singleton (app x9 x10) (app x9 x11)) x9 \ singleton) x8 \
    x9 \ x8)
  (elim_setSigma
    (pair
      (setPi
        (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) (x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10))
      (lambda
        (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ star)
      (forall_lam
        (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall_lam
         (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall_lam (forall singleton x10 \ propId singleton star star) x10 \
          fixMe "prova di riflessivita'" (propId singleton star star))) (x8 \
    setSigma
     (setPi
       (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \ singleton) x9 \
     forall
      (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall (forall singleton x12 \ propId singleton star star) x12 \
        propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
    pair
     (setPi
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \ singleton) (x10 \
     forall
      (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x11 \
      forall
       (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
       x12 \
       forall (forall singleton x13 \ propId singleton star star) x13 \
        propId singleton (app x10 x11) (app x10 x12))
     (lambda
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       app x8
        (elim_setSigma x10 (x11 \
          setSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) x11 \ x12 \
          pair (setPi singleton x13 \ propId singleton star star) (x13 \
           forall singleton x14 \
            forall singleton x15 \
             forall (propId singleton x14 x15) x16 \
              propId singleton star star)
           (lambda singleton x13 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x1) star) x3)
              (app x11 x13))
           (forall_lam singleton x13 \
             forall_lam singleton x14 \
              forall_lam (propId singleton x13 x14) x15 \
               forall_app (forall_app (forall_app x12 x13) x14) x15)))
     (forall_lam
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall_lam
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        forall_lam (forall singleton x12 \ propId singleton star star) x12 \
         forall_app
          (forall_app
            (forall_app x9
              (elim_setSigma x10 (x13 \
                setSigma (setPi singleton x14 \ propId singleton star star)
                 x14 \
                 forall singleton x15 \
                  forall singleton x16 \
                   forall (propId singleton x15 x16) x17 \
                    propId singleton star star) x13 \ x14 \
                pair (setPi singleton x15 \ propId singleton star star)
                 (x15 \
                 forall singleton x16 \
                  forall singleton x17 \
                   forall (propId singleton x16 x17) x18 \
                    propId singleton star star)
                 (lambda singleton x15 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x1) star) x3)
                    (app x13 x15))
                 (forall_lam singleton x15 \
                   forall_lam singleton x16 \
                    forall_lam (propId singleton x15 x16) x17 \
                     forall_app (forall_app (forall_app x14 x15) x16) x17)))
            (elim_setSigma x11 (x13 \
              setSigma (setPi singleton x14 \ propId singleton star star)
               x14 \
               forall singleton x15 \
                forall singleton x16 \
                 forall (propId singleton x15 x16) x17 \
                  propId singleton star star) x13 \ x14 \
              pair (setPi singleton x15 \ propId singleton star star) (x15 \
               forall singleton x16 \
                forall singleton x17 \
                 forall (propId singleton x16 x17) x18 \
                  propId singleton star star)
               (lambda singleton x15 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x1) star) x3)
                  (app x13 x15))
               (forall_lam singleton x15 \
                 forall_lam singleton x16 \
                  forall_lam (propId singleton x15 x16) x17 \
                   forall_app (forall_app (forall_app x14 x15) x16) x17)))
          (forall_lam singleton x13 \ forall_app x12 x13)))
"
"9---------]-]Success  
interp_isa
 (app x6 (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star))
 singleton
 (app
   (elim_setSigma x7 (x8 \
     setPi
      (setSigma
        (setPi
          (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \ singleton) x9 \
        forall
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall
          (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x11 \
          forall (forall singleton x12 \ propId singleton star star) x12 \
           propId singleton (app x9 x10) (app x9 x11)) x9 \ singleton) x8 \
     x9 \ x8)
   (elim_setSigma
     (pair
       (setPi
         (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) (x8 \
       forall
        (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall
         (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall (forall singleton x11 \ propId singleton star star) x11 \
          propId singleton (app x8 x9) (app x8 x10))
       (lambda
         (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ star)
       (forall_lam
         (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall_lam
          (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall_lam (forall singleton x10 \ propId singleton star star)
           x10 \ fixMe "prova di riflessivita'" (propId singleton star star)))
     (x8 \
     setSigma
      (setPi
        (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \ singleton) x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        forall (forall singleton x12 \ propId singleton star star) x12 \
         propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
     pair
      (setPi
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \ singleton) (x10 \
      forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall
        (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x12 \
        forall (forall singleton x13 \ propId singleton star star) x13 \
         propId singleton (app x10 x11) (app x10 x12))
      (lambda
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        app x8
         (elim_setSigma x10 (x11 \
           setSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) x11 \ x12 \
           pair (setPi singleton x13 \ propId singleton star star) (x13 \
            forall singleton x14 \
             forall singleton x15 \
              forall (propId singleton x14 x15) x16 \
               propId singleton star star)
            (lambda singleton x13 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x1) star) x3)
               (app x11 x13))
            (forall_lam singleton x13 \
              forall_lam singleton x14 \
               forall_lam (propId singleton x13 x14) x15 \
                forall_app (forall_app (forall_app x12 x13) x14) x15)))
      (forall_lam
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall_lam
         (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x11 \
         forall_lam (forall singleton x12 \ propId singleton star star) x12 \
          forall_app
           (forall_app
             (forall_app x9
               (elim_setSigma x10 (x13 \
                 setSigma (setPi singleton x14 \ propId singleton star star)
                  x14 \
                  forall singleton x15 \
                   forall singleton x16 \
                    forall (propId singleton x15 x16) x17 \
                     propId singleton star star) x13 \ x14 \
                 pair (setPi singleton x15 \ propId singleton star star)
                  (x15 \
                  forall singleton x16 \
                   forall singleton x17 \
                    forall (propId singleton x16 x17) x18 \
                     propId singleton star star)
                  (lambda singleton x15 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x1) star) x3)
                     (app x13 x15))
                  (forall_lam singleton x15 \
                    forall_lam singleton x16 \
                     forall_lam (propId singleton x15 x16) x17 \
                      forall_app (forall_app (forall_app x14 x15) x16) x17)))
             (elim_setSigma x11 (x13 \
               setSigma (setPi singleton x14 \ propId singleton star star)
                x14 \
                forall singleton x15 \
                 forall singleton x16 \
                  forall (propId singleton x15 x16) x17 \
                   propId singleton star star) x13 \ x14 \
               pair (setPi singleton x15 \ propId singleton star star) (x15 \
                forall singleton x16 \
                 forall singleton x17 \
                  forall (propId singleton x16 x17) x18 \
                   propId singleton star star)
                (lambda singleton x15 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x1) star) x3)
                   (app x13 x15))
                (forall_lam singleton x15 \
                  forall_lam singleton x16 \
                   forall_lam (propId singleton x15 x16) x17 \
                    forall_app (forall_app (forall_app x14 x15) x16) x17)))
           (forall_lam singleton x13 \ forall_app x12 x13))))
"
"9_________[+[Begin 
interp_isa star singleton X916^8
"
"10__________[+[Begin 
of star X917^8 ext
"
"10----------]-]Success  
of star singleton ext
"
"10__________[+[Begin 
interp star X918^8
"
"10----------]-]Success  
interp star star
"
"10__________[+[Begin 
tau singleton singleton X919^8
"
"10----------]-]Success  
tau singleton singleton x8 \ x8
"
"10__________[+[Begin 
X916^8 = star
"
"10----------]-]Success  
star = star
"
"9---------]-]Success  
interp_isa star singleton star
"
"9_________[+[Begin 
X123 x1 x3 x5 x7 =
 propId singleton
  (app
    (elim_setSigma x7 (x8 \
      setPi
       (setSigma
         (setPi
           (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \ singleton) x9 \
         forall
          (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x10 \
          forall
           (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x11 \
           forall (forall singleton x12 \ propId singleton star star) x12 \
            propId singleton (app x9 x10) (app x9 x11)) x9 \ singleton) x8 \
      x9 \ x8)
    (elim_setSigma
      (pair
        (setPi
          (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \ singleton) (x8 \
        forall
         (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall
          (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x10 \
          forall (forall singleton x11 \ propId singleton star star) x11 \
           propId singleton (app x8 x9) (app x8 x10))
        (lambda
          (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \ star)
        (forall_lam
          (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall_lam
           (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \
           forall_lam (forall singleton x10 \ propId singleton star star)
            x10 \ fixMe "prova di riflessivita'" (propId singleton star star)))
      (x8 \
      setSigma
       (setPi
         (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \ singleton) x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall
         (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x11 \
         forall (forall singleton x12 \ propId singleton star star) x12 \
          propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
      pair
       (setPi
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \ singleton) (x10 \
       forall
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        forall
         (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) x12 \
         forall (forall singleton x13 \ propId singleton star star) x13 \
          propId singleton (app x10 x11) (app x10 x12))
       (lambda
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         app x8
          (elim_setSigma x10 (x11 \
            setSigma (setPi singleton x12 \ propId singleton star star) x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star) x11 \ x12 \
            pair (setPi singleton x13 \ propId singleton star star) (x13 \
             forall singleton x14 \
              forall singleton x15 \
               forall (propId singleton x14 x15) x16 \
                propId singleton star star)
             (lambda singleton x13 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x1) star) x3)
                (app x11 x13))
             (forall_lam singleton x13 \
               forall_lam singleton x14 \
                forall_lam (propId singleton x13 x14) x15 \
                 forall_app (forall_app (forall_app x12 x13) x14) x15)))
       (forall_lam
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall_lam
          (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x11 \
          forall_lam (forall singleton x12 \ propId singleton star star)
           x12 \
           forall_app
            (forall_app
              (forall_app x9
                (elim_setSigma x10 (x13 \
                  setSigma (setPi singleton x14 \ propId singleton star star)
                   x14 \
                   forall singleton x15 \
                    forall singleton x16 \
                     forall (propId singleton x15 x16) x17 \
                      propId singleton star star) x13 \ x14 \
                  pair (setPi singleton x15 \ propId singleton star star)
                   (x15 \
                   forall singleton x16 \
                    forall singleton x17 \
                     forall (propId singleton x16 x17) x18 \
                      propId singleton star star)
                   (lambda singleton x15 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (fixMe "prova di riflessivita'"
                                (propId singleton star star))) x1) star) x3)
                      (app x13 x15))
                   (forall_lam singleton x15 \
                     forall_lam singleton x16 \
                      forall_lam (propId singleton x15 x16) x17 \
                       forall_app (forall_app (forall_app x14 x15) x16) x17)))
              (elim_setSigma x11 (x13 \
                setSigma (setPi singleton x14 \ propId singleton star star)
                 x14 \
                 forall singleton x15 \
                  forall singleton x16 \
                   forall (propId singleton x15 x16) x17 \
                    propId singleton star star) x13 \ x14 \
                pair (setPi singleton x15 \ propId singleton star star)
                 (x15 \
                 forall singleton x16 \
                  forall singleton x17 \
                   forall (propId singleton x16 x17) x18 \
                    propId singleton star star)
                 (lambda singleton x15 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x1) star) x3)
                    (app x13 x15))
                 (forall_lam singleton x15 \
                   forall_lam singleton x16 \
                    forall_lam (propId singleton x15 x16) x17 \
                     forall_app (forall_app (forall_app x14 x15) x16) x17)))
            (forall_lam singleton x13 \ forall_app x12 x13)))) star
"
"9---------]-]Success  
propId singleton
 (app
   (elim_setSigma x7 (x8 \
     setPi
      (setSigma
        (setPi
          (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \ singleton) x9 \
        forall
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall
          (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x11 \
          forall (forall singleton x12 \ propId singleton star star) x12 \
           propId singleton (app x9 x10) (app x9 x11)) x9 \ singleton) x8 \
     x9 \ x8)
   (elim_setSigma
     (pair
       (setPi
         (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) (x8 \
       forall
        (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall
         (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall (forall singleton x11 \ propId singleton star star) x11 \
          propId singleton (app x8 x9) (app x8 x10))
       (lambda
         (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ star)
       (forall_lam
         (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall_lam
          (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall_lam (forall singleton x10 \ propId singleton star star)
           x10 \ fixMe "prova di riflessivita'" (propId singleton star star)))
     (x8 \
     setSigma
      (setPi
        (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \ singleton) x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        forall (forall singleton x12 \ propId singleton star star) x12 \
         propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
     pair
      (setPi
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \ singleton) (x10 \
      forall
       (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x11 \
       forall
        (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x12 \
        forall (forall singleton x13 \ propId singleton star star) x13 \
         propId singleton (app x10 x11) (app x10 x12))
      (lambda
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        app x8
         (elim_setSigma x10 (x11 \
           setSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) x11 \ x12 \
           pair (setPi singleton x13 \ propId singleton star star) (x13 \
            forall singleton x14 \
             forall singleton x15 \
              forall (propId singleton x14 x15) x16 \
               propId singleton star star)
            (lambda singleton x13 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x1) star) x3)
               (app x11 x13))
            (forall_lam singleton x13 \
              forall_lam singleton x14 \
               forall_lam (propId singleton x13 x14) x15 \
                forall_app (forall_app (forall_app x12 x13) x14) x15)))
      (forall_lam
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall_lam
         (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x11 \
         forall_lam (forall singleton x12 \ propId singleton star star) x12 \
          forall_app
           (forall_app
             (forall_app x9
               (elim_setSigma x10 (x13 \
                 setSigma (setPi singleton x14 \ propId singleton star star)
                  x14 \
                  forall singleton x15 \
                   forall singleton x16 \
                    forall (propId singleton x15 x16) x17 \
                     propId singleton star star) x13 \ x14 \
                 pair (setPi singleton x15 \ propId singleton star star)
                  (x15 \
                  forall singleton x16 \
                   forall singleton x17 \
                    forall (propId singleton x16 x17) x18 \
                     propId singleton star star)
                  (lambda singleton x15 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x1) star) x3)
                     (app x13 x15))
                  (forall_lam singleton x15 \
                    forall_lam singleton x16 \
                     forall_lam (propId singleton x15 x16) x17 \
                      forall_app (forall_app (forall_app x14 x15) x16) x17)))
             (elim_setSigma x11 (x13 \
               setSigma (setPi singleton x14 \ propId singleton star star)
                x14 \
                forall singleton x15 \
                 forall singleton x16 \
                  forall (propId singleton x15 x16) x17 \
                   propId singleton star star) x13 \ x14 \
               pair (setPi singleton x15 \ propId singleton star star) (x15 \
                forall singleton x16 \
                 forall singleton x17 \
                  forall (propId singleton x16 x17) x18 \
                   propId singleton star star)
                (lambda singleton x15 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x1) star) x3)
                   (app x13 x15))
                (forall_lam singleton x15 \
                  forall_lam singleton x16 \
                   forall_lam (propId singleton x15 x16) x17 \
                    forall_app (forall_app (forall_app x14 x15) x16) x17)))
           (forall_lam singleton x13 \ forall_app x12 x13)))) star =
 propId singleton
  (app
    (elim_setSigma x7 (x8 \
      setPi
       (setSigma
         (setPi
           (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \ singleton) x9 \
         forall
          (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x10 \
          forall
           (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x11 \
           forall (forall singleton x12 \ propId singleton star star) x12 \
            propId singleton (app x9 x10) (app x9 x11)) x9 \ singleton) x8 \
      x9 \ x8)
    (elim_setSigma
      (pair
        (setPi
          (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \ singleton) (x8 \
        forall
         (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall
          (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x10 \
          forall (forall singleton x11 \ propId singleton star star) x11 \
           propId singleton (app x8 x9) (app x8 x10))
        (lambda
          (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \ star)
        (forall_lam
          (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall_lam
           (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \
           forall_lam (forall singleton x10 \ propId singleton star star)
            x10 \ fixMe "prova di riflessivita'" (propId singleton star star)))
      (x8 \
      setSigma
       (setPi
         (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \ singleton) x9 \
       forall
        (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall
         (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x11 \
         forall (forall singleton x12 \ propId singleton star star) x12 \
          propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
      pair
       (setPi
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \ singleton) (x10 \
       forall
        (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x11 \
        forall
         (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) x12 \
         forall (forall singleton x13 \ propId singleton star star) x13 \
          propId singleton (app x10 x11) (app x10 x12))
       (lambda
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         app x8
          (elim_setSigma x10 (x11 \
            setSigma (setPi singleton x12 \ propId singleton star star) x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star) x11 \ x12 \
            pair (setPi singleton x13 \ propId singleton star star) (x13 \
             forall singleton x14 \
              forall singleton x15 \
               forall (propId singleton x14 x15) x16 \
                propId singleton star star)
             (lambda singleton x13 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x1) star) x3)
                (app x11 x13))
             (forall_lam singleton x13 \
               forall_lam singleton x14 \
                forall_lam (propId singleton x13 x14) x15 \
                 forall_app (forall_app (forall_app x12 x13) x14) x15)))
       (forall_lam
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall_lam
          (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x11 \
          forall_lam (forall singleton x12 \ propId singleton star star)
           x12 \
           forall_app
            (forall_app
              (forall_app x9
                (elim_setSigma x10 (x13 \
                  setSigma (setPi singleton x14 \ propId singleton star star)
                   x14 \
                   forall singleton x15 \
                    forall singleton x16 \
                     forall (propId singleton x15 x16) x17 \
                      propId singleton star star) x13 \ x14 \
                  pair (setPi singleton x15 \ propId singleton star star)
                   (x15 \
                   forall singleton x16 \
                    forall singleton x17 \
                     forall (propId singleton x16 x17) x18 \
                      propId singleton star star)
                   (lambda singleton x15 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (fixMe "prova di riflessivita'"
                                (propId singleton star star))) x1) star) x3)
                      (app x13 x15))
                   (forall_lam singleton x15 \
                     forall_lam singleton x16 \
                      forall_lam (propId singleton x15 x16) x17 \
                       forall_app (forall_app (forall_app x14 x15) x16) x17)))
              (elim_setSigma x11 (x13 \
                setSigma (setPi singleton x14 \ propId singleton star star)
                 x14 \
                 forall singleton x15 \
                  forall singleton x16 \
                   forall (propId singleton x15 x16) x17 \
                    propId singleton star star) x13 \ x14 \
                pair (setPi singleton x15 \ propId singleton star star)
                 (x15 \
                 forall singleton x16 \
                  forall singleton x17 \
                   forall (propId singleton x16 x17) x18 \
                    propId singleton star star)
                 (lambda singleton x15 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x1) star) x3)
                    (app x13 x15))
                 (forall_lam singleton x15 \
                   forall_lam singleton x16 \
                    forall_lam (propId singleton x15 x16) x17 \
                     forall_app (forall_app (forall_app x14 x15) x16) x17)))
            (forall_lam singleton x13 \ forall_app x12 x13)))) star
"
"8--------]-]Success  
interp
 (propEq singleton
   (app x6
     (lambda (setPi singleton x8 \ propEq singleton star star) x8 \ star))
   star)
 (propId singleton
   (app
     (elim_setSigma x7 (x8 \
       setPi
        (setSigma
          (setPi
            (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \ singleton) x9 \
          forall
           (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x10 \
           forall
            (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x11 \
            forall (forall singleton x12 \ propId singleton star star) x12 \
             propId singleton (app x9 x10) (app x9 x11)) x9 \ singleton) x8 \
       x9 \ x8)
     (elim_setSigma
       (pair
         (setPi
           (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \ singleton) (x8 \
         forall
          (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall
           (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x10 \
           forall (forall singleton x11 \ propId singleton star star) x11 \
            propId singleton (app x8 x9) (app x8 x10))
         (lambda
           (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \ star)
         (forall_lam
           (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           forall_lam
            (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            forall_lam (forall singleton x10 \ propId singleton star star)
             x10 \
             fixMe "prova di riflessivita'" (propId singleton star star)))
       (x8 \
       setSigma
        (setPi
          (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \ singleton) x9 \
        forall
         (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall
          (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x11 \
          forall (forall singleton x12 \ propId singleton star star) x12 \
           propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
       pair
        (setPi
          (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x10 \ singleton) (x10 \
        forall
         (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x11 \
         forall
          (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) x12 \
          forall (forall singleton x13 \ propId singleton star star) x13 \
           propId singleton (app x10 x11) (app x10 x12))
        (lambda
          (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x10 \
          app x8
           (elim_setSigma x10 (x11 \
             setSigma (setPi singleton x12 \ propId singleton star star)
              x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star) x11 \ x12 \
             pair (setPi singleton x13 \ propId singleton star star) (x13 \
              forall singleton x14 \
               forall singleton x15 \
                forall (propId singleton x14 x15) x16 \
                 propId singleton star star)
              (lambda singleton x13 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x1) star) x3)
                 (app x11 x13))
              (forall_lam singleton x13 \
                forall_lam singleton x14 \
                 forall_lam (propId singleton x13 x14) x15 \
                  forall_app (forall_app (forall_app x12 x13) x14) x15)))
        (forall_lam
          (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x10 \
          forall_lam
           (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x11 \
           forall_lam (forall singleton x12 \ propId singleton star star)
            x12 \
            forall_app
             (forall_app
               (forall_app x9
                 (elim_setSigma x10 (x13 \
                   setSigma
                    (setPi singleton x14 \ propId singleton star star) x14 \
                    forall singleton x15 \
                     forall singleton x16 \
                      forall (propId singleton x15 x16) x17 \
                       propId singleton star star) x13 \ x14 \
                   pair (setPi singleton x15 \ propId singleton star star)
                    (x15 \
                    forall singleton x16 \
                     forall singleton x17 \
                      forall (propId singleton x16 x17) x18 \
                       propId singleton star star)
                    (lambda singleton x15 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (fixMe "prova di riflessivita'"
                                 (propId singleton star star))) x1) star) x3)
                       (app x13 x15))
                    (forall_lam singleton x15 \
                      forall_lam singleton x16 \
                       forall_lam (propId singleton x15 x16) x17 \
                        forall_app (forall_app (forall_app x14 x15) x16) x17)))
               (elim_setSigma x11 (x13 \
                 setSigma (setPi singleton x14 \ propId singleton star star)
                  x14 \
                  forall singleton x15 \
                   forall singleton x16 \
                    forall (propId singleton x15 x16) x17 \
                     propId singleton star star) x13 \ x14 \
                 pair (setPi singleton x15 \ propId singleton star star)
                  (x15 \
                  forall singleton x16 \
                   forall singleton x17 \
                    forall (propId singleton x16 x17) x18 \
                     propId singleton star star)
                  (lambda singleton x15 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x1) star) x3)
                     (app x13 x15))
                  (forall_lam singleton x15 \
                    forall_lam singleton x16 \
                     forall_lam (propId singleton x15 x16) x17 \
                      forall_app (forall_app (forall_app x14 x15) x16) x17)))
             (forall_lam singleton x13 \ forall_app x12 x13)))) star)
"
"7-------]-]Success  
pi x6 \
 pi x7 \
  interp x6 x7 =>
   locDecl x6
    (setPi
      (setPi (setPi singleton x8 \ propEq singleton star x0) x8 \ singleton)
      x8 \ singleton) =>
    locDecl x7
     (setSigma
       (setPi
         (setSigma
           (setPi
             (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \ singleton) x8 \
           forall
            (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            forall
             (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x10 \
             forall (forall singleton x11 \ propId singleton star star) x11 \
              propId singleton (app x8 x9) (app x8 x10)) x8 \ singleton) x8 \
       forall
        (setSigma
          (setPi
            (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \ singleton) x9 \
          forall
           (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x10 \
           forall
            (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x11 \
            forall (forall singleton x12 \ propId singleton star star) x12 \
             propId singleton (app x9 x10) (app x9 x11)) x9 \
        forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x10 \ singleton) x10 \
           forall
            (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x11 \
            forall
             (setSigma (setPi singleton x12 \ propId singleton star x1) x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star) x12 \
             forall (forall singleton x13 \ propId singleton star star) x13 \
              propId singleton (app x10 x11) (app x10 x12)) x10 \
         forall
          (forall
            (setSigma (setPi singleton x11 \ propId singleton star x1) x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x11 \
            propId singleton
             (app
               (elim_setSigma x9 (x12 \
                 setPi
                  (setSigma (setPi singleton x13 \ propId singleton star x1)
                    x13 \
                    forall singleton x14 \
                     forall singleton x15 \
                      forall (propId singleton x14 x15) x16 \
                       propId singleton star star) x13 \ singleton) x12 \
                 x13 \ x12) x11)
             (app
               (elim_setSigma x10 (x12 \
                 setPi
                  (setSigma (setPi singleton x13 \ propId singleton star x1)
                    x13 \
                    forall singleton x14 \
                     forall singleton x15 \
                      forall (propId singleton x14 x15) x16 \
                       propId singleton star star) x13 \ singleton) x12 \
                 x13 \ x12) x11)) x11 \
          propId singleton (app x8 x9) (app x8 x10)) =>
     spy
      (interp
        (propEq singleton
          (app x6
            (lambda (setPi singleton x8 \ propEq singleton star star) x8 \
              star)) star)
        (propId singleton
          (app
            (elim_setSigma x7 (x8 \
              setPi
               (setSigma
                 (setPi
                   (setSigma (setPi singleton x9 \ propId singleton star x1)
                     x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star) x9 \ singleton) x9 \
                 forall
                  (setSigma (setPi singleton x10 \ propId singleton star x1)
                    x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton star star) x10 \
                  forall
                   (setSigma (setPi singleton x11 \ propId singleton star x1)
                     x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton star star) x11 \
                   forall (forall singleton x12 \ propId singleton star star)
                    x12 \ propId singleton (app x9 x10) (app x9 x11)) x9 \
               singleton) x8 \ x9 \ x8)
            (elim_setSigma
              (pair
                (setPi
                  (setSigma (setPi singleton x8 \ propId singleton star star)
                    x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star) x8 \ singleton) (x8 \
                forall
                 (setSigma (setPi singleton x9 \ propId singleton star star)
                   x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton star star) x9 \
                 forall
                  (setSigma
                    (setPi singleton x10 \ propId singleton star star) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton star star) x10 \
                  forall (forall singleton x11 \ propId singleton star star)
                   x11 \ propId singleton (app x8 x9) (app x8 x10))
                (lambda
                  (setSigma (setPi singleton x8 \ propId singleton star star)
                    x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star) x8 \ star)
                (forall_lam
                  (setSigma (setPi singleton x8 \ propId singleton star star)
                    x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star) x8 \
                  forall_lam
                   (setSigma
                     (setPi singleton x9 \ propId singleton star star) x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star) x9 \
                   forall_lam
                    (forall singleton x10 \ propId singleton star star) x10 \
                    fixMe "prova di riflessivita'"
                     (propId singleton star star))) (x8 \
              setSigma
               (setPi
                 (setSigma (setPi singleton x9 \ propId singleton star x1)
                   x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton star star) x9 \ singleton) x9 \
               forall
                (setSigma (setPi singleton x10 \ propId singleton star x1)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x10 \
                forall
                 (setSigma (setPi singleton x11 \ propId singleton star x1)
                   x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton star star) x11 \
                 forall (forall singleton x12 \ propId singleton star star)
                  x12 \ propId singleton (app x9 x10) (app x9 x11)) x8 \ x9 \
              pair
               (setPi
                 (setSigma (setPi singleton x10 \ propId singleton star x1)
                   x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star) x10 \ singleton) (x10 \
               forall
                (setSigma (setPi singleton x11 \ propId singleton star x1)
                  x11 \
                  forall singleton x12 \
                   forall singleton x13 \
                    forall (propId singleton x12 x13) x14 \
                     propId singleton star star) x11 \
                forall
                 (setSigma (setPi singleton x12 \ propId singleton star x1)
                   x12 \
                   forall singleton x13 \
                    forall singleton x14 \
                     forall (propId singleton x13 x14) x15 \
                      propId singleton star star) x12 \
                 forall (forall singleton x13 \ propId singleton star star)
                  x13 \ propId singleton (app x10 x11) (app x10 x12))
               (lambda
                 (setSigma (setPi singleton x10 \ propId singleton star x1)
                   x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star) x10 \
                 app x8
                  (elim_setSigma x10 (x11 \
                    setSigma
                     (setPi singleton x12 \ propId singleton star star) x12 \
                     forall singleton x13 \
                      forall singleton x14 \
                       forall (propId singleton x13 x14) x15 \
                        propId singleton star star) x11 \ x12 \
                    pair (setPi singleton x13 \ propId singleton star star)
                     (x13 \
                     forall singleton x14 \
                      forall singleton x15 \
                       forall (propId singleton x14 x15) x16 \
                        propId singleton star star)
                     (lambda singleton x13 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (fixMe "prova di riflessivita'"
                                  (propId singleton star star))) x1) star) x3)
                        (app x11 x13))
                     (forall_lam singleton x13 \
                       forall_lam singleton x14 \
                        forall_lam (propId singleton x13 x14) x15 \
                         forall_app (forall_app (forall_app x12 x13) x14) x15)))
               (forall_lam
                 (setSigma (setPi singleton x10 \ propId singleton star x1)
                   x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star) x10 \
                 forall_lam
                  (setSigma (setPi singleton x11 \ propId singleton star x1)
                    x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton star star) x11 \
                  forall_lam
                   (forall singleton x12 \ propId singleton star star) x12 \
                   forall_app
                    (forall_app
                      (forall_app x9
                        (elim_setSigma x10 (x13 \
                          setSigma
                           (setPi singleton x14 \ propId singleton star star)
                           x14 \
                           forall singleton x15 \
                            forall singleton x16 \
                             forall (propId singleton x15 x16) x17 \
                              propId singleton star star) x13 \ x14 \
                          pair
                           (setPi singleton x15 \ propId singleton star star)
                           (x15 \
                           forall singleton x16 \
                            forall singleton x17 \
                             forall (propId singleton x16 x17) x18 \
                              propId singleton star star)
                           (lambda singleton x15 \
                             impl_app
                              (impl_app
                                (forall_app
                                  (forall_app
                                    (impl_app
                                      (forall_app
                                        (forall_app (k_propId singleton) star)
                                        star)
                                      (fixMe "prova di riflessivita'"
                                        (propId singleton star star))) x1)
                                  star) x3) (app x13 x15))
                           (forall_lam singleton x15 \
                             forall_lam singleton x16 \
                              forall_lam (propId singleton x15 x16) x17 \
                               forall_app
                                (forall_app (forall_app x14 x15) x16) x17)))
                      (elim_setSigma x11 (x13 \
                        setSigma
                         (setPi singleton x14 \ propId singleton star star)
                         x14 \
                         forall singleton x15 \
                          forall singleton x16 \
                           forall (propId singleton x15 x16) x17 \
                            propId singleton star star) x13 \ x14 \
                        pair
                         (setPi singleton x15 \ propId singleton star star)
                         (x15 \
                         forall singleton x16 \
                          forall singleton x17 \
                           forall (propId singleton x16 x17) x18 \
                            propId singleton star star)
                         (lambda singleton x15 \
                           impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app (k_propId singleton) star)
                                      star)
                                    (fixMe "prova di riflessivita'"
                                      (propId singleton star star))) x1) star)
                              x3) (app x13 x15))
                         (forall_lam singleton x15 \
                           forall_lam singleton x16 \
                            forall_lam (propId singleton x15 x16) x17 \
                             forall_app (forall_app (forall_app x14 x15) x16)
                              x17)))
                    (forall_lam singleton x13 \ forall_app x12 x13)))) star))
"
"6------]-]Success  
pi x4 \
 pi x5 \
  ((interp x4 x5), (locDecl x4 (propEq singleton star x0)),
   (locDecl x5 (propId singleton star x1))) =>
   interp
    (forall
      (setPi
        (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
        x6 \ singleton) x6 \
      propEq singleton
       (app x6
         (lambda (setPi singleton x7 \ propEq singleton star star) x7 \ star))
       star)
    (forall
      (setSigma
        (setPi
          (setSigma
            (setPi
              (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \ singleton) x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall (forall singleton x9 \ propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) x6 \
        forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \ singleton) x7 \
           forall
            (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \
            forall
             (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x9 \
             forall (forall singleton x10 \ propId singleton star star) x10 \
              propId singleton (app x7 x8) (app x7 x9)) x7 \
         forall
          (setSigma
            (setPi
              (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \ singleton) x8 \
            forall
             (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x9 \
             forall
              (setSigma (setPi singleton x10 \ propId singleton star x1)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x10 \
              forall (forall singleton x11 \ propId singleton star star)
               x11 \ propId singleton (app x8 x9) (app x8 x10)) x8 \
          forall
           (forall
             (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x9 \
             propId singleton
              (app
                (elim_setSigma x7 (x10 \
                  setPi
                   (setSigma (setPi singleton x11 \ propId singleton star x1)
                     x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton star star) x11 \ singleton) x10 \
                  x11 \ x10) x9)
              (app
                (elim_setSigma x8 (x10 \
                  setPi
                   (setSigma (setPi singleton x11 \ propId singleton star x1)
                     x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton star star) x11 \ singleton) x10 \
                  x11 \ x10) x9)) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      propId singleton
       (app
         (elim_setSigma x6 (x7 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x8 \ propId singleton star x1)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \ singleton) x8 \
              forall
               (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \
               forall
                (setSigma (setPi singleton x10 \ propId singleton star x1)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x10 \
                forall (forall singleton x11 \ propId singleton star star)
                 x11 \ propId singleton (app x8 x9) (app x8 x10)) x8 \
            singleton) x7 \ x8 \ x7)
         (elim_setSigma
           (pair
             (setPi
               (setSigma (setPi singleton x7 \ propId singleton star star)
                 x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) (x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star star)
                x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall
               (setSigma (setPi singleton x9 \ propId singleton star star)
                 x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \
               forall (forall singleton x10 \ propId singleton star star)
                x10 \ propId singleton (app x7 x8) (app x7 x9))
             (lambda
               (setSigma (setPi singleton x7 \ propId singleton star star)
                 x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ star)
             (forall_lam
               (setSigma (setPi singleton x7 \ propId singleton star star)
                 x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall_lam
                (setSigma (setPi singleton x8 \ propId singleton star star)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \
                forall_lam (forall singleton x9 \ propId singleton star star)
                 x9 \
                 fixMe "prova di riflessivita'" (propId singleton star star)))
           (x7 \
           setSigma
            (setPi
              (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \ singleton) x8 \
            forall
             (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x9 \
             forall
              (setSigma (setPi singleton x10 \ propId singleton star x1)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x10 \
              forall (forall singleton x11 \ propId singleton star star)
               x11 \ propId singleton (app x8 x9) (app x8 x10)) x7 \ x8 \
           pair
            (setPi
              (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x9 \ singleton) (x9 \
            forall
             (setSigma (setPi singleton x10 \ propId singleton star x1) x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x10 \
             forall
              (setSigma (setPi singleton x11 \ propId singleton star x1)
                x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star) x11 \
              forall (forall singleton x12 \ propId singleton star star)
               x12 \ propId singleton (app x9 x10) (app x9 x11))
            (lambda
              (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x9 \
              app x7
               (elim_setSigma x9 (x10 \
                 setSigma (setPi singleton x11 \ propId singleton star star)
                  x11 \
                  forall singleton x12 \
                   forall singleton x13 \
                    forall (propId singleton x12 x13) x14 \
                     propId singleton star star) x10 \ x11 \
                 pair (setPi singleton x12 \ propId singleton star star)
                  (x12 \
                  forall singleton x13 \
                   forall singleton x14 \
                    forall (propId singleton x13 x14) x15 \
                     propId singleton star star)
                  (lambda singleton x12 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x1) star) x3)
                     (app x10 x12))
                  (forall_lam singleton x12 \
                    forall_lam singleton x13 \
                     forall_lam (propId singleton x12 x13) x14 \
                      forall_app (forall_app (forall_app x11 x12) x13) x14)))
            (forall_lam
              (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x9 \
              forall_lam
               (setSigma (setPi singleton x10 \ propId singleton star x1)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x10 \
               forall_lam (forall singleton x11 \ propId singleton star star)
                x11 \
                forall_app
                 (forall_app
                   (forall_app x8
                     (elim_setSigma x9 (x12 \
                       setSigma
                        (setPi singleton x13 \ propId singleton star star)
                        x13 \
                        forall singleton x14 \
                         forall singleton x15 \
                          forall (propId singleton x14 x15) x16 \
                           propId singleton star star) x12 \ x13 \
                       pair
                        (setPi singleton x14 \ propId singleton star star)
                        (x14 \
                        forall singleton x15 \
                         forall singleton x16 \
                          forall (propId singleton x15 x16) x17 \
                           propId singleton star star)
                        (lambda singleton x14 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star)
                                   (fixMe "prova di riflessivita'"
                                     (propId singleton star star))) x1) star)
                             x3) (app x12 x14))
                        (forall_lam singleton x14 \
                          forall_lam singleton x15 \
                           forall_lam (propId singleton x14 x15) x16 \
                            forall_app (forall_app (forall_app x13 x14) x15)
                             x16)))
                   (elim_setSigma x10 (x12 \
                     setSigma
                      (setPi singleton x13 \ propId singleton star star)
                      x13 \
                      forall singleton x14 \
                       forall singleton x15 \
                        forall (propId singleton x14 x15) x16 \
                         propId singleton star star) x12 \ x13 \
                     pair (setPi singleton x14 \ propId singleton star star)
                      (x14 \
                      forall singleton x15 \
                       forall singleton x16 \
                        forall (propId singleton x15 x16) x17 \
                         propId singleton star star)
                      (lambda singleton x14 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star)
                                 (fixMe "prova di riflessivita'"
                                   (propId singleton star star))) x1) star)
                           x3) (app x12 x14))
                      (forall_lam singleton x14 \
                        forall_lam singleton x15 \
                         forall_lam (propId singleton x14 x15) x16 \
                          forall_app (forall_app (forall_app x13 x14) x15)
                           x16)))
                 (forall_lam singleton x12 \ forall_app x11 x12)))) star)
"
"5-----]-]Success  
pi x2 \
 pi x3 \
  ((interp x2 x3), (locDecl x2 (propEq singleton x0 star)),
   (locDecl x3 (propId singleton x1 star))) =>
   interp
    (implies (propEq singleton star x0)
      (forall
        (setPi
          (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \
            singleton) x4 \ singleton) x4 \
        propEq singleton
         (app x4
           (lambda (setPi singleton x5 \ propEq singleton star star) x5 \
             star)) star))
    (forall (propId singleton star x1) x4 \
      forall
       (setSigma
         (setPi
           (setSigma
             (setPi
               (setSigma (setPi singleton x5 \ propId singleton star x1) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ singleton) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall
               (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall (forall singleton x8 \ propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
         x5 \
         forall
          (setSigma
            (setPi
              (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \ singleton) x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall (forall singleton x9 \ propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8)) x6 \
          forall
           (setSigma
             (setPi
               (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall
               (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \
               forall (forall singleton x10 \ propId singleton star star)
                x10 \ propId singleton (app x7 x8) (app x7 x9)) x7 \
           forall
            (forall
              (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              propId singleton
               (app
                 (elim_setSigma x6 (x9 \
                   setPi
                    (setSigma
                      (setPi singleton x10 \ propId singleton star x1) x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star) x10 \ singleton) x9 \
                   x10 \ x9) x8)
               (app
                 (elim_setSigma x7 (x9 \
                   setPi
                    (setSigma
                      (setPi singleton x10 \ propId singleton star x1) x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star) x10 \ singleton) x9 \
                   x10 \ x9) x8)) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       propId singleton
        (app
          (elim_setSigma x5 (x6 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x7 \ propId singleton star x1)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \ singleton) x7 \
               forall
                (setSigma (setPi singleton x8 \ propId singleton star x1)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \
                forall
                 (setSigma (setPi singleton x9 \ propId singleton star x1)
                   x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton star star) x9 \
                 forall (forall singleton x10 \ propId singleton star star)
                  x10 \ propId singleton (app x7 x8) (app x7 x9)) x7 \
             singleton) x6 \ x7 \ x6)
          (elim_setSigma
            (pair
              (setPi
                (setSigma (setPi singleton x6 \ propId singleton star star)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \ singleton) (x6 \
              forall
               (setSigma (setPi singleton x7 \ propId singleton star star)
                 x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall
                (setSigma (setPi singleton x8 \ propId singleton star star)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \
                forall (forall singleton x9 \ propId singleton star star)
                 x9 \ propId singleton (app x6 x7) (app x6 x8))
              (lambda
                (setSigma (setPi singleton x6 \ propId singleton star star)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \ star)
              (forall_lam
                (setSigma (setPi singleton x6 \ propId singleton star star)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall_lam
                 (setSigma (setPi singleton x7 \ propId singleton star star)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall_lam
                  (forall singleton x8 \ propId singleton star star) x8 \
                  fixMe "prova di riflessivita'" (propId singleton star star)))
            (x6 \
            setSigma
             (setPi
               (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall
               (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \
               forall (forall singleton x10 \ propId singleton star star)
                x10 \ propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
            pair
             (setPi
               (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) (x8 \
             forall
              (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x9 \
              forall
               (setSigma (setPi singleton x10 \ propId singleton star x1)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x10 \
               forall (forall singleton x11 \ propId singleton star star)
                x11 \ propId singleton (app x8 x9) (app x8 x10))
             (lambda
               (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \
               app x6
                (elim_setSigma x8 (x9 \
                  setSigma (setPi singleton x10 \ propId singleton star star)
                   x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star) x9 \ x10 \
                  pair (setPi singleton x11 \ propId singleton star star)
                   (x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton star star)
                   (lambda singleton x11 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (fixMe "prova di riflessivita'"
                                (propId singleton star star))) x1) star) x3)
                      (app x9 x11))
                   (forall_lam singleton x11 \
                     forall_lam singleton x12 \
                      forall_lam (propId singleton x11 x12) x13 \
                       forall_app (forall_app (forall_app x10 x11) x12) x13)))
             (forall_lam
               (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \
               forall_lam
                (setSigma (setPi singleton x9 \ propId singleton star x1)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x9 \
                forall_lam
                 (forall singleton x10 \ propId singleton star star) x10 \
                 forall_app
                  (forall_app
                    (forall_app x7
                      (elim_setSigma x8 (x11 \
                        setSigma
                         (setPi singleton x12 \ propId singleton star star)
                         x12 \
                         forall singleton x13 \
                          forall singleton x14 \
                           forall (propId singleton x13 x14) x15 \
                            propId singleton star star) x11 \ x12 \
                        pair
                         (setPi singleton x13 \ propId singleton star star)
                         (x13 \
                         forall singleton x14 \
                          forall singleton x15 \
                           forall (propId singleton x14 x15) x16 \
                            propId singleton star star)
                         (lambda singleton x13 \
                           impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app (k_propId singleton) star)
                                      star)
                                    (fixMe "prova di riflessivita'"
                                      (propId singleton star star))) x1) star)
                              x3) (app x11 x13))
                         (forall_lam singleton x13 \
                           forall_lam singleton x14 \
                            forall_lam (propId singleton x13 x14) x15 \
                             forall_app (forall_app (forall_app x12 x13) x14)
                              x15)))
                    (elim_setSigma x9 (x11 \
                      setSigma
                       (setPi singleton x12 \ propId singleton star star)
                       x12 \
                       forall singleton x13 \
                        forall singleton x14 \
                         forall (propId singleton x13 x14) x15 \
                          propId singleton star star) x11 \ x12 \
                      pair (setPi singleton x13 \ propId singleton star star)
                       (x13 \
                       forall singleton x14 \
                        forall singleton x15 \
                         forall (propId singleton x14 x15) x16 \
                          propId singleton star star)
                       (lambda singleton x13 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star)
                                  (fixMe "prova di riflessivita'"
                                    (propId singleton star star))) x1) star)
                            x3) (app x11 x13))
                       (forall_lam singleton x13 \
                         forall_lam singleton x14 \
                          forall_lam (propId singleton x13 x14) x15 \
                           forall_app (forall_app (forall_app x12 x13) x14)
                            x15)))
                  (forall_lam singleton x11 \ forall_app x10 x11)))) star)
"
"4----]-]Success  
interp
 (implies (propEq singleton x0 star)
   (implies (propEq singleton star x0)
     (forall
       (setPi
         (setPi (setPi singleton x2 \ propEq singleton star x0) x2 \
           singleton) x2 \ singleton) x2 \
       propEq singleton
        (app x2
          (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star))
        star)))
 (forall (propId singleton x1 star) x2 \
   forall (propId singleton star x1) x3 \
    forall
     (setSigma
       (setPi
         (setSigma
           (setPi
             (setSigma (setPi singleton x4 \ propId singleton star x1) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (setSigma (setPi singleton x5 \ propId singleton star x1) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x4 \
       forall
        (setSigma
          (setPi
            (setSigma (setPi singleton x5 \ propId singleton star x1) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \ singleton) x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall (forall singleton x8 \ propId singleton star star) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \
        forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \ singleton) x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall
             (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             forall (forall singleton x9 \ propId singleton star star) x9 \
              propId singleton (app x6 x7) (app x6 x8)) x6 \
         forall
          (forall
            (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            propId singleton
             (app
               (elim_setSigma x5 (x8 \
                 setPi
                  (setSigma (setPi singleton x9 \ propId singleton star x1)
                    x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton star star) x9 \ singleton) x8 \ x9 \
                 x8) x7)
             (app
               (elim_setSigma x6 (x8 \
                 setPi
                  (setSigma (setPi singleton x9 \ propId singleton star x1)
                    x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton star star) x9 \ singleton) x8 \ x9 \
                 x8) x7)) x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
     propId singleton
      (app
        (elim_setSigma x4 (x5 \
          setPi
           (setSigma
             (setPi
               (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \ singleton) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall
               (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \
               forall (forall singleton x9 \ propId singleton star star) x9 \
                propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton)
          x5 \ x6 \ x5)
        (elim_setSigma
          (pair
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) (x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star star)
                x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7))
            (lambda
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ star)
            (forall_lam
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall_lam
               (setSigma (setPi singleton x6 \ propId singleton star star)
                 x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall_lam (forall singleton x7 \ propId singleton star star)
                x7 \
                fixMe "prova di riflessivita'" (propId singleton star star)))
          (x5 \
          setSigma
           (setPi
             (setSigma (setPi singleton x6 \ propId singleton star x1) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \ singleton) x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall
             (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             forall (forall singleton x9 \ propId singleton star star) x9 \
              propId singleton (app x6 x7) (app x6 x8)) x5 \ x6 \
          pair
           (setPi
             (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \ singleton) (x7 \
           forall
            (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \
            forall
             (setSigma (setPi singleton x9 \ propId singleton star x1) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x9 \
             forall (forall singleton x10 \ propId singleton star star) x10 \
              propId singleton (app x7 x8) (app x7 x9))
           (lambda
             (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             app x5
              (elim_setSigma x7 (x8 \
                setSigma (setPi singleton x9 \ propId singleton star star)
                 x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x8 \ x9 \
                pair (setPi singleton x10 \ propId singleton star star)
                 (x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star)
                 (lambda singleton x10 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x1) star) x2)
                    (app x8 x10))
                 (forall_lam singleton x10 \
                   forall_lam singleton x11 \
                    forall_lam (propId singleton x10 x11) x12 \
                     forall_app (forall_app (forall_app x9 x10) x11) x12)))
           (forall_lam
             (setSigma (setPi singleton x7 \ propId singleton star x1) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall_lam
              (setSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall_lam (forall singleton x9 \ propId singleton star star)
               x9 \
               forall_app
                (forall_app
                  (forall_app x6
                    (elim_setSigma x7 (x10 \
                      setSigma
                       (setPi singleton x11 \ propId singleton star star)
                       x11 \
                       forall singleton x12 \
                        forall singleton x13 \
                         forall (propId singleton x12 x13) x14 \
                          propId singleton star star) x10 \ x11 \
                      pair (setPi singleton x12 \ propId singleton star star)
                       (x12 \
                       forall singleton x13 \
                        forall singleton x14 \
                         forall (propId singleton x13 x14) x15 \
                          propId singleton star star)
                       (lambda singleton x12 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star)
                                  (fixMe "prova di riflessivita'"
                                    (propId singleton star star))) x1) star)
                            x2) (app x10 x12))
                       (forall_lam singleton x12 \
                         forall_lam singleton x13 \
                          forall_lam (propId singleton x12 x13) x14 \
                           forall_app (forall_app (forall_app x11 x12) x13)
                            x14)))
                  (elim_setSigma x8 (x10 \
                    setSigma
                     (setPi singleton x11 \ propId singleton star star) x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton star star) x10 \ x11 \
                    pair (setPi singleton x12 \ propId singleton star star)
                     (x12 \
                     forall singleton x13 \
                      forall singleton x14 \
                       forall (propId singleton x13 x14) x15 \
                        propId singleton star star)
                     (lambda singleton x12 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (fixMe "prova di riflessivita'"
                                  (propId singleton star star))) x1) star) x2)
                        (app x10 x12))
                     (forall_lam singleton x12 \
                       forall_lam singleton x13 \
                        forall_lam (propId singleton x12 x13) x14 \
                         forall_app (forall_app (forall_app x11 x12) x13) x14)))
                (forall_lam singleton x10 \ forall_app x9 x10)))) star)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  interp x0 x1 =>
   locDecl x0 singleton =>
    locDecl x1 singleton =>
     spy
      (interp
        (implies (propEq singleton x0 star)
          (implies (propEq singleton star x0)
            (forall
              (setPi
                (setPi (setPi singleton x2 \ propEq singleton star x0) x2 \
                  singleton) x2 \ singleton) x2 \
              propEq singleton
               (app x2
                 (lambda (setPi singleton x3 \ propEq singleton star star)
                   x3 \ star)) star)))
        (forall (propId singleton x1 star) x2 \
          forall (propId singleton star x1) x3 \
           forall
            (setSigma
              (setPi
                (setSigma
                  (setPi
                    (setSigma (setPi singleton x4 \ propId singleton star x1)
                      x4 \
                      forall singleton x5 \
                       forall singleton x6 \
                        forall (propId singleton x5 x6) x7 \
                         propId singleton star star) x4 \ singleton) x4 \
                  forall
                   (setSigma (setPi singleton x5 \ propId singleton star x1)
                     x5 \
                     forall singleton x6 \
                      forall singleton x7 \
                       forall (propId singleton x6 x7) x8 \
                        propId singleton star star) x5 \
                   forall
                    (setSigma (setPi singleton x6 \ propId singleton star x1)
                      x6 \
                      forall singleton x7 \
                       forall singleton x8 \
                        forall (propId singleton x7 x8) x9 \
                         propId singleton star star) x6 \
                    forall (forall singleton x7 \ propId singleton star star)
                     x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
                singleton) x4 \
              forall
               (setSigma
                 (setPi
                   (setSigma (setPi singleton x5 \ propId singleton star x1)
                     x5 \
                     forall singleton x6 \
                      forall singleton x7 \
                       forall (propId singleton x6 x7) x8 \
                        propId singleton star star) x5 \ singleton) x5 \
                 forall
                  (setSigma (setPi singleton x6 \ propId singleton star x1)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  forall
                   (setSigma (setPi singleton x7 \ propId singleton star x1)
                     x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton star star) x7 \
                   forall (forall singleton x8 \ propId singleton star star)
                    x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
               forall
                (setSigma
                  (setPi
                    (setSigma (setPi singleton x6 \ propId singleton star x1)
                      x6 \
                      forall singleton x7 \
                       forall singleton x8 \
                        forall (propId singleton x7 x8) x9 \
                         propId singleton star star) x6 \ singleton) x6 \
                  forall
                   (setSigma (setPi singleton x7 \ propId singleton star x1)
                     x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton star star) x7 \
                   forall
                    (setSigma (setPi singleton x8 \ propId singleton star x1)
                      x8 \
                      forall singleton x9 \
                       forall singleton x10 \
                        forall (propId singleton x9 x10) x11 \
                         propId singleton star star) x8 \
                    forall (forall singleton x9 \ propId singleton star star)
                     x9 \ propId singleton (app x6 x7) (app x6 x8)) x6 \
                forall
                 (forall
                   (setSigma (setPi singleton x7 \ propId singleton star x1)
                     x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton star star) x7 \
                   propId singleton
                    (app
                      (elim_setSigma x5 (x8 \
                        setPi
                         (setSigma
                           (setPi singleton x9 \ propId singleton star x1)
                           x9 \
                           forall singleton x10 \
                            forall singleton x11 \
                             forall (propId singleton x10 x11) x12 \
                              propId singleton star star) x9 \ singleton)
                        x8 \ x9 \ x8) x7)
                    (app
                      (elim_setSigma x6 (x8 \
                        setPi
                         (setSigma
                           (setPi singleton x9 \ propId singleton star x1)
                           x9 \
                           forall singleton x10 \
                            forall singleton x11 \
                             forall (propId singleton x10 x11) x12 \
                              propId singleton star star) x9 \ singleton)
                        x8 \ x9 \ x8) x7)) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x4 \
            propId singleton
             (app
               (elim_setSigma x4 (x5 \
                 setPi
                  (setSigma
                    (setPi
                      (setSigma
                        (setPi singleton x6 \ propId singleton star x1) x6 \
                        forall singleton x7 \
                         forall singleton x8 \
                          forall (propId singleton x7 x8) x9 \
                           propId singleton star star) x6 \ singleton) x6 \
                    forall
                     (setSigma
                       (setPi singleton x7 \ propId singleton star x1) x7 \
                       forall singleton x8 \
                        forall singleton x9 \
                         forall (propId singleton x8 x9) x10 \
                          propId singleton star star) x7 \
                     forall
                      (setSigma
                        (setPi singleton x8 \ propId singleton star x1) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton star star) x8 \
                      forall
                       (forall singleton x9 \ propId singleton star star)
                       x9 \ propId singleton (app x6 x7) (app x6 x8)) x6 \
                  singleton) x5 \ x6 \ x5)
               (elim_setSigma
                 (pair
                   (setPi
                     (setSigma
                       (setPi singleton x5 \ propId singleton star star) x5 \
                       forall singleton x6 \
                        forall singleton x7 \
                         forall (propId singleton x6 x7) x8 \
                          propId singleton star star) x5 \ singleton) (x5 \
                   forall
                    (setSigma
                      (setPi singleton x6 \ propId singleton star star) x6 \
                      forall singleton x7 \
                       forall singleton x8 \
                        forall (propId singleton x7 x8) x9 \
                         propId singleton star star) x6 \
                    forall
                     (setSigma
                       (setPi singleton x7 \ propId singleton star star) x7 \
                       forall singleton x8 \
                        forall singleton x9 \
                         forall (propId singleton x8 x9) x10 \
                          propId singleton star star) x7 \
                     forall
                      (forall singleton x8 \ propId singleton star star) x8 \
                      propId singleton (app x5 x6) (app x5 x7))
                   (lambda
                     (setSigma
                       (setPi singleton x5 \ propId singleton star star) x5 \
                       forall singleton x6 \
                        forall singleton x7 \
                         forall (propId singleton x6 x7) x8 \
                          propId singleton star star) x5 \ star)
                   (forall_lam
                     (setSigma
                       (setPi singleton x5 \ propId singleton star star) x5 \
                       forall singleton x6 \
                        forall singleton x7 \
                         forall (propId singleton x6 x7) x8 \
                          propId singleton star star) x5 \
                     forall_lam
                      (setSigma
                        (setPi singleton x6 \ propId singleton star star)
                        x6 \
                        forall singleton x7 \
                         forall singleton x8 \
                          forall (propId singleton x7 x8) x9 \
                           propId singleton star star) x6 \
                      forall_lam
                       (forall singleton x7 \ propId singleton star star)
                       x7 \
                       fixMe "prova di riflessivita'"
                        (propId singleton star star))) (x5 \
                 setSigma
                  (setPi
                    (setSigma (setPi singleton x6 \ propId singleton star x1)
                      x6 \
                      forall singleton x7 \
                       forall singleton x8 \
                        forall (propId singleton x7 x8) x9 \
                         propId singleton star star) x6 \ singleton) x6 \
                  forall
                   (setSigma (setPi singleton x7 \ propId singleton star x1)
                     x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton star star) x7 \
                   forall
                    (setSigma (setPi singleton x8 \ propId singleton star x1)
                      x8 \
                      forall singleton x9 \
                       forall singleton x10 \
                        forall (propId singleton x9 x10) x11 \
                         propId singleton star star) x8 \
                    forall (forall singleton x9 \ propId singleton star star)
                     x9 \ propId singleton (app x6 x7) (app x6 x8)) x5 \ x6 \
                 pair
                  (setPi
                    (setSigma (setPi singleton x7 \ propId singleton star x1)
                      x7 \
                      forall singleton x8 \
                       forall singleton x9 \
                        forall (propId singleton x8 x9) x10 \
                         propId singleton star star) x7 \ singleton) (x7 \
                  forall
                   (setSigma (setPi singleton x8 \ propId singleton star x1)
                     x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x8 \
                   forall
                    (setSigma (setPi singleton x9 \ propId singleton star x1)
                      x9 \
                      forall singleton x10 \
                       forall singleton x11 \
                        forall (propId singleton x10 x11) x12 \
                         propId singleton star star) x9 \
                    forall
                     (forall singleton x10 \ propId singleton star star)
                     x10 \ propId singleton (app x7 x8) (app x7 x9))
                  (lambda
                    (setSigma (setPi singleton x7 \ propId singleton star x1)
                      x7 \
                      forall singleton x8 \
                       forall singleton x9 \
                        forall (propId singleton x8 x9) x10 \
                         propId singleton star star) x7 \
                    app x5
                     (elim_setSigma x7 (x8 \
                       setSigma
                        (setPi singleton x9 \ propId singleton star star)
                        x9 \
                        forall singleton x10 \
                         forall singleton x11 \
                          forall (propId singleton x10 x11) x12 \
                           propId singleton star star) x8 \ x9 \
                       pair
                        (setPi singleton x10 \ propId singleton star star)
                        (x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star)
                        (lambda singleton x10 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star)
                                   (fixMe "prova di riflessivita'"
                                     (propId singleton star star))) x1) star)
                             x2) (app x8 x10))
                        (forall_lam singleton x10 \
                          forall_lam singleton x11 \
                           forall_lam (propId singleton x10 x11) x12 \
                            forall_app (forall_app (forall_app x9 x10) x11)
                             x12)))
                  (forall_lam
                    (setSigma (setPi singleton x7 \ propId singleton star x1)
                      x7 \
                      forall singleton x8 \
                       forall singleton x9 \
                        forall (propId singleton x8 x9) x10 \
                         propId singleton star star) x7 \
                    forall_lam
                     (setSigma
                       (setPi singleton x8 \ propId singleton star x1) x8 \
                       forall singleton x9 \
                        forall singleton x10 \
                         forall (propId singleton x9 x10) x11 \
                          propId singleton star star) x8 \
                     forall_lam
                      (forall singleton x9 \ propId singleton star star) x9 \
                      forall_app
                       (forall_app
                         (forall_app x6
                           (elim_setSigma x7 (x10 \
                             setSigma
                              (setPi singleton x11 \
                                propId singleton star star) x11 \
                              forall singleton x12 \
                               forall singleton x13 \
                                forall (propId singleton x12 x13) x14 \
                                 propId singleton star star) x10 \ x11 \
                             pair
                              (setPi singleton x12 \
                                propId singleton star star) (x12 \
                              forall singleton x13 \
                               forall singleton x14 \
                                forall (propId singleton x13 x14) x15 \
                                 propId singleton star star)
                              (lambda singleton x12 \
                                impl_app
                                 (impl_app
                                   (forall_app
                                     (forall_app
                                       (impl_app
                                         (forall_app
                                           (forall_app (k_propId singleton)
                                             star) star)
                                         (fixMe "prova di riflessivita'"
                                           (propId singleton star star))) x1)
                                     star) x2) (app x10 x12))
                              (forall_lam singleton x12 \
                                forall_lam singleton x13 \
                                 forall_lam (propId singleton x12 x13) x14 \
                                  forall_app
                                   (forall_app (forall_app x11 x12) x13) x14)))
                         (elim_setSigma x8 (x10 \
                           setSigma
                            (setPi singleton x11 \ propId singleton star star)
                            x11 \
                            forall singleton x12 \
                             forall singleton x13 \
                              forall (propId singleton x12 x13) x14 \
                               propId singleton star star) x10 \ x11 \
                           pair
                            (setPi singleton x12 \ propId singleton star star)
                            (x12 \
                            forall singleton x13 \
                             forall singleton x14 \
                              forall (propId singleton x13 x14) x15 \
                               propId singleton star star)
                            (lambda singleton x12 \
                              impl_app
                               (impl_app
                                 (forall_app
                                   (forall_app
                                     (impl_app
                                       (forall_app
                                         (forall_app (k_propId singleton)
                                           star) star)
                                       (fixMe "prova di riflessivita'"
                                         (propId singleton star star))) x1)
                                   star) x2) (app x10 x12))
                            (forall_lam singleton x12 \
                              forall_lam singleton x13 \
                               forall_lam (propId singleton x12 x13) x14 \
                                forall_app
                                 (forall_app (forall_app x11 x12) x13) x14)))
                       (forall_lam singleton x10 \ forall_app x9 x10)))) star))
"
"2--]-]Success  
interp
 (forall singleton x0 \
   implies (propEq singleton x0 star)
    (implies (propEq singleton star x0)
      (forall
        (setPi
          (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \
            singleton) x1 \ singleton) x1 \
        propEq singleton
         (app x1
           (lambda (setPi singleton x2 \ propEq singleton star star) x2 \
             star)) star)))
 (forall singleton x0 \
   forall (propId singleton x0 star) x1 \
    forall (propId singleton star x0) x2 \
     forall
      (setSigma
        (setPi
          (setSigma
            (setPi
              (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ singleton) x3 \
            forall
             (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall (forall singleton x6 \ propId singleton star star) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
        forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \
          forall
           (forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             propId singleton
              (app
                (elim_setSigma x4 (x7 \
                  setPi
                   (setSigma (setPi singleton x8 \ propId singleton star x0)
                     x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x8 \ singleton) x7 \ x8 \
                  x7) x6)
              (app
                (elim_setSigma x5 (x7 \
                  setPi
                   (setSigma (setPi singleton x8 \ propId singleton star x0)
                     x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x8 \ singleton) x7 \ x8 \
                  x7) x6)) x6 \ propId singleton (app x3 x4) (app x3 x5))
      x3 \
      propId singleton
       (app
         (elim_setSigma x3 (x4 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
            singleton) x4 \ x5 \ x4)
         (elim_setSigma
           (pair
             (setPi
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) (x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star star)
                 x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6))
             (lambda
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ star)
             (forall_lam
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall_lam
                (setSigma (setPi singleton x5 \ propId singleton star star)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall_lam (forall singleton x6 \ propId singleton star star)
                 x6 \
                 fixMe "prova di riflessivita'" (propId singleton star star)))
           (x4 \
           setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
           pair
            (setPi
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \ singleton) (x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall (forall singleton x9 \ propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8))
            (lambda
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              app x4
               (elim_setSigma x6 (x7 \
                 setSigma (setPi singleton x8 \ propId singleton star star)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x7 \ x8 \
                 pair (setPi singleton x9 \ propId singleton star star) (x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star)
                  (lambda singleton x9 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x0) star) x1)
                     (app x7 x9))
                  (forall_lam singleton x9 \
                    forall_lam singleton x10 \
                     forall_lam (propId singleton x9 x10) x11 \
                      forall_app (forall_app (forall_app x8 x9) x10) x11)))
            (forall_lam
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall_lam
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall_lam (forall singleton x8 \ propId singleton star star)
                x8 \
                forall_app
                 (forall_app
                   (forall_app x5
                     (elim_setSigma x6 (x9 \
                       setSigma
                        (setPi singleton x10 \ propId singleton star star)
                        x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star) x9 \ x10 \
                       pair
                        (setPi singleton x11 \ propId singleton star star)
                        (x11 \
                        forall singleton x12 \
                         forall singleton x13 \
                          forall (propId singleton x12 x13) x14 \
                           propId singleton star star)
                        (lambda singleton x11 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star)
                                   (fixMe "prova di riflessivita'"
                                     (propId singleton star star))) x0) star)
                             x1) (app x9 x11))
                        (forall_lam singleton x11 \
                          forall_lam singleton x12 \
                           forall_lam (propId singleton x11 x12) x13 \
                            forall_app (forall_app (forall_app x10 x11) x12)
                             x13)))
                   (elim_setSigma x7 (x9 \
                     setSigma
                      (setPi singleton x10 \ propId singleton star star)
                      x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star) x9 \ x10 \
                     pair (setPi singleton x11 \ propId singleton star star)
                      (x11 \
                      forall singleton x12 \
                       forall singleton x13 \
                        forall (propId singleton x12 x13) x14 \
                         propId singleton star star)
                      (lambda singleton x11 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star)
                                 (fixMe "prova di riflessivita'"
                                   (propId singleton star star))) x0) star)
                           x1) (app x9 x11))
                      (forall_lam singleton x11 \
                        forall_lam singleton x12 \
                         forall_lam (propId singleton x11 x12) x13 \
                          forall_app (forall_app (forall_app x10 x11) x12)
                           x13)))
                 (forall_lam singleton x9 \ forall_app x8 x9)))) star)
"
"|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
"
"2__[+[Begin 
ofType
 (forall singleton x0 \
   forall (propId singleton x0 star) x1 \
    forall (propId singleton star x0) x2 \
     forall
      (setSigma
        (setPi
          (setSigma
            (setPi
              (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ singleton) x3 \
            forall
             (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall (forall singleton x6 \ propId singleton star star) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
        forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \
          forall
           (forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             propId singleton
              (app
                (elim_setSigma x4 (x7 \
                  setPi
                   (setSigma (setPi singleton x8 \ propId singleton star x0)
                     x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x8 \ singleton) x7 \ x8 \
                  x7) x6)
              (app
                (elim_setSigma x5 (x7 \
                  setPi
                   (setSigma (setPi singleton x8 \ propId singleton star x0)
                     x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x8 \ singleton) x7 \ x8 \
                  x7) x6)) x6 \ propId singleton (app x3 x4) (app x3 x5))
      x3 \
      propId singleton
       (app
         (elim_setSigma x3 (x4 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
            singleton) x4 \ x5 \ x4)
         (elim_setSigma
           (pair
             (setPi
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) (x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star star)
                 x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6))
             (lambda
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ star)
             (forall_lam
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall_lam
                (setSigma (setPi singleton x5 \ propId singleton star star)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall_lam (forall singleton x6 \ propId singleton star star)
                 x6 \
                 fixMe "prova di riflessivita'" (propId singleton star star)))
           (x4 \
           setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
           pair
            (setPi
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \ singleton) (x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall (forall singleton x9 \ propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8))
            (lambda
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              app x4
               (elim_setSigma x6 (x7 \
                 setSigma (setPi singleton x8 \ propId singleton star star)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x7 \ x8 \
                 pair (setPi singleton x9 \ propId singleton star star) (x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star)
                  (lambda singleton x9 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x0) star) x1)
                     (app x7 x9))
                  (forall_lam singleton x9 \
                    forall_lam singleton x10 \
                     forall_lam (propId singleton x9 x10) x11 \
                      forall_app (forall_app (forall_app x8 x9) x10) x11)))
            (forall_lam
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall_lam
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall_lam (forall singleton x8 \ propId singleton star star)
                x8 \
                forall_app
                 (forall_app
                   (forall_app x5
                     (elim_setSigma x6 (x9 \
                       setSigma
                        (setPi singleton x10 \ propId singleton star star)
                        x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star) x9 \ x10 \
                       pair
                        (setPi singleton x11 \ propId singleton star star)
                        (x11 \
                        forall singleton x12 \
                         forall singleton x13 \
                          forall (propId singleton x12 x13) x14 \
                           propId singleton star star)
                        (lambda singleton x11 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star)
                                   (fixMe "prova di riflessivita'"
                                     (propId singleton star star))) x0) star)
                             x1) (app x9 x11))
                        (forall_lam singleton x11 \
                          forall_lam singleton x12 \
                           forall_lam (propId singleton x11 x12) x13 \
                            forall_app (forall_app (forall_app x10 x11) x12)
                             x13)))
                   (elim_setSigma x7 (x9 \
                     setSigma
                      (setPi singleton x10 \ propId singleton star star)
                      x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star) x9 \ x10 \
                     pair (setPi singleton x11 \ propId singleton star star)
                      (x11 \
                      forall singleton x12 \
                       forall singleton x13 \
                        forall (propId singleton x12 x13) x14 \
                         propId singleton star star)
                      (lambda singleton x11 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star)
                                 (fixMe "prova di riflessivita'"
                                   (propId singleton star star))) x0) star)
                           x1) (app x9 x11))
                      (forall_lam singleton x11 \
                        forall_lam singleton x12 \
                         forall_lam (propId singleton x11 x12) x13 \
                          forall_app (forall_app (forall_app x10 x11) x12)
                           x13)))
                 (forall_lam singleton x9 \ forall_app x8 x9)))) star) X7 int
"
"3___[+[Begin 
ofType singleton X920 int
"
"3---]-]Success  
ofType singleton set int
"
"3___[+[Begin 
pi x0 \
 locDecl x0 singleton =>
  spy
   (ofType
     (forall (propId singleton x0 star) x1 \
       forall (propId singleton star x0) x2 \
        forall
         (setSigma
           (setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x3 \ propId singleton star x0)
                   x3 \
                   forall singleton x4 \
                    forall singleton x5 \
                     forall (propId singleton x4 x5) x6 \
                      propId singleton star star) x3 \ singleton) x3 \
               forall
                (setSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall
                 (setSigma (setPi singleton x5 \ propId singleton star x0)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall (forall singleton x6 \ propId singleton star star)
                  x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
             singleton) x3 \
           forall
            (setSigma
              (setPi
                (setSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) x4 \
              forall
               (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (setSigma
               (setPi
                 (setSigma (setPi singleton x5 \ propId singleton star x0)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \ singleton) x5 \
               forall
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall
                 (setSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall (forall singleton x8 \ propId singleton star star)
                  x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
             forall
              (forall
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                propId singleton
                 (app
                   (elim_setSigma x4 (x7 \
                     setPi
                      (setSigma
                        (setPi singleton x8 \ propId singleton star x0) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton star star) x8 \ singleton) x7 \
                     x8 \ x7) x6)
                 (app
                   (elim_setSigma x5 (x7 \
                     setPi
                      (setSigma
                        (setPi singleton x8 \ propId singleton star x0) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton star star) x8 \ singleton) x7 \
                     x8 \ x7) x6)) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \
         propId singleton
          (app
            (elim_setSigma x3 (x4 \
              setPi
               (setSigma
                 (setPi
                   (setSigma (setPi singleton x5 \ propId singleton star x0)
                     x5 \
                     forall singleton x6 \
                      forall singleton x7 \
                       forall (propId singleton x6 x7) x8 \
                        propId singleton star star) x5 \ singleton) x5 \
                 forall
                  (setSigma (setPi singleton x6 \ propId singleton star x0)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  forall
                   (setSigma (setPi singleton x7 \ propId singleton star x0)
                     x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton star star) x7 \
                   forall (forall singleton x8 \ propId singleton star star)
                    x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
               singleton) x4 \ x5 \ x4)
            (elim_setSigma
              (pair
                (setPi
                  (setSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \ singleton) (x4 \
                forall
                 (setSigma (setPi singleton x5 \ propId singleton star star)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall
                  (setSigma (setPi singleton x6 \ propId singleton star star)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  forall (forall singleton x7 \ propId singleton star star)
                   x7 \ propId singleton (app x4 x5) (app x4 x6))
                (lambda
                  (setSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \ star)
                (forall_lam
                  (setSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \
                  forall_lam
                   (setSigma
                     (setPi singleton x5 \ propId singleton star star) x5 \
                     forall singleton x6 \
                      forall singleton x7 \
                       forall (propId singleton x6 x7) x8 \
                        propId singleton star star) x5 \
                   forall_lam
                    (forall singleton x6 \ propId singleton star star) x6 \
                    fixMe "prova di riflessivita'"
                     (propId singleton star star))) (x4 \
              setSigma
               (setPi
                 (setSigma (setPi singleton x5 \ propId singleton star x0)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \ singleton) x5 \
               forall
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall
                 (setSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall (forall singleton x8 \ propId singleton star star)
                  x8 \ propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
              pair
               (setPi
                 (setSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \ singleton) (x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall
                 (setSigma (setPi singleton x8 \ propId singleton star x0)
                   x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star) x8 \
                 forall (forall singleton x9 \ propId singleton star star)
                  x9 \ propId singleton (app x6 x7) (app x6 x8))
               (lambda
                 (setSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 app x4
                  (elim_setSigma x6 (x7 \
                    setSigma
                     (setPi singleton x8 \ propId singleton star star) x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x7 \ x8 \
                    pair (setPi singleton x9 \ propId singleton star star)
                     (x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star)
                     (lambda singleton x9 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (fixMe "prova di riflessivita'"
                                  (propId singleton star star))) x0) star) x1)
                        (app x7 x9))
                     (forall_lam singleton x9 \
                       forall_lam singleton x10 \
                        forall_lam (propId singleton x9 x10) x11 \
                         forall_app (forall_app (forall_app x8 x9) x10) x11)))
               (forall_lam
                 (setSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall_lam
                  (setSigma (setPi singleton x7 \ propId singleton star x0)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \
                  forall_lam
                   (forall singleton x8 \ propId singleton star star) x8 \
                   forall_app
                    (forall_app
                      (forall_app x5
                        (elim_setSigma x6 (x9 \
                          setSigma
                           (setPi singleton x10 \ propId singleton star star)
                           x10 \
                           forall singleton x11 \
                            forall singleton x12 \
                             forall (propId singleton x11 x12) x13 \
                              propId singleton star star) x9 \ x10 \
                          pair
                           (setPi singleton x11 \ propId singleton star star)
                           (x11 \
                           forall singleton x12 \
                            forall singleton x13 \
                             forall (propId singleton x12 x13) x14 \
                              propId singleton star star)
                           (lambda singleton x11 \
                             impl_app
                              (impl_app
                                (forall_app
                                  (forall_app
                                    (impl_app
                                      (forall_app
                                        (forall_app (k_propId singleton) star)
                                        star)
                                      (fixMe "prova di riflessivita'"
                                        (propId singleton star star))) x0)
                                  star) x1) (app x9 x11))
                           (forall_lam singleton x11 \
                             forall_lam singleton x12 \
                              forall_lam (propId singleton x11 x12) x13 \
                               forall_app
                                (forall_app (forall_app x10 x11) x12) x13)))
                      (elim_setSigma x7 (x9 \
                        setSigma
                         (setPi singleton x10 \ propId singleton star star)
                         x10 \
                         forall singleton x11 \
                          forall singleton x12 \
                           forall (propId singleton x11 x12) x13 \
                            propId singleton star star) x9 \ x10 \
                        pair
                         (setPi singleton x11 \ propId singleton star star)
                         (x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star)
                         (lambda singleton x11 \
                           impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app (k_propId singleton) star)
                                      star)
                                    (fixMe "prova di riflessivita'"
                                      (propId singleton star star))) x0) star)
                              x1) (app x9 x11))
                         (forall_lam singleton x11 \
                           forall_lam singleton x12 \
                            forall_lam (propId singleton x11 x12) x13 \
                             forall_app (forall_app (forall_app x10 x11) x12)
                              x13)))
                    (forall_lam singleton x9 \ forall_app x8 x9)))) star)
     X921 int)
"
"4____[+[Begin 
ofType
 (forall (propId singleton x0 star) x1 \
   forall (propId singleton star x0) x2 \
    forall
     (setSigma
       (setPi
         (setSigma
           (setPi
             (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton star star) x3 \ singleton) x3 \
           forall
            (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \
            forall
             (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall (forall singleton x6 \ propId singleton star star) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
       forall
        (setSigma
          (setPi
            (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ singleton) x4 \
          forall
           (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall (forall singleton x7 \ propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \ singleton) x5 \
           forall
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall (forall singleton x8 \ propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x5 \
         forall
          (forall
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            propId singleton
             (app
               (elim_setSigma x4 (x7 \
                 setPi
                  (setSigma (setPi singleton x8 \ propId singleton star x0)
                    x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star) x8 \ singleton) x7 \ x8 \
                 x7) x6)
             (app
               (elim_setSigma x5 (x7 \
                 setPi
                  (setSigma (setPi singleton x8 \ propId singleton star x0)
                    x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star) x8 \ singleton) x7 \ x8 \
                 x7) x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
     propId singleton
      (app
        (elim_setSigma x3 (x4 \
          setPi
           (setSigma
             (setPi
               (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ singleton) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall (forall singleton x8 \ propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
          x4 \ x5 \ x4)
        (elim_setSigma
          (pair
            (setPi
              (setSigma (setPi singleton x4 \ propId singleton star star)
                x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ singleton) (x4 \
            forall
             (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star star)
                x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall (forall singleton x7 \ propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6))
            (lambda
              (setSigma (setPi singleton x4 \ propId singleton star star)
                x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ star)
            (forall_lam
              (setSigma (setPi singleton x4 \ propId singleton star star)
                x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \
              forall_lam
               (setSigma (setPi singleton x5 \ propId singleton star star)
                 x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall_lam (forall singleton x6 \ propId singleton star star)
                x6 \
                fixMe "prova di riflessivita'" (propId singleton star star)))
          (x4 \
          setSigma
           (setPi
             (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \ singleton) x5 \
           forall
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall (forall singleton x8 \ propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
          pair
           (setPi
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \ singleton) (x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall
             (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             forall (forall singleton x9 \ propId singleton star star) x9 \
              propId singleton (app x6 x7) (app x6 x8))
           (lambda
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             app x4
              (elim_setSigma x6 (x7 \
                setSigma (setPi singleton x8 \ propId singleton star star)
                 x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x7 \ x8 \
                pair (setPi singleton x9 \ propId singleton star star) (x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star)
                 (lambda singleton x9 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x0) star) x1)
                    (app x7 x9))
                 (forall_lam singleton x9 \
                   forall_lam singleton x10 \
                    forall_lam (propId singleton x9 x10) x11 \
                     forall_app (forall_app (forall_app x8 x9) x10) x11)))
           (forall_lam
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall_lam
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall_lam (forall singleton x8 \ propId singleton star star)
               x8 \
               forall_app
                (forall_app
                  (forall_app x5
                    (elim_setSigma x6 (x9 \
                      setSigma
                       (setPi singleton x10 \ propId singleton star star)
                       x10 \
                       forall singleton x11 \
                        forall singleton x12 \
                         forall (propId singleton x11 x12) x13 \
                          propId singleton star star) x9 \ x10 \
                      pair (setPi singleton x11 \ propId singleton star star)
                       (x11 \
                       forall singleton x12 \
                        forall singleton x13 \
                         forall (propId singleton x12 x13) x14 \
                          propId singleton star star)
                       (lambda singleton x11 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star)
                                  (fixMe "prova di riflessivita'"
                                    (propId singleton star star))) x0) star)
                            x1) (app x9 x11))
                       (forall_lam singleton x11 \
                         forall_lam singleton x12 \
                          forall_lam (propId singleton x11 x12) x13 \
                           forall_app (forall_app (forall_app x10 x11) x12)
                            x13)))
                  (elim_setSigma x7 (x9 \
                    setSigma
                     (setPi singleton x10 \ propId singleton star star) x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton star star) x9 \ x10 \
                    pair (setPi singleton x11 \ propId singleton star star)
                     (x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton star star)
                     (lambda singleton x11 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (fixMe "prova di riflessivita'"
                                  (propId singleton star star))) x0) star) x1)
                        (app x9 x11))
                     (forall_lam singleton x11 \
                       forall_lam singleton x12 \
                        forall_lam (propId singleton x11 x12) x13 \
                         forall_app (forall_app (forall_app x10 x11) x12) x13)))
                (forall_lam singleton x9 \ forall_app x8 x9)))) star) X921
 int
"
"5_____[+[Begin 
ofType (propId singleton x0 star) X922^1 int
"
"6______[+[Begin 
of x0 X923^1 int
"
"6------]-]Success  
of x0 singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
of star X924^1 int
"
"6------]-]Success  
of star singleton int
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
(pts_leq set set),
(X922^1 = props)
"
"6------]-]Success  
(pts_leq set set),
(props = props)
"
"5-----]-]Success  
ofType (propId singleton x0 star) props int
"
"5_____[+[Begin 
pi x1 \
 locDecl x1 (propId singleton x0 star) =>
  spy
   (ofType
     (forall (propId singleton star x0) x2 \
       forall
        (setSigma
          (setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x3 \ propId singleton star x0)
                  x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton star star) x3 \ singleton) x3 \
              forall
               (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall (forall singleton x6 \ propId singleton star star)
                 x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
            singleton) x3 \
          forall
           (setSigma
             (setPi
               (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \
           forall
            (setSigma
              (setPi
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
            forall
             (forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               propId singleton
                (app
                  (elim_setSigma x4 (x7 \
                    setPi
                     (setSigma
                       (setPi singleton x8 \ propId singleton star x0) x8 \
                       forall singleton x9 \
                        forall singleton x10 \
                         forall (propId singleton x9 x10) x11 \
                          propId singleton star star) x8 \ singleton) x7 \
                    x8 \ x7) x6)
                (app
                  (elim_setSigma x5 (x7 \
                    setPi
                     (setSigma
                       (setPi singleton x8 \ propId singleton star x0) x8 \
                       forall singleton x9 \
                        forall singleton x10 \
                         forall (propId singleton x9 x10) x11 \
                          propId singleton star star) x8 \ singleton) x7 \
                    x8 \ x7) x6)) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        propId singleton
         (app
           (elim_setSigma x3 (x4 \
             setPi
              (setSigma
                (setPi
                  (setSigma (setPi singleton x5 \ propId singleton star x0)
                    x5 \
                    forall singleton x6 \
                     forall singleton x7 \
                      forall (propId singleton x6 x7) x8 \
                       propId singleton star star) x5 \ singleton) x5 \
                forall
                 (setSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall
                  (setSigma (setPi singleton x7 \ propId singleton star x0)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \
                  forall (forall singleton x8 \ propId singleton star star)
                   x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
              singleton) x4 \ x5 \ x4)
           (elim_setSigma
             (pair
               (setPi
                 (setSigma (setPi singleton x4 \ propId singleton star star)
                   x4 \
                   forall singleton x5 \
                    forall singleton x6 \
                     forall (propId singleton x5 x6) x7 \
                      propId singleton star star) x4 \ singleton) (x4 \
               forall
                (setSigma (setPi singleton x5 \ propId singleton star star)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall
                 (setSigma (setPi singleton x6 \ propId singleton star star)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall (forall singleton x7 \ propId singleton star star)
                  x7 \ propId singleton (app x4 x5) (app x4 x6))
               (lambda
                 (setSigma (setPi singleton x4 \ propId singleton star star)
                   x4 \
                   forall singleton x5 \
                    forall singleton x6 \
                     forall (propId singleton x5 x6) x7 \
                      propId singleton star star) x4 \ star)
               (forall_lam
                 (setSigma (setPi singleton x4 \ propId singleton star star)
                   x4 \
                   forall singleton x5 \
                    forall singleton x6 \
                     forall (propId singleton x5 x6) x7 \
                      propId singleton star star) x4 \
                 forall_lam
                  (setSigma (setPi singleton x5 \ propId singleton star star)
                    x5 \
                    forall singleton x6 \
                     forall singleton x7 \
                      forall (propId singleton x6 x7) x8 \
                       propId singleton star star) x5 \
                  forall_lam
                   (forall singleton x6 \ propId singleton star star) x6 \
                   fixMe "prova di riflessivita'"
                    (propId singleton star star))) (x4 \
             setSigma
              (setPi
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
             pair
              (setPi
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \ singleton) (x6 \
              forall
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall
                (setSigma (setPi singleton x8 \ propId singleton star x0)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \
                forall (forall singleton x9 \ propId singleton star star)
                 x9 \ propId singleton (app x6 x7) (app x6 x8))
              (lambda
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                app x4
                 (elim_setSigma x6 (x7 \
                   setSigma (setPi singleton x8 \ propId singleton star star)
                    x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star) x7 \ x8 \
                   pair (setPi singleton x9 \ propId singleton star star)
                    (x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton star star)
                    (lambda singleton x9 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (fixMe "prova di riflessivita'"
                                 (propId singleton star star))) x0) star) x1)
                       (app x7 x9))
                    (forall_lam singleton x9 \
                      forall_lam singleton x10 \
                       forall_lam (propId singleton x9 x10) x11 \
                        forall_app (forall_app (forall_app x8 x9) x10) x11)))
              (forall_lam
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall_lam
                 (setSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall_lam
                  (forall singleton x8 \ propId singleton star star) x8 \
                  forall_app
                   (forall_app
                     (forall_app x5
                       (elim_setSigma x6 (x9 \
                         setSigma
                          (setPi singleton x10 \ propId singleton star star)
                          x10 \
                          forall singleton x11 \
                           forall singleton x12 \
                            forall (propId singleton x11 x12) x13 \
                             propId singleton star star) x9 \ x10 \
                         pair
                          (setPi singleton x11 \ propId singleton star star)
                          (x11 \
                          forall singleton x12 \
                           forall singleton x13 \
                            forall (propId singleton x12 x13) x14 \
                             propId singleton star star)
                          (lambda singleton x11 \
                            impl_app
                             (impl_app
                               (forall_app
                                 (forall_app
                                   (impl_app
                                     (forall_app
                                       (forall_app (k_propId singleton) star)
                                       star)
                                     (fixMe "prova di riflessivita'"
                                       (propId singleton star star))) x0)
                                 star) x1) (app x9 x11))
                          (forall_lam singleton x11 \
                            forall_lam singleton x12 \
                             forall_lam (propId singleton x11 x12) x13 \
                              forall_app
                               (forall_app (forall_app x10 x11) x12) x13)))
                     (elim_setSigma x7 (x9 \
                       setSigma
                        (setPi singleton x10 \ propId singleton star star)
                        x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star) x9 \ x10 \
                       pair
                        (setPi singleton x11 \ propId singleton star star)
                        (x11 \
                        forall singleton x12 \
                         forall singleton x13 \
                          forall (propId singleton x12 x13) x14 \
                           propId singleton star star)
                        (lambda singleton x11 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star)
                                   (fixMe "prova di riflessivita'"
                                     (propId singleton star star))) x0) star)
                             x1) (app x9 x11))
                        (forall_lam singleton x11 \
                          forall_lam singleton x12 \
                           forall_lam (propId singleton x11 x12) x13 \
                            forall_app (forall_app (forall_app x10 x11) x12)
                             x13)))
                   (forall_lam singleton x9 \ forall_app x8 x9)))) star)
     X925^1 int)
"
"6______[+[Begin 
ofType
 (forall (propId singleton star x0) x2 \
   forall
    (setSigma
      (setPi
        (setSigma
          (setPi
            (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \ singleton) x3 \
          forall
           (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall (forall singleton x6 \ propId singleton star star) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
      forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ singleton) x4 \
         forall
          (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall (forall singleton x7 \ propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall
        (setSigma
          (setPi
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \ singleton) x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall (forall singleton x8 \ propId singleton star star) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \
        forall
         (forall
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           propId singleton
            (app
              (elim_setSigma x4 (x7 \
                setPi
                 (setSigma (setPi singleton x8 \ propId singleton star x0)
                   x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star) x8 \ singleton) x7 \ x8 \
                x7) x6)
            (app
              (elim_setSigma x5 (x7 \
                setPi
                 (setSigma (setPi singleton x8 \ propId singleton star x0)
                   x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star) x8 \ singleton) x7 \ x8 \
                x7) x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
    propId singleton
     (app
       (elim_setSigma x3 (x4 \
         setPi
          (setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
         x5 \ x4)
       (elim_setSigma
         (pair
           (setPi
             (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) (x4 \
           forall
            (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6))
           (lambda
             (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ star)
           (forall_lam
             (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall_lam
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall_lam (forall singleton x6 \ propId singleton star star)
               x6 \
               fixMe "prova di riflessivita'" (propId singleton star star)))
         (x4 \
         setSigma
          (setPi
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \ singleton) x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall (forall singleton x8 \ propId singleton star star) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
         pair
          (setPi
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \ singleton) (x6 \
          forall
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall
            (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \
            forall (forall singleton x9 \ propId singleton star star) x9 \
             propId singleton (app x6 x7) (app x6 x8))
          (lambda
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            app x4
             (elim_setSigma x6 (x7 \
               setSigma (setPi singleton x8 \ propId singleton star star)
                x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x7 \ x8 \
               pair (setPi singleton x9 \ propId singleton star star) (x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star)
                (lambda singleton x9 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x7 x9))
                (forall_lam singleton x9 \
                  forall_lam singleton x10 \
                   forall_lam (propId singleton x9 x10) x11 \
                    forall_app (forall_app (forall_app x8 x9) x10) x11)))
          (forall_lam
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall_lam
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall_lam (forall singleton x8 \ propId singleton star star)
              x8 \
              forall_app
               (forall_app
                 (forall_app x5
                   (elim_setSigma x6 (x9 \
                     setSigma
                      (setPi singleton x10 \ propId singleton star star)
                      x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star) x9 \ x10 \
                     pair (setPi singleton x11 \ propId singleton star star)
                      (x11 \
                      forall singleton x12 \
                       forall singleton x13 \
                        forall (propId singleton x12 x13) x14 \
                         propId singleton star star)
                      (lambda singleton x11 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star)
                                 (fixMe "prova di riflessivita'"
                                   (propId singleton star star))) x0) star)
                           x1) (app x9 x11))
                      (forall_lam singleton x11 \
                        forall_lam singleton x12 \
                         forall_lam (propId singleton x11 x12) x13 \
                          forall_app (forall_app (forall_app x10 x11) x12)
                           x13)))
                 (elim_setSigma x7 (x9 \
                   setSigma
                    (setPi singleton x10 \ propId singleton star star) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton star star) x9 \ x10 \
                   pair (setPi singleton x11 \ propId singleton star star)
                    (x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton star star)
                    (lambda singleton x11 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (fixMe "prova di riflessivita'"
                                 (propId singleton star star))) x0) star) x1)
                       (app x9 x11))
                    (forall_lam singleton x11 \
                      forall_lam singleton x12 \
                       forall_lam (propId singleton x11 x12) x13 \
                        forall_app (forall_app (forall_app x10 x11) x12) x13)))
               (forall_lam singleton x9 \ forall_app x8 x9)))) star) X925^1
 int
"
"7_______[+[Begin 
ofType (propId singleton star x0) X926^2 int
"
"8________[+[Begin 
of star X927^2 int
"
"8--------]-]Success  
of star singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
of x0 X928^2 int
"
"8--------]-]Success  
of x0 singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
(pts_leq set set),
(X926^2 = props)
"
"8--------]-]Success  
(pts_leq set set),
(props = props)
"
"7-------]-]Success  
ofType (propId singleton star x0) props int
"
"7_______[+[Begin 
pi x2 \
 locDecl x2 (propId singleton star x0) =>
  spy
   (ofType
     (forall
       (setSigma
         (setPi
           (setSigma
             (setPi
               (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \ singleton) x3 \
             forall
              (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \
              forall
               (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall (forall singleton x6 \ propId singleton star star) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
         x3 \
         forall
          (setSigma
            (setPi
              (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ singleton) x4 \
            forall
             (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall (forall singleton x7 \ propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \
          forall
           (setSigma
             (setPi
               (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ singleton) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall (forall singleton x8 \ propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \
           forall
            (forall
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              propId singleton
               (app
                 (elim_setSigma x4 (x7 \
                   setPi
                    (setSigma (setPi singleton x8 \ propId singleton star x0)
                      x8 \
                      forall singleton x9 \
                       forall singleton x10 \
                        forall (propId singleton x9 x10) x11 \
                         propId singleton star star) x8 \ singleton) x7 \
                   x8 \ x7) x6)
               (app
                 (elim_setSigma x5 (x7 \
                   setPi
                    (setSigma (setPi singleton x8 \ propId singleton star x0)
                      x8 \
                      forall singleton x9 \
                       forall singleton x10 \
                        forall (propId singleton x9 x10) x11 \
                         propId singleton star star) x8 \ singleton) x7 \
                   x8 \ x7) x6)) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       propId singleton
        (app
          (elim_setSigma x3 (x4 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x5 \ propId singleton star x0)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \ singleton) x5 \
               forall
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall
                 (setSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall (forall singleton x8 \ propId singleton star star)
                  x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
             singleton) x4 \ x5 \ x4)
          (elim_setSigma
            (pair
              (setPi
                (setSigma (setPi singleton x4 \ propId singleton star star)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) (x4 \
              forall
               (setSigma (setPi singleton x5 \ propId singleton star star)
                 x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (setSigma (setPi singleton x6 \ propId singleton star star)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6))
              (lambda
                (setSigma (setPi singleton x4 \ propId singleton star star)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ star)
              (forall_lam
                (setSigma (setPi singleton x4 \ propId singleton star star)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall_lam
                 (setSigma (setPi singleton x5 \ propId singleton star star)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall_lam
                  (forall singleton x6 \ propId singleton star star) x6 \
                  fixMe "prova di riflessivita'" (propId singleton star star)))
            (x4 \
            setSigma
             (setPi
               (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ singleton) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall (forall singleton x8 \ propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
            pair
             (setPi
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \ singleton) (x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall
               (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \
               forall (forall singleton x9 \ propId singleton star star) x9 \
                propId singleton (app x6 x7) (app x6 x8))
             (lambda
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               app x4
                (elim_setSigma x6 (x7 \
                  setSigma (setPi singleton x8 \ propId singleton star star)
                   x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star) x7 \ x8 \
                  pair (setPi singleton x9 \ propId singleton star star)
                   (x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton star star)
                   (lambda singleton x9 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (fixMe "prova di riflessivita'"
                                (propId singleton star star))) x0) star) x1)
                      (app x7 x9))
                   (forall_lam singleton x9 \
                     forall_lam singleton x10 \
                      forall_lam (propId singleton x9 x10) x11 \
                       forall_app (forall_app (forall_app x8 x9) x10) x11)))
             (forall_lam
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall_lam
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall_lam (forall singleton x8 \ propId singleton star star)
                 x8 \
                 forall_app
                  (forall_app
                    (forall_app x5
                      (elim_setSigma x6 (x9 \
                        setSigma
                         (setPi singleton x10 \ propId singleton star star)
                         x10 \
                         forall singleton x11 \
                          forall singleton x12 \
                           forall (propId singleton x11 x12) x13 \
                            propId singleton star star) x9 \ x10 \
                        pair
                         (setPi singleton x11 \ propId singleton star star)
                         (x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star)
                         (lambda singleton x11 \
                           impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app (k_propId singleton) star)
                                      star)
                                    (fixMe "prova di riflessivita'"
                                      (propId singleton star star))) x0) star)
                              x1) (app x9 x11))
                         (forall_lam singleton x11 \
                           forall_lam singleton x12 \
                            forall_lam (propId singleton x11 x12) x13 \
                             forall_app (forall_app (forall_app x10 x11) x12)
                              x13)))
                    (elim_setSigma x7 (x9 \
                      setSigma
                       (setPi singleton x10 \ propId singleton star star)
                       x10 \
                       forall singleton x11 \
                        forall singleton x12 \
                         forall (propId singleton x11 x12) x13 \
                          propId singleton star star) x9 \ x10 \
                      pair (setPi singleton x11 \ propId singleton star star)
                       (x11 \
                       forall singleton x12 \
                        forall singleton x13 \
                         forall (propId singleton x12 x13) x14 \
                          propId singleton star star)
                       (lambda singleton x11 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star)
                                  (fixMe "prova di riflessivita'"
                                    (propId singleton star star))) x0) star)
                            x1) (app x9 x11))
                       (forall_lam singleton x11 \
                         forall_lam singleton x12 \
                          forall_lam (propId singleton x11 x12) x13 \
                           forall_app (forall_app (forall_app x10 x11) x12)
                            x13)))
                  (forall_lam singleton x9 \ forall_app x8 x9)))) star)
     X929^2 int)
"
"8________[+[Begin 
ofType
 (forall
   (setSigma
     (setPi
       (setSigma
         (setPi
           (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \ singleton) x3 \
         forall
          (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \
          forall
           (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall (forall singleton x6 \ propId singleton star star) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
     forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \ singleton) x5 \
         forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall (forall singleton x8 \ propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \
               setPi
                (setSigma (setPi singleton x8 \ propId singleton star x0)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
             x6)
           (app
             (elim_setSigma x5 (x7 \
               setPi
                (setSigma (setPi singleton x8 \ propId singleton star x0)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
             x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
   propId singleton
    (app
      (elim_setSigma x3 (x4 \
        setPi
         (setSigma
           (setPi
             (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \ singleton) x5 \
           forall
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall (forall singleton x8 \ propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
        x5 \ x4)
      (elim_setSigma
        (pair
          (setPi
            (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ singleton) (x4 \
          forall
           (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall
            (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall (forall singleton x7 \ propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6))
          (lambda
            (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ star)
          (forall_lam
            (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \
            forall_lam
             (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall_lam (forall singleton x6 \ propId singleton star star)
              x6 \
              fixMe "prova di riflessivita'" (propId singleton star star)))
        (x4 \
        setSigma
         (setPi
           (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \ singleton) x5 \
         forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall (forall singleton x8 \ propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
        pair
         (setPi
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \ singleton) (x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall
           (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           forall (forall singleton x9 \ propId singleton star star) x9 \
            propId singleton (app x6 x7) (app x6 x8))
         (lambda
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           app x4
            (elim_setSigma x6 (x7 \
              setSigma (setPi singleton x8 \ propId singleton star star) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x7 \ x8 \
              pair (setPi singleton x9 \ propId singleton star star) (x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star)
               (lambda singleton x9 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x0) star) x1)
                  (app x7 x9))
               (forall_lam singleton x9 \
                 forall_lam singleton x10 \
                  forall_lam (propId singleton x9 x10) x11 \
                   forall_app (forall_app (forall_app x8 x9) x10) x11)))
         (forall_lam
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall_lam
            (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall_lam (forall singleton x8 \ propId singleton star star)
             x8 \
             forall_app
              (forall_app
                (forall_app x5
                  (elim_setSigma x6 (x9 \
                    setSigma
                     (setPi singleton x10 \ propId singleton star star) x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton star star) x9 \ x10 \
                    pair (setPi singleton x11 \ propId singleton star star)
                     (x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton star star)
                     (lambda singleton x11 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (fixMe "prova di riflessivita'"
                                  (propId singleton star star))) x0) star) x1)
                        (app x9 x11))
                     (forall_lam singleton x11 \
                       forall_lam singleton x12 \
                        forall_lam (propId singleton x11 x12) x13 \
                         forall_app (forall_app (forall_app x10 x11) x12) x13)))
                (elim_setSigma x7 (x9 \
                  setSigma (setPi singleton x10 \ propId singleton star star)
                   x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star) x9 \ x10 \
                  pair (setPi singleton x11 \ propId singleton star star)
                   (x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton star star)
                   (lambda singleton x11 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (fixMe "prova di riflessivita'"
                                (propId singleton star star))) x0) star) x1)
                      (app x9 x11))
                   (forall_lam singleton x11 \
                     forall_lam singleton x12 \
                      forall_lam (propId singleton x11 x12) x13 \
                       forall_app (forall_app (forall_app x10 x11) x12) x13)))
              (forall_lam singleton x9 \ forall_app x8 x9)))) star) X929^2
 int
"
"9_________[+[Begin 
ofType
 (setSigma
   (setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \ singleton) x3 \
       forall
        (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall (forall singleton x6 \ propId singleton star star) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
   forall
    (setSigma
      (setPi
        (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \ singleton) x4 \
      forall
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall (forall singleton x7 \ propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \
             setPi
              (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
           x6)
         (app
           (elim_setSigma x5 (x7 \
             setPi
              (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
           x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) X930^3 int
"
"10__________[+[Begin 
ofType
 (setPi
   (setSigma
     (setPi
       (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ singleton) x3 \
     forall
      (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) X931^3 int
"
"11___________[+[Begin 
ofType
 (setPi
   (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   singleton) X932^3 int
"
"12____________[+[Begin 
ofType (setPi singleton x3 \ propId singleton star x0) X933^3 int
"
"13_____________[+[Begin 
of star X934^4 int
"
"13-------------]-]Success  
of star singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
of x0 X935^4 int
"
"13-------------]-]Success  
of x0 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
(pts_leq set set),
(X936^3 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"13_____________[+[Begin 
pts_fun set props X933^3
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
pts_fun set props set
"
"12------------]-]Success  
ofType (setPi singleton x3 \ propId singleton star x0) set int
"
"12____________[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star x0) =>
  ofType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star) X937^3
   int
"
"13_____________[+[Begin 
ofType singleton X938^4 int
"
"13-------------]-]Success  
ofType singleton set int
"
"13_____________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (ofType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X939^4 int)
"
"14______________[+[Begin 
ofType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) X939^4
 int
"
"15_______________[+[Begin 
ofType singleton X940^5 int
"
"15---------------]-]Success  
ofType singleton set int
"
"15_______________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X941^5 int)
"
"16________________[+[Begin 
ofType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 X941^5 int
"
"17_________________[+[Begin 
ofType (propId singleton x4 x5) X942^6 int
"
"18__________________[+[Begin 
of x4 X943^6 int
"
"18------------------]-]Success  
of x4 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of x5 X944^6 int
"
"18------------------]-]Success  
of x5 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X942^6 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
ofType (propId singleton x4 x5) props int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (ofType (propId singleton star star) X945^6 int)
"
"18__________________[+[Begin 
ofType (propId singleton star star) X945^6 int
"
"19___________________[+[Begin 
of star X946^7 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of star X947^7 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X945^6 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
ofType (propId singleton star star) props int
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (ofType (propId singleton star star) props int)
"
"17_________________[+[Begin 
pts_for props props X941^5
"
"17-----------------]-]Success  
pts_for props props props
"
"16----------------]-]Success  
ofType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 props int
"
"15---------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     props int)
"
"15_______________[+[Begin 
pts_for set props X939^4
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
ofType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) props int
"
"13-------------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (ofType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) props
     int)
"
"13_____________[+[Begin 
pts_for set props X937^3
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star x0) =>
  ofType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star) props
   int
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"12____________[+[Begin 
pts_fun set set X932^3
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"12------------]-]Success  
pts_fun set set set
"
"11-----------]-]Success  
ofType
 (setPi
   (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   singleton) set int
"
"11___________[+[Begin 
pi x3 \
 locDecl x3
  (setPi
    (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    singleton) =>
  ofType
   (forall
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \
     forall
      (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall (forall singleton x6 \ propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) X948^3 int
"
"12____________[+[Begin 
ofType
 (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) X949^4
 int
"
"13_____________[+[Begin 
ofType (setPi singleton x4 \ propId singleton star x0) X950^4 int
"
"14______________[+[Begin 
of star X951^5 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of x0 X952^5 int
"
"14--------------]-]Success  
of x0 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X953^4 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"14______________[+[Begin 
pts_fun set props X950^4
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
ofType (setPi singleton x4 \ propId singleton star x0) set int
"
"13_____________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) X954^4
   int
"
"14______________[+[Begin 
ofType singleton X955^5 int
"
"14--------------]-]Success  
ofType singleton set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X956^5 int)
"
"15_______________[+[Begin 
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X956^5
 int
"
"16________________[+[Begin 
ofType singleton X957^6 int
"
"16----------------]-]Success  
ofType singleton set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X958^6 int)
"
"17_________________[+[Begin 
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X958^6 int
"
"18__________________[+[Begin 
ofType (propId singleton x5 x6) X959^7 int
"
"19___________________[+[Begin 
of x5 X960^7 int
"
"19-------------------]-]Success  
of x5 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x6 X961^7 int
"
"19-------------------]-]Success  
of x6 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X959^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
ofType (propId singleton x5 x6) props int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) X962^7 int)
"
"19___________________[+[Begin 
ofType (propId singleton star star) X962^7 int
"
"20____________________[+[Begin 
of star X963^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X964^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X962^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
ofType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for props props X958^6
"
"18------------------]-]Success  
pts_for props props props
"
"17-----------------]-]Success  
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"16________________[+[Begin 
pts_for set props X956^5
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"14______________[+[Begin 
pts_for set props X954^4
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"12------------]-]Success  
ofType
 (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) set int
"
"12____________[+[Begin 
pi x4 \
 locDecl x4
  (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5)) X965^4 int)
"
"13_____________[+[Begin 
ofType
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton (app x3 x4) (app x3 x5)) X965^4 int
"
"14______________[+[Begin 
ofType
 (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) X966^5
 int
"
"15_______________[+[Begin 
ofType (setPi singleton x5 \ propId singleton star x0) X967^5 int
"
"16________________[+[Begin 
of star X968^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of x0 X969^6 int
"
"16----------------]-]Success  
of x0 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X970^5 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16________________[+[Begin 
pts_fun set props X967^5
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
pts_fun set props set
"
"15---------------]-]Success  
ofType (setPi singleton x5 \ propId singleton star x0) set int
"
"15_______________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) X971^5
   int
"
"16________________[+[Begin 
ofType singleton X972^6 int
"
"16----------------]-]Success  
ofType singleton set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X973^6 int)
"
"17_________________[+[Begin 
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X973^6
 int
"
"18__________________[+[Begin 
ofType singleton X974^7 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X975^7 int)
"
"19___________________[+[Begin 
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X975^7 int
"
"20____________________[+[Begin 
ofType (propId singleton x6 x7) X976^8 int
"
"21_____________________[+[Begin 
of x6 X977^8 int
"
"21---------------------]-]Success  
of x6 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x7 X978^8 int
"
"21---------------------]-]Success  
of x7 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X976^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType (propId singleton x6 x7) props int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) X979^8 int)
"
"21_____________________[+[Begin 
ofType (propId singleton star star) X979^8 int
"
"22______________________[+[Begin 
of star X980^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X981^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X979^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for props props X975^7
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"18__________________[+[Begin 
pts_for set props X973^6
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"16________________[+[Begin 
pts_for set props X971^5
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
ofType
 (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5
  (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x6 \ propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) X982^5 int)
"
"15_______________[+[Begin 
ofType
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton (app x3 x4) (app x3 x5)) X982^5 int
"
"16________________[+[Begin 
ofType (forall singleton x6 \ propId singleton star star) X983^6 int
"
"17_________________[+[Begin 
ofType singleton X984^6 int
"
"17-----------------]-]Success  
ofType singleton set int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6 singleton => spy (ofType (propId singleton star star) X985^6 int)
"
"18__________________[+[Begin 
ofType (propId singleton star star) X985^6 int
"
"19___________________[+[Begin 
of star X986^7 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of star X987^7 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X985^6 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
ofType (propId singleton star star) props int
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6 singleton => spy (ofType (propId singleton star star) props int)
"
"17_________________[+[Begin 
pts_for set props X983^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
ofType (forall singleton x6 \ propId singleton star star) props int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 (forall singleton x7 \ propId singleton star star) =>
  spy (ofType (propId singleton (app x3 x4) (app x3 x5)) X988^6 int)
"
"17_________________[+[Begin 
ofType (propId singleton (app x3 x4) (app x3 x5)) X988^6 int
"
"18__________________[+[Begin 
of (app x3 x4) X989^7 int
"
"19___________________[+[Begin 
of x3 (setPi X990^7 X991^7) int
"
"19-------------------]-]Success  
of x3
 (setPi
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   singleton) int
"
"19___________________[+[Begin 
isa x4
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
of x4 X992^7 int
"
"20--------------------]-]Success  
of x4
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"19-------------------]-]Success  
isa x4
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"18------------------]-]Success  
of (app x3 x4) singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of (app x3 x5) X993^7 int
"
"19___________________[+[Begin 
of x3 (setPi X994^7 X995^7) int
"
"19-------------------]-]Success  
of x3
 (setPi
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   singleton) int
"
"19___________________[+[Begin 
isa x5
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
of x5 X996^7 int
"
"20--------------------]-]Success  
of x5
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"19-------------------]-]Success  
isa x5
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"18------------------]-]Success  
of (app x3 x5) singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X988^6 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
ofType (propId singleton (app x3 x4) (app x3 x5)) props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 (forall singleton x7 \ propId singleton star star) =>
  spy (ofType (propId singleton (app x3 x4) (app x3 x5)) props int)
"
"16________________[+[Begin 
pts_for props props X982^5
"
"16----------------]-]Success  
pts_for props props props
"
"15---------------]-]Success  
ofType
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton (app x3 x4) (app x3 x5)) props int
"
"14--------------]-]Success  
pi x5 \
 locDecl x5
  (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x6 \ propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) props int)
"
"14______________[+[Begin 
pts_for set props X965^4
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
ofType
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton (app x3 x4) (app x3 x5)) props int
"
"12------------]-]Success  
pi x4 \
 locDecl x4
  (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5)) props int)
"
"12____________[+[Begin 
pts_for set props X948^3
"
"12------------]-]Success  
pts_for set props props
"
"11-----------]-]Success  
pi x3 \
 locDecl x3
  (setPi
    (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    singleton) =>
  ofType
   (forall
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \
     forall
      (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall (forall singleton x6 \ propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) props int
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq props set
"
"11-----------]-]Success  
pts_leq props set
"
"11___________[+[Begin 
pts_fun set set X931^3
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"11-----------]-]Success  
pts_fun set set set
"
"10----------]-]Success  
ofType
 (setPi
   (setSigma
     (setPi
       (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ singleton) x3 \
     forall
      (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) set int
"
"10__________[+[Begin 
pi x3 \
 locDecl x3
  (setPi
    (setSigma
      (setPi
        (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \ singleton) x4 \
      forall
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall (forall singleton x7 \ propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) =>
  ofType
   (forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) x4 \
       forall
        (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \
              setPi
               (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)
          (app
            (elim_setSigma x5 (x7 \
              setPi
               (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) X997^3 int
"
"11___________[+[Begin 
ofType
 (setSigma
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6)) X998^4 int
"
"12____________[+[Begin 
ofType
 (setPi
   (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton) X999^4 int
"
"13_____________[+[Begin 
ofType (setPi singleton x4 \ propId singleton star x0) X1000^4 int
"
"14______________[+[Begin 
of star X1001^5 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of x0 X1002^5 int
"
"14--------------]-]Success  
of x0 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X1003^4 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"14______________[+[Begin 
pts_fun set props X1000^4
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
ofType (setPi singleton x4 \ propId singleton star x0) set int
"
"13_____________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star)
   X1004^4 int
"
"14______________[+[Begin 
ofType singleton X1005^5 int
"
"14--------------]-]Success  
ofType singleton set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1006^5 int)
"
"15_______________[+[Begin 
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X1006^5
 int
"
"16________________[+[Begin 
ofType singleton X1007^6 int
"
"16----------------]-]Success  
ofType singleton set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1008^6 int)
"
"17_________________[+[Begin 
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X1008^6 int
"
"18__________________[+[Begin 
ofType (propId singleton x5 x6) X1009^7 int
"
"19___________________[+[Begin 
of x5 X1010^7 int
"
"19-------------------]-]Success  
of x5 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x6 X1011^7 int
"
"19-------------------]-]Success  
of x6 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1009^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
ofType (propId singleton x5 x6) props int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) X1012^7 int)
"
"19___________________[+[Begin 
ofType (propId singleton star star) X1012^7 int
"
"20____________________[+[Begin 
of star X1013^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1014^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1012^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
ofType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for props props X1008^6
"
"18------------------]-]Success  
pts_for props props props
"
"17-----------------]-]Success  
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"16________________[+[Begin 
pts_for set props X1006^5
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"14______________[+[Begin 
pts_for set props X1004^4
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"13_____________[+[Begin 
pts_fun set set X999^4
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"13-------------]-]Success  
pts_fun set set set
"
"12------------]-]Success  
ofType
 (setPi
   (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton) set int
"
"12____________[+[Begin 
pi x4 \
 locDecl x4
  (setPi
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    singleton) =>
  ofType
   (forall
     (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X1015^4 int
"
"13_____________[+[Begin 
ofType
 (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) X1016^5
 int
"
"14______________[+[Begin 
ofType (setPi singleton x5 \ propId singleton star x0) X1017^5 int
"
"15_______________[+[Begin 
of star X1018^6 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of x0 X1019^6 int
"
"15---------------]-]Success  
of x0 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X1020^5 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"15_______________[+[Begin 
pts_fun set props X1017^5
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
pts_fun set props set
"
"14--------------]-]Success  
ofType (setPi singleton x5 \ propId singleton star x0) set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1021^5 int
"
"15_______________[+[Begin 
ofType singleton X1022^6 int
"
"15---------------]-]Success  
ofType singleton set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1023^6 int)
"
"16________________[+[Begin 
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1023^6
 int
"
"17_________________[+[Begin 
ofType singleton X1024^7 int
"
"17-----------------]-]Success  
ofType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1025^7 int)
"
"18__________________[+[Begin 
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1025^7 int
"
"19___________________[+[Begin 
ofType (propId singleton x6 x7) X1026^8 int
"
"20____________________[+[Begin 
of x6 X1027^8 int
"
"20--------------------]-]Success  
of x6 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of x7 X1028^8 int
"
"20--------------------]-]Success  
of x7 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1026^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
ofType (propId singleton x6 x7) props int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) X1029^8 int)
"
"20____________________[+[Begin 
ofType (propId singleton star star) X1029^8 int
"
"21_____________________[+[Begin 
of star X1030^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1031^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1029^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType (propId singleton star star) props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) props int)
"
"19___________________[+[Begin 
pts_for props props X1025^7
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"17_________________[+[Begin 
pts_for set props X1023^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"15_______________[+[Begin 
pts_for set props X1021^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
ofType
 (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5
  (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) X1032^5 int)
"
"14______________[+[Begin 
ofType
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) X1032^5 int
"
"15_______________[+[Begin 
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X1033^6
 int
"
"16________________[+[Begin 
ofType (setPi singleton x6 \ propId singleton star x0) X1034^6 int
"
"17_________________[+[Begin 
of star X1035^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of x0 X1036^7 int
"
"17-----------------]-]Success  
of x0 singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1037^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"17_________________[+[Begin 
pts_fun set props X1034^6
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
pts_fun set props set
"
"16----------------]-]Success  
ofType (setPi singleton x6 \ propId singleton star x0) set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1038^6 int
"
"17_________________[+[Begin 
ofType singleton X1039^7 int
"
"17-----------------]-]Success  
ofType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1040^7 int)
"
"18__________________[+[Begin 
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1040^7
 int
"
"19___________________[+[Begin 
ofType singleton X1041^8 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1042^8 int)
"
"20____________________[+[Begin 
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1042^8 int
"
"21_____________________[+[Begin 
ofType (propId singleton x7 x8) X1043^9 int
"
"22______________________[+[Begin 
of x7 X1044^9 int
"
"22----------------------]-]Success  
of x7 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x8 X1045^9 int
"
"22----------------------]-]Success  
of x8 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1043^9 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton x7 x8) props int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) X1046^9 int)
"
"22______________________[+[Begin 
ofType (propId singleton star star) X1046^9 int
"
"23_______________________[+[Begin 
of star X1047^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1048^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1046^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for props props X1042^8
"
"21---------------------]-]Success  
pts_for props props props
"
"20--------------------]-]Success  
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1040^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"17_________________[+[Begin 
pts_for set props X1038^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X1049^6 int)
"
"16________________[+[Begin 
ofType
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) X1049^6 int
"
"17_________________[+[Begin 
ofType (forall singleton x7 \ propId singleton star star) X1050^7 int
"
"18__________________[+[Begin 
ofType singleton X1051^7 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy (ofType (propId singleton star star) X1052^7 int)
"
"19___________________[+[Begin 
ofType (propId singleton star star) X1052^7 int
"
"20____________________[+[Begin 
of star X1053^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1054^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1052^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
ofType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton => spy (ofType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for set props X1050^7
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
ofType (forall singleton x7 \ propId singleton star star) props int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 (forall singleton x8 \ propId singleton star star) =>
  spy (ofType (propId singleton (app x4 x5) (app x4 x6)) X1055^7 int)
"
"18__________________[+[Begin 
ofType (propId singleton (app x4 x5) (app x4 x6)) X1055^7 int
"
"19___________________[+[Begin 
of (app x4 x5) X1056^8 int
"
"20____________________[+[Begin 
of x4 (setPi X1057^8 X1058^8) int
"
"20--------------------]-]Success  
of x4
 (setPi
   (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"20____________________[+[Begin 
isa x5
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
of x5 X1059^8 int
"
"21---------------------]-]Success  
of x5
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"21---------------------]-]Success  
conv
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
isa x5
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"19-------------------]-]Success  
of (app x4 x5) singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of (app x4 x6) X1060^8 int
"
"20____________________[+[Begin 
of x4 (setPi X1061^8 X1062^8) int
"
"20--------------------]-]Success  
of x4
 (setPi
   (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"20____________________[+[Begin 
isa x6
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
of x6 X1063^8 int
"
"21---------------------]-]Success  
of x6
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"21---------------------]-]Success  
conv
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
isa x6
 (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"19-------------------]-]Success  
of (app x4 x6) singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1055^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
ofType (propId singleton (app x4 x5) (app x4 x6)) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 (forall singleton x8 \ propId singleton star star) =>
  spy (ofType (propId singleton (app x4 x5) (app x4 x6)) props int)
"
"17_________________[+[Begin 
pts_for props props X1049^6
"
"17-----------------]-]Success  
pts_for props props props
"
"16----------------]-]Success  
ofType
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int)
"
"15_______________[+[Begin 
pts_for set props X1032^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
ofType
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5
  (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) props int)
"
"13_____________[+[Begin 
pts_for set props X1015^4
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
pi x4 \
 locDecl x4
  (setPi
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    singleton) =>
  ofType
   (forall
     (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"11-----------]-]Success  
ofType
 (setSigma
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6)) set int
"
"11___________[+[Begin 
pi x4 \
 locDecl x4
  (setSigma
    (setPi
      (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  spy
   (ofType
     (forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \ singleton) x5 \
         forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall (forall singleton x8 \ propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \
               setPi
                (setSigma (setPi singleton x8 \ propId singleton star x0)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
             x6)
           (app
             (elim_setSigma x5 (x7 \
               setPi
                (setSigma (setPi singleton x8 \ propId singleton star x0)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
             x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) X1064^4 int)
"
"12____________[+[Begin 
ofType
 (forall
   (setSigma
     (setPi
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \ singleton) x5 \
     forall
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \
   forall
    (forall
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      propId singleton
       (app
         (elim_setSigma x4 (x7 \
           setPi
            (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6)
       (app
         (elim_setSigma x5 (x7 \
           setPi
            (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6))
    x6 \ propId singleton (app x3 x4) (app x3 x5)) X1064^4 int
"
"13_____________[+[Begin 
ofType
 (setSigma
   (setPi
     (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) x5 \
   forall
    (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall (forall singleton x8 \ propId singleton star star) x8 \
      propId singleton (app x5 x6) (app x5 x7)) X1065^5 int
"
"14______________[+[Begin 
ofType
 (setPi
   (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton) X1066^5 int
"
"15_______________[+[Begin 
ofType (setPi singleton x5 \ propId singleton star x0) X1067^5 int
"
"16________________[+[Begin 
of star X1068^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of x0 X1069^6 int
"
"16----------------]-]Success  
of x0 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X1070^5 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16________________[+[Begin 
pts_fun set props X1067^5
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
pts_fun set props set
"
"15---------------]-]Success  
ofType (setPi singleton x5 \ propId singleton star x0) set int
"
"15_______________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1071^5 int
"
"16________________[+[Begin 
ofType singleton X1072^6 int
"
"16----------------]-]Success  
ofType singleton set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1073^6 int)
"
"17_________________[+[Begin 
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1073^6
 int
"
"18__________________[+[Begin 
ofType singleton X1074^7 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1075^7 int)
"
"19___________________[+[Begin 
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1075^7 int
"
"20____________________[+[Begin 
ofType (propId singleton x6 x7) X1076^8 int
"
"21_____________________[+[Begin 
of x6 X1077^8 int
"
"21---------------------]-]Success  
of x6 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x7 X1078^8 int
"
"21---------------------]-]Success  
of x7 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1076^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType (propId singleton x6 x7) props int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) X1079^8 int)
"
"21_____________________[+[Begin 
ofType (propId singleton star star) X1079^8 int
"
"22______________________[+[Begin 
of star X1080^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1081^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1079^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for props props X1075^7
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"18__________________[+[Begin 
pts_for set props X1073^6
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"16________________[+[Begin 
pts_for set props X1071^5
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"15_______________[+[Begin 
pts_fun set set X1066^5
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"15---------------]-]Success  
pts_fun set set set
"
"14--------------]-]Success  
ofType
 (setPi
   (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton) set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5
  (setPi
    (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    singleton) =>
  ofType
   (forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) X1082^5 int
"
"15_______________[+[Begin 
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X1083^6
 int
"
"16________________[+[Begin 
ofType (setPi singleton x6 \ propId singleton star x0) X1084^6 int
"
"17_________________[+[Begin 
of star X1085^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of x0 X1086^7 int
"
"17-----------------]-]Success  
of x0 singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1087^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"17_________________[+[Begin 
pts_fun set props X1084^6
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
pts_fun set props set
"
"16----------------]-]Success  
ofType (setPi singleton x6 \ propId singleton star x0) set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1088^6 int
"
"17_________________[+[Begin 
ofType singleton X1089^7 int
"
"17-----------------]-]Success  
ofType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1090^7 int)
"
"18__________________[+[Begin 
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1090^7
 int
"
"19___________________[+[Begin 
ofType singleton X1091^8 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1092^8 int)
"
"20____________________[+[Begin 
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1092^8 int
"
"21_____________________[+[Begin 
ofType (propId singleton x7 x8) X1093^9 int
"
"22______________________[+[Begin 
of x7 X1094^9 int
"
"22----------------------]-]Success  
of x7 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x8 X1095^9 int
"
"22----------------------]-]Success  
of x8 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1093^9 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton x7 x8) props int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) X1096^9 int)
"
"22______________________[+[Begin 
ofType (propId singleton star star) X1096^9 int
"
"23_______________________[+[Begin 
of star X1097^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1098^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1096^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for props props X1092^8
"
"21---------------------]-]Success  
pts_for props props props
"
"20--------------------]-]Success  
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1090^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"17_________________[+[Begin 
pts_for set props X1088^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) X1099^6 int)
"
"16________________[+[Begin 
ofType
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton (app x5 x6) (app x5 x7)) X1099^6 int
"
"17_________________[+[Begin 
ofType
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1100^7 int
"
"18__________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star x0) X1101^7 int
"
"19___________________[+[Begin 
of star X1102^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x0 X1103^8 int
"
"19-------------------]-]Success  
of x0 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1104^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19___________________[+[Begin 
pts_fun set props X1101^7
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"19-------------------]-]Success  
pts_fun set props set
"
"18------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star x0) set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1105^7 int
"
"19___________________[+[Begin 
ofType singleton X1106^8 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1107^8 int)
"
"20____________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1107^8
 int
"
"21_____________________[+[Begin 
ofType singleton X1108^9 int
"
"21---------------------]-]Success  
ofType singleton set int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1109^9 int)
"
"22______________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1109^9 int
"
"23_______________________[+[Begin 
ofType (propId singleton x8 x9) X1110^10 int
"
"24________________________[+[Begin 
of x8 X1111^10 int
"
"24------------------------]-]Success  
of x8 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of x9 X1112^10 int
"
"24------------------------]-]Success  
of x9 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1110^10 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton x8 x9) props int
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1113^10 int)
"
"24________________________[+[Begin 
ofType (propId singleton star star) X1113^10 int
"
"25_________________________[+[Begin 
of star X1114^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X1115^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1113^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
ofType (propId singleton star star) props int
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props int)
"
"23_______________________[+[Begin 
pts_for props props X1109^9
"
"23-----------------------]-]Success  
pts_for props props props
"
"22----------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X1107^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1105^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   int
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
ofType
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) set
 int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) X1116^7 int)
"
"18__________________[+[Begin 
ofType
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton (app x5 x6) (app x5 x7)) X1116^7 int
"
"19___________________[+[Begin 
ofType (forall singleton x8 \ propId singleton star star) X1117^8 int
"
"20____________________[+[Begin 
ofType singleton X1118^8 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy (ofType (propId singleton star star) X1119^8 int)
"
"21_____________________[+[Begin 
ofType (propId singleton star star) X1119^8 int
"
"22______________________[+[Begin 
of star X1120^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1121^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1119^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 singleton => spy (ofType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for set props X1117^8
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
ofType (forall singleton x8 \ propId singleton star star) props int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 (forall singleton x9 \ propId singleton star star) =>
  spy (ofType (propId singleton (app x5 x6) (app x5 x7)) X1122^8 int)
"
"20____________________[+[Begin 
ofType (propId singleton (app x5 x6) (app x5 x7)) X1122^8 int
"
"21_____________________[+[Begin 
of (app x5 x6) X1123^9 int
"
"22______________________[+[Begin 
of x5 (setPi X1124^9 X1125^9) int
"
"22----------------------]-]Success  
of x5
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"22______________________[+[Begin 
isa x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
of x6 X1126^9 int
"
"23-----------------------]-]Success  
of x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
isa x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"21---------------------]-]Success  
of (app x5 x6) singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of (app x5 x7) X1127^9 int
"
"22______________________[+[Begin 
of x5 (setPi X1128^9 X1129^9) int
"
"22----------------------]-]Success  
of x5
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"22______________________[+[Begin 
isa x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
of x7 X1130^9 int
"
"23-----------------------]-]Success  
of x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
isa x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"21---------------------]-]Success  
of (app x5 x7) singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1122^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType (propId singleton (app x5 x6) (app x5 x7)) props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 (forall singleton x9 \ propId singleton star star) =>
  spy (ofType (propId singleton (app x5 x6) (app x5 x7)) props int)
"
"19___________________[+[Begin 
pts_for props props X1116^7
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
ofType
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton (app x5 x6) (app x5 x7)) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) props int)
"
"17_________________[+[Begin 
pts_for set props X1099^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
ofType
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton (app x5 x6) (app x5 x7)) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) props int)
"
"15_______________[+[Begin 
pts_for set props X1082^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
pi x5 \
 locDecl x5
  (setPi
    (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    singleton) =>
  ofType
   (forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) props int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
ofType
 (setSigma
   (setPi
     (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) x5 \
   forall
    (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall (forall singleton x8 \ propId singleton star star) x8 \
      propId singleton (app x5 x6) (app x5 x7)) set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5
  (setSigma
    (setPi
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \ singleton) x6 \
    forall
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall (forall singleton x9 \ propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8)) =>
  spy
   (ofType
     (forall
       (forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \
              setPi
               (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)
          (app
            (elim_setSigma x5 (x7 \
              setPi
               (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) X1131^5 int)
"
"14______________[+[Begin 
ofType
 (forall
   (forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     propId singleton
      (app
        (elim_setSigma x4 (x7 \
          setPi
           (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6)
      (app
        (elim_setSigma x5 (x7 \
          setPi
           (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6))
   x6 \ propId singleton (app x3 x4) (app x3 x5)) X1131^5 int
"
"15_______________[+[Begin 
ofType
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   propId singleton
    (app
      (elim_setSigma x4 (x7 \
        setPi
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6)
    (app
      (elim_setSigma x5 (x7 \
        setPi
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6))
 X1132^6 int
"
"16________________[+[Begin 
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X1133^6
 int
"
"17_________________[+[Begin 
ofType (setPi singleton x6 \ propId singleton star x0) X1134^6 int
"
"18__________________[+[Begin 
of star X1135^7 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of x0 X1136^7 int
"
"18------------------]-]Success  
of x0 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1137^6 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18__________________[+[Begin 
pts_fun set props X1134^6
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"18------------------]-]Success  
pts_fun set props set
"
"17-----------------]-]Success  
ofType (setPi singleton x6 \ propId singleton star x0) set int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1138^6 int
"
"18__________________[+[Begin 
ofType singleton X1139^7 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1140^7 int)
"
"19___________________[+[Begin 
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1140^7
 int
"
"20____________________[+[Begin 
ofType singleton X1141^8 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1142^8 int)
"
"21_____________________[+[Begin 
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1142^8 int
"
"22______________________[+[Begin 
ofType (propId singleton x7 x8) X1143^9 int
"
"23_______________________[+[Begin 
of x7 X1144^9 int
"
"23-----------------------]-]Success  
of x7 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of x8 X1145^9 int
"
"23-----------------------]-]Success  
of x8 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1143^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton x7 x8) props int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) X1146^9 int)
"
"23_______________________[+[Begin 
ofType (propId singleton star star) X1146^9 int
"
"24________________________[+[Begin 
of star X1147^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X1148^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1146^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton star star) props int
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) props int)
"
"22______________________[+[Begin 
pts_for props props X1142^8
"
"22----------------------]-]Success  
pts_for props props props
"
"21---------------------]-]Success  
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"20____________________[+[Begin 
pts_for set props X1140^7
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"18__________________[+[Begin 
pts_for set props X1138^6
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (propId singleton
       (app
         (elim_setSigma x4 (x7 \
           setPi
            (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6)
       (app
         (elim_setSigma x5 (x7 \
           setPi
            (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6))
     X1149^6 int)
"
"17_________________[+[Begin 
ofType
 (propId singleton
   (app
     (elim_setSigma x4 (x7 \
       setPi
        (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x7 \ x8 \ x7) x6)
   (app
     (elim_setSigma x5 (x7 \
       setPi
        (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x7 \ x8 \ x7) x6)) X1149^6 int
"
"18__________________[+[Begin 
of
 (app
   (elim_setSigma x4 (x7 \
     setPi
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) x7 \ x8 \ x7) x6) X1150^7 int
"
"19___________________[+[Begin 
of
 (elim_setSigma x4 (x7 \
   setPi
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \ singleton) x7 \ x8 \ x7) (setPi X1151^7 X1152^7) int
"
"20____________________[+[Begin 
of x4 (setSigma X1153^7 X1154^7) int
"
"20--------------------]-]Success  
of x4
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9)) int
"
"20____________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma
    (setPi
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall
      (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall (forall singleton x11 \ propId singleton star star) x11 \
       propId singleton (app x8 x9) (app x8 x10)) =>
  ofType
   (setPi
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) _ int
"
"21_____________________[+[Begin 
ofType (setPi singleton x8 \ propId singleton star x0) X1155^8 int
"
"22______________________[+[Begin 
of star X1156^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x0 X1157^9 int
"
"22----------------------]-]Success  
of x0 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1158^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22______________________[+[Begin 
pts_fun set props X1155^8
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
pts_fun set props set
"
"21---------------------]-]Success  
ofType (setPi singleton x8 \ propId singleton star x0) set int
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  ofType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X1159^8 int
"
"22______________________[+[Begin 
ofType singleton X1160^9 int
"
"22----------------------]-]Success  
ofType singleton set int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1161^9 int)
"
"23_______________________[+[Begin 
ofType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X1161^9
 int
"
"24________________________[+[Begin 
ofType singleton X1162^10 int
"
"24------------------------]-]Success  
ofType singleton set int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1163^10 int)
"
"25_________________________[+[Begin 
ofType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X1163^10 int
"
"26__________________________[+[Begin 
ofType (propId singleton x9 x10) X1164^11 int
"
"27___________________________[+[Begin 
of x9 X1165^11 int
"
"27---------------------------]-]Success  
of x9 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of x10 X1166^11 int
"
"27---------------------------]-]Success  
of x10 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1164^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
ofType (propId singleton x9 x10) props int
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (ofType (propId singleton star star) X1167^11 int)
"
"27___________________________[+[Begin 
ofType (propId singleton star star) X1167^11 int
"
"28____________________________[+[Begin 
of star X1168^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X1169^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1167^11 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
ofType (propId singleton star star) props int
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (ofType (propId singleton star star) props int)
"
"26__________________________[+[Begin 
pts_for props props X1163^10
"
"26--------------------------]-]Success  
pts_for props props props
"
"25-------------------------]-]Success  
ofType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props int
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"24________________________[+[Begin 
pts_for set props X1161^9
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
ofType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 int
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"22______________________[+[Begin 
pts_for set props X1159^8
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  ofType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props int
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"21_____________________[+[Begin 
pts_fun set set X1170^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"21---------------------]-]Success  
pts_fun set set set
"
"20--------------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma
    (setPi
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall
      (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall (forall singleton x11 \ propId singleton star star) x11 \
       propId singleton (app x8 x9) (app x8 x10)) =>
  ofType
   (setPi
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) _ int
"
"20____________________[+[Begin 
pi x7 \
 pi x8 \
  locDecl x7
   (setPi
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \ singleton) =>
   locDecl x8
    (forall
      (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall (forall singleton x11 \ propId singleton star star) x11 \
        propId singleton (app x7 x9) (app x7 x10)) =>
    isa x7
     (setPi
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \ singleton) int
"
"21_____________________[+[Begin 
of x7 X1171^9 int
"
"21---------------------]-]Success  
of x7
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"21_____________________[+[Begin 
conv
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton)
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton)
"
"21---------------------]-]Success  
conv
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton)
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton)
"
"20--------------------]-]Success  
pi x7 \
 pi x8 \
  locDecl x7
   (setPi
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \ singleton) =>
   locDecl x8
    (forall
      (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall (forall singleton x11 \ propId singleton star star) x11 \
        propId singleton (app x7 x9) (app x7 x10)) =>
    isa x7
     (setPi
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \ singleton) int
"
"19-------------------]-]Success  
of
 (elim_setSigma x4 (x7 \
   setPi
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \ singleton) x7 \ x8 \ x7)
 (setPi
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   singleton) int
"
"19___________________[+[Begin 
isa x6
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
of x6 X1172^7 int
"
"20--------------------]-]Success  
of x6
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"19-------------------]-]Success  
isa x6
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"18------------------]-]Success  
of
 (app
   (elim_setSigma x4 (x7 \
     setPi
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) x7 \ x8 \ x7) x6) singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of
 (app
   (elim_setSigma x5 (x7 \
     setPi
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) x7 \ x8 \ x7) x6) X1173^7 int
"
"19___________________[+[Begin 
of
 (elim_setSigma x5 (x7 \
   setPi
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \ singleton) x7 \ x8 \ x7) (setPi X1174^7 X1175^7) int
"
"20____________________[+[Begin 
of x5 (setSigma X1176^7 X1177^7) int
"
"20--------------------]-]Success  
of x5
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9)) int
"
"20____________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma
    (setPi
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall
      (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall (forall singleton x11 \ propId singleton star star) x11 \
       propId singleton (app x8 x9) (app x8 x10)) =>
  ofType
   (setPi
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) _ int
"
"21_____________________[+[Begin 
ofType (setPi singleton x8 \ propId singleton star x0) X1178^8 int
"
"22______________________[+[Begin 
of star X1179^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x0 X1180^9 int
"
"22----------------------]-]Success  
of x0 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1181^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22______________________[+[Begin 
pts_fun set props X1178^8
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
pts_fun set props set
"
"21---------------------]-]Success  
ofType (setPi singleton x8 \ propId singleton star x0) set int
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  ofType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X1182^8 int
"
"22______________________[+[Begin 
ofType singleton X1183^9 int
"
"22----------------------]-]Success  
ofType singleton set int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1184^9 int)
"
"23_______________________[+[Begin 
ofType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X1184^9
 int
"
"24________________________[+[Begin 
ofType singleton X1185^10 int
"
"24------------------------]-]Success  
ofType singleton set int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1186^10 int)
"
"25_________________________[+[Begin 
ofType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X1186^10 int
"
"26__________________________[+[Begin 
ofType (propId singleton x9 x10) X1187^11 int
"
"27___________________________[+[Begin 
of x9 X1188^11 int
"
"27---------------------------]-]Success  
of x9 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of x10 X1189^11 int
"
"27---------------------------]-]Success  
of x10 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1187^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
ofType (propId singleton x9 x10) props int
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (ofType (propId singleton star star) X1190^11 int)
"
"27___________________________[+[Begin 
ofType (propId singleton star star) X1190^11 int
"
"28____________________________[+[Begin 
of star X1191^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X1192^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1190^11 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
ofType (propId singleton star star) props int
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (ofType (propId singleton star star) props int)
"
"26__________________________[+[Begin 
pts_for props props X1186^10
"
"26--------------------------]-]Success  
pts_for props props props
"
"25-------------------------]-]Success  
ofType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props int
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"24________________________[+[Begin 
pts_for set props X1184^9
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
ofType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 int
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"22______________________[+[Begin 
pts_for set props X1182^8
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  ofType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props int
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"21_____________________[+[Begin 
pts_fun set set X1193^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"21---------------------]-]Success  
pts_fun set set set
"
"20--------------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma
    (setPi
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall
      (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall (forall singleton x11 \ propId singleton star star) x11 \
       propId singleton (app x8 x9) (app x8 x10)) =>
  ofType
   (setPi
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) _ int
"
"20____________________[+[Begin 
pi x7 \
 pi x8 \
  locDecl x7
   (setPi
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \ singleton) =>
   locDecl x8
    (forall
      (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall (forall singleton x11 \ propId singleton star star) x11 \
        propId singleton (app x7 x9) (app x7 x10)) =>
    isa x7
     (setPi
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \ singleton) int
"
"21_____________________[+[Begin 
of x7 X1194^9 int
"
"21---------------------]-]Success  
of x7
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"21_____________________[+[Begin 
conv
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton)
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton)
"
"21---------------------]-]Success  
conv
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton)
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton)
"
"20--------------------]-]Success  
pi x7 \
 pi x8 \
  locDecl x7
   (setPi
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \ singleton) =>
   locDecl x8
    (forall
      (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall
       (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall (forall singleton x11 \ propId singleton star star) x11 \
        propId singleton (app x7 x9) (app x7 x10)) =>
    isa x7
     (setPi
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \ singleton) int
"
"19-------------------]-]Success  
of
 (elim_setSigma x5 (x7 \
   setPi
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \ singleton) x7 \ x8 \ x7)
 (setPi
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   singleton) int
"
"19___________________[+[Begin 
isa x6
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
of x6 X1195^7 int
"
"20--------------------]-]Success  
of x6
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"19-------------------]-]Success  
isa x6
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"18------------------]-]Success  
of
 (app
   (elim_setSigma x5 (x7 \
     setPi
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) x7 \ x8 \ x7) x6) singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1149^6 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
ofType
 (propId singleton
   (app
     (elim_setSigma x4 (x7 \
       setPi
        (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x7 \ x8 \ x7) x6)
   (app
     (elim_setSigma x5 (x7 \
       setPi
        (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x7 \ x8 \ x7) x6)) props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (propId singleton
       (app
         (elim_setSigma x4 (x7 \
           setPi
            (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6)
       (app
         (elim_setSigma x5 (x7 \
           setPi
            (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6))
     props int)
"
"16________________[+[Begin 
pts_for set props X1132^6
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
ofType
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   propId singleton
    (app
      (elim_setSigma x4 (x7 \
        setPi
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6)
    (app
      (elim_setSigma x5 (x7 \
        setPi
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6))
 props int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6
  (forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    propId singleton
     (app
       (elim_setSigma x4 (x8 \
         setPi
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \ singleton) x8 \ x9 \ x8) x7)
     (app
       (elim_setSigma x5 (x8 \
         setPi
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \ singleton) x8 \ x9 \ x8) x7))
  => spy (ofType (propId singleton (app x3 x4) (app x3 x5)) X1196^6 int)
"
"16________________[+[Begin 
ofType (propId singleton (app x3 x4) (app x3 x5)) X1196^6 int
"
"17_________________[+[Begin 
of (app x3 x4) X1197^7 int
"
"18__________________[+[Begin 
of x3 (setPi X1198^7 X1199^7) int
"
"18------------------]-]Success  
of x3
 (setPi
   (setSigma
     (setPi
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ singleton) x7 \
     forall
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall (forall singleton x10 \ propId singleton star star) x10 \
        propId singleton (app x7 x8) (app x7 x9)) x7 \ singleton) int
"
"18__________________[+[Begin 
isa x4
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9)) int
"
"19___________________[+[Begin 
of x4 X1200^7 int
"
"19-------------------]-]Success  
of x4
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9)) int
"
"19___________________[+[Begin 
conv
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9))
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9))
"
"19-------------------]-]Success  
conv
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9))
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9))
"
"18------------------]-]Success  
isa x4
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9)) int
"
"17-----------------]-]Success  
of (app x3 x4) singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of (app x3 x5) X1201^7 int
"
"18__________________[+[Begin 
of x3 (setPi X1202^7 X1203^7) int
"
"18------------------]-]Success  
of x3
 (setPi
   (setSigma
     (setPi
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ singleton) x7 \
     forall
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall (forall singleton x10 \ propId singleton star star) x10 \
        propId singleton (app x7 x8) (app x7 x9)) x7 \ singleton) int
"
"18__________________[+[Begin 
isa x5
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9)) int
"
"19___________________[+[Begin 
of x5 X1204^7 int
"
"19-------------------]-]Success  
of x5
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9)) int
"
"19___________________[+[Begin 
conv
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9))
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9))
"
"19-------------------]-]Success  
conv
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9))
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9))
"
"18------------------]-]Success  
isa x5
 (setSigma
   (setPi
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9)) int
"
"17-----------------]-]Success  
of (app x3 x5) singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1196^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16----------------]-]Success  
ofType (propId singleton (app x3 x4) (app x3 x5)) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6
  (forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    propId singleton
     (app
       (elim_setSigma x4 (x8 \
         setPi
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \ singleton) x8 \ x9 \ x8) x7)
     (app
       (elim_setSigma x5 (x8 \
         setPi
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \ singleton) x8 \ x9 \ x8) x7))
  => spy (ofType (propId singleton (app x3 x4) (app x3 x5)) props int)
"
"15_______________[+[Begin 
pts_for props props X1131^5
"
"15---------------]-]Success  
pts_for props props props
"
"14--------------]-]Success  
ofType
 (forall
   (forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     propId singleton
      (app
        (elim_setSigma x4 (x7 \
          setPi
           (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6)
      (app
        (elim_setSigma x5 (x7 \
          setPi
           (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6))
   x6 \ propId singleton (app x3 x4) (app x3 x5)) props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5
  (setSigma
    (setPi
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \ singleton) x6 \
    forall
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall (forall singleton x9 \ propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8)) =>
  spy
   (ofType
     (forall
       (forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \
              setPi
               (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)
          (app
            (elim_setSigma x5 (x7 \
              setPi
               (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) props int)
"
"13_____________[+[Begin 
pts_for set props X1064^4
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
ofType
 (forall
   (setSigma
     (setPi
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \ singleton) x5 \
     forall
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \
   forall
    (forall
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      propId singleton
       (app
         (elim_setSigma x4 (x7 \
           setPi
            (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6)
       (app
         (elim_setSigma x5 (x7 \
           setPi
            (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6))
    x6 \ propId singleton (app x3 x4) (app x3 x5)) props int
"
"11-----------]-]Success  
pi x4 \
 locDecl x4
  (setSigma
    (setPi
      (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  spy
   (ofType
     (forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \ singleton) x5 \
         forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall (forall singleton x8 \ propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \
               setPi
                (setSigma (setPi singleton x8 \ propId singleton star x0)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
             x6)
           (app
             (elim_setSigma x5 (x7 \
               setPi
                (setSigma (setPi singleton x8 \ propId singleton star x0)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
             x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) props int)
"
"11___________[+[Begin 
pts_for set props X997^3
"
"11-----------]-]Success  
pts_for set props props
"
"10----------]-]Success  
pi x3 \
 locDecl x3
  (setPi
    (setSigma
      (setPi
        (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \ singleton) x4 \
      forall
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall (forall singleton x7 \ propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) =>
  ofType
   (forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) x4 \
       forall
        (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         propId singleton
          (app
            (elim_setSigma x4 (x7 \
              setPi
               (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)
          (app
            (elim_setSigma x5 (x7 \
              setPi
               (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) props int
"
"10__________[+[Begin 
pts_leq set set
"
"10----------]-]Success  
pts_leq set set
"
"10__________[+[Begin 
pts_leq props set
"
"10----------]-]Success  
pts_leq props set
"
"9---------]-]Success  
ofType
 (setSigma
   (setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \ singleton) x3 \
       forall
        (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall (forall singleton x6 \ propId singleton star star) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
   forall
    (setSigma
      (setPi
        (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \ singleton) x4 \
      forall
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall (forall singleton x7 \ propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        propId singleton
         (app
           (elim_setSigma x4 (x7 \
             setPi
              (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
           x6)
         (app
           (elim_setSigma x5 (x7 \
             setPi
              (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
           x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) set int
"
"9_________[+[Begin 
pi x3 \
 locDecl x3
  (setSigma
    (setPi
      (setSigma
        (setPi
          (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x4 \
    forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ singleton) x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall
          (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall (forall singleton x9 \ propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         propId singleton
          (app
            (elim_setSigma x5 (x8 \
              setPi
               (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)
          (app
            (elim_setSigma x6 (x8 \
              setPi
               (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)) x7 \ propId singleton (app x4 x5) (app x4 x6)) =>
  spy
   (ofType
     (propId singleton
       (app
         (elim_setSigma x3 (x4 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
            singleton) x4 \ x5 \ x4)
         (elim_setSigma
           (pair
             (setPi
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) (x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star star)
                 x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6))
             (lambda
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ star)
             (forall_lam
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall_lam
                (setSigma (setPi singleton x5 \ propId singleton star star)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall_lam (forall singleton x6 \ propId singleton star star)
                 x6 \
                 fixMe "prova di riflessivita'" (propId singleton star star)))
           (x4 \
           setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
           pair
            (setPi
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \ singleton) (x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall (forall singleton x9 \ propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8))
            (lambda
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              app x4
               (elim_setSigma x6 (x7 \
                 setSigma (setPi singleton x8 \ propId singleton star star)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x7 \ x8 \
                 pair (setPi singleton x9 \ propId singleton star star) (x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star)
                  (lambda singleton x9 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x0) star) x1)
                     (app x7 x9))
                  (forall_lam singleton x9 \
                    forall_lam singleton x10 \
                     forall_lam (propId singleton x9 x10) x11 \
                      forall_app (forall_app (forall_app x8 x9) x10) x11)))
            (forall_lam
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall_lam
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall_lam (forall singleton x8 \ propId singleton star star)
                x8 \
                forall_app
                 (forall_app
                   (forall_app x5
                     (elim_setSigma x6 (x9 \
                       setSigma
                        (setPi singleton x10 \ propId singleton star star)
                        x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star) x9 \ x10 \
                       pair
                        (setPi singleton x11 \ propId singleton star star)
                        (x11 \
                        forall singleton x12 \
                         forall singleton x13 \
                          forall (propId singleton x12 x13) x14 \
                           propId singleton star star)
                        (lambda singleton x11 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star)
                                   (fixMe "prova di riflessivita'"
                                     (propId singleton star star))) x0) star)
                             x1) (app x9 x11))
                        (forall_lam singleton x11 \
                          forall_lam singleton x12 \
                           forall_lam (propId singleton x11 x12) x13 \
                            forall_app (forall_app (forall_app x10 x11) x12)
                             x13)))
                   (elim_setSigma x7 (x9 \
                     setSigma
                      (setPi singleton x10 \ propId singleton star star)
                      x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star) x9 \ x10 \
                     pair (setPi singleton x11 \ propId singleton star star)
                      (x11 \
                      forall singleton x12 \
                       forall singleton x13 \
                        forall (propId singleton x12 x13) x14 \
                         propId singleton star star)
                      (lambda singleton x11 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star)
                                 (fixMe "prova di riflessivita'"
                                   (propId singleton star star))) x0) star)
                           x1) (app x9 x11))
                      (forall_lam singleton x11 \
                        forall_lam singleton x12 \
                         forall_lam (propId singleton x11 x12) x13 \
                          forall_app (forall_app (forall_app x10 x11) x12)
                           x13)))
                 (forall_lam singleton x9 \ forall_app x8 x9)))) star)
     X1205^3 int)
"
"10__________[+[Begin 
ofType
 (propId singleton
   (app
     (elim_setSigma x3 (x4 \
       setPi
        (setSigma
          (setPi
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \ singleton) x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall (forall singleton x8 \ propId singleton star star) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4)
     (elim_setSigma
       (pair
         (setPi
           (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ singleton) (x4 \
         forall
          (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall (forall singleton x7 \ propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6))
         (lambda
           (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ star)
         (forall_lam
           (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall_lam
            (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall_lam (forall singleton x6 \ propId singleton star star)
             x6 \ fixMe "prova di riflessivita'" (propId singleton star star)))
       (x4 \
       setSigma
        (setPi
          (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
       pair
        (setPi
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ singleton) (x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall
          (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall (forall singleton x9 \ propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8))
        (lambda
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          app x4
           (elim_setSigma x6 (x7 \
             setSigma (setPi singleton x8 \ propId singleton star star) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x7 \ x8 \
             pair (setPi singleton x9 \ propId singleton star star) (x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star)
              (lambda singleton x9 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x7 x9))
              (forall_lam singleton x9 \
                forall_lam singleton x10 \
                 forall_lam (propId singleton x9 x10) x11 \
                  forall_app (forall_app (forall_app x8 x9) x10) x11)))
        (forall_lam
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall_lam
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall_lam (forall singleton x8 \ propId singleton star star) x8 \
            forall_app
             (forall_app
               (forall_app x5
                 (elim_setSigma x6 (x9 \
                   setSigma
                    (setPi singleton x10 \ propId singleton star star) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton star star) x9 \ x10 \
                   pair (setPi singleton x11 \ propId singleton star star)
                    (x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton star star)
                    (lambda singleton x11 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (fixMe "prova di riflessivita'"
                                 (propId singleton star star))) x0) star) x1)
                       (app x9 x11))
                    (forall_lam singleton x11 \
                      forall_lam singleton x12 \
                       forall_lam (propId singleton x11 x12) x13 \
                        forall_app (forall_app (forall_app x10 x11) x12) x13)))
               (elim_setSigma x7 (x9 \
                 setSigma (setPi singleton x10 \ propId singleton star star)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x9 \ x10 \
                 pair (setPi singleton x11 \ propId singleton star star)
                  (x11 \
                  forall singleton x12 \
                   forall singleton x13 \
                    forall (propId singleton x12 x13) x14 \
                     propId singleton star star)
                  (lambda singleton x11 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x0) star) x1)
                     (app x9 x11))
                  (forall_lam singleton x11 \
                    forall_lam singleton x12 \
                     forall_lam (propId singleton x11 x12) x13 \
                      forall_app (forall_app (forall_app x10 x11) x12) x13)))
             (forall_lam singleton x9 \ forall_app x8 x9)))) star) X1205^3
 int
"
"11___________[+[Begin 
of
 (app
   (elim_setSigma x3 (x4 \
     setPi
      (setSigma
        (setPi
          (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
     x5 \ x4)
   (elim_setSigma
     (pair
       (setPi
         (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) (x4 \
       forall
        (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6))
       (lambda
         (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ star)
       (forall_lam
         (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \
         forall_lam
          (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall_lam (forall singleton x6 \ propId singleton star star) x6 \
           fixMe "prova di riflessivita'" (propId singleton star star)))
     (x4 \
     setSigma
      (setPi
        (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \ singleton) x5 \
      forall
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall (forall singleton x8 \ propId singleton star star) x8 \
         propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
     pair
      (setPi
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) (x6 \
      forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8))
      (lambda
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        app x4
         (elim_setSigma x6 (x7 \
           setSigma (setPi singleton x8 \ propId singleton star star) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x7 \ x8 \
           pair (setPi singleton x9 \ propId singleton star star) (x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star)
            (lambda singleton x9 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x7 x9))
            (forall_lam singleton x9 \
              forall_lam singleton x10 \
               forall_lam (propId singleton x9 x10) x11 \
                forall_app (forall_app (forall_app x8 x9) x10) x11)))
      (forall_lam
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall_lam
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall_lam (forall singleton x8 \ propId singleton star star) x8 \
          forall_app
           (forall_app
             (forall_app x5
               (elim_setSigma x6 (x9 \
                 setSigma (setPi singleton x10 \ propId singleton star star)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x9 \ x10 \
                 pair (setPi singleton x11 \ propId singleton star star)
                  (x11 \
                  forall singleton x12 \
                   forall singleton x13 \
                    forall (propId singleton x12 x13) x14 \
                     propId singleton star star)
                  (lambda singleton x11 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x0) star) x1)
                     (app x9 x11))
                  (forall_lam singleton x11 \
                    forall_lam singleton x12 \
                     forall_lam (propId singleton x11 x12) x13 \
                      forall_app (forall_app (forall_app x10 x11) x12) x13)))
             (elim_setSigma x7 (x9 \
               setSigma (setPi singleton x10 \ propId singleton star star)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x9 \ x10 \
               pair (setPi singleton x11 \ propId singleton star star) (x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star)
                (lambda singleton x11 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x9 x11))
                (forall_lam singleton x11 \
                  forall_lam singleton x12 \
                   forall_lam (propId singleton x11 x12) x13 \
                    forall_app (forall_app (forall_app x10 x11) x12) x13)))
           (forall_lam singleton x9 \ forall_app x8 x9)))) X1206^4 int
"
"12____________[+[Begin 
of
 (elim_setSigma x3 (x4 \
   setPi
    (setSigma
      (setPi
        (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \ singleton) x5 \
      forall
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall (forall singleton x8 \ propId singleton star star) x8 \
         propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \ x5 \
   x4) (setPi X1207^4 X1208^4) int
"
"13_____________[+[Begin 
of x3 (setSigma X1209^4 X1210^4) int
"
"13-------------]-]Success  
of x3
 (setSigma
   (setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) x4 \
       forall
        (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x4 \
   forall
    (setSigma
      (setPi
        (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \ singleton) x5 \
      forall
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall (forall singleton x8 \ propId singleton star star) x8 \
         propId singleton (app x5 x6) (app x5 x7)) x5 \
    forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8)) x6 \
     forall
      (forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        propId singleton
         (app
           (elim_setSigma x5 (x8 \
             setPi
              (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
           x7)
         (app
           (elim_setSigma x6 (x8 \
             setPi
              (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
           x7)) x7 \ propId singleton (app x4 x5) (app x4 x6)) int
"
"13_____________[+[Begin 
pi x4 \
 locDecl x4
  (setSigma
    (setPi
      (setSigma
        (setPi
          (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x5 \
    forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8)) x6 \
     forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ singleton) x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall (forall singleton x10 \ propId singleton star star) x10 \
           propId singleton (app x7 x8) (app x7 x9)) x7 \
      forall
       (forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         propId singleton
          (app
            (elim_setSigma x6 (x9 \
              setPi
               (setSigma (setPi singleton x10 \ propId singleton star x0)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x10 \ singleton) x9 \ x10 \
              x9) x8)
          (app
            (elim_setSigma x7 (x9 \
              setPi
               (setSigma (setPi singleton x10 \ propId singleton star x0)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x10 \ singleton) x9 \ x10 \
              x9) x8)) x8 \ propId singleton (app x5 x6) (app x5 x7)) =>
  ofType
   (setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) _ int
"
"14______________[+[Begin 
ofType
 (setPi
   (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton) X1211^5 int
"
"15_______________[+[Begin 
ofType (setPi singleton x5 \ propId singleton star x0) X1212^5 int
"
"16________________[+[Begin 
of star X1213^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of x0 X1214^6 int
"
"16----------------]-]Success  
of x0 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X1215^5 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16________________[+[Begin 
pts_fun set props X1212^5
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
pts_fun set props set
"
"15---------------]-]Success  
ofType (setPi singleton x5 \ propId singleton star x0) set int
"
"15_______________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1216^5 int
"
"16________________[+[Begin 
ofType singleton X1217^6 int
"
"16----------------]-]Success  
ofType singleton set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1218^6 int)
"
"17_________________[+[Begin 
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1218^6
 int
"
"18__________________[+[Begin 
ofType singleton X1219^7 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1220^7 int)
"
"19___________________[+[Begin 
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1220^7 int
"
"20____________________[+[Begin 
ofType (propId singleton x6 x7) X1221^8 int
"
"21_____________________[+[Begin 
of x6 X1222^8 int
"
"21---------------------]-]Success  
of x6 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x7 X1223^8 int
"
"21---------------------]-]Success  
of x7 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1221^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType (propId singleton x6 x7) props int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) X1224^8 int)
"
"21_____________________[+[Begin 
ofType (propId singleton star star) X1224^8 int
"
"22______________________[+[Begin 
of star X1225^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1226^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1224^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for props props X1220^7
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"18__________________[+[Begin 
pts_for set props X1218^6
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"16________________[+[Begin 
pts_for set props X1216^5
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"15_______________[+[Begin 
pts_fun set set X1211^5
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"15---------------]-]Success  
pts_fun set set set
"
"14--------------]-]Success  
ofType
 (setPi
   (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton) set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5
  (setPi
    (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    singleton) =>
  ofType
   (forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) X1227^5 int
"
"15_______________[+[Begin 
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X1228^6
 int
"
"16________________[+[Begin 
ofType (setPi singleton x6 \ propId singleton star x0) X1229^6 int
"
"17_________________[+[Begin 
of star X1230^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of x0 X1231^7 int
"
"17-----------------]-]Success  
of x0 singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1232^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"17_________________[+[Begin 
pts_fun set props X1229^6
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
pts_fun set props set
"
"16----------------]-]Success  
ofType (setPi singleton x6 \ propId singleton star x0) set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1233^6 int
"
"17_________________[+[Begin 
ofType singleton X1234^7 int
"
"17-----------------]-]Success  
ofType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1235^7 int)
"
"18__________________[+[Begin 
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1235^7
 int
"
"19___________________[+[Begin 
ofType singleton X1236^8 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1237^8 int)
"
"20____________________[+[Begin 
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1237^8 int
"
"21_____________________[+[Begin 
ofType (propId singleton x7 x8) X1238^9 int
"
"22______________________[+[Begin 
of x7 X1239^9 int
"
"22----------------------]-]Success  
of x7 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x8 X1240^9 int
"
"22----------------------]-]Success  
of x8 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1238^9 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton x7 x8) props int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) X1241^9 int)
"
"22______________________[+[Begin 
ofType (propId singleton star star) X1241^9 int
"
"23_______________________[+[Begin 
of star X1242^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1243^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1241^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for props props X1237^8
"
"21---------------------]-]Success  
pts_for props props props
"
"20--------------------]-]Success  
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1235^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"17_________________[+[Begin 
pts_for set props X1233^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) X1244^6 int)
"
"16________________[+[Begin 
ofType
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton (app x5 x6) (app x5 x7)) X1244^6 int
"
"17_________________[+[Begin 
ofType
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1245^7 int
"
"18__________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star x0) X1246^7 int
"
"19___________________[+[Begin 
of star X1247^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x0 X1248^8 int
"
"19-------------------]-]Success  
of x0 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1249^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19___________________[+[Begin 
pts_fun set props X1246^7
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"19-------------------]-]Success  
pts_fun set props set
"
"18------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star x0) set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1250^7 int
"
"19___________________[+[Begin 
ofType singleton X1251^8 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1252^8 int)
"
"20____________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1252^8
 int
"
"21_____________________[+[Begin 
ofType singleton X1253^9 int
"
"21---------------------]-]Success  
ofType singleton set int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1254^9 int)
"
"22______________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1254^9 int
"
"23_______________________[+[Begin 
ofType (propId singleton x8 x9) X1255^10 int
"
"24________________________[+[Begin 
of x8 X1256^10 int
"
"24------------------------]-]Success  
of x8 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of x9 X1257^10 int
"
"24------------------------]-]Success  
of x9 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1255^10 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton x8 x9) props int
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1258^10 int)
"
"24________________________[+[Begin 
ofType (propId singleton star star) X1258^10 int
"
"25_________________________[+[Begin 
of star X1259^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X1260^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1258^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
ofType (propId singleton star star) props int
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props int)
"
"23_______________________[+[Begin 
pts_for props props X1254^9
"
"23-----------------------]-]Success  
pts_for props props props
"
"22----------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X1252^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1250^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   int
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
ofType
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) set
 int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) X1261^7 int)
"
"18__________________[+[Begin 
ofType
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton (app x5 x6) (app x5 x7)) X1261^7 int
"
"19___________________[+[Begin 
ofType (forall singleton x8 \ propId singleton star star) X1262^8 int
"
"20____________________[+[Begin 
ofType singleton X1263^8 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy (ofType (propId singleton star star) X1264^8 int)
"
"21_____________________[+[Begin 
ofType (propId singleton star star) X1264^8 int
"
"22______________________[+[Begin 
of star X1265^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1266^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1264^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 singleton => spy (ofType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for set props X1262^8
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
ofType (forall singleton x8 \ propId singleton star star) props int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 (forall singleton x9 \ propId singleton star star) =>
  spy (ofType (propId singleton (app x5 x6) (app x5 x7)) X1267^8 int)
"
"20____________________[+[Begin 
ofType (propId singleton (app x5 x6) (app x5 x7)) X1267^8 int
"
"21_____________________[+[Begin 
of (app x5 x6) X1268^9 int
"
"22______________________[+[Begin 
of x5 (setPi X1269^9 X1270^9) int
"
"22----------------------]-]Success  
of x5
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"22______________________[+[Begin 
isa x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
of x6 X1271^9 int
"
"23-----------------------]-]Success  
of x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
isa x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"21---------------------]-]Success  
of (app x5 x6) singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of (app x5 x7) X1272^9 int
"
"22______________________[+[Begin 
of x5 (setPi X1273^9 X1274^9) int
"
"22----------------------]-]Success  
of x5
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"22______________________[+[Begin 
isa x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
of x7 X1275^9 int
"
"23-----------------------]-]Success  
of x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
isa x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"21---------------------]-]Success  
of (app x5 x7) singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1267^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType (propId singleton (app x5 x6) (app x5 x7)) props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 (forall singleton x9 \ propId singleton star star) =>
  spy (ofType (propId singleton (app x5 x6) (app x5 x7)) props int)
"
"19___________________[+[Begin 
pts_for props props X1261^7
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
ofType
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton (app x5 x6) (app x5 x7)) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) props int)
"
"17_________________[+[Begin 
pts_for set props X1244^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
ofType
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton (app x5 x6) (app x5 x7)) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) props int)
"
"15_______________[+[Begin 
pts_for set props X1227^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
pi x5 \
 locDecl x5
  (setPi
    (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    singleton) =>
  ofType
   (forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) props int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"14______________[+[Begin 
pts_fun set set X1276^5
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"14--------------]-]Success  
pts_fun set set set
"
"13-------------]-]Success  
pi x4 \
 locDecl x4
  (setSigma
    (setPi
      (setSigma
        (setPi
          (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x5 \
    forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8)) x6 \
     forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ singleton) x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall (forall singleton x10 \ propId singleton star star) x10 \
           propId singleton (app x7 x8) (app x7 x9)) x7 \
      forall
       (forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         propId singleton
          (app
            (elim_setSigma x6 (x9 \
              setPi
               (setSigma (setPi singleton x10 \ propId singleton star x0)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x10 \ singleton) x9 \ x10 \
              x9) x8)
          (app
            (elim_setSigma x7 (x9 \
              setPi
               (setSigma (setPi singleton x10 \ propId singleton star x0)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x10 \ singleton) x9 \ x10 \
              x9) x8)) x8 \ propId singleton (app x5 x6) (app x5 x7)) =>
  ofType
   (setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) _ int
"
"13_____________[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4
   (setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) =>
   locDecl x5
    (forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ singleton) x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall
          (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall (forall singleton x9 \ propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ singleton) x7 \
         forall
          (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall
           (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \
           forall (forall singleton x10 \ propId singleton star star) x10 \
            propId singleton (app x7 x8) (app x7 x9)) x7 \
       forall
        (forall
          (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          propId singleton
           (app
             (elim_setSigma x6 (x9 \
               setPi
                (setSigma (setPi singleton x10 \ propId singleton star x0)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x10 \ singleton) x9 \ x10 \
               x9) x8)
           (app
             (elim_setSigma x7 (x9 \
               setPi
                (setSigma (setPi singleton x10 \ propId singleton star x0)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x10 \ singleton) x9 \ x10 \
               x9) x8)) x8 \ propId singleton (app x4 x6) (app x4 x7)) =>
    isa x4
     (setPi
       (setSigma
         (setPi
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \ singleton) x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall
           (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           forall (forall singleton x9 \ propId singleton star star) x9 \
            propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) int
"
"14______________[+[Begin 
of x4 X1277^6 int
"
"14--------------]-]Success  
of x4
 (setPi
   (setSigma
     (setPi
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) int
"
"14______________[+[Begin 
conv
 (setPi
   (setSigma
     (setPi
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton)
 (setPi
   (setSigma
     (setPi
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton)
"
"14--------------]-]Success  
conv
 (setPi
   (setSigma
     (setPi
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton)
 (setPi
   (setSigma
     (setPi
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton)
"
"13-------------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4
   (setPi
     (setSigma
       (setPi
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) =>
   locDecl x5
    (forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ singleton) x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall
          (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall (forall singleton x9 \ propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ singleton) x7 \
         forall
          (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall
           (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \
           forall (forall singleton x10 \ propId singleton star star) x10 \
            propId singleton (app x7 x8) (app x7 x9)) x7 \
       forall
        (forall
          (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          propId singleton
           (app
             (elim_setSigma x6 (x9 \
               setPi
                (setSigma (setPi singleton x10 \ propId singleton star x0)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x10 \ singleton) x9 \ x10 \
               x9) x8)
           (app
             (elim_setSigma x7 (x9 \
               setPi
                (setSigma (setPi singleton x10 \ propId singleton star x0)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x10 \ singleton) x9 \ x10 \
               x9) x8)) x8 \ propId singleton (app x4 x6) (app x4 x7)) =>
    isa x4
     (setPi
       (setSigma
         (setPi
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \ singleton) x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall
           (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           forall (forall singleton x9 \ propId singleton star star) x9 \
            propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) int
"
"12------------]-]Success  
of
 (elim_setSigma x3 (x4 \
   setPi
    (setSigma
      (setPi
        (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \ singleton) x5 \
      forall
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall (forall singleton x8 \ propId singleton star star) x8 \
         propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \ x5 \
   x4)
 (setPi
   (setSigma
     (setPi
       (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ singleton) x4 \
     forall
      (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) int
"
"12____________[+[Begin 
isa
 (elim_setSigma
   (pair
     (setPi
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ singleton) (x4 \
     forall
      (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6))
     (lambda
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ star)
     (forall_lam
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall_lam
        (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall_lam (forall singleton x6 \ propId singleton star star) x6 \
         fixMe "prova di riflessivita'" (propId singleton star star))) (x4 \
   setSigma
    (setPi
      (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
   pair
    (setPi
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \ singleton) (x6 \
    forall
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall (forall singleton x9 \ propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8))
    (lambda
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      app x4
       (elim_setSigma x6 (x7 \
         setSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
         x7 \ x8 \
         pair (setPi singleton x9 \ propId singleton star star) (x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star)
          (lambda singleton x9 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x7 x9))
          (forall_lam singleton x9 \
            forall_lam singleton x10 \
             forall_lam (propId singleton x9 x10) x11 \
              forall_app (forall_app (forall_app x8 x9) x10) x11)))
    (forall_lam
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall_lam
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall_lam (forall singleton x8 \ propId singleton star star) x8 \
        forall_app
         (forall_app
           (forall_app x5
             (elim_setSigma x6 (x9 \
               setSigma (setPi singleton x10 \ propId singleton star star)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x9 \ x10 \
               pair (setPi singleton x11 \ propId singleton star star) (x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star)
                (lambda singleton x11 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x9 x11))
                (forall_lam singleton x11 \
                  forall_lam singleton x12 \
                   forall_lam (propId singleton x11 x12) x13 \
                    forall_app (forall_app (forall_app x10 x11) x12) x13)))
           (elim_setSigma x7 (x9 \
             setSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13)))
         (forall_lam singleton x9 \ forall_app x8 x9)))
 (setSigma
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"13_____________[+[Begin 
of
 (elim_setSigma
   (pair
     (setPi
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ singleton) (x4 \
     forall
      (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6))
     (lambda
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ star)
     (forall_lam
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall_lam
        (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall_lam (forall singleton x6 \ propId singleton star star) x6 \
         fixMe "prova di riflessivita'" (propId singleton star star))) (x4 \
   setSigma
    (setPi
      (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
   pair
    (setPi
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \ singleton) (x6 \
    forall
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall (forall singleton x9 \ propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8))
    (lambda
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      app x4
       (elim_setSigma x6 (x7 \
         setSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
         x7 \ x8 \
         pair (setPi singleton x9 \ propId singleton star star) (x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star)
          (lambda singleton x9 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x7 x9))
          (forall_lam singleton x9 \
            forall_lam singleton x10 \
             forall_lam (propId singleton x9 x10) x11 \
              forall_app (forall_app (forall_app x8 x9) x10) x11)))
    (forall_lam
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall_lam
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall_lam (forall singleton x8 \ propId singleton star star) x8 \
        forall_app
         (forall_app
           (forall_app x5
             (elim_setSigma x6 (x9 \
               setSigma (setPi singleton x10 \ propId singleton star star)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x9 \ x10 \
               pair (setPi singleton x11 \ propId singleton star star) (x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star)
                (lambda singleton x11 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x9 x11))
                (forall_lam singleton x11 \
                  forall_lam singleton x12 \
                   forall_lam (propId singleton x11 x12) x13 \
                    forall_app (forall_app (forall_app x10 x11) x12) x13)))
           (elim_setSigma x7 (x9 \
             setSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13)))
         (forall_lam singleton x9 \ forall_app x8 x9))) X1278^4 int
"
"14______________[+[Begin 
of
 (pair
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) (x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6))
   (lambda
     (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ star)
   (forall_lam
     (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \
     forall_lam
      (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall_lam (forall singleton x6 \ propId singleton star star) x6 \
       fixMe "prova di riflessivita'" (propId singleton star star)))
 (setSigma X1279^4 X1280^4) int
"
"15_______________[+[Begin 
ofType (setPi singleton x4 \ propId singleton star star) X1281^4 int
"
"16________________[+[Begin 
of star X1282^5 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of star X1283^5 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X1284^4 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16________________[+[Begin 
pts_fun set props X1281^4
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
pts_fun set props set
"
"15---------------]-]Success  
ofType (setPi singleton x4 \ propId singleton star star) set int
"
"15_______________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star)
   X1285^4 int
"
"16________________[+[Begin 
ofType singleton X1286^5 int
"
"16----------------]-]Success  
ofType singleton set int
"
"16________________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1287^5 int)
"
"17_________________[+[Begin 
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X1287^5
 int
"
"18__________________[+[Begin 
ofType singleton X1288^6 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1289^6 int)
"
"19___________________[+[Begin 
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X1289^6 int
"
"20____________________[+[Begin 
ofType (propId singleton x5 x6) X1290^7 int
"
"21_____________________[+[Begin 
of x5 X1291^7 int
"
"21---------------------]-]Success  
of x5 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x6 X1292^7 int
"
"21---------------------]-]Success  
of x6 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1290^7 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType (propId singleton x5 x6) props int
"
"20____________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) X1293^7 int)
"
"21_____________________[+[Begin 
ofType (propId singleton star star) X1293^7 int
"
"22______________________[+[Begin 
of star X1294^8 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1295^8 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1293^7 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for props props X1289^6
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"18------------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"18__________________[+[Begin 
pts_for set props X1287^5
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"16----------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"16________________[+[Begin 
pts_for set props X1285^4
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"15_______________[+[Begin 
pts_fun set set X1296^4
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"15---------------]-]Success  
pts_fun set set set
"
"15_______________[+[Begin 
ofType
 (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) X1297^4
 int
"
"16________________[+[Begin 
ofType (setPi singleton x4 \ propId singleton star star) X1298^4 int
"
"17_________________[+[Begin 
of star X1299^5 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of star X1300^5 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1301^4 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"17_________________[+[Begin 
pts_fun set props X1298^4
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
pts_fun set props set
"
"16----------------]-]Success  
ofType (setPi singleton x4 \ propId singleton star star) set int
"
"16________________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star)
   X1302^4 int
"
"17_________________[+[Begin 
ofType singleton X1303^5 int
"
"17-----------------]-]Success  
ofType singleton set int
"
"17_________________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1304^5 int)
"
"18__________________[+[Begin 
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X1304^5
 int
"
"19___________________[+[Begin 
ofType singleton X1305^6 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1306^6 int)
"
"20____________________[+[Begin 
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X1306^6 int
"
"21_____________________[+[Begin 
ofType (propId singleton x5 x6) X1307^7 int
"
"22______________________[+[Begin 
of x5 X1308^7 int
"
"22----------------------]-]Success  
of x5 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x6 X1309^7 int
"
"22----------------------]-]Success  
of x6 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1307^7 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton x5 x6) props int
"
"21_____________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) X1310^7 int)
"
"22______________________[+[Begin 
ofType (propId singleton star star) X1310^7 int
"
"23_______________________[+[Begin 
of star X1311^8 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1312^8 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1310^7 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for props props X1306^6
"
"21---------------------]-]Success  
pts_for props props props
"
"20--------------------]-]Success  
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"19-------------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1304^5
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"17-----------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"17_________________[+[Begin 
pts_for set props X1302^4
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
ofType
 (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) set int
"
"15_______________[+[Begin 
pi x4 \
 locDecl x4
  (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton
         (app
           (lambda
             (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \ star) x4)
         (app
           (lambda
             (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \ star) x5)) X1313^4 int)
"
"16________________[+[Begin 
ofType
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x4)
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x5)) X1313^4 int
"
"17_________________[+[Begin 
ofType
 (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) X1314^5
 int
"
"18__________________[+[Begin 
ofType (setPi singleton x5 \ propId singleton star star) X1315^5 int
"
"19___________________[+[Begin 
of star X1316^6 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of star X1317^6 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1318^5 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19___________________[+[Begin 
pts_fun set props X1315^5
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"19-------------------]-]Success  
pts_fun set props set
"
"18------------------]-]Success  
ofType (setPi singleton x5 \ propId singleton star star) set int
"
"18__________________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star star) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1319^5 int
"
"19___________________[+[Begin 
ofType singleton X1320^6 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1321^6 int)
"
"20____________________[+[Begin 
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1321^6
 int
"
"21_____________________[+[Begin 
ofType singleton X1322^7 int
"
"21---------------------]-]Success  
ofType singleton set int
"
"21_____________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1323^7 int)
"
"22______________________[+[Begin 
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1323^7 int
"
"23_______________________[+[Begin 
ofType (propId singleton x6 x7) X1324^8 int
"
"24________________________[+[Begin 
of x6 X1325^8 int
"
"24------------------------]-]Success  
of x6 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of x7 X1326^8 int
"
"24------------------------]-]Success  
of x7 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1324^8 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton x6 x7) props int
"
"23_______________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) X1327^8 int)
"
"24________________________[+[Begin 
ofType (propId singleton star star) X1327^8 int
"
"25_________________________[+[Begin 
of star X1328^9 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X1329^9 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1327^8 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
ofType (propId singleton star star) props int
"
"23-----------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) props int)
"
"23_______________________[+[Begin 
pts_for props props X1323^7
"
"23-----------------------]-]Success  
pts_for props props props
"
"22----------------------]-]Success  
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"21---------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X1321^6
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"19-------------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"19___________________[+[Begin 
pts_for set props X1319^5
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star star) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
ofType
 (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) set int
"
"17_________________[+[Begin 
pi x5 \
 locDecl x5
  (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x6 \ propId singleton star star) x6 \
       propId singleton
        (app
          (lambda
            (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ star) x4)
        (app
          (lambda
            (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ star) x5)) X1330^5 int)
"
"18__________________[+[Begin 
ofType
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x4)
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x5)) X1330^5 int
"
"19___________________[+[Begin 
ofType (forall singleton x6 \ propId singleton star star) X1331^6 int
"
"20____________________[+[Begin 
ofType singleton X1332^6 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy (ofType (propId singleton star star) X1333^6 int)
"
"21_____________________[+[Begin 
ofType (propId singleton star star) X1333^6 int
"
"22______________________[+[Begin 
of star X1334^7 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1335^7 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1333^6 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x6 \
 locDecl x6 singleton => spy (ofType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for set props X1331^6
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
ofType (forall singleton x6 \ propId singleton star star) props int
"
"19___________________[+[Begin 
pi x6 \
 locDecl x6 (forall singleton x7 \ propId singleton star star) =>
  spy
   (ofType
     (propId singleton
       (app
         (lambda
           (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ star) x4)
       (app
         (lambda
           (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ star) x5)) X1336^6 int)
"
"20____________________[+[Begin 
ofType
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x4)
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x5)) X1336^6 int
"
"21_____________________[+[Begin 
of
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x4) X1337^7 int
"
"22______________________[+[Begin 
of
 (lambda
   (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   star) (setPi X1338^7 X1339^7) int
"
"23_______________________[+[Begin 
ofType
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) _ int
"
"24________________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star star) X1340^7 int
"
"25_________________________[+[Begin 
of star X1341^8 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X1342^8 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1343^7 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
pts_fun set props X1340^7
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pts_fun set props set
"
"24------------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star star) set int
"
"24________________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1344^7 int
"
"25_________________________[+[Begin 
ofType singleton X1345^8 int
"
"25-------------------------]-]Success  
ofType singleton set int
"
"25_________________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1346^8 int)
"
"26__________________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1346^8
 int
"
"27___________________________[+[Begin 
ofType singleton X1347^9 int
"
"27---------------------------]-]Success  
ofType singleton set int
"
"27___________________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1348^9 int)
"
"28____________________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1348^9 int
"
"29_____________________________[+[Begin 
ofType (propId singleton x8 x9) X1349^10 int
"
"30______________________________[+[Begin 
of x8 X1350^10 int
"
"30------------------------------]-]Success  
of x8 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x9 X1351^10 int
"
"30------------------------------]-]Success  
of x9 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X1349^10 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton x8 x9) props int
"
"29_____________________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1352^10 int)
"
"30______________________________[+[Begin 
ofType (propId singleton star star) X1352^10 int
"
"31_______________________________[+[Begin 
of star X1353^11 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of star X1354^11 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X1352^10 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"29-----------------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props int)
"
"29_____________________________[+[Begin 
pts_for props props X1348^9
"
"29-----------------------------]-]Success  
pts_for props props props
"
"28----------------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"27---------------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X1346^8
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"25-------------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X1344^7
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   int
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
ofType
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) _ int
"
"23_______________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  isa star (X1339^7 x7) int
"
"24________________________[+[Begin 
of star X1355^8 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton (X1339^7 x7)
"
"24------------------------]-]Success  
conv singleton singleton
"
"23-----------------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  isa star singleton int
"
"22----------------------]-]Success  
of
 (lambda
   (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   star)
 (setPi
   (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   singleton) int
"
"22______________________[+[Begin 
isa x4
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"23_______________________[+[Begin 
of x4 X1356^7 int
"
"23-----------------------]-]Success  
of x4
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"22----------------------]-]Success  
isa x4
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"21---------------------]-]Success  
of
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x4) singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x5) X1357^7 int
"
"22______________________[+[Begin 
of
 (lambda
   (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   star) (setPi X1358^7 X1359^7) int
"
"23_______________________[+[Begin 
ofType
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) _ int
"
"24________________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star star) X1360^7 int
"
"25_________________________[+[Begin 
of star X1361^8 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X1362^8 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1363^7 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
pts_fun set props X1360^7
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pts_fun set props set
"
"24------------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star star) set int
"
"24________________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1364^7 int
"
"25_________________________[+[Begin 
ofType singleton X1365^8 int
"
"25-------------------------]-]Success  
ofType singleton set int
"
"25_________________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1366^8 int)
"
"26__________________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1366^8
 int
"
"27___________________________[+[Begin 
ofType singleton X1367^9 int
"
"27---------------------------]-]Success  
ofType singleton set int
"
"27___________________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1368^9 int)
"
"28____________________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1368^9 int
"
"29_____________________________[+[Begin 
ofType (propId singleton x8 x9) X1369^10 int
"
"30______________________________[+[Begin 
of x8 X1370^10 int
"
"30------------------------------]-]Success  
of x8 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x9 X1371^10 int
"
"30------------------------------]-]Success  
of x9 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X1369^10 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton x8 x9) props int
"
"29_____________________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1372^10 int)
"
"30______________________________[+[Begin 
ofType (propId singleton star star) X1372^10 int
"
"31_______________________________[+[Begin 
of star X1373^11 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of star X1374^11 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X1372^10 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"29-----------------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props int)
"
"29_____________________________[+[Begin 
pts_for props props X1368^9
"
"29-----------------------------]-]Success  
pts_for props props props
"
"28----------------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"27---------------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X1366^8
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"25-------------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X1364^7
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   int
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
ofType
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) _ int
"
"23_______________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  isa star (X1359^7 x7) int
"
"24________________________[+[Begin 
of star X1375^8 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton (X1359^7 x7)
"
"24------------------------]-]Success  
conv singleton singleton
"
"23-----------------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  isa star singleton int
"
"22----------------------]-]Success  
of
 (lambda
   (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   star)
 (setPi
   (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   singleton) int
"
"22______________________[+[Begin 
isa x5
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"23_______________________[+[Begin 
of x5 X1376^7 int
"
"23-----------------------]-]Success  
of x5
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"22----------------------]-]Success  
isa x5
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"21---------------------]-]Success  
of
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x5) singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1336^6 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x4)
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x5)) props int
"
"19-------------------]-]Success  
pi x6 \
 locDecl x6 (forall singleton x7 \ propId singleton star star) =>
  spy
   (ofType
     (propId singleton
       (app
         (lambda
           (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ star) x4)
       (app
         (lambda
           (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ star) x5)) props int)
"
"19___________________[+[Begin 
pts_for props props X1330^5
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
ofType
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x4)
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x5)) props int
"
"17-----------------]-]Success  
pi x5 \
 locDecl x5
  (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x6 \ propId singleton star star) x6 \
       propId singleton
        (app
          (lambda
            (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ star) x4)
        (app
          (lambda
            (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ star) x5)) props int)
"
"17_________________[+[Begin 
pts_for set props X1313^4
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
ofType
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x4)
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x5)) props int
"
"15---------------]-]Success  
pi x4 \
 locDecl x4
  (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton
         (app
           (lambda
             (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \ star) x4)
         (app
           (lambda
             (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \ star) x5)) props int)
"
"15_______________[+[Begin 
pts_for set props X1377^4
"
"15---------------]-]Success  
pts_for set props props
"
"15_______________[+[Begin 
of
 (lambda
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   star) X1378^4 int
"
"16________________[+[Begin 
ofType
 (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) _ int
"
"17_________________[+[Begin 
ofType (setPi singleton x4 \ propId singleton star star) X1379^4 int
"
"18__________________[+[Begin 
of star X1380^5 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of star X1381^5 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1382^4 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18__________________[+[Begin 
pts_fun set props X1379^4
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"18------------------]-]Success  
pts_fun set props set
"
"17-----------------]-]Success  
ofType (setPi singleton x4 \ propId singleton star star) set int
"
"17_________________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star)
   X1383^4 int
"
"18__________________[+[Begin 
ofType singleton X1384^5 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1385^5 int)
"
"19___________________[+[Begin 
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X1385^5
 int
"
"20____________________[+[Begin 
ofType singleton X1386^6 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1387^6 int)
"
"21_____________________[+[Begin 
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X1387^6 int
"
"22______________________[+[Begin 
ofType (propId singleton x5 x6) X1388^7 int
"
"23_______________________[+[Begin 
of x5 X1389^7 int
"
"23-----------------------]-]Success  
of x5 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of x6 X1390^7 int
"
"23-----------------------]-]Success  
of x6 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1388^7 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton x5 x6) props int
"
"22______________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) X1391^7 int)
"
"23_______________________[+[Begin 
ofType (propId singleton star star) X1391^7 int
"
"24________________________[+[Begin 
of star X1392^8 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X1393^8 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1391^7 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton star star) props int
"
"22----------------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) props int)
"
"22______________________[+[Begin 
pts_for props props X1387^6
"
"22----------------------]-]Success  
pts_for props props props
"
"21---------------------]-]Success  
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"20--------------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"20____________________[+[Begin 
pts_for set props X1385^5
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"18------------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"18__________________[+[Begin 
pts_for set props X1383^4
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
ofType
 (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) _ int
"
"16________________[+[Begin 
pi x4 \
 locDecl x4
  (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  isa star (X1394^4 x4) int
"
"17_________________[+[Begin 
of star X1395^5 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton (X1394^4 x4)
"
"17-----------------]-]Success  
conv singleton singleton
"
"16----------------]-]Success  
pi x4 \
 locDecl x4
  (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  isa star singleton int
"
"15---------------]-]Success  
of
 (lambda
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   star)
 (setPi
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton) int
"
"15_______________[+[Begin 
conv
 (setPi
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton)
 (setPi
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton)
"
"15---------------]-]Success  
conv
 (setPi
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton)
 (setPi
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton)
"
"15_______________[+[Begin 
of
 (forall_lam
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall_lam
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall_lam (forall singleton x6 \ propId singleton star star) x6 \
     fixMe "prova di riflessivita'" (propId singleton star star)) X1396^4 int
"
"16________________[+[Begin 
ofType (setPi singleton x4 \ propId singleton star star) X1397^4 int
"
"17_________________[+[Begin 
of star X1398^5 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of star X1399^5 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1400^4 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"17_________________[+[Begin 
pts_fun set props X1397^4
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
pts_fun set props set
"
"16----------------]-]Success  
ofType (setPi singleton x4 \ propId singleton star star) set int
"
"16________________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star)
   X1401^4 int
"
"17_________________[+[Begin 
ofType singleton X1402^5 int
"
"17-----------------]-]Success  
ofType singleton set int
"
"17_________________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1403^5 int)
"
"18__________________[+[Begin 
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X1403^5
 int
"
"19___________________[+[Begin 
ofType singleton X1404^6 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1405^6 int)
"
"20____________________[+[Begin 
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X1405^6 int
"
"21_____________________[+[Begin 
ofType (propId singleton x5 x6) X1406^7 int
"
"22______________________[+[Begin 
of x5 X1407^7 int
"
"22----------------------]-]Success  
of x5 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x6 X1408^7 int
"
"22----------------------]-]Success  
of x6 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1406^7 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton x5 x6) props int
"
"21_____________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) X1409^7 int)
"
"22______________________[+[Begin 
ofType (propId singleton star star) X1409^7 int
"
"23_______________________[+[Begin 
of star X1410^8 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1411^8 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1409^7 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (ofType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for props props X1405^6
"
"21---------------------]-]Success  
pts_for props props props
"
"20--------------------]-]Success  
ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"19-------------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1403^5
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
ofType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"17-----------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (ofType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"17_________________[+[Begin 
pts_for set props X1401^4
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  ofType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"16________________[+[Begin 
of
 (forall_lam
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall_lam (forall singleton x6 \ propId singleton star star) x6 \
    fixMe "prova di riflessivita'" (propId singleton star star)) X1412^5 int
"
"17_________________[+[Begin 
ofType (setPi singleton x5 \ propId singleton star star) X1413^5 int
"
"18__________________[+[Begin 
of star X1414^6 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of star X1415^6 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1416^5 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18__________________[+[Begin 
pts_fun set props X1413^5
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"18------------------]-]Success  
pts_fun set props set
"
"17-----------------]-]Success  
ofType (setPi singleton x5 \ propId singleton star star) set int
"
"17_________________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star star) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1417^5 int
"
"18__________________[+[Begin 
ofType singleton X1418^6 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1419^6 int)
"
"19___________________[+[Begin 
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1419^6
 int
"
"20____________________[+[Begin 
ofType singleton X1420^7 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1421^7 int)
"
"21_____________________[+[Begin 
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1421^7 int
"
"22______________________[+[Begin 
ofType (propId singleton x6 x7) X1422^8 int
"
"23_______________________[+[Begin 
of x6 X1423^8 int
"
"23-----------------------]-]Success  
of x6 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of x7 X1424^8 int
"
"23-----------------------]-]Success  
of x7 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1422^8 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton x6 x7) props int
"
"22______________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) X1425^8 int)
"
"23_______________________[+[Begin 
ofType (propId singleton star star) X1425^8 int
"
"24________________________[+[Begin 
of star X1426^9 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X1427^9 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1425^8 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton star star) props int
"
"22----------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) props int)
"
"22______________________[+[Begin 
pts_for props props X1421^7
"
"22----------------------]-]Success  
pts_for props props props
"
"21---------------------]-]Success  
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"20--------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"20____________________[+[Begin 
pts_for set props X1419^6
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"18------------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"18__________________[+[Begin 
pts_for set props X1417^5
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star star) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"17_________________[+[Begin 
of
 (forall_lam (forall singleton x6 \ propId singleton star star) x6 \
   fixMe "prova di riflessivita'" (propId singleton star star)) X1428^6 int
"
"18__________________[+[Begin 
ofType singleton X1429^6 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy (ofType (propId singleton star star) X1430^6 int)
"
"19___________________[+[Begin 
ofType (propId singleton star star) X1430^6 int
"
"20____________________[+[Begin 
of star X1431^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1432^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1430^6 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
ofType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x6 \
 locDecl x6 singleton => spy (ofType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for set props X1433^6
"
"18------------------]-]Success  
pts_for set props props
"
"18__________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X1434^7 int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"18------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"18__________________[+[Begin 
conv (propId singleton star star) (X1435^6 x6)
"
"18------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"17-----------------]-]Success  
of
 (forall_lam (forall singleton x6 \ propId singleton star star) x6 \
   fixMe "prova di riflessivita'" (propId singleton star star))
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton star star) int
"
"17_________________[+[Begin 
conv
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton star star) (X1436^5 x5)
"
"17-----------------]-]Success  
conv
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton star star)
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton star star)
"
"16----------------]-]Success  
of
 (forall_lam
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall_lam (forall singleton x6 \ propId singleton star star) x6 \
    fixMe "prova di riflessivita'" (propId singleton star star))
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton star star) int
"
"16________________[+[Begin 
conv
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton star star) (X1437^4 x4)
"
"16----------------]-]Success  
conv
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton star star)
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton star star)
"
"15---------------]-]Success  
of
 (forall_lam
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall_lam
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall_lam (forall singleton x6 \ propId singleton star star) x6 \
     fixMe "prova di riflessivita'" (propId singleton star star))
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton star star) int
"
"15_______________[+[Begin 
conv
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton star star)
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x4)
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x5))
"
"16________________[+[Begin 
hnf
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton star star) X1438^4
"
"16----------------]-]Success  
hnf
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton star star)
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton star star)
"
"16________________[+[Begin 
hnf
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x4)
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x5)) X1439^4
"
"16----------------]-]Success  
hnf
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x4)
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x5))
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x4)
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x5))
"
"16________________[+[Begin 
dconv
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton star star)
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x4)
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x5))
"
"17_________________[+[Begin 
hnf
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton star star) X1440^5
"
"17-----------------]-]Success  
hnf
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton star star)
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton star star)
"
"17_________________[+[Begin 
hnf
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x4)
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x5)) X1441^5
"
"17-----------------]-]Success  
hnf
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x4)
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x5))
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x4)
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x5))
"
"17_________________[+[Begin 
dconv
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton star star)
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x4)
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x5))
"
"18__________________[+[Begin 
hnf
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton star star) X1442^6
"
"18------------------]-]Success  
hnf
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton star star)
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton star star)
"
"18__________________[+[Begin 
hnf
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x4)
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x5)) X1443^6
"
"18------------------]-]Success  
hnf
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x4)
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x5))
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x4)
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x5))
"
"18__________________[+[Begin 
dconv
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton star star)
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x4)
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x5))
"
"19___________________[+[Begin 
hnf (propId singleton star star) X1444^7
"
"19-------------------]-]Success  
hnf (propId singleton star star) (propId singleton star star)
"
"19___________________[+[Begin 
hnf
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x4)
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x5)) X1445^7
"
"19-------------------]-]Success  
hnf
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x4)
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x5))
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x4)
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x5))
"
"19___________________[+[Begin 
dconv (propId singleton star star)
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x4)
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x5))
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
conv star
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x4)
"
"21_____________________[+[Begin 
hnf star X1446^7
"
"21---------------------]-]Success  
hnf star star
"
"21_____________________[+[Begin 
hnf
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x4) X1447^7
"
"22______________________[+[Begin 
ofType
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) _
 X1448^7
"
"23_______________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star star) X1449^7 X1448^7
"
"24________________________[+[Begin 
of star X1450^8 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X1451^8 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1452^7 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
pts_fun set props X1449^7
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pts_fun set props set
"
"23-----------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star star) set X1448^7
"
"23_______________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1453^7 X1448^7
"
"24________________________[+[Begin 
ofType singleton X1454^8 X1448^7
"
"24------------------------]-]Success  
ofType singleton set X1448^7
"
"24________________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1455^8 X1448^7)
"
"25_________________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1455^8
 X1448^7
"
"26__________________________[+[Begin 
ofType singleton X1456^9 X1448^7
"
"26--------------------------]-]Success  
ofType singleton set X1448^7
"
"26__________________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1457^9 X1448^7)
"
"27___________________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1457^9 X1448^7
"
"28____________________________[+[Begin 
ofType (propId singleton x8 x9) X1458^10 X1448^7
"
"29_____________________________[+[Begin 
of x8 X1459^10 int
"
"29-----------------------------]-]Success  
of x8 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x9 X1460^10 int
"
"29-----------------------------]-]Success  
of x9 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X1458^10 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton x8 x9) props X1448^7
"
"28____________________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1461^10 X1448^7)
"
"29_____________________________[+[Begin 
ofType (propId singleton star star) X1461^10 X1448^7
"
"30______________________________[+[Begin 
of star X1462^11 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X1463^11 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X1461^10 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton star star) props X1448^7
"
"28----------------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props X1448^7)
"
"28____________________________[+[Begin 
pts_for props props X1457^9
"
"28----------------------------]-]Success  
pts_for props props props
"
"27---------------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props X1448^7
"
"26--------------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props X1448^7)
"
"26__________________________[+[Begin 
pts_for set props X1455^8
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 X1448^7
"
"24------------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props X1448^7)
"
"24________________________[+[Begin 
pts_for set props X1453^7
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   X1448^7
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
ofType
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) _
 X1448^7
"
"22______________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  isa star (X1464^7 x7) X1448^7
"
"23_______________________[+[Begin 
of star X1465^8 X1448^7
"
"23-----------------------]-]Success  
of star singleton X1448^7
"
"23_______________________[+[Begin 
conv singleton (X1464^7 x7)
"
"23-----------------------]-]Success  
conv singleton singleton
"
"22----------------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  isa star singleton X1448^7
"
"22______________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star star) X1466^7 X1448^7
"
"23_______________________[+[Begin 
of star X1467^8 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1468^8 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1469^7 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X1466^7
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"22----------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star star) set X1448^7
"
"22______________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1470^7 X1448^7
"
"23_______________________[+[Begin 
ofType singleton X1471^8 X1448^7
"
"23-----------------------]-]Success  
ofType singleton set X1448^7
"
"23_______________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1472^8 X1448^7)
"
"24________________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1472^8
 X1448^7
"
"25_________________________[+[Begin 
ofType singleton X1473^9 X1448^7
"
"25-------------------------]-]Success  
ofType singleton set X1448^7
"
"25_________________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1474^9 X1448^7)
"
"26__________________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1474^9 X1448^7
"
"27___________________________[+[Begin 
ofType (propId singleton x8 x9) X1475^10 X1448^7
"
"28____________________________[+[Begin 
of x8 X1476^10 int
"
"28----------------------------]-]Success  
of x8 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x9 X1477^10 int
"
"28----------------------------]-]Success  
of x9 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1475^10 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
ofType (propId singleton x8 x9) props X1448^7
"
"27___________________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1478^10 X1448^7)
"
"28____________________________[+[Begin 
ofType (propId singleton star star) X1478^10 X1448^7
"
"29_____________________________[+[Begin 
of star X1479^11 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X1480^11 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X1478^10 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton star star) props X1448^7
"
"27---------------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props X1448^7)
"
"27___________________________[+[Begin 
pts_for props props X1474^9
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props X1448^7
"
"25-------------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props X1448^7)
"
"25_________________________[+[Begin 
pts_for set props X1472^8
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 X1448^7
"
"23-----------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props X1448^7)
"
"23_______________________[+[Begin 
pts_for set props X1470^7
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   X1448^7
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"22______________________[+[Begin 
of x4 X1481^7 X1448^7
"
"22----------------------]-]Success  
of x4
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1448^7
"
"22______________________[+[Begin 
conv
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"22______________________[+[Begin 
of star X1482^8 X1448^7
"
"22----------------------]-]Success  
of star singleton X1448^7
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"21---------------------]-]Success  
hnf
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x4) star
"
"21_____________________[+[Begin 
dconv star star
"
"21---------------------]-]Success  
dconv star star
"
"20--------------------]-]Success  
conv star
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x4)
"
"20____________________[+[Begin 
conv star
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x5)
"
"21_____________________[+[Begin 
hnf star X1483^7
"
"21---------------------]-]Success  
hnf star star
"
"21_____________________[+[Begin 
hnf
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x5) X1484^7
"
"22______________________[+[Begin 
ofType
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) _
 X1485^7
"
"23_______________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star star) X1486^7 X1485^7
"
"24________________________[+[Begin 
of star X1487^8 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X1488^8 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1489^7 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
pts_fun set props X1486^7
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pts_fun set props set
"
"23-----------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star star) set X1485^7
"
"23_______________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1490^7 X1485^7
"
"24________________________[+[Begin 
ofType singleton X1491^8 X1485^7
"
"24------------------------]-]Success  
ofType singleton set X1485^7
"
"24________________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1492^8 X1485^7)
"
"25_________________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1492^8
 X1485^7
"
"26__________________________[+[Begin 
ofType singleton X1493^9 X1485^7
"
"26--------------------------]-]Success  
ofType singleton set X1485^7
"
"26__________________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1494^9 X1485^7)
"
"27___________________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1494^9 X1485^7
"
"28____________________________[+[Begin 
ofType (propId singleton x8 x9) X1495^10 X1485^7
"
"29_____________________________[+[Begin 
of x8 X1496^10 int
"
"29-----------------------------]-]Success  
of x8 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x9 X1497^10 int
"
"29-----------------------------]-]Success  
of x9 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X1495^10 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton x8 x9) props X1485^7
"
"28____________________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1498^10 X1485^7)
"
"29_____________________________[+[Begin 
ofType (propId singleton star star) X1498^10 X1485^7
"
"30______________________________[+[Begin 
of star X1499^11 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X1500^11 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X1498^10 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton star star) props X1485^7
"
"28----------------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props X1485^7)
"
"28____________________________[+[Begin 
pts_for props props X1494^9
"
"28----------------------------]-]Success  
pts_for props props props
"
"27---------------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props X1485^7
"
"26--------------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props X1485^7)
"
"26__________________________[+[Begin 
pts_for set props X1492^8
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 X1485^7
"
"24------------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props X1485^7)
"
"24________________________[+[Begin 
pts_for set props X1490^7
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   X1485^7
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
ofType
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) _
 X1485^7
"
"22______________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  isa star (X1501^7 x7) X1485^7
"
"23_______________________[+[Begin 
of star X1502^8 X1485^7
"
"23-----------------------]-]Success  
of star singleton X1485^7
"
"23_______________________[+[Begin 
conv singleton (X1501^7 x7)
"
"23-----------------------]-]Success  
conv singleton singleton
"
"22----------------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  isa star singleton X1485^7
"
"22______________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star star) X1503^7 X1485^7
"
"23_______________________[+[Begin 
of star X1504^8 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1505^8 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1506^7 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X1503^7
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"22----------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star star) set X1485^7
"
"22______________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1507^7 X1485^7
"
"23_______________________[+[Begin 
ofType singleton X1508^8 X1485^7
"
"23-----------------------]-]Success  
ofType singleton set X1485^7
"
"23_______________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1509^8 X1485^7)
"
"24________________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1509^8
 X1485^7
"
"25_________________________[+[Begin 
ofType singleton X1510^9 X1485^7
"
"25-------------------------]-]Success  
ofType singleton set X1485^7
"
"25_________________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1511^9 X1485^7)
"
"26__________________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1511^9 X1485^7
"
"27___________________________[+[Begin 
ofType (propId singleton x8 x9) X1512^10 X1485^7
"
"28____________________________[+[Begin 
of x8 X1513^10 int
"
"28----------------------------]-]Success  
of x8 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x9 X1514^10 int
"
"28----------------------------]-]Success  
of x9 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1512^10 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
ofType (propId singleton x8 x9) props X1485^7
"
"27___________________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1515^10 X1485^7)
"
"28____________________________[+[Begin 
ofType (propId singleton star star) X1515^10 X1485^7
"
"29_____________________________[+[Begin 
of star X1516^11 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X1517^11 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X1515^10 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton star star) props X1485^7
"
"27---------------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props X1485^7)
"
"27___________________________[+[Begin 
pts_for props props X1511^9
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props X1485^7
"
"25-------------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props X1485^7)
"
"25_________________________[+[Begin 
pts_for set props X1509^8
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 X1485^7
"
"23-----------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props X1485^7)
"
"23_______________________[+[Begin 
pts_for set props X1507^7
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   X1485^7
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"22______________________[+[Begin 
of x5 X1518^7 X1485^7
"
"22----------------------]-]Success  
of x5
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1485^7
"
"22______________________[+[Begin 
conv
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"22______________________[+[Begin 
of star X1519^8 X1485^7
"
"22----------------------]-]Success  
of star singleton X1485^7
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"21---------------------]-]Success  
hnf
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x5) star
"
"21_____________________[+[Begin 
dconv star star
"
"21---------------------]-]Success  
dconv star star
"
"20--------------------]-]Success  
conv star
 (app
   (lambda
     (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ star) x5)
"
"19-------------------]-]Success  
dconv (propId singleton star star)
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x4)
   (app
     (lambda
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ star) x5))
"
"18------------------]-]Success  
dconv
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton star star)
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x4)
    (app
      (lambda
        (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ star) x5))
"
"17-----------------]-]Success  
dconv
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton star star)
 (forall
   (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x4)
     (app
       (lambda
         (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ star) x5))
"
"16----------------]-]Success  
dconv
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton star star)
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x4)
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x5))
"
"15---------------]-]Success  
conv
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton star star)
 (forall
   (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall (forall singleton x6 \ propId singleton star star) x6 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x4)
      (app
        (lambda
          (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ star) x5))
"
"14--------------]-]Success  
of
 (pair
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) (x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6))
   (lambda
     (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ star)
   (forall_lam
     (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \
     forall_lam
      (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall_lam (forall singleton x6 \ propId singleton star star) x6 \
       fixMe "prova di riflessivita'" (propId singleton star star)))
 (setSigma
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"14______________[+[Begin 
pi x4 \
 locDecl x4
  (setSigma
    (setPi
      (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  ofType
   (setSigma
     (setPi
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \ singleton) x5 \
     forall
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) _ int
"
"15_______________[+[Begin 
ofType
 (setPi
   (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton) X1520^5 int
"
"16________________[+[Begin 
ofType (setPi singleton x5 \ propId singleton star x0) X1521^5 int
"
"17_________________[+[Begin 
of star X1522^6 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of x0 X1523^6 int
"
"17-----------------]-]Success  
of x0 singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1524^5 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"17_________________[+[Begin 
pts_fun set props X1521^5
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
pts_fun set props set
"
"16----------------]-]Success  
ofType (setPi singleton x5 \ propId singleton star x0) set int
"
"16________________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1525^5 int
"
"17_________________[+[Begin 
ofType singleton X1526^6 int
"
"17-----------------]-]Success  
ofType singleton set int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1527^6 int)
"
"18__________________[+[Begin 
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1527^6
 int
"
"19___________________[+[Begin 
ofType singleton X1528^7 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1529^7 int)
"
"20____________________[+[Begin 
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1529^7 int
"
"21_____________________[+[Begin 
ofType (propId singleton x6 x7) X1530^8 int
"
"22______________________[+[Begin 
of x6 X1531^8 int
"
"22----------------------]-]Success  
of x6 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x7 X1532^8 int
"
"22----------------------]-]Success  
of x7 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1530^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton x6 x7) props int
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) X1533^8 int)
"
"22______________________[+[Begin 
ofType (propId singleton star star) X1533^8 int
"
"23_______________________[+[Begin 
of star X1534^9 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1535^9 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1533^8 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (ofType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for props props X1529^7
"
"21---------------------]-]Success  
pts_for props props props
"
"20--------------------]-]Success  
ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"19-------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1527^6
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
ofType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (ofType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"17_________________[+[Begin 
pts_for set props X1525^5
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  ofType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"16________________[+[Begin 
pts_fun set set X1520^5
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"16----------------]-]Success  
pts_fun set set set
"
"15---------------]-]Success  
ofType
 (setPi
   (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton) set int
"
"15_______________[+[Begin 
pi x5 \
 locDecl x5
  (setPi
    (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    singleton) =>
  ofType
   (forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) X1536^5 int
"
"16________________[+[Begin 
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X1537^6
 int
"
"17_________________[+[Begin 
ofType (setPi singleton x6 \ propId singleton star x0) X1538^6 int
"
"18__________________[+[Begin 
of star X1539^7 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of x0 X1540^7 int
"
"18------------------]-]Success  
of x0 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1541^6 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18__________________[+[Begin 
pts_fun set props X1538^6
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"18------------------]-]Success  
pts_fun set props set
"
"17-----------------]-]Success  
ofType (setPi singleton x6 \ propId singleton star x0) set int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1542^6 int
"
"18__________________[+[Begin 
ofType singleton X1543^7 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1544^7 int)
"
"19___________________[+[Begin 
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1544^7
 int
"
"20____________________[+[Begin 
ofType singleton X1545^8 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1546^8 int)
"
"21_____________________[+[Begin 
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1546^8 int
"
"22______________________[+[Begin 
ofType (propId singleton x7 x8) X1547^9 int
"
"23_______________________[+[Begin 
of x7 X1548^9 int
"
"23-----------------------]-]Success  
of x7 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of x8 X1549^9 int
"
"23-----------------------]-]Success  
of x8 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1547^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton x7 x8) props int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) X1550^9 int)
"
"23_______________________[+[Begin 
ofType (propId singleton star star) X1550^9 int
"
"24________________________[+[Begin 
of star X1551^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X1552^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1550^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton star star) props int
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) props int)
"
"22______________________[+[Begin 
pts_for props props X1546^8
"
"22----------------------]-]Success  
pts_for props props props
"
"21---------------------]-]Success  
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"20____________________[+[Begin 
pts_for set props X1544^7
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"18__________________[+[Begin 
pts_for set props X1542^6
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) X1553^6 int)
"
"17_________________[+[Begin 
ofType
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton (app x5 x6) (app x5 x7)) X1553^6 int
"
"18__________________[+[Begin 
ofType
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1554^7 int
"
"19___________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star x0) X1555^7 int
"
"20____________________[+[Begin 
of star X1556^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of x0 X1557^8 int
"
"20--------------------]-]Success  
of x0 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1558^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20____________________[+[Begin 
pts_fun set props X1555^7
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
pts_fun set props set
"
"19-------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star x0) set int
"
"19___________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1559^7 int
"
"20____________________[+[Begin 
ofType singleton X1560^8 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1561^8 int)
"
"21_____________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1561^8
 int
"
"22______________________[+[Begin 
ofType singleton X1562^9 int
"
"22----------------------]-]Success  
ofType singleton set int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1563^9 int)
"
"23_______________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1563^9 int
"
"24________________________[+[Begin 
ofType (propId singleton x8 x9) X1564^10 int
"
"25_________________________[+[Begin 
of x8 X1565^10 int
"
"25-------------------------]-]Success  
of x8 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of x9 X1566^10 int
"
"25-------------------------]-]Success  
of x9 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1564^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
ofType (propId singleton x8 x9) props int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1567^10 int)
"
"25_________________________[+[Begin 
ofType (propId singleton star star) X1567^10 int
"
"26__________________________[+[Begin 
of star X1568^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X1569^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1567^10 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
ofType (propId singleton star star) props int
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props int)
"
"24________________________[+[Begin 
pts_for props props X1563^9
"
"24------------------------]-]Success  
pts_for props props props
"
"23-----------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"22______________________[+[Begin 
pts_for set props X1561^8
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"20____________________[+[Begin 
pts_for set props X1559^7
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   int
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"18------------------]-]Success  
ofType
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) set
 int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) X1570^7 int)
"
"19___________________[+[Begin 
ofType
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton (app x5 x6) (app x5 x7)) X1570^7 int
"
"20____________________[+[Begin 
ofType (forall singleton x8 \ propId singleton star star) X1571^8 int
"
"21_____________________[+[Begin 
ofType singleton X1572^8 int
"
"21---------------------]-]Success  
ofType singleton set int
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy (ofType (propId singleton star star) X1573^8 int)
"
"22______________________[+[Begin 
ofType (propId singleton star star) X1573^8 int
"
"23_______________________[+[Begin 
of star X1574^9 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1575^9 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1573^8 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8 singleton => spy (ofType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for set props X1571^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
ofType (forall singleton x8 \ propId singleton star star) props int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (forall singleton x9 \ propId singleton star star) =>
  spy (ofType (propId singleton (app x5 x6) (app x5 x7)) X1576^8 int)
"
"21_____________________[+[Begin 
ofType (propId singleton (app x5 x6) (app x5 x7)) X1576^8 int
"
"22______________________[+[Begin 
of (app x5 x6) X1577^9 int
"
"23_______________________[+[Begin 
of x5 (setPi X1578^9 X1579^9) int
"
"23-----------------------]-]Success  
of x5
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"23_______________________[+[Begin 
isa x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
of x6 X1580^9 int
"
"24------------------------]-]Success  
of x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"24------------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
isa x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22----------------------]-]Success  
of (app x5 x6) singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of (app x5 x7) X1581^9 int
"
"23_______________________[+[Begin 
of x5 (setPi X1582^9 X1583^9) int
"
"23-----------------------]-]Success  
of x5
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"23_______________________[+[Begin 
isa x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
of x7 X1584^9 int
"
"24------------------------]-]Success  
of x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"24------------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
isa x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22----------------------]-]Success  
of (app x5 x7) singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1576^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton (app x5 x6) (app x5 x7)) props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (forall singleton x9 \ propId singleton star star) =>
  spy (ofType (propId singleton (app x5 x6) (app x5 x7)) props int)
"
"20____________________[+[Begin 
pts_for props props X1570^7
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
ofType
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton (app x5 x6) (app x5 x7)) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) props int)
"
"18__________________[+[Begin 
pts_for set props X1553^6
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
ofType
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton (app x5 x6) (app x5 x7)) props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) props int)
"
"16________________[+[Begin 
pts_for set props X1536^5
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
pi x5 \
 locDecl x5
  (setPi
    (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    singleton) =>
  ofType
   (forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) props int
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pi x4 \
 locDecl x4
  (setSigma
    (setPi
      (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  ofType
   (setSigma
     (setPi
       (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \ singleton) x5 \
     forall
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) _ int
"
"14______________[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4
   (setPi
     (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) =>
   locDecl x5
    (forall
      (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x4 x6) (app x4 x7)) =>
    isa
     (pair
       (setPi
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) (x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8))
       (lambda
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         app x4
          (elim_setSigma x6 (x7 \
            setSigma (setPi singleton x8 \ propId singleton star star) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x7 \ x8 \
            pair (setPi singleton x9 \ propId singleton star star) (x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star)
             (lambda singleton x9 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x7 x9))
             (forall_lam singleton x9 \
               forall_lam singleton x10 \
                forall_lam (propId singleton x9 x10) x11 \
                 forall_app (forall_app (forall_app x8 x9) x10) x11)))
       (forall_lam
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall_lam
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall_lam (forall singleton x8 \ propId singleton star star) x8 \
           forall_app
            (forall_app
              (forall_app x5
                (elim_setSigma x6 (x9 \
                  setSigma (setPi singleton x10 \ propId singleton star star)
                   x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star) x9 \ x10 \
                  pair (setPi singleton x11 \ propId singleton star star)
                   (x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton star star)
                   (lambda singleton x11 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (fixMe "prova di riflessivita'"
                                (propId singleton star star))) x0) star) x1)
                      (app x9 x11))
                   (forall_lam singleton x11 \
                     forall_lam singleton x12 \
                      forall_lam (propId singleton x11 x12) x13 \
                       forall_app (forall_app (forall_app x10 x11) x12) x13)))
              (elim_setSigma x7 (x9 \
                setSigma (setPi singleton x10 \ propId singleton star star)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x9 \ x10 \
                pair (setPi singleton x11 \ propId singleton star star)
                 (x11 \
                 forall singleton x12 \
                  forall singleton x13 \
                   forall (propId singleton x12 x13) x14 \
                    propId singleton star star)
                 (lambda singleton x11 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x0) star) x1)
                    (app x9 x11))
                 (forall_lam singleton x11 \
                   forall_lam singleton x12 \
                    forall_lam (propId singleton x11 x12) x13 \
                     forall_app (forall_app (forall_app x10 x11) x12) x13)))
            (forall_lam singleton x9 \ forall_app x8 x9)))
     (setSigma
       (setPi
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8)) int
"
"15_______________[+[Begin 
of
 (pair
   (setPi
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) (x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
   (lambda
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     app x4
      (elim_setSigma x6 (x7 \
        setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x7 \ x8 \
        pair (setPi singleton x9 \ propId singleton star star) (x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
         (lambda singleton x9 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x7 x9))
         (forall_lam singleton x9 \
           forall_lam singleton x10 \
            forall_lam (propId singleton x9 x10) x11 \
             forall_app (forall_app (forall_app x8 x9) x10) x11)))
   (forall_lam
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall_lam
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall_lam (forall singleton x8 \ propId singleton star star) x8 \
       forall_app
        (forall_app
          (forall_app x5
            (elim_setSigma x6 (x9 \
              setSigma (setPi singleton x10 \ propId singleton star star)
               x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x9 \ x10 \
              pair (setPi singleton x11 \ propId singleton star star) (x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star)
               (lambda singleton x11 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x0) star) x1)
                  (app x9 x11))
               (forall_lam singleton x11 \
                 forall_lam singleton x12 \
                  forall_lam (propId singleton x11 x12) x13 \
                   forall_app (forall_app (forall_app x10 x11) x12) x13)))
          (elim_setSigma x7 (x9 \
            setSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13)))
        (forall_lam singleton x9 \ forall_app x8 x9))) X1585^6 int
"
"16________________[+[Begin 
ofType (setPi singleton x6 \ propId singleton star x0) X1586^6 int
"
"17_________________[+[Begin 
of star X1587^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of x0 X1588^7 int
"
"17-----------------]-]Success  
of x0 singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1589^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"17_________________[+[Begin 
pts_fun set props X1586^6
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
pts_fun set props set
"
"16----------------]-]Success  
ofType (setPi singleton x6 \ propId singleton star x0) set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1590^6 int
"
"17_________________[+[Begin 
ofType singleton X1591^7 int
"
"17-----------------]-]Success  
ofType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1592^7 int)
"
"18__________________[+[Begin 
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1592^7
 int
"
"19___________________[+[Begin 
ofType singleton X1593^8 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1594^8 int)
"
"20____________________[+[Begin 
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1594^8 int
"
"21_____________________[+[Begin 
ofType (propId singleton x7 x8) X1595^9 int
"
"22______________________[+[Begin 
of x7 X1596^9 int
"
"22----------------------]-]Success  
of x7 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x8 X1597^9 int
"
"22----------------------]-]Success  
of x8 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1595^9 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType (propId singleton x7 x8) props int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) X1598^9 int)
"
"22______________________[+[Begin 
ofType (propId singleton star star) X1598^9 int
"
"23_______________________[+[Begin 
of star X1599^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1600^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1598^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for props props X1594^8
"
"21---------------------]-]Success  
pts_for props props props
"
"20--------------------]-]Success  
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1592^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"17_________________[+[Begin 
pts_for set props X1590^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"16________________[+[Begin 
pts_fun set set X1601^6
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"16----------------]-]Success  
pts_fun set set set
"
"16________________[+[Begin 
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X1602^6
 int
"
"17_________________[+[Begin 
ofType (setPi singleton x6 \ propId singleton star x0) X1603^6 int
"
"18__________________[+[Begin 
of star X1604^7 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of x0 X1605^7 int
"
"18------------------]-]Success  
of x0 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1606^6 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18__________________[+[Begin 
pts_fun set props X1603^6
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"18------------------]-]Success  
pts_fun set props set
"
"17-----------------]-]Success  
ofType (setPi singleton x6 \ propId singleton star x0) set int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1607^6 int
"
"18__________________[+[Begin 
ofType singleton X1608^7 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1609^7 int)
"
"19___________________[+[Begin 
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1609^7
 int
"
"20____________________[+[Begin 
ofType singleton X1610^8 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1611^8 int)
"
"21_____________________[+[Begin 
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1611^8 int
"
"22______________________[+[Begin 
ofType (propId singleton x7 x8) X1612^9 int
"
"23_______________________[+[Begin 
of x7 X1613^9 int
"
"23-----------------------]-]Success  
of x7 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of x8 X1614^9 int
"
"23-----------------------]-]Success  
of x8 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1612^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton x7 x8) props int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) X1615^9 int)
"
"23_______________________[+[Begin 
ofType (propId singleton star star) X1615^9 int
"
"24________________________[+[Begin 
of star X1616^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X1617^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1615^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton star star) props int
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) props int)
"
"22______________________[+[Begin 
pts_for props props X1611^8
"
"22----------------------]-]Success  
pts_for props props props
"
"21---------------------]-]Success  
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"20____________________[+[Begin 
pts_for set props X1609^7
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"18__________________[+[Begin 
pts_for set props X1607^6
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton
         (app
           (lambda
             (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x9 \
             app x4
              (elim_setSigma x9 (x10 \
                setSigma (setPi singleton x11 \ propId singleton star star)
                 x11 \
                 forall singleton x12 \
                  forall singleton x13 \
                   forall (propId singleton x12 x13) x14 \
                    propId singleton star star) x10 \ x11 \
                pair (setPi singleton x12 \ propId singleton star star)
                 (x12 \
                 forall singleton x13 \
                  forall singleton x14 \
                   forall (propId singleton x13 x14) x15 \
                    propId singleton star star)
                 (lambda singleton x12 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x0) star) x1)
                    (app x10 x12))
                 (forall_lam singleton x12 \
                   forall_lam singleton x13 \
                    forall_lam (propId singleton x12 x13) x14 \
                     forall_app (forall_app (forall_app x11 x12) x13) x14)))
           x6)
         (app
           (lambda
             (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x9 \
             app x4
              (elim_setSigma x9 (x10 \
                setSigma (setPi singleton x11 \ propId singleton star star)
                 x11 \
                 forall singleton x12 \
                  forall singleton x13 \
                   forall (propId singleton x12 x13) x14 \
                    propId singleton star star) x10 \ x11 \
                pair (setPi singleton x12 \ propId singleton star star)
                 (x12 \
                 forall singleton x13 \
                  forall singleton x14 \
                   forall (propId singleton x13 x14) x15 \
                    propId singleton star star)
                 (lambda singleton x12 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x0) star) x1)
                    (app x10 x12))
                 (forall_lam singleton x12 \
                   forall_lam singleton x13 \
                    forall_lam (propId singleton x12 x13) x14 \
                     forall_app (forall_app (forall_app x11 x12) x13) x14)))
           x7)) X1618^6 int)
"
"17_________________[+[Begin 
ofType
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 X1618^6 int
"
"18__________________[+[Begin 
ofType
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1619^7 int
"
"19___________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star x0) X1620^7 int
"
"20____________________[+[Begin 
of star X1621^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of x0 X1622^8 int
"
"20--------------------]-]Success  
of x0 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1623^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20____________________[+[Begin 
pts_fun set props X1620^7
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
pts_fun set props set
"
"19-------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star x0) set int
"
"19___________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1624^7 int
"
"20____________________[+[Begin 
ofType singleton X1625^8 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1626^8 int)
"
"21_____________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1626^8
 int
"
"22______________________[+[Begin 
ofType singleton X1627^9 int
"
"22----------------------]-]Success  
ofType singleton set int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1628^9 int)
"
"23_______________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1628^9 int
"
"24________________________[+[Begin 
ofType (propId singleton x8 x9) X1629^10 int
"
"25_________________________[+[Begin 
of x8 X1630^10 int
"
"25-------------------------]-]Success  
of x8 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of x9 X1631^10 int
"
"25-------------------------]-]Success  
of x9 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1629^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
ofType (propId singleton x8 x9) props int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1632^10 int)
"
"25_________________________[+[Begin 
ofType (propId singleton star star) X1632^10 int
"
"26__________________________[+[Begin 
of star X1633^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X1634^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1632^10 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
ofType (propId singleton star star) props int
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props int)
"
"24________________________[+[Begin 
pts_for props props X1628^9
"
"24------------------------]-]Success  
pts_for props props props
"
"23-----------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"22______________________[+[Begin 
pts_for set props X1626^8
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"20____________________[+[Begin 
pts_for set props X1624^7
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   int
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"18------------------]-]Success  
ofType
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) set
 int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton
        (app
          (lambda
            (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            app x4
             (elim_setSigma x9 (x10 \
               setSigma (setPi singleton x11 \ propId singleton star star)
                x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star) x10 \ x11 \
               pair (setPi singleton x12 \ propId singleton star star) (x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star)
                (lambda singleton x12 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x10 x12))
                (forall_lam singleton x12 \
                  forall_lam singleton x13 \
                   forall_lam (propId singleton x12 x13) x14 \
                    forall_app (forall_app (forall_app x11 x12) x13) x14)))
          x6)
        (app
          (lambda
            (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            app x4
             (elim_setSigma x9 (x10 \
               setSigma (setPi singleton x11 \ propId singleton star star)
                x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star) x10 \ x11 \
               pair (setPi singleton x12 \ propId singleton star star) (x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star)
                (lambda singleton x12 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x10 x12))
                (forall_lam singleton x12 \
                  forall_lam singleton x13 \
                   forall_lam (propId singleton x12 x13) x14 \
                    forall_app (forall_app (forall_app x11 x12) x13) x14)))
          x7)) X1635^7 int)
"
"19___________________[+[Begin 
ofType
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 X1635^7 int
"
"20____________________[+[Begin 
ofType (forall singleton x8 \ propId singleton star star) X1636^8 int
"
"21_____________________[+[Begin 
ofType singleton X1637^8 int
"
"21---------------------]-]Success  
ofType singleton set int
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy (ofType (propId singleton star star) X1638^8 int)
"
"22______________________[+[Begin 
ofType (propId singleton star star) X1638^8 int
"
"23_______________________[+[Begin 
of star X1639^9 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1640^9 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1638^8 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8 singleton => spy (ofType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for set props X1636^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
ofType (forall singleton x8 \ propId singleton star star) props int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (forall singleton x9 \ propId singleton star star) =>
  spy
   (ofType
     (propId singleton
       (app
         (lambda
           (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \
           app x4
            (elim_setSigma x9 (x10 \
              setSigma (setPi singleton x11 \ propId singleton star star)
               x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star) x10 \ x11 \
              pair (setPi singleton x12 \ propId singleton star star) (x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star)
               (lambda singleton x12 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x0) star) x1)
                  (app x10 x12))
               (forall_lam singleton x12 \
                 forall_lam singleton x13 \
                  forall_lam (propId singleton x12 x13) x14 \
                   forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
       (app
         (lambda
           (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \
           app x4
            (elim_setSigma x9 (x10 \
              setSigma (setPi singleton x11 \ propId singleton star star)
               x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star) x10 \ x11 \
              pair (setPi singleton x12 \ propId singleton star star) (x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star)
               (lambda singleton x12 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x0) star) x1)
                  (app x10 x12))
               (forall_lam singleton x12 \
                 forall_lam singleton x13 \
                  forall_lam (propId singleton x12 x13) x14 \
                   forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
     X1641^8 int)
"
"21_____________________[+[Begin 
ofType
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 X1641^8 int
"
"22______________________[+[Begin 
of
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
 X1642^9 int
"
"23_______________________[+[Begin 
of
 (lambda
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   app x4
    (elim_setSigma x9 (x10 \
      setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x10 \ x11 \
      pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14)))
 (setPi X1643^9 X1644^9) int
"
"24________________________[+[Begin 
ofType
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) _
 int
"
"25_________________________[+[Begin 
ofType (setPi singleton x9 \ propId singleton star x0) X1645^9 int
"
"26__________________________[+[Begin 
of star X1646^10 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x0 X1647^10 int
"
"26--------------------------]-]Success  
of x0 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1648^9 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X1645^9
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"25-------------------------]-]Success  
ofType (setPi singleton x9 \ propId singleton star x0) set int
"
"25_________________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X1649^9 int
"
"26__________________________[+[Begin 
ofType singleton X1650^10 int
"
"26--------------------------]-]Success  
ofType singleton set int
"
"26__________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1651^10 int)
"
"27___________________________[+[Begin 
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1651^10 int
"
"28____________________________[+[Begin 
ofType singleton X1652^11 int
"
"28----------------------------]-]Success  
ofType singleton set int
"
"28____________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1653^11 int)
"
"29_____________________________[+[Begin 
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1653^11 int
"
"30______________________________[+[Begin 
ofType (propId singleton x10 x11) X1654^12 int
"
"31_______________________________[+[Begin 
of x10 X1655^12 int
"
"31-------------------------------]-]Success  
of x10 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x11 X1656^12 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X1654^12 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton x10 x11) props int
"
"30______________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) X1657^12 int)
"
"31_______________________________[+[Begin 
ofType (propId singleton star star) X1657^12 int
"
"32________________________________[+[Begin 
of star X1658^13 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X1659^13 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X1657^12 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"30------------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) props int)
"
"30______________________________[+[Begin 
pts_for props props X1653^11
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props int
"
"28----------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"28____________________________[+[Begin 
pts_for set props X1651^10
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 int
"
"26--------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"26__________________________[+[Begin 
pts_for set props X1649^9
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props int
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
ofType
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) _
 int
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isa
   (app x4
     (elim_setSigma x9 (x10 \
       setSigma (setPi singleton x11 \ propId singleton star star) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x10 \ x11 \
       pair (setPi singleton x12 \ propId singleton star star) (x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
        (lambda singleton x12 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x10 x12))
        (forall_lam singleton x12 \
          forall_lam singleton x13 \
           forall_lam (propId singleton x12 x13) x14 \
            forall_app (forall_app (forall_app x11 x12) x13) x14)))
   (X1644^9 x9) int
"
"25_________________________[+[Begin 
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) X1660^10
 int
"
"26__________________________[+[Begin 
of x4 (setPi X1661^10 X1662^10) int
"
"26--------------------------]-]Success  
of x4
 (setPi
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x10 \ singleton) int
"
"26__________________________[+[Begin 
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14)) X1663^10 int
"
"28____________________________[+[Begin 
of x9 (setSigma X1664^10 X1665^10) int
"
"28----------------------------]-]Success  
of x9
 (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   int
"
"29_____________________________[+[Begin 
ofType (setPi singleton x11 \ propId singleton star star) X1666^11 int
"
"30______________________________[+[Begin 
of star X1667^12 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X1668^12 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X1669^11 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30______________________________[+[Begin 
pts_fun set props X1666^11
"
"31_______________________________[+[Begin 
pts_leq set set
"
"31-------------------------------]-]Success  
pts_leq set set
"
"31_______________________________[+[Begin 
pts_leq props set
"
"31-------------------------------]-]Success  
pts_leq props set
"
"30------------------------------]-]Success  
pts_fun set props set
"
"29-----------------------------]-]Success  
ofType (setPi singleton x11 \ propId singleton star star) set int
"
"29_____________________________[+[Begin 
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   X1670^11 int
"
"30______________________________[+[Begin 
ofType singleton X1671^12 int
"
"30------------------------------]-]Success  
ofType singleton set int
"
"30______________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X1672^12 int)
"
"31_______________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X1672^12 int
"
"32________________________________[+[Begin 
ofType singleton X1673^13 int
"
"32--------------------------------]-]Success  
ofType singleton set int
"
"32________________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X1674^13 int)
"
"33_________________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X1674^13 int
"
"34__________________________________[+[Begin 
ofType (propId singleton x12 x13) X1675^14 int
"
"35___________________________________[+[Begin 
of x12 X1676^14 int
"
"35-----------------------------------]-]Success  
of x12 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
of x13 X1677^14 int
"
"35-----------------------------------]-]Success  
of x13 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
(pts_leq set set),
(X1675^14 = props)
"
"35-----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"34----------------------------------]-]Success  
ofType (propId singleton x12 x13) props int
"
"34__________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X1678^14 int)
"
"35___________________________________[+[Begin 
ofType (propId singleton star star) X1678^14 int
"
"36____________________________________[+[Begin 
of star X1679^15 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"36____________________________________[+[Begin 
of star X1680^15 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"36____________________________________[+[Begin 
(pts_leq set set),
(X1678^14 = props)
"
"36------------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"35-----------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"34----------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props int)
"
"34__________________________________[+[Begin 
pts_for props props X1674^13
"
"34----------------------------------]-]Success  
pts_for props props props
"
"33---------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props int
"
"32--------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"32________________________________[+[Begin 
pts_for set props X1672^12
"
"32--------------------------------]-]Success  
pts_for set props props
"
"31-------------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 int
"
"30------------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"30______________________________[+[Begin 
pts_for set props X1670^11
"
"30------------------------------]-]Success  
pts_for set props props
"
"29-----------------------------]-]Success  
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   props int
"
"29_____________________________[+[Begin 
pts_leq set set
"
"29-----------------------------]-]Success  
pts_leq set set
"
"29_____________________________[+[Begin 
pts_leq props set
"
"29-----------------------------]-]Success  
pts_leq props set
"
"28----------------------------]-]Success  
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   int
"
"28____________________________[+[Begin 
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     int
"
"29_____________________________[+[Begin 
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14)) X1681^12 int
"
"30______________________________[+[Begin 
of star X1682^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X1683^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X1684^12 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30______________________________[+[Begin 
pts_fun set props X1685^12
"
"31_______________________________[+[Begin 
pts_leq set set
"
"31-------------------------------]-]Success  
pts_leq set set
"
"31_______________________________[+[Begin 
pts_leq props set
"
"31-------------------------------]-]Success  
pts_leq props set
"
"30------------------------------]-]Success  
pts_fun set props set
"
"30______________________________[+[Begin 
ofType singleton X1686^12 int
"
"30------------------------------]-]Success  
ofType singleton set int
"
"30______________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X1687^12 int)
"
"31_______________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X1687^12 int
"
"32________________________________[+[Begin 
ofType singleton X1688^13 int
"
"32--------------------------------]-]Success  
ofType singleton set int
"
"32________________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X1689^13 int)
"
"33_________________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X1689^13 int
"
"34__________________________________[+[Begin 
ofType (propId singleton x12 x13) X1690^14 int
"
"35___________________________________[+[Begin 
of x12 X1691^14 int
"
"35-----------------------------------]-]Success  
of x12 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
of x13 X1692^14 int
"
"35-----------------------------------]-]Success  
of x13 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
(pts_leq set set),
(X1690^14 = props)
"
"35-----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"34----------------------------------]-]Success  
ofType (propId singleton x12 x13) props int
"
"34__________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X1693^14 int)
"
"35___________________________________[+[Begin 
ofType (propId singleton star star) X1693^14 int
"
"36____________________________________[+[Begin 
of star X1694^15 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"36____________________________________[+[Begin 
of star X1695^15 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"36____________________________________[+[Begin 
(pts_leq set set),
(X1693^14 = props)
"
"36------------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"35-----------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"34----------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props int)
"
"34__________________________________[+[Begin 
pts_for props props X1689^13
"
"34----------------------------------]-]Success  
pts_for props props props
"
"33---------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props int
"
"32--------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"32________________________________[+[Begin 
pts_for set props X1687^12
"
"32--------------------------------]-]Success  
pts_for set props props
"
"31-------------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 int
"
"30------------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"30______________________________[+[Begin 
pts_for set props X1696^12
"
"30------------------------------]-]Success  
pts_for set props props
"
"30______________________________[+[Begin 
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12)) X1697^12 int
"
"31_______________________________[+[Begin 
ofType singleton _ int
"
"31-------------------------------]-]Success  
ofType singleton _ int
"
"31_______________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (X1698^12 x12) int
"
"32________________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) X1699^13 int
"
"33_________________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X1700^13 X1699^13) int
"
"34__________________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X1701^13 int
"
"35___________________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X1702^13 X1701^13) int
"
"36____________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X1703^13 int
"
"37_____________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X1704^13 int
"
"38______________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X1705^13
 int
"
"39_______________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X1706^13 X1705^13) int
"
"40________________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X1707^13 int
"
"41_________________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X1708^13 int
"
"42__________________________________________[+[Begin 
of (k_propId singleton) X1709^13 int
"
"42------------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 int
"
"42__________________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall X1710^13 X1711^13)
"
"42------------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
"
"42__________________________________________[+[Begin 
of star X1712^13 int
"
"42------------------------------------------]-]Success  
of star singleton int
"
"42__________________________________________[+[Begin 
conv singleton singleton
"
"42------------------------------------------]-]Success  
conv singleton singleton
"
"41-----------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 int
"
"41_________________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall X1713^13 X1714^13)
"
"41-----------------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
"
"41_________________________________________[+[Begin 
of star X1715^13 int
"
"41-----------------------------------------]-]Success  
of star singleton int
"
"41_________________________________________[+[Begin 
conv singleton singleton
"
"41-----------------------------------------]-]Success  
conv singleton singleton
"
"40----------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 int
"
"40________________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies X1706^13 X1705^13)
"
"40----------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
"
"39---------------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 int
"
"39_______________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"40________________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X1716^13 int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"40----------------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"40________________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"40----------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"39---------------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"38--------------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14))) int
"
"38______________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall X1717^13 X1718^13)
"
"38--------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
"
"38______________________________________[+[Begin 
of x0 X1719^13 int
"
"38--------------------------------------]-]Success  
of x0 singleton int
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13))) int
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall X1720^13 X1721^13)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
"
"37_____________________________________[+[Begin 
of star X1722^13 int
"
"37-------------------------------------]-]Success  
of star singleton int
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"36____________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X1702^13 X1701^13)
"
"36------------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"35-----------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"35___________________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"36____________________________________[+[Begin 
of x1 X1723^13 int
"
"36------------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"36____________________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"36------------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"35-----------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"34----------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"34__________________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X1700^13 X1699^13)
"
"34----------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"33---------------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"33_________________________________[+[Begin 
isa (app x10 x12) (propId singleton star x0) int
"
"34__________________________________[+[Begin 
of (app x10 x12) X1724^13 int
"
"35___________________________________[+[Begin 
of x10 (setPi X1725^13 X1726^13) int
"
"35-----------------------------------]-]Success  
of x10 (setPi singleton x13 \ propId singleton star x0) int
"
"35___________________________________[+[Begin 
isa x12 singleton int
"
"36____________________________________[+[Begin 
of x12 X1727^13 int
"
"36------------------------------------]-]Success  
of x12 singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
isa x12 singleton int
"
"34----------------------------------]-]Success  
of (app x10 x12) (propId singleton star x0) int
"
"34__________________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"34----------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"33---------------------------------]-]Success  
isa (app x10 x12) (propId singleton star x0) int
"
"32--------------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) (propId singleton star star) int
"
"32________________________________[+[Begin 
conv (propId singleton star star) (X1698^12 x12)
"
"32--------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"31-------------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (propId singleton star star) int
"
"30------------------------------]-]Success  
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12))
 (setPi singleton x12 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"30------------------------------]-]Success  
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"30______________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14) X1728^12 int
"
"31_______________________________[+[Begin 
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14) X1729^13 int
"
"32________________________________[+[Begin 
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14) X1730^14 int
"
"33_________________________________[+[Begin 
of x12 X1731^14 int
"
"33---------------------------------]-]Success  
of x12 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
of x13 X1732^14 int
"
"33---------------------------------]-]Success  
of x13 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
(pts_leq set set),
(X1733^14 = props)
"
"33---------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"33_________________________________[+[Begin 
of (forall_app (forall_app (forall_app x11 x12) x13) x14) X1734^15 int
"
"34__________________________________[+[Begin 
of (forall_app (forall_app x11 x12) x13) X1735^15 int
"
"35___________________________________[+[Begin 
of (forall_app x11 x12) X1736^15 int
"
"36____________________________________[+[Begin 
of x11 X1737^15 int
"
"36------------------------------------]-]Success  
of x11
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star) int
"
"36____________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall X1738^15 X1739^15)
"
"36------------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
"
"36____________________________________[+[Begin 
of x12 X1740^15 int
"
"36------------------------------------]-]Success  
of x12 singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of (forall_app x11 x12)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star) int
"
"35___________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall X1741^15 X1742^15)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
"
"35___________________________________[+[Begin 
of x13 X1743^15 int
"
"35-----------------------------------]-]Success  
of x13 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of (forall_app (forall_app x11 x12) x13)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star) int
"
"34__________________________________[+[Begin 
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall X1744^15 X1745^15)
"
"34----------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star)
"
"34__________________________________[+[Begin 
of x14 X1746^15 int
"
"34----------------------------------]-]Success  
of x14 (propId singleton x12 x13) int
"
"34__________________________________[+[Begin 
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"34----------------------------------]-]Success  
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"33---------------------------------]-]Success  
of (forall_app (forall_app (forall_app x11 x12) x13) x14)
 (propId singleton star star) int
"
"33_________________________________[+[Begin 
conv (propId singleton star star) (X1747^14 x14)
"
"33---------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"32--------------------------------]-]Success  
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X1748^13 x13)
"
"32--------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"31-------------------------------]-]Success  
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X1749^12 x12)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"30------------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"30------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"29-----------------------------]-]Success  
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"29-----------------------------]-]Success  
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"28----------------------------]-]Success  
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     int
"
"27---------------------------]-]Success  
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"25-------------------------]-]Success  
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) singleton
 int
"
"25_________________________[+[Begin 
conv singleton (X1644^9 x9)
"
"25-------------------------]-]Success  
conv singleton singleton
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isa
   (app x4
     (elim_setSigma x9 (x10 \
       setSigma (setPi singleton x11 \ propId singleton star star) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x10 \ x11 \
       pair (setPi singleton x12 \ propId singleton star star) (x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
        (lambda singleton x12 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x10 x12))
        (forall_lam singleton x12 \
          forall_lam singleton x13 \
           forall_lam (propId singleton x12 x13) x14 \
            forall_app (forall_app (forall_app x11 x12) x13) x14))) singleton
   int
"
"23-----------------------]-]Success  
of
 (lambda
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   app x4
    (elim_setSigma x9 (x10 \
      setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x10 \ x11 \
      pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14)))
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"23_______________________[+[Begin 
isa x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
of x6 X1750^9 int
"
"24------------------------]-]Success  
of x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"24------------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
isa x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22----------------------]-]Success  
of
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x7)
 X1751^9 int
"
"23_______________________[+[Begin 
of
 (lambda
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   app x4
    (elim_setSigma x9 (x10 \
      setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x10 \ x11 \
      pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14)))
 (setPi X1752^9 X1753^9) int
"
"24________________________[+[Begin 
ofType
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) _
 int
"
"25_________________________[+[Begin 
ofType (setPi singleton x9 \ propId singleton star x0) X1754^9 int
"
"26__________________________[+[Begin 
of star X1755^10 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x0 X1756^10 int
"
"26--------------------------]-]Success  
of x0 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1757^9 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X1754^9
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"25-------------------------]-]Success  
ofType (setPi singleton x9 \ propId singleton star x0) set int
"
"25_________________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X1758^9 int
"
"26__________________________[+[Begin 
ofType singleton X1759^10 int
"
"26--------------------------]-]Success  
ofType singleton set int
"
"26__________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1760^10 int)
"
"27___________________________[+[Begin 
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1760^10 int
"
"28____________________________[+[Begin 
ofType singleton X1761^11 int
"
"28----------------------------]-]Success  
ofType singleton set int
"
"28____________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1762^11 int)
"
"29_____________________________[+[Begin 
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1762^11 int
"
"30______________________________[+[Begin 
ofType (propId singleton x10 x11) X1763^12 int
"
"31_______________________________[+[Begin 
of x10 X1764^12 int
"
"31-------------------------------]-]Success  
of x10 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x11 X1765^12 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X1763^12 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton x10 x11) props int
"
"30______________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) X1766^12 int)
"
"31_______________________________[+[Begin 
ofType (propId singleton star star) X1766^12 int
"
"32________________________________[+[Begin 
of star X1767^13 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X1768^13 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X1766^12 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"30------------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) props int)
"
"30______________________________[+[Begin 
pts_for props props X1762^11
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props int
"
"28----------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"28____________________________[+[Begin 
pts_for set props X1760^10
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 int
"
"26--------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"26__________________________[+[Begin 
pts_for set props X1758^9
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props int
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
ofType
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) _
 int
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isa
   (app x4
     (elim_setSigma x9 (x10 \
       setSigma (setPi singleton x11 \ propId singleton star star) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x10 \ x11 \
       pair (setPi singleton x12 \ propId singleton star star) (x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
        (lambda singleton x12 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x10 x12))
        (forall_lam singleton x12 \
          forall_lam singleton x13 \
           forall_lam (propId singleton x12 x13) x14 \
            forall_app (forall_app (forall_app x11 x12) x13) x14)))
   (X1753^9 x9) int
"
"25_________________________[+[Begin 
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) X1769^10
 int
"
"26__________________________[+[Begin 
of x4 (setPi X1770^10 X1771^10) int
"
"26--------------------------]-]Success  
of x4
 (setPi
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x10 \ singleton) int
"
"26__________________________[+[Begin 
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14)) X1772^10 int
"
"28____________________________[+[Begin 
of x9 (setSigma X1773^10 X1774^10) int
"
"28----------------------------]-]Success  
of x9
 (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   int
"
"29_____________________________[+[Begin 
ofType (setPi singleton x11 \ propId singleton star star) X1775^11 int
"
"30______________________________[+[Begin 
of star X1776^12 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X1777^12 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X1778^11 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30______________________________[+[Begin 
pts_fun set props X1775^11
"
"31_______________________________[+[Begin 
pts_leq set set
"
"31-------------------------------]-]Success  
pts_leq set set
"
"31_______________________________[+[Begin 
pts_leq props set
"
"31-------------------------------]-]Success  
pts_leq props set
"
"30------------------------------]-]Success  
pts_fun set props set
"
"29-----------------------------]-]Success  
ofType (setPi singleton x11 \ propId singleton star star) set int
"
"29_____________________________[+[Begin 
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   X1779^11 int
"
"30______________________________[+[Begin 
ofType singleton X1780^12 int
"
"30------------------------------]-]Success  
ofType singleton set int
"
"30______________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X1781^12 int)
"
"31_______________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X1781^12 int
"
"32________________________________[+[Begin 
ofType singleton X1782^13 int
"
"32--------------------------------]-]Success  
ofType singleton set int
"
"32________________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X1783^13 int)
"
"33_________________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X1783^13 int
"
"34__________________________________[+[Begin 
ofType (propId singleton x12 x13) X1784^14 int
"
"35___________________________________[+[Begin 
of x12 X1785^14 int
"
"35-----------------------------------]-]Success  
of x12 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
of x13 X1786^14 int
"
"35-----------------------------------]-]Success  
of x13 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
(pts_leq set set),
(X1784^14 = props)
"
"35-----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"34----------------------------------]-]Success  
ofType (propId singleton x12 x13) props int
"
"34__________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X1787^14 int)
"
"35___________________________________[+[Begin 
ofType (propId singleton star star) X1787^14 int
"
"36____________________________________[+[Begin 
of star X1788^15 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"36____________________________________[+[Begin 
of star X1789^15 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"36____________________________________[+[Begin 
(pts_leq set set),
(X1787^14 = props)
"
"36------------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"35-----------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"34----------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props int)
"
"34__________________________________[+[Begin 
pts_for props props X1783^13
"
"34----------------------------------]-]Success  
pts_for props props props
"
"33---------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props int
"
"32--------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"32________________________________[+[Begin 
pts_for set props X1781^12
"
"32--------------------------------]-]Success  
pts_for set props props
"
"31-------------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 int
"
"30------------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"30______________________________[+[Begin 
pts_for set props X1779^11
"
"30------------------------------]-]Success  
pts_for set props props
"
"29-----------------------------]-]Success  
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   props int
"
"29_____________________________[+[Begin 
pts_leq set set
"
"29-----------------------------]-]Success  
pts_leq set set
"
"29_____________________________[+[Begin 
pts_leq props set
"
"29-----------------------------]-]Success  
pts_leq props set
"
"28----------------------------]-]Success  
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   int
"
"28____________________________[+[Begin 
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     int
"
"29_____________________________[+[Begin 
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14)) X1790^12 int
"
"30______________________________[+[Begin 
of star X1791^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X1792^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X1793^12 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30______________________________[+[Begin 
pts_fun set props X1794^12
"
"31_______________________________[+[Begin 
pts_leq set set
"
"31-------------------------------]-]Success  
pts_leq set set
"
"31_______________________________[+[Begin 
pts_leq props set
"
"31-------------------------------]-]Success  
pts_leq props set
"
"30------------------------------]-]Success  
pts_fun set props set
"
"30______________________________[+[Begin 
ofType singleton X1795^12 int
"
"30------------------------------]-]Success  
ofType singleton set int
"
"30______________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X1796^12 int)
"
"31_______________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X1796^12 int
"
"32________________________________[+[Begin 
ofType singleton X1797^13 int
"
"32--------------------------------]-]Success  
ofType singleton set int
"
"32________________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X1798^13 int)
"
"33_________________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X1798^13 int
"
"34__________________________________[+[Begin 
ofType (propId singleton x12 x13) X1799^14 int
"
"35___________________________________[+[Begin 
of x12 X1800^14 int
"
"35-----------------------------------]-]Success  
of x12 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
of x13 X1801^14 int
"
"35-----------------------------------]-]Success  
of x13 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
(pts_leq set set),
(X1799^14 = props)
"
"35-----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"34----------------------------------]-]Success  
ofType (propId singleton x12 x13) props int
"
"34__________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X1802^14 int)
"
"35___________________________________[+[Begin 
ofType (propId singleton star star) X1802^14 int
"
"36____________________________________[+[Begin 
of star X1803^15 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"36____________________________________[+[Begin 
of star X1804^15 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"36____________________________________[+[Begin 
(pts_leq set set),
(X1802^14 = props)
"
"36------------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"35-----------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"34----------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props int)
"
"34__________________________________[+[Begin 
pts_for props props X1798^13
"
"34----------------------------------]-]Success  
pts_for props props props
"
"33---------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props int
"
"32--------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"32________________________________[+[Begin 
pts_for set props X1796^12
"
"32--------------------------------]-]Success  
pts_for set props props
"
"31-------------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 int
"
"30------------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"30______________________________[+[Begin 
pts_for set props X1805^12
"
"30------------------------------]-]Success  
pts_for set props props
"
"30______________________________[+[Begin 
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12)) X1806^12 int
"
"31_______________________________[+[Begin 
ofType singleton _ int
"
"31-------------------------------]-]Success  
ofType singleton _ int
"
"31_______________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (X1807^12 x12) int
"
"32________________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) X1808^13 int
"
"33_________________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X1809^13 X1808^13) int
"
"34__________________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X1810^13 int
"
"35___________________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X1811^13 X1810^13) int
"
"36____________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X1812^13 int
"
"37_____________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X1813^13 int
"
"38______________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X1814^13
 int
"
"39_______________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X1815^13 X1814^13) int
"
"40________________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X1816^13 int
"
"41_________________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X1817^13 int
"
"42__________________________________________[+[Begin 
of (k_propId singleton) X1818^13 int
"
"42------------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 int
"
"42__________________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall X1819^13 X1820^13)
"
"42------------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
"
"42__________________________________________[+[Begin 
of star X1821^13 int
"
"42------------------------------------------]-]Success  
of star singleton int
"
"42__________________________________________[+[Begin 
conv singleton singleton
"
"42------------------------------------------]-]Success  
conv singleton singleton
"
"41-----------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 int
"
"41_________________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall X1822^13 X1823^13)
"
"41-----------------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
"
"41_________________________________________[+[Begin 
of star X1824^13 int
"
"41-----------------------------------------]-]Success  
of star singleton int
"
"41_________________________________________[+[Begin 
conv singleton singleton
"
"41-----------------------------------------]-]Success  
conv singleton singleton
"
"40----------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 int
"
"40________________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies X1815^13 X1814^13)
"
"40----------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
"
"39---------------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 int
"
"39_______________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"40________________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X1825^13 int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"40----------------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"40________________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"40----------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"39---------------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"38--------------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14))) int
"
"38______________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall X1826^13 X1827^13)
"
"38--------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
"
"38______________________________________[+[Begin 
of x0 X1828^13 int
"
"38--------------------------------------]-]Success  
of x0 singleton int
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13))) int
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall X1829^13 X1830^13)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
"
"37_____________________________________[+[Begin 
of star X1831^13 int
"
"37-------------------------------------]-]Success  
of star singleton int
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"36____________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X1811^13 X1810^13)
"
"36------------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"35-----------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"35___________________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"36____________________________________[+[Begin 
of x1 X1832^13 int
"
"36------------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"36____________________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"36------------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"35-----------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"34----------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"34__________________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X1809^13 X1808^13)
"
"34----------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"33---------------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"33_________________________________[+[Begin 
isa (app x10 x12) (propId singleton star x0) int
"
"34__________________________________[+[Begin 
of (app x10 x12) X1833^13 int
"
"35___________________________________[+[Begin 
of x10 (setPi X1834^13 X1835^13) int
"
"35-----------------------------------]-]Success  
of x10 (setPi singleton x13 \ propId singleton star x0) int
"
"35___________________________________[+[Begin 
isa x12 singleton int
"
"36____________________________________[+[Begin 
of x12 X1836^13 int
"
"36------------------------------------]-]Success  
of x12 singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
isa x12 singleton int
"
"34----------------------------------]-]Success  
of (app x10 x12) (propId singleton star x0) int
"
"34__________________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"34----------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"33---------------------------------]-]Success  
isa (app x10 x12) (propId singleton star x0) int
"
"32--------------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) (propId singleton star star) int
"
"32________________________________[+[Begin 
conv (propId singleton star star) (X1807^12 x12)
"
"32--------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"31-------------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (propId singleton star star) int
"
"30------------------------------]-]Success  
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12))
 (setPi singleton x12 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"30------------------------------]-]Success  
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"30______________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14) X1837^12 int
"
"31_______________________________[+[Begin 
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14) X1838^13 int
"
"32________________________________[+[Begin 
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14) X1839^14 int
"
"33_________________________________[+[Begin 
of x12 X1840^14 int
"
"33---------------------------------]-]Success  
of x12 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
of x13 X1841^14 int
"
"33---------------------------------]-]Success  
of x13 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
(pts_leq set set),
(X1842^14 = props)
"
"33---------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"33_________________________________[+[Begin 
of (forall_app (forall_app (forall_app x11 x12) x13) x14) X1843^15 int
"
"34__________________________________[+[Begin 
of (forall_app (forall_app x11 x12) x13) X1844^15 int
"
"35___________________________________[+[Begin 
of (forall_app x11 x12) X1845^15 int
"
"36____________________________________[+[Begin 
of x11 X1846^15 int
"
"36------------------------------------]-]Success  
of x11
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star) int
"
"36____________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall X1847^15 X1848^15)
"
"36------------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
"
"36____________________________________[+[Begin 
of x12 X1849^15 int
"
"36------------------------------------]-]Success  
of x12 singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of (forall_app x11 x12)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star) int
"
"35___________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall X1850^15 X1851^15)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
"
"35___________________________________[+[Begin 
of x13 X1852^15 int
"
"35-----------------------------------]-]Success  
of x13 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of (forall_app (forall_app x11 x12) x13)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star) int
"
"34__________________________________[+[Begin 
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall X1853^15 X1854^15)
"
"34----------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star)
"
"34__________________________________[+[Begin 
of x14 X1855^15 int
"
"34----------------------------------]-]Success  
of x14 (propId singleton x12 x13) int
"
"34__________________________________[+[Begin 
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"34----------------------------------]-]Success  
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"33---------------------------------]-]Success  
of (forall_app (forall_app (forall_app x11 x12) x13) x14)
 (propId singleton star star) int
"
"33_________________________________[+[Begin 
conv (propId singleton star star) (X1856^14 x14)
"
"33---------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"32--------------------------------]-]Success  
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X1857^13 x13)
"
"32--------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"31-------------------------------]-]Success  
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X1858^12 x12)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"30------------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"30------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"29-----------------------------]-]Success  
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"29-----------------------------]-]Success  
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"28----------------------------]-]Success  
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     int
"
"27---------------------------]-]Success  
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"25-------------------------]-]Success  
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) singleton
 int
"
"25_________________________[+[Begin 
conv singleton (X1753^9 x9)
"
"25-------------------------]-]Success  
conv singleton singleton
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isa
   (app x4
     (elim_setSigma x9 (x10 \
       setSigma (setPi singleton x11 \ propId singleton star star) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x10 \ x11 \
       pair (setPi singleton x12 \ propId singleton star star) (x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
        (lambda singleton x12 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x10 x12))
        (forall_lam singleton x12 \
          forall_lam singleton x13 \
           forall_lam (propId singleton x12 x13) x14 \
            forall_app (forall_app (forall_app x11 x12) x13) x14))) singleton
   int
"
"23-----------------------]-]Success  
of
 (lambda
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   app x4
    (elim_setSigma x9 (x10 \
      setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
      x10 \ x11 \
      pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14)))
 (setPi
   (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"23_______________________[+[Begin 
isa x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
of x7 X1859^9 int
"
"24------------------------]-]Success  
of x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"24------------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
isa x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22----------------------]-]Success  
of
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x7)
 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1641^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
ofType
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (forall singleton x9 \ propId singleton star star) =>
  spy
   (ofType
     (propId singleton
       (app
         (lambda
           (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \
           app x4
            (elim_setSigma x9 (x10 \
              setSigma (setPi singleton x11 \ propId singleton star star)
               x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star) x10 \ x11 \
              pair (setPi singleton x12 \ propId singleton star star) (x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star)
               (lambda singleton x12 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x0) star) x1)
                  (app x10 x12))
               (forall_lam singleton x12 \
                 forall_lam singleton x13 \
                  forall_lam (propId singleton x12 x13) x14 \
                   forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
       (app
         (lambda
           (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \
           app x4
            (elim_setSigma x9 (x10 \
              setSigma (setPi singleton x11 \ propId singleton star star)
               x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star) x10 \ x11 \
              pair (setPi singleton x12 \ propId singleton star star) (x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star)
               (lambda singleton x12 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x0) star) x1)
                  (app x10 x12))
               (forall_lam singleton x12 \
                 forall_lam singleton x13 \
                  forall_lam (propId singleton x12 x13) x14 \
                   forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
     props int)
"
"20____________________[+[Begin 
pts_for props props X1635^7
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
ofType
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  spy
   (ofType
     (forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton
        (app
          (lambda
            (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            app x4
             (elim_setSigma x9 (x10 \
               setSigma (setPi singleton x11 \ propId singleton star star)
                x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star) x10 \ x11 \
               pair (setPi singleton x12 \ propId singleton star star) (x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star)
                (lambda singleton x12 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x10 x12))
                (forall_lam singleton x12 \
                  forall_lam singleton x13 \
                   forall_lam (propId singleton x12 x13) x14 \
                    forall_app (forall_app (forall_app x11 x12) x13) x14)))
          x6)
        (app
          (lambda
            (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            app x4
             (elim_setSigma x9 (x10 \
               setSigma (setPi singleton x11 \ propId singleton star star)
                x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star) x10 \ x11 \
               pair (setPi singleton x12 \ propId singleton star star) (x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star)
                (lambda singleton x12 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x10 x12))
                (forall_lam singleton x12 \
                  forall_lam singleton x13 \
                   forall_lam (propId singleton x12 x13) x14 \
                    forall_app (forall_app (forall_app x11 x12) x13) x14)))
          x7)) props int)
"
"18__________________[+[Begin 
pts_for set props X1618^6
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
ofType
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (ofType
     (forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton
         (app
           (lambda
             (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x9 \
             app x4
              (elim_setSigma x9 (x10 \
                setSigma (setPi singleton x11 \ propId singleton star star)
                 x11 \
                 forall singleton x12 \
                  forall singleton x13 \
                   forall (propId singleton x12 x13) x14 \
                    propId singleton star star) x10 \ x11 \
                pair (setPi singleton x12 \ propId singleton star star)
                 (x12 \
                 forall singleton x13 \
                  forall singleton x14 \
                   forall (propId singleton x13 x14) x15 \
                    propId singleton star star)
                 (lambda singleton x12 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x0) star) x1)
                    (app x10 x12))
                 (forall_lam singleton x12 \
                   forall_lam singleton x13 \
                    forall_lam (propId singleton x12 x13) x14 \
                     forall_app (forall_app (forall_app x11 x12) x13) x14)))
           x6)
         (app
           (lambda
             (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x9 \
             app x4
              (elim_setSigma x9 (x10 \
                setSigma (setPi singleton x11 \ propId singleton star star)
                 x11 \
                 forall singleton x12 \
                  forall singleton x13 \
                   forall (propId singleton x12 x13) x14 \
                    propId singleton star star) x10 \ x11 \
                pair (setPi singleton x12 \ propId singleton star star)
                 (x12 \
                 forall singleton x13 \
                  forall singleton x14 \
                   forall (propId singleton x13 x14) x15 \
                    propId singleton star star)
                 (lambda singleton x12 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x0) star) x1)
                    (app x10 x12))
                 (forall_lam singleton x12 \
                   forall_lam singleton x13 \
                    forall_lam (propId singleton x12 x13) x14 \
                     forall_app (forall_app (forall_app x11 x12) x13) x14)))
           x7)) props int)
"
"16________________[+[Begin 
pts_for set props X1860^6
"
"16----------------]-]Success  
pts_for set props props
"
"16________________[+[Begin 
of
 (lambda
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   app x4
    (elim_setSigma x6 (x7 \
      setSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x7 \ x8 \
      pair (setPi singleton x9 \ propId singleton star star) (x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
       (lambda singleton x9 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x7 x9))
       (forall_lam singleton x9 \
         forall_lam singleton x10 \
          forall_lam (propId singleton x9 x10) x11 \
           forall_app (forall_app (forall_app x8 x9) x10) x11))) X1861^6 int
"
"17_________________[+[Begin 
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) _ int
"
"18__________________[+[Begin 
ofType (setPi singleton x6 \ propId singleton star x0) X1862^6 int
"
"19___________________[+[Begin 
of star X1863^7 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x0 X1864^7 int
"
"19-------------------]-]Success  
of x0 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1865^6 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19___________________[+[Begin 
pts_fun set props X1862^6
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"19-------------------]-]Success  
pts_fun set props set
"
"18------------------]-]Success  
ofType (setPi singleton x6 \ propId singleton star x0) set int
"
"18__________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1866^6 int
"
"19___________________[+[Begin 
ofType singleton X1867^7 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1868^7 int)
"
"20____________________[+[Begin 
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1868^7
 int
"
"21_____________________[+[Begin 
ofType singleton X1869^8 int
"
"21---------------------]-]Success  
ofType singleton set int
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1870^8 int)
"
"22______________________[+[Begin 
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1870^8 int
"
"23_______________________[+[Begin 
ofType (propId singleton x7 x8) X1871^9 int
"
"24________________________[+[Begin 
of x7 X1872^9 int
"
"24------------------------]-]Success  
of x7 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of x8 X1873^9 int
"
"24------------------------]-]Success  
of x8 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1871^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton x7 x8) props int
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) X1874^9 int)
"
"24________________________[+[Begin 
ofType (propId singleton star star) X1874^9 int
"
"25_________________________[+[Begin 
of star X1875^10 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X1876^10 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1874^9 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
ofType (propId singleton star star) props int
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) props int)
"
"23_______________________[+[Begin 
pts_for props props X1870^8
"
"23-----------------------]-]Success  
pts_for props props props
"
"22----------------------]-]Success  
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X1868^7
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"19-------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"19___________________[+[Begin 
pts_for set props X1866^6
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
ofType
 (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) _ int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isa
   (app x4
     (elim_setSigma x6 (x7 \
       setSigma (setPi singleton x8 \ propId singleton star star) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x7 \ x8 \
       pair (setPi singleton x9 \ propId singleton star star) (x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
        (lambda singleton x9 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1) (app x7 x9))
        (forall_lam singleton x9 \
          forall_lam singleton x10 \
           forall_lam (propId singleton x9 x10) x11 \
            forall_app (forall_app (forall_app x8 x9) x10) x11)))
   (X1877^6 x6) int
"
"18__________________[+[Begin 
of
 (app x4
   (elim_setSigma x6 (x7 \
     setSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x7 \ x8 \
     pair (setPi singleton x9 \ propId singleton star star) (x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
      (lambda singleton x9 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x7 x9))
      (forall_lam singleton x9 \
        forall_lam singleton x10 \
         forall_lam (propId singleton x9 x10) x11 \
          forall_app (forall_app (forall_app x8 x9) x10) x11))) X1878^7 int
"
"19___________________[+[Begin 
of x4 (setPi X1879^7 X1880^7) int
"
"19-------------------]-]Success  
of x4
 (setPi
   (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   singleton) int
"
"19___________________[+[Begin 
isa
 (elim_setSigma x6 (x7 \
   setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) x7 \
   x8 \
   pair (setPi singleton x9 \ propId singleton star star) (x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
    (lambda singleton x9 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x7 x9))
    (forall_lam singleton x9 \
      forall_lam singleton x10 \
       forall_lam (propId singleton x9 x10) x11 \
        forall_app (forall_app (forall_app x8 x9) x10) x11))
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
of
 (elim_setSigma x6 (x7 \
   setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) x7 \
   x8 \
   pair (setPi singleton x9 \ propId singleton star star) (x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
    (lambda singleton x9 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x7 x9))
    (forall_lam singleton x9 \
      forall_lam singleton x10 \
       forall_lam (propId singleton x9 x10) x11 \
        forall_app (forall_app (forall_app x8 x9) x10) x11)) X1881^7 int
"
"21_____________________[+[Begin 
of x6 (setSigma X1882^7 X1883^7) int
"
"21---------------------]-]Success  
of x6
 (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"21_____________________[+[Begin 
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star) _
   int
"
"22______________________[+[Begin 
ofType (setPi singleton x8 \ propId singleton star star) X1884^8 int
"
"23_______________________[+[Begin 
of star X1885^9 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1886^9 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1887^8 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X1884^8
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"22----------------------]-]Success  
ofType (setPi singleton x8 \ propId singleton star star) set int
"
"22______________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star star) =>
  ofType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X1888^8 int
"
"23_______________________[+[Begin 
ofType singleton X1889^9 int
"
"23-----------------------]-]Success  
ofType singleton set int
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1890^9 int)
"
"24________________________[+[Begin 
ofType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X1890^9
 int
"
"25_________________________[+[Begin 
ofType singleton X1891^10 int
"
"25-------------------------]-]Success  
ofType singleton set int
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1892^10 int)
"
"26__________________________[+[Begin 
ofType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X1892^10 int
"
"27___________________________[+[Begin 
ofType (propId singleton x9 x10) X1893^11 int
"
"28____________________________[+[Begin 
of x9 X1894^11 int
"
"28----------------------------]-]Success  
of x9 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x10 X1895^11 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1893^11 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
ofType (propId singleton x9 x10) props int
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (ofType (propId singleton star star) X1896^11 int)
"
"28____________________________[+[Begin 
ofType (propId singleton star star) X1896^11 int
"
"29_____________________________[+[Begin 
of star X1897^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X1898^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X1896^11 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton star star) props int
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (ofType (propId singleton star star) props int)
"
"27___________________________[+[Begin 
pts_for props props X1892^10
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
ofType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props int
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X1890^9
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
ofType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 int
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"23_______________________[+[Begin 
pts_for set props X1888^8
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star star) =>
  ofType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props int
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pi x7 \
 locDecl x7
  (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star) _
   int
"
"21_____________________[+[Begin 
pi x7 \
 pi x8 \
  locDecl x7 (setPi singleton x9 \ propId singleton star x0) =>
   locDecl x8
    (forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x9 \ propId singleton star star) (x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
       (lambda singleton x9 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x7 x9))
       (forall_lam singleton x9 \
         forall_lam singleton x10 \
          forall_lam (propId singleton x9 x10) x11 \
           forall_app (forall_app (forall_app x8 x9) x10) x11))
     (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     int
"
"22______________________[+[Begin 
of
 (pair (setPi singleton x9 \ propId singleton star star) (x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
   (lambda singleton x9 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x7 x9))
   (forall_lam singleton x9 \
     forall_lam singleton x10 \
      forall_lam (propId singleton x9 x10) x11 \
       forall_app (forall_app (forall_app x8 x9) x10) x11)) X1899^9 int
"
"23_______________________[+[Begin 
of star X1900^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1901^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1902^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X1903^9
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"23_______________________[+[Begin 
ofType singleton X1904^9 int
"
"23-----------------------]-]Success  
ofType singleton set int
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1905^9 int)
"
"24________________________[+[Begin 
ofType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X1905^9
 int
"
"25_________________________[+[Begin 
ofType singleton X1906^10 int
"
"25-------------------------]-]Success  
ofType singleton set int
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1907^10 int)
"
"26__________________________[+[Begin 
ofType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X1907^10 int
"
"27___________________________[+[Begin 
ofType (propId singleton x9 x10) X1908^11 int
"
"28____________________________[+[Begin 
of x9 X1909^11 int
"
"28----------------------------]-]Success  
of x9 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x10 X1910^11 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1908^11 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
ofType (propId singleton x9 x10) props int
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (ofType (propId singleton star star) X1911^11 int)
"
"28____________________________[+[Begin 
ofType (propId singleton star star) X1911^11 int
"
"29_____________________________[+[Begin 
of star X1912^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X1913^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X1911^11 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton star star) props int
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (ofType (propId singleton star star) props int)
"
"27___________________________[+[Begin 
pts_for props props X1907^10
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
ofType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props int
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X1905^9
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
ofType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 int
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"23_______________________[+[Begin 
pts_for set props X1914^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"23_______________________[+[Begin 
of
 (lambda singleton x9 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x7 x9)) X1915^9 int
"
"24________________________[+[Begin 
ofType singleton _ int
"
"24------------------------]-]Success  
ofType singleton _ int
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x7 x9)) (X1916^9 x9) int
"
"25_________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x7 x9)) X1917^10 int
"
"26__________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X1918^10 X1917^10) int
"
"27___________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X1919^10 int
"
"28____________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X1920^10 X1919^10) int
"
"29_____________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X1921^10 int
"
"30______________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X1922^10 int
"
"31_______________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X1923^10
 int
"
"32________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X1924^10 X1923^10) int
"
"33_________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X1925^10 int
"
"34__________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X1926^10 int
"
"35___________________________________[+[Begin 
of (k_propId singleton) X1927^10 int
"
"35-----------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x10 \
   forall singleton x11 \
    implies (propId singleton x10 x11)
     (forall singleton x12 \
       forall singleton x13 \
        implies (propId singleton x12 x13)
         (implies (propId singleton x10 x12) (propId singleton x11 x13))))
 int
"
"35___________________________________[+[Begin 
conv
 (forall singleton x10 \
   forall singleton x11 \
    implies (propId singleton x10 x11)
     (forall singleton x12 \
       forall singleton x13 \
        implies (propId singleton x12 x13)
         (implies (propId singleton x10 x12) (propId singleton x11 x13))))
 (forall X1928^10 X1929^10)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x10 \
   forall singleton x11 \
    implies (propId singleton x10 x11)
     (forall singleton x12 \
       forall singleton x13 \
        implies (propId singleton x12 x13)
         (implies (propId singleton x10 x12) (propId singleton x11 x13))))
 (forall singleton x10 \
   forall singleton x11 \
    implies (propId singleton x10 x11)
     (forall singleton x12 \
       forall singleton x13 \
        implies (propId singleton x12 x13)
         (implies (propId singleton x10 x12) (propId singleton x11 x13))))
"
"35___________________________________[+[Begin 
of star X1930^10 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x10 \
   implies (propId singleton star x10)
    (forall singleton x11 \
      forall singleton x12 \
       implies (propId singleton x11 x12)
        (implies (propId singleton star x11) (propId singleton x10 x12))))
 int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x10 \
   implies (propId singleton star x10)
    (forall singleton x11 \
      forall singleton x12 \
       implies (propId singleton x11 x12)
        (implies (propId singleton star x11) (propId singleton x10 x12))))
 (forall X1931^10 X1932^10)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x10 \
   implies (propId singleton star x10)
    (forall singleton x11 \
      forall singleton x12 \
       implies (propId singleton x11 x12)
        (implies (propId singleton star x11) (propId singleton x10 x12))))
 (forall singleton x10 \
   implies (propId singleton star x10)
    (forall singleton x11 \
      forall singleton x12 \
       implies (propId singleton x11 x12)
        (implies (propId singleton star x11) (propId singleton x10 x12))))
"
"34__________________________________[+[Begin 
of star X1933^10 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x10 \
     forall singleton x11 \
      implies (propId singleton x10 x11)
       (implies (propId singleton star x10) (propId singleton star x11))))
 int
"
"33_________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x10 \
     forall singleton x11 \
      implies (propId singleton x10 x11)
       (implies (propId singleton star x10) (propId singleton star x11))))
 (implies X1924^10 X1923^10)
"
"33---------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x10 \
     forall singleton x11 \
      implies (propId singleton x10 x11)
       (implies (propId singleton star x10) (propId singleton star x11))))
 (implies (propId singleton star star)
   (forall singleton x10 \
     forall singleton x11 \
      implies (propId singleton x10 x11)
       (implies (propId singleton star x10) (propId singleton star x11))))
"
"32--------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x10 \
     forall singleton x11 \
      implies (propId singleton x10 x11)
       (implies (propId singleton star x10) (propId singleton star x11))))
 int
"
"32________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"33_________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X1934^10 int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"33---------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"33_________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"33---------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"32--------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"31-------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x10 \
   forall singleton x11 \
    implies (propId singleton x10 x11)
     (implies (propId singleton star x10) (propId singleton star x11))) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x10 \
   forall singleton x11 \
    implies (propId singleton x10 x11)
     (implies (propId singleton star x10) (propId singleton star x11)))
 (forall X1935^10 X1936^10)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x10 \
   forall singleton x11 \
    implies (propId singleton x10 x11)
     (implies (propId singleton star x10) (propId singleton star x11)))
 (forall singleton x10 \
   forall singleton x11 \
    implies (propId singleton x10 x11)
     (implies (propId singleton star x10) (propId singleton star x11)))
"
"31_______________________________[+[Begin 
of x0 X1937^10 int
"
"31-------------------------------]-]Success  
of x0 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x10 \
   implies (propId singleton x0 x10)
    (implies (propId singleton star x0) (propId singleton star x10))) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x10 \
   implies (propId singleton x0 x10)
    (implies (propId singleton star x0) (propId singleton star x10)))
 (forall X1938^10 X1939^10)
"
"30------------------------------]-]Success  
conv
 (forall singleton x10 \
   implies (propId singleton x0 x10)
    (implies (propId singleton star x0) (propId singleton star x10)))
 (forall singleton x10 \
   implies (propId singleton x0 x10)
    (implies (propId singleton star x0) (propId singleton star x10)))
"
"30______________________________[+[Begin 
of star X1940^10 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"29_____________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X1920^10 X1919^10)
"
"29-----------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"28----------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"28____________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"29_____________________________[+[Begin 
of x1 X1941^10 int
"
"29-----------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"29_____________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"29-----------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"28----------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"27---------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"27___________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X1918^10 X1917^10)
"
"27---------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"26--------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"26__________________________[+[Begin 
isa (app x7 x9) (propId singleton star x0) int
"
"27___________________________[+[Begin 
of (app x7 x9) X1942^10 int
"
"28____________________________[+[Begin 
of x7 (setPi X1943^10 X1944^10) int
"
"28----------------------------]-]Success  
of x7 (setPi singleton x10 \ propId singleton star x0) int
"
"28____________________________[+[Begin 
isa x9 singleton int
"
"29_____________________________[+[Begin 
of x9 X1945^10 int
"
"29-----------------------------]-]Success  
of x9 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
isa x9 singleton int
"
"27---------------------------]-]Success  
of (app x7 x9) (propId singleton star x0) int
"
"27___________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"27---------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"26--------------------------]-]Success  
isa (app x7 x9) (propId singleton star x0) int
"
"25-------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x7 x9)) (propId singleton star star) int
"
"25_________________________[+[Begin 
conv (propId singleton star star) (X1916^9 x9)
"
"25-------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x7 x9)) (propId singleton star star) int
"
"23-----------------------]-]Success  
of
 (lambda singleton x9 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x7 x9))
 (setPi singleton x9 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv (setPi singleton x9 \ propId singleton star star)
 (setPi singleton x9 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv (setPi singleton x9 \ propId singleton star star)
 (setPi singleton x9 \ propId singleton star star)
"
"23_______________________[+[Begin 
of
 (forall_lam singleton x9 \
   forall_lam singleton x10 \
    forall_lam (propId singleton x9 x10) x11 \
     forall_app (forall_app (forall_app x8 x9) x10) x11) X1946^9 int
"
"24________________________[+[Begin 
of
 (forall_lam singleton x10 \
   forall_lam (propId singleton x9 x10) x11 \
    forall_app (forall_app (forall_app x8 x9) x10) x11) X1947^10 int
"
"25_________________________[+[Begin 
of
 (forall_lam (propId singleton x9 x10) x11 \
   forall_app (forall_app (forall_app x8 x9) x10) x11) X1948^11 int
"
"26__________________________[+[Begin 
of x9 X1949^11 int
"
"26--------------------------]-]Success  
of x9 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x10 X1950^11 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1951^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
of (forall_app (forall_app (forall_app x8 x9) x10) x11) X1952^12 int
"
"27___________________________[+[Begin 
of (forall_app (forall_app x8 x9) x10) X1953^12 int
"
"28____________________________[+[Begin 
of (forall_app x8 x9) X1954^12 int
"
"29_____________________________[+[Begin 
of x8 X1955^12 int
"
"29-----------------------------]-]Success  
of x8
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall X1956^12 X1957^12)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of x9 X1958^12 int
"
"29-----------------------------]-]Success  
of x9 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
of (forall_app x8 x9)
 (forall singleton x12 \
   forall (propId singleton x9 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x9 x12) x13 \ propId singleton star star)
 (forall X1959^12 X1960^12)
"
"28----------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x9 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x9 x12) x13 \ propId singleton star star)
"
"28____________________________[+[Begin 
of x10 X1961^12 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"27---------------------------]-]Success  
of (forall_app (forall_app x8 x9) x10)
 (forall (propId singleton x9 x10) x12 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv (forall (propId singleton x9 x10) x12 \ propId singleton star star)
 (forall X1962^12 X1963^12)
"
"27---------------------------]-]Success  
conv (forall (propId singleton x9 x10) x12 \ propId singleton star star)
 (forall (propId singleton x9 x10) x12 \ propId singleton star star)
"
"27___________________________[+[Begin 
of x11 X1964^12 int
"
"27---------------------------]-]Success  
of x11 (propId singleton x9 x10) int
"
"27___________________________[+[Begin 
conv (propId singleton x9 x10) (propId singleton x9 x10)
"
"27---------------------------]-]Success  
conv (propId singleton x9 x10) (propId singleton x9 x10)
"
"26--------------------------]-]Success  
of (forall_app (forall_app (forall_app x8 x9) x10) x11)
 (propId singleton star star) int
"
"26__________________________[+[Begin 
conv (propId singleton star star) (X1965^11 x11)
"
"26--------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"25-------------------------]-]Success  
of
 (forall_lam (propId singleton x9 x10) x11 \
   forall_app (forall_app (forall_app x8 x9) x10) x11)
 (forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (X1966^10 x10)
"
"25-------------------------]-]Success  
conv (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"24------------------------]-]Success  
of
 (forall_lam singleton x10 \
   forall_lam (propId singleton x9 x10) x11 \
    forall_app (forall_app (forall_app x8 x9) x10) x11)
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (X1967^9 x9)
"
"24------------------------]-]Success  
conv
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"23-----------------------]-]Success  
of
 (forall_lam singleton x9 \
   forall_lam singleton x10 \
    forall_lam (propId singleton x9 x10) x11 \
     forall_app (forall_app (forall_app x8 x9) x10) x11)
 (forall singleton x9 \
   forall singleton x10 \
    forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (forall singleton x9 \
   forall singleton x10 \
    forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (forall singleton x9 \
   forall singleton x10 \
    forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (forall singleton x9 \
   forall singleton x10 \
    forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (forall singleton x9 \
   forall singleton x10 \
    forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"22----------------------]-]Success  
of
 (pair (setPi singleton x9 \ propId singleton star star) (x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
   (lambda singleton x9 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x7 x9))
   (forall_lam singleton x9 \
     forall_lam singleton x10 \
      forall_lam (propId singleton x9 x10) x11 \
       forall_app (forall_app (forall_app x8 x9) x10) x11))
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"21---------------------]-]Success  
pi x7 \
 pi x8 \
  locDecl x7 (setPi singleton x9 \ propId singleton star x0) =>
   locDecl x8
    (forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x9 \ propId singleton star star) (x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
       (lambda singleton x9 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x7 x9))
       (forall_lam singleton x9 \
         forall_lam singleton x10 \
          forall_lam (propId singleton x9 x10) x11 \
           forall_app (forall_app (forall_app x8 x9) x10) x11))
     (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     int
"
"20--------------------]-]Success  
of
 (elim_setSigma x6 (x7 \
   setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) x7 \
   x8 \
   pair (setPi singleton x9 \ propId singleton star star) (x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
    (lambda singleton x9 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x7 x9))
    (forall_lam singleton x9 \
      forall_lam singleton x10 \
       forall_lam (propId singleton x9 x10) x11 \
        forall_app (forall_app (forall_app x8 x9) x10) x11))
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"19-------------------]-]Success  
isa
 (elim_setSigma x6 (x7 \
   setSigma (setPi singleton x8 \ propId singleton star star) x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star) x7 \
   x8 \
   pair (setPi singleton x9 \ propId singleton star star) (x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
    (lambda singleton x9 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x7 x9))
    (forall_lam singleton x9 \
      forall_lam singleton x10 \
       forall_lam (propId singleton x9 x10) x11 \
        forall_app (forall_app (forall_app x8 x9) x10) x11))
 (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"18------------------]-]Success  
of
 (app x4
   (elim_setSigma x6 (x7 \
     setSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x7 \ x8 \
     pair (setPi singleton x9 \ propId singleton star star) (x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
      (lambda singleton x9 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x7 x9))
      (forall_lam singleton x9 \
        forall_lam singleton x10 \
         forall_lam (propId singleton x9 x10) x11 \
          forall_app (forall_app (forall_app x8 x9) x10) x11))) singleton int
"
"18__________________[+[Begin 
conv singleton (X1877^6 x6)
"
"18------------------]-]Success  
conv singleton singleton
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6
  (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isa
   (app x4
     (elim_setSigma x6 (x7 \
       setSigma (setPi singleton x8 \ propId singleton star star) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x7 \ x8 \
       pair (setPi singleton x9 \ propId singleton star star) (x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
        (lambda singleton x9 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1) (app x7 x9))
        (forall_lam singleton x9 \
          forall_lam singleton x10 \
           forall_lam (propId singleton x9 x10) x11 \
            forall_app (forall_app (forall_app x8 x9) x10) x11))) singleton
   int
"
"16----------------]-]Success  
of
 (lambda
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   app x4
    (elim_setSigma x6 (x7 \
      setSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x7 \ x8 \
      pair (setPi singleton x9 \ propId singleton star star) (x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
       (lambda singleton x9 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x7 x9))
       (forall_lam singleton x9 \
         forall_lam singleton x10 \
          forall_lam (propId singleton x9 x10) x11 \
           forall_app (forall_app (forall_app x8 x9) x10) x11)))
 (setPi
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton) int
"
"16________________[+[Begin 
conv
 (setPi
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton)
 (setPi
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton)
"
"16----------------]-]Success  
conv
 (setPi
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton)
 (setPi
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton)
"
"16________________[+[Begin 
of
 (forall_lam
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall_lam
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall_lam (forall singleton x8 \ propId singleton star star) x8 \
     forall_app
      (forall_app
        (forall_app x5
          (elim_setSigma x6 (x9 \
            setSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13)))
        (elim_setSigma x7 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (forall_lam singleton x9 \ forall_app x8 x9)) X1968^6 int
"
"17_________________[+[Begin 
ofType (setPi singleton x6 \ propId singleton star x0) X1969^6 int
"
"18__________________[+[Begin 
of star X1970^7 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of x0 X1971^7 int
"
"18------------------]-]Success  
of x0 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1972^6 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18__________________[+[Begin 
pts_fun set props X1969^6
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"18------------------]-]Success  
pts_fun set props set
"
"17-----------------]-]Success  
ofType (setPi singleton x6 \ propId singleton star x0) set int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1973^6 int
"
"18__________________[+[Begin 
ofType singleton X1974^7 int
"
"18------------------]-]Success  
ofType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1975^7 int)
"
"19___________________[+[Begin 
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1975^7
 int
"
"20____________________[+[Begin 
ofType singleton X1976^8 int
"
"20--------------------]-]Success  
ofType singleton set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1977^8 int)
"
"21_____________________[+[Begin 
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1977^8 int
"
"22______________________[+[Begin 
ofType (propId singleton x7 x8) X1978^9 int
"
"23_______________________[+[Begin 
of x7 X1979^9 int
"
"23-----------------------]-]Success  
of x7 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of x8 X1980^9 int
"
"23-----------------------]-]Success  
of x8 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1978^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
ofType (propId singleton x7 x8) props int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) X1981^9 int)
"
"23_______________________[+[Begin 
ofType (propId singleton star star) X1981^9 int
"
"24________________________[+[Begin 
of star X1982^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X1983^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1981^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton star star) props int
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (ofType (propId singleton star star) props int)
"
"22______________________[+[Begin 
pts_for props props X1977^8
"
"22----------------------]-]Success  
pts_for props props props
"
"21---------------------]-]Success  
ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"20____________________[+[Begin 
pts_for set props X1975^7
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
ofType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (ofType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"18__________________[+[Begin 
pts_for set props X1973^6
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  ofType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"17_________________[+[Begin 
of
 (forall_lam
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall_lam (forall singleton x8 \ propId singleton star star) x8 \
    forall_app
     (forall_app
       (forall_app x5
         (elim_setSigma x6 (x9 \
           setSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13)))
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (forall_lam singleton x9 \ forall_app x8 x9)) X1984^7 int
"
"18__________________[+[Begin 
ofType (setPi singleton x7 \ propId singleton star x0) X1985^7 int
"
"19___________________[+[Begin 
of star X1986^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x0 X1987^8 int
"
"19-------------------]-]Success  
of x0 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1988^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19___________________[+[Begin 
pts_fun set props X1985^7
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"19-------------------]-]Success  
pts_fun set props set
"
"18------------------]-]Success  
ofType (setPi singleton x7 \ propId singleton star x0) set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1989^7 int
"
"19___________________[+[Begin 
ofType singleton X1990^8 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1991^8 int)
"
"20____________________[+[Begin 
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1991^8
 int
"
"21_____________________[+[Begin 
ofType singleton X1992^9 int
"
"21---------------------]-]Success  
ofType singleton set int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1993^9 int)
"
"22______________________[+[Begin 
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1993^9 int
"
"23_______________________[+[Begin 
ofType (propId singleton x8 x9) X1994^10 int
"
"24________________________[+[Begin 
of x8 X1995^10 int
"
"24------------------------]-]Success  
of x8 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of x9 X1996^10 int
"
"24------------------------]-]Success  
of x9 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1994^10 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
ofType (propId singleton x8 x9) props int
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) X1997^10 int)
"
"24________________________[+[Begin 
ofType (propId singleton star star) X1997^10 int
"
"25_________________________[+[Begin 
of star X1998^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X1999^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1997^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
ofType (propId singleton star star) props int
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (ofType (propId singleton star star) props int)
"
"23_______________________[+[Begin 
pts_for props props X1993^9
"
"23-----------------------]-]Success  
pts_for props props props
"
"22----------------------]-]Success  
ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (ofType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X1991^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
ofType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (ofType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1989^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  ofType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   int
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"18__________________[+[Begin 
of
 (forall_lam (forall singleton x8 \ propId singleton star star) x8 \
   forall_app
    (forall_app
      (forall_app x5
        (elim_setSigma x6 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (forall_lam singleton x9 \ forall_app x8 x9)) X2000^8 int
"
"19___________________[+[Begin 
ofType singleton X2001^8 int
"
"19-------------------]-]Success  
ofType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy (ofType (propId singleton star star) X2002^8 int)
"
"20____________________[+[Begin 
ofType (propId singleton star star) X2002^8 int
"
"21_____________________[+[Begin 
of star X2003^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X2004^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X2002^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
ofType (propId singleton star star) props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton => spy (ofType (propId singleton star star) props int)
"
"19___________________[+[Begin 
pts_for set props X2005^8
"
"19-------------------]-]Success  
pts_for set props props
"
"19___________________[+[Begin 
of
 (forall_app
   (forall_app
     (forall_app x5
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (forall_lam singleton x9 \ forall_app x8 x9)) X2006^9 int
"
"20____________________[+[Begin 
of
 (forall_app
   (forall_app x5
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) X2007^9 int
"
"21_____________________[+[Begin 
of
 (forall_app x5
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) X2008^9 int
"
"22______________________[+[Begin 
of x5 X2009^9 int
"
"22----------------------]-]Success  
of x5
 (forall
   (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   forall
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    x10 \
    forall (forall singleton x11 \ propId singleton star star) x11 \
     propId singleton (app x4 x9) (app x4 x10)) int
"
"22______________________[+[Begin 
conv
 (forall
   (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   forall
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    x10 \
    forall (forall singleton x11 \ propId singleton star star) x11 \
     propId singleton (app x4 x9) (app x4 x10)) (forall X2010^9 X2011^9)
"
"22----------------------]-]Success  
conv
 (forall
   (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   forall
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    x10 \
    forall (forall singleton x11 \ propId singleton star star) x11 \
     propId singleton (app x4 x9) (app x4 x10))
 (forall
   (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   forall
    (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    x10 \
    forall (forall singleton x11 \ propId singleton star star) x11 \
     propId singleton (app x4 x9) (app x4 x10))
"
"22______________________[+[Begin 
of
 (elim_setSigma x6 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X2012^9 int
"
"23_______________________[+[Begin 
of x6 (setSigma X2013^9 X2014^9) int
"
"23-----------------------]-]Success  
of x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"24________________________[+[Begin 
ofType (setPi singleton x10 \ propId singleton star star) X2015^10 int
"
"25_________________________[+[Begin 
of star X2016^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X2017^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X2018^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
pts_fun set props X2015^10
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pts_fun set props set
"
"24------------------------]-]Success  
ofType (setPi singleton x10 \ propId singleton star star) set int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X2019^10 int
"
"25_________________________[+[Begin 
ofType singleton X2020^11 int
"
"25-------------------------]-]Success  
ofType singleton set int
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2021^11 int)
"
"26__________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2021^11 int
"
"27___________________________[+[Begin 
ofType singleton X2022^12 int
"
"27---------------------------]-]Success  
ofType singleton set int
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2023^12 int)
"
"28____________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2023^12 int
"
"29_____________________________[+[Begin 
ofType (propId singleton x11 x12) X2024^13 int
"
"30______________________________[+[Begin 
of x11 X2025^13 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x12 X2026^13 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2024^13 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton x11 x12) props int
"
"29_____________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2027^13 int)
"
"30______________________________[+[Begin 
ofType (propId singleton star star) X2027^13 int
"
"31_______________________________[+[Begin 
of star X2028^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of star X2029^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2027^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"29-----------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props int)
"
"29_____________________________[+[Begin 
pts_for props props X2023^12
"
"29-----------------------------]-]Success  
pts_for props props props
"
"28----------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X2021^11
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X2019^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props int
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"23_______________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"24________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X2030^11 int
"
"25_________________________[+[Begin 
of star X2031^12 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X2032^12 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X2033^11 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
pts_fun set props X2034^11
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pts_fun set props set
"
"25_________________________[+[Begin 
ofType singleton X2035^11 int
"
"25-------------------------]-]Success  
ofType singleton set int
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2036^11 int)
"
"26__________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2036^11 int
"
"27___________________________[+[Begin 
ofType singleton X2037^12 int
"
"27---------------------------]-]Success  
ofType singleton set int
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2038^12 int)
"
"28____________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2038^12 int
"
"29_____________________________[+[Begin 
ofType (propId singleton x11 x12) X2039^13 int
"
"30______________________________[+[Begin 
of x11 X2040^13 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x12 X2041^13 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2039^13 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton x11 x12) props int
"
"29_____________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2042^13 int)
"
"30______________________________[+[Begin 
ofType (propId singleton star star) X2042^13 int
"
"31_______________________________[+[Begin 
of star X2043^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of star X2044^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2042^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"29-----------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props int)
"
"29_____________________________[+[Begin 
pts_for props props X2038^12
"
"29-----------------------------]-]Success  
pts_for props props props
"
"28----------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X2036^11
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X2045^11
"
"25-------------------------]-]Success  
pts_for set props props
"
"25_________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11)) X2046^11 int
"
"26__________________________[+[Begin 
ofType singleton _ int
"
"26--------------------------]-]Success  
ofType singleton _ int
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (X2047^11 x11) int
"
"27___________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) X2048^12 int
"
"28____________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X2049^12 X2048^12) int
"
"29_____________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X2050^12 int
"
"30______________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X2051^12 X2050^12) int
"
"31_______________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X2052^12 int
"
"32________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X2053^12 int
"
"33_________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X2054^12
 int
"
"34__________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2055^12 X2054^12) int
"
"35___________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2056^12 int
"
"36____________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2057^12 int
"
"37_____________________________________[+[Begin 
of (k_propId singleton) X2058^12 int
"
"37-------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 int
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X2059^12 X2060^12)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"37_____________________________________[+[Begin 
of star X2061^12 int
"
"37-------------------------------------]-]Success  
of star singleton int
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 int
"
"36____________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X2062^12 X2063^12)
"
"36------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"36____________________________________[+[Begin 
of star X2064^12 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"35___________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X2055^12 X2054^12)
"
"35-----------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"34----------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"34__________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"35___________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X2065^12 int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"35-----------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"35___________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"35-----------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"34----------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"33---------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X2066^12 X2067^12)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"33_________________________________[+[Begin 
of x0 X2068^12 int
"
"33---------------------------------]-]Success  
of x0 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X2069^12 X2070^12)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"32________________________________[+[Begin 
of star X2071^12 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"31_______________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2051^12 X2050^12)
"
"31-------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"30------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"30______________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"31_______________________________[+[Begin 
of x1 X2072^12 int
"
"31-------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"31_______________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"31-------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"30------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"29-----------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"29_____________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2049^12 X2048^12)
"
"29-----------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"28----------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"28____________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"29_____________________________[+[Begin 
of (app x9 x11) X2073^12 int
"
"30______________________________[+[Begin 
of x9 (setPi X2074^12 X2075^12) int
"
"30------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"30______________________________[+[Begin 
isa x11 singleton int
"
"31_______________________________[+[Begin 
of x11 X2076^12 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
isa x11 singleton int
"
"29-----------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"29_____________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"29-----------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"28----------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"27---------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) (propId singleton star star) int
"
"27___________________________[+[Begin 
conv (propId singleton star star) (X2047^11 x11)
"
"27---------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (propId singleton star star) int
"
"25-------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11))
 (setPi singleton x11 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"25_________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X2077^11 int
"
"26__________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X2078^12 int
"
"27___________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X2079^13 int
"
"28____________________________[+[Begin 
of x11 X2080^13 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x12 X2081^13 int
"
"28----------------------------]-]Success  
of x12 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2082^13 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28____________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X2083^14 int
"
"29_____________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X2084^14 int
"
"30______________________________[+[Begin 
of (forall_app x10 x11) X2085^14 int
"
"31_______________________________[+[Begin 
of x10 X2086^14 int
"
"31-------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X2087^14 X2088^14)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x11 X2089^14 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X2090^14 X2091^14)
"
"30------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"30______________________________[+[Begin 
of x12 X2092^14 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X2093^14 X2094^14)
"
"29-----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of x13 X2095^14 int
"
"29-----------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"29_____________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"29-----------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"28----------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"28____________________________[+[Begin 
conv (propId singleton star star) (X2096^13 x13)
"
"28----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2097^12 x12)
"
"27---------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2098^11 x11)
"
"26--------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"24------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"24------------------------]-]Success  
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"23-----------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"22----------------------]-]Success  
of
 (elim_setSigma x6 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"21---------------------]-]Success  
of
 (forall_app x5
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (forall
   (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   forall (forall singleton x10 \ propId singleton star star) x10 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x11 \
         setSigma (setPi singleton x12 \ propId singleton star star) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x11 \ x12 \
         pair (setPi singleton x13 \ propId singleton star star) (x13 \
          forall singleton x14 \
           forall singleton x15 \
            forall (propId singleton x14 x15) x16 \
             propId singleton star star)
          (lambda singleton x13 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x11 x13))
          (forall_lam singleton x13 \
            forall_lam singleton x14 \
             forall_lam (propId singleton x13 x14) x15 \
              forall_app (forall_app (forall_app x12 x13) x14) x15)))
     (app x4 x9)) int
"
"21_____________________[+[Begin 
conv
 (forall
   (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   forall (forall singleton x10 \ propId singleton star star) x10 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x11 \
         setSigma (setPi singleton x12 \ propId singleton star star) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x11 \ x12 \
         pair (setPi singleton x13 \ propId singleton star star) (x13 \
          forall singleton x14 \
           forall singleton x15 \
            forall (propId singleton x14 x15) x16 \
             propId singleton star star)
          (lambda singleton x13 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x11 x13))
          (forall_lam singleton x13 \
            forall_lam singleton x14 \
             forall_lam (propId singleton x13 x14) x15 \
              forall_app (forall_app (forall_app x12 x13) x14) x15)))
     (app x4 x9)) (forall X2099^9 X2100^9)
"
"21---------------------]-]Success  
conv
 (forall
   (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   forall (forall singleton x10 \ propId singleton star star) x10 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x11 \
         setSigma (setPi singleton x12 \ propId singleton star star) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x11 \ x12 \
         pair (setPi singleton x13 \ propId singleton star star) (x13 \
          forall singleton x14 \
           forall singleton x15 \
            forall (propId singleton x14 x15) x16 \
             propId singleton star star)
          (lambda singleton x13 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x11 x13))
          (forall_lam singleton x13 \
            forall_lam singleton x14 \
             forall_lam (propId singleton x13 x14) x15 \
              forall_app (forall_app (forall_app x12 x13) x14) x15)))
     (app x4 x9))
 (forall
   (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \
   forall (forall singleton x10 \ propId singleton star star) x10 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x11 \
         setSigma (setPi singleton x12 \ propId singleton star star) x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star) x11 \ x12 \
         pair (setPi singleton x13 \ propId singleton star star) (x13 \
          forall singleton x14 \
           forall singleton x15 \
            forall (propId singleton x14 x15) x16 \
             propId singleton star star)
          (lambda singleton x13 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x11 x13))
          (forall_lam singleton x13 \
            forall_lam singleton x14 \
             forall_lam (propId singleton x13 x14) x15 \
              forall_app (forall_app (forall_app x12 x13) x14) x15)))
     (app x4 x9))
"
"21_____________________[+[Begin 
of
 (elim_setSigma x7 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X2101^9 int
"
"22______________________[+[Begin 
of x7 (setSigma X2102^9 X2103^9) int
"
"22----------------------]-]Success  
of x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"23_______________________[+[Begin 
ofType (setPi singleton x10 \ propId singleton star star) X2104^10 int
"
"24________________________[+[Begin 
of star X2105^11 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X2106^11 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X2107^10 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
pts_fun set props X2104^10
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pts_fun set props set
"
"23-----------------------]-]Success  
ofType (setPi singleton x10 \ propId singleton star star) set int
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X2108^10 int
"
"24________________________[+[Begin 
ofType singleton X2109^11 int
"
"24------------------------]-]Success  
ofType singleton set int
"
"24________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2110^11 int)
"
"25_________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2110^11 int
"
"26__________________________[+[Begin 
ofType singleton X2111^12 int
"
"26--------------------------]-]Success  
ofType singleton set int
"
"26__________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2112^12 int)
"
"27___________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2112^12 int
"
"28____________________________[+[Begin 
ofType (propId singleton x11 x12) X2113^13 int
"
"29_____________________________[+[Begin 
of x11 X2114^13 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x12 X2115^13 int
"
"29-----------------------------]-]Success  
of x12 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2113^13 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton x11 x12) props int
"
"28____________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2116^13 int)
"
"29_____________________________[+[Begin 
ofType (propId singleton star star) X2116^13 int
"
"30______________________________[+[Begin 
of star X2117^14 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X2118^14 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2116^13 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton star star) props int
"
"28----------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props int)
"
"28____________________________[+[Begin 
pts_for props props X2112^12
"
"28----------------------------]-]Success  
pts_for props props props
"
"27---------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"26--------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"26__________________________[+[Begin 
pts_for set props X2110^11
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"24------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"24________________________[+[Begin 
pts_for set props X2108^10
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props int
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"22______________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"23_______________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X2119^11 int
"
"24________________________[+[Begin 
of star X2120^12 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X2121^12 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X2122^11 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
pts_fun set props X2123^11
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pts_fun set props set
"
"24________________________[+[Begin 
ofType singleton X2124^11 int
"
"24------------------------]-]Success  
ofType singleton set int
"
"24________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2125^11 int)
"
"25_________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2125^11 int
"
"26__________________________[+[Begin 
ofType singleton X2126^12 int
"
"26--------------------------]-]Success  
ofType singleton set int
"
"26__________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2127^12 int)
"
"27___________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2127^12 int
"
"28____________________________[+[Begin 
ofType (propId singleton x11 x12) X2128^13 int
"
"29_____________________________[+[Begin 
of x11 X2129^13 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x12 X2130^13 int
"
"29-----------------------------]-]Success  
of x12 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2128^13 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton x11 x12) props int
"
"28____________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2131^13 int)
"
"29_____________________________[+[Begin 
ofType (propId singleton star star) X2131^13 int
"
"30______________________________[+[Begin 
of star X2132^14 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X2133^14 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2131^13 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton star star) props int
"
"28----------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props int)
"
"28____________________________[+[Begin 
pts_for props props X2127^12
"
"28----------------------------]-]Success  
pts_for props props props
"
"27---------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"26--------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"26__________________________[+[Begin 
pts_for set props X2125^11
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"24------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"24________________________[+[Begin 
pts_for set props X2134^11
"
"24------------------------]-]Success  
pts_for set props props
"
"24________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11)) X2135^11 int
"
"25_________________________[+[Begin 
ofType singleton _ int
"
"25-------------------------]-]Success  
ofType singleton _ int
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (X2136^11 x11) int
"
"26__________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) X2137^12 int
"
"27___________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X2138^12 X2137^12) int
"
"28____________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X2139^12 int
"
"29_____________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X2140^12 X2139^12) int
"
"30______________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X2141^12 int
"
"31_______________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X2142^12 int
"
"32________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X2143^12
 int
"
"33_________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2144^12 X2143^12) int
"
"34__________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2145^12 int
"
"35___________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2146^12 int
"
"36____________________________________[+[Begin 
of (k_propId singleton) X2147^12 int
"
"36------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 int
"
"36____________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X2148^12 X2149^12)
"
"36------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"36____________________________________[+[Begin 
of star X2150^12 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 int
"
"35___________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X2151^12 X2152^12)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"35___________________________________[+[Begin 
of star X2153^12 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"34__________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X2144^12 X2143^12)
"
"34----------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"33---------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"33_________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"34__________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X2154^12 int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"34----------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"34__________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"34----------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"33---------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"32--------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X2155^12 X2156^12)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"32________________________________[+[Begin 
of x0 X2157^12 int
"
"32--------------------------------]-]Success  
of x0 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X2158^12 X2159^12)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"31_______________________________[+[Begin 
of star X2160^12 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"30______________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2140^12 X2139^12)
"
"30------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"29-----------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"29_____________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"30______________________________[+[Begin 
of x1 X2161^12 int
"
"30------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"30______________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"30------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"29-----------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"28----------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"28____________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2138^12 X2137^12)
"
"28----------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"27---------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"27___________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"28____________________________[+[Begin 
of (app x9 x11) X2162^12 int
"
"29_____________________________[+[Begin 
of x9 (setPi X2163^12 X2164^12) int
"
"29-----------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"29_____________________________[+[Begin 
isa x11 singleton int
"
"30______________________________[+[Begin 
of x11 X2165^12 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
isa x11 singleton int
"
"28----------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"28____________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"28----------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"27---------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"26--------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) (propId singleton star star) int
"
"26__________________________[+[Begin 
conv (propId singleton star star) (X2136^11 x11)
"
"26--------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (propId singleton star star) int
"
"24------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11))
 (setPi singleton x11 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"24------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"24________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X2166^11 int
"
"25_________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X2167^12 int
"
"26__________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X2168^13 int
"
"27___________________________[+[Begin 
of x11 X2169^13 int
"
"27---------------------------]-]Success  
of x11 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of x12 X2170^13 int
"
"27---------------------------]-]Success  
of x12 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X2171^13 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27___________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X2172^14 int
"
"28____________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X2173^14 int
"
"29_____________________________[+[Begin 
of (forall_app x10 x11) X2174^14 int
"
"30______________________________[+[Begin 
of x10 X2175^14 int
"
"30------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X2176^14 X2177^14)
"
"30------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"30______________________________[+[Begin 
of x11 X2178^14 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X2179^14 X2180^14)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of x12 X2181^14 int
"
"29-----------------------------]-]Success  
of x12 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X2182^14 X2183^14)
"
"28----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"28____________________________[+[Begin 
of x13 X2184^14 int
"
"28----------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"28____________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"28----------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"27---------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"27___________________________[+[Begin 
conv (propId singleton star star) (X2185^13 x13)
"
"27---------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"26--------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2186^12 x12)
"
"26--------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2187^11 x11)
"
"25-------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"24------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"24------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"23-----------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"22----------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"21---------------------]-]Success  
of
 (elim_setSigma x7 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"21---------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"20--------------------]-]Success  
of
 (forall_app
   (forall_app x5
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (forall (forall singleton x9 \ propId singleton star star) x9 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14)))
    (app x4
      (elim_setSigma x7 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14)))) int
"
"20____________________[+[Begin 
conv
 (forall (forall singleton x9 \ propId singleton star star) x9 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14)))
    (app x4
      (elim_setSigma x7 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))))
 (forall X2188^9 X2189^9)
"
"20--------------------]-]Success  
conv
 (forall (forall singleton x9 \ propId singleton star star) x9 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14)))
    (app x4
      (elim_setSigma x7 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))))
 (forall (forall singleton x9 \ propId singleton star star) x9 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14)))
    (app x4
      (elim_setSigma x7 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))))
"
"20____________________[+[Begin 
of (forall_lam singleton x9 \ forall_app x8 x9) X2190^9 int
"
"21_____________________[+[Begin 
of (forall_app x8 x9) X2191^10 int
"
"22______________________[+[Begin 
of x8 X2192^10 int
"
"22----------------------]-]Success  
of x8 (forall singleton x10 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv (forall singleton x10 \ propId singleton star star)
 (forall X2193^10 X2194^10)
"
"22----------------------]-]Success  
conv (forall singleton x10 \ propId singleton star star)
 (forall singleton x10 \ propId singleton star star)
"
"22______________________[+[Begin 
of x9 X2195^10 int
"
"22----------------------]-]Success  
of x9 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"21---------------------]-]Success  
of (forall_app x8 x9) (propId singleton star star) int
"
"21_____________________[+[Begin 
conv (propId singleton star star) (X2196^9 x9)
"
"21---------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"20--------------------]-]Success  
of (forall_lam singleton x9 \ forall_app x8 x9)
 (forall singleton x9 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv (forall singleton x9 \ propId singleton star star)
 (forall singleton x9 \ propId singleton star star)
"
"20--------------------]-]Success  
conv (forall singleton x9 \ propId singleton star star)
 (forall singleton x9 \ propId singleton star star)
"
"19-------------------]-]Success  
of
 (forall_app
   (forall_app
     (forall_app x5
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (forall_lam singleton x9 \ forall_app x8 x9))
 (propId singleton
   (app x4
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (app x4
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))) int
"
"19___________________[+[Begin 
conv
 (propId singleton
   (app x4
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (app x4
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (X2197^8 x8)
"
"19-------------------]-]Success  
conv
 (propId singleton
   (app x4
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (app x4
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (propId singleton
   (app x4
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (app x4
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))))
"
"18------------------]-]Success  
of
 (forall_lam (forall singleton x8 \ propId singleton star star) x8 \
   forall_app
    (forall_app
      (forall_app x5
        (elim_setSigma x6 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (forall_lam singleton x9 \ forall_app x8 x9))
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x4
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))) int
"
"18__________________[+[Begin 
conv
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x4
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (X2198^7 x7)
"
"18------------------]-]Success  
conv
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x4
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x4
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))))
"
"17-----------------]-]Success  
of
 (forall_lam
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall_lam (forall singleton x8 \ propId singleton star star) x8 \
    forall_app
     (forall_app
       (forall_app x5
         (elim_setSigma x6 (x9 \
           setSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13)))
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (forall_lam singleton x9 \ forall_app x8 x9))
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (app x4
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))) int
"
"17_________________[+[Begin 
conv
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (app x4
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (X2199^6 x6)
"
"17-----------------]-]Success  
conv
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (app x4
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (app x4
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13))))
"
"16----------------]-]Success  
of
 (forall_lam
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall_lam
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall_lam (forall singleton x8 \ propId singleton star star) x8 \
     forall_app
      (forall_app
        (forall_app x5
          (elim_setSigma x6 (x9 \
            setSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13)))
        (elim_setSigma x7 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (forall_lam singleton x9 \ forall_app x8 x9))
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app x4
        (elim_setSigma x6 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (app x4
        (elim_setSigma x7 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))) int
"
"16________________[+[Begin 
conv
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app x4
        (elim_setSigma x6 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (app x4
        (elim_setSigma x7 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"17_________________[+[Begin 
hnf
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app x4
        (elim_setSigma x6 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (app x4
        (elim_setSigma x7 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))))
 X2200^6
"
"17-----------------]-]Success  
hnf
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app x4
        (elim_setSigma x6 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (app x4
        (elim_setSigma x7 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app x4
        (elim_setSigma x6 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (app x4
        (elim_setSigma x7 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))))
"
"17_________________[+[Begin 
hnf
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 X2201^6
"
"17-----------------]-]Success  
hnf
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"17_________________[+[Begin 
dconv
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app x4
        (elim_setSigma x6 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (app x4
        (elim_setSigma x7 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"18__________________[+[Begin 
hnf
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (app x4
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13))))
 X2202^7
"
"18------------------]-]Success  
hnf
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (app x4
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (app x4
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13))))
"
"18__________________[+[Begin 
hnf
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 X2203^7
"
"18------------------]-]Success  
hnf
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"18__________________[+[Begin 
dconv
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (app x4
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"19___________________[+[Begin 
hnf
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x4
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))) X2204^8
"
"19-------------------]-]Success  
hnf
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x4
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x4
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))))
"
"19___________________[+[Begin 
hnf
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 X2205^8
"
"19-------------------]-]Success  
hnf
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"19___________________[+[Begin 
dconv
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x4
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"20____________________[+[Begin 
hnf
 (propId singleton
   (app x4
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (app x4
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))) X2206^9
"
"20--------------------]-]Success  
hnf
 (propId singleton
   (app x4
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (app x4
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (propId singleton
   (app x4
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (app x4
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))))
"
"20____________________[+[Begin 
hnf
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 X2207^9
"
"20--------------------]-]Success  
hnf
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"20____________________[+[Begin 
dconv
 (propId singleton
   (app x4
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (app x4
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
conv
 (app x4
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
"
"22______________________[+[Begin 
hnf
 (app x4
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) X2208^9
"
"23_______________________[+[Begin 
ofType (setPi singleton x9 \ propId singleton star star) X2209^9 X2210^9
"
"24________________________[+[Begin 
of star X2211^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X2212^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X2213^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
pts_fun set props X2209^9
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pts_fun set props set
"
"23-----------------------]-]Success  
ofType (setPi singleton x9 \ propId singleton star star) set X2210^9
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2214^9 X2210^9
"
"24________________________[+[Begin 
ofType singleton X2215^10 X2210^9
"
"24------------------------]-]Success  
ofType singleton set X2210^9
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2216^10 X2210^9)
"
"25_________________________[+[Begin 
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2216^10 X2210^9
"
"26__________________________[+[Begin 
ofType singleton X2217^11 X2210^9
"
"26--------------------------]-]Success  
ofType singleton set X2210^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2218^11 X2210^9)
"
"27___________________________[+[Begin 
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2218^11 X2210^9
"
"28____________________________[+[Begin 
ofType (propId singleton x10 x11) X2219^12 X2210^9
"
"29_____________________________[+[Begin 
of x10 X2220^12 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x11 X2221^12 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2219^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton x10 x11) props X2210^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) X2222^12 X2210^9)
"
"29_____________________________[+[Begin 
ofType (propId singleton star star) X2222^12 X2210^9
"
"30______________________________[+[Begin 
of star X2223^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X2224^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2222^12 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton star star) props X2210^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) props X2210^9)
"
"28____________________________[+[Begin 
pts_for props props X2218^11
"
"28----------------------------]-]Success  
pts_for props props props
"
"27---------------------------]-]Success  
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2210^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2210^9)
"
"26__________________________[+[Begin 
pts_for set props X2216^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2210^9
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2210^9)
"
"24________________________[+[Begin 
pts_for set props X2214^9
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props X2210^9
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"23_______________________[+[Begin 
of
 (elim_setSigma x6 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X2225^9
 X2210^9
"
"24________________________[+[Begin 
of x6 (setSigma X2226^9 X2227^9) X2210^9
"
"24------------------------]-]Success  
of x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2210^9
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2210^9
"
"25_________________________[+[Begin 
ofType (setPi singleton x10 \ propId singleton star star) X2228^10 X2210^9
"
"26__________________________[+[Begin 
of star X2229^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2230^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2231^10 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2228^10
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"25-------------------------]-]Success  
ofType (setPi singleton x10 \ propId singleton star star) set X2210^9
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X2232^10 X2210^9
"
"26__________________________[+[Begin 
ofType singleton X2233^11 X2210^9
"
"26--------------------------]-]Success  
ofType singleton set X2210^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2234^11 X2210^9)
"
"27___________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2234^11 X2210^9
"
"28____________________________[+[Begin 
ofType singleton X2235^12 X2210^9
"
"28----------------------------]-]Success  
ofType singleton set X2210^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2236^12 X2210^9)
"
"29_____________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2236^12 X2210^9
"
"30______________________________[+[Begin 
ofType (propId singleton x11 x12) X2237^13 X2210^9
"
"31_______________________________[+[Begin 
of x11 X2238^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2239^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2237^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton x11 x12) props X2210^9
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2240^13 X2210^9)
"
"31_______________________________[+[Begin 
ofType (propId singleton star star) X2240^13 X2210^9
"
"32________________________________[+[Begin 
of star X2241^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2242^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2240^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
ofType (propId singleton star star) props X2210^9
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props X2210^9)
"
"30______________________________[+[Begin 
pts_for props props X2236^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2210^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2210^9)
"
"28____________________________[+[Begin 
pts_for set props X2234^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2210^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2210^9)
"
"26__________________________[+[Begin 
pts_for set props X2232^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props X2210^9
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2210^9
"
"24________________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2210^9
"
"25_________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X2243^11
 X2210^9
"
"26__________________________[+[Begin 
of star X2244^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2245^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2246^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2247^11
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"26__________________________[+[Begin 
ofType singleton X2248^11 X2210^9
"
"26--------------------------]-]Success  
ofType singleton set X2210^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2249^11 X2210^9)
"
"27___________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2249^11 X2210^9
"
"28____________________________[+[Begin 
ofType singleton X2250^12 X2210^9
"
"28----------------------------]-]Success  
ofType singleton set X2210^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2251^12 X2210^9)
"
"29_____________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2251^12 X2210^9
"
"30______________________________[+[Begin 
ofType (propId singleton x11 x12) X2252^13 X2210^9
"
"31_______________________________[+[Begin 
of x11 X2253^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2254^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2252^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton x11 x12) props X2210^9
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2255^13 X2210^9)
"
"31_______________________________[+[Begin 
ofType (propId singleton star star) X2255^13 X2210^9
"
"32________________________________[+[Begin 
of star X2256^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2257^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2255^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
ofType (propId singleton star star) props X2210^9
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props X2210^9)
"
"30______________________________[+[Begin 
pts_for props props X2251^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2210^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2210^9)
"
"28____________________________[+[Begin 
pts_for set props X2249^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2210^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2210^9)
"
"26__________________________[+[Begin 
pts_for set props X2258^11
"
"26--------------------------]-]Success  
pts_for set props props
"
"26__________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11)) X2259^11 X2210^9
"
"27___________________________[+[Begin 
ofType singleton _ X2210^9
"
"27---------------------------]-]Success  
ofType singleton _ X2210^9
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (X2260^11 x11) X2210^9
"
"28____________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) X2261^12 X2210^9
"
"29_____________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X2262^12 X2261^12) X2210^9
"
"30______________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X2263^12 X2210^9
"
"31_______________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X2264^12 X2263^12) X2210^9
"
"32________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X2265^12 X2210^9
"
"33_________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X2266^12 X2210^9
"
"34__________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X2267^12
 X2210^9
"
"35___________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2268^12 X2267^12) X2210^9
"
"36____________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2269^12 X2210^9
"
"37_____________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2270^12 X2210^9
"
"38______________________________________[+[Begin 
of (k_propId singleton) X2271^12 X2210^9
"
"38--------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 X2210^9
"
"38______________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X2272^12 X2273^12)
"
"38--------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"38______________________________________[+[Begin 
of star X2274^12 X2210^9
"
"38--------------------------------------]-]Success  
of star singleton X2210^9
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 X2210^9
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X2275^12 X2276^12)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"37_____________________________________[+[Begin 
of star X2277^12 X2210^9
"
"37-------------------------------------]-]Success  
of star singleton X2210^9
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2210^9
"
"36____________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X2268^12 X2267^12)
"
"36------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"35-----------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2210^9
"
"35___________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) X2210^9
"
"36____________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X2278^12
 X2210^9
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"36------------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"36____________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"36------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"35-----------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"34----------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X2279^12 X2280^12)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"34__________________________________[+[Begin 
of x0 X2281^12 int
"
"34----------------------------------]-]Success  
of x0 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X2282^12 X2283^12)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"33_________________________________[+[Begin 
of star X2284^12 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"32________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2264^12 X2263^12)
"
"32--------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"31-------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"31_______________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"32________________________________[+[Begin 
of x1 X2285^12 int
"
"32--------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"32________________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"32--------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"31-------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"30------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"30______________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2262^12 X2261^12)
"
"30------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"29-----------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"29_____________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
of (app x9 x11) X2286^12 int
"
"31_______________________________[+[Begin 
of x9 (setPi X2287^12 X2288^12) int
"
"31-------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"31_______________________________[+[Begin 
isa x11 singleton int
"
"32________________________________[+[Begin 
of x11 X2289^12 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
isa x11 singleton int
"
"30------------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"30------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"29-----------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"28----------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) (propId singleton star star) int
"
"28____________________________[+[Begin 
conv (propId singleton star star) (X2260^11 x11)
"
"28----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (propId singleton star star) int
"
"26--------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11))
 (setPi singleton x11 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26__________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X2290^11 int
"
"27___________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X2291^12 int
"
"28____________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X2292^13 int
"
"29_____________________________[+[Begin 
of x11 X2293^13 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x12 X2294^13 int
"
"29-----------------------------]-]Success  
of x12 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2295^13 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29_____________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X2296^14 int
"
"30______________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X2297^14 int
"
"31_______________________________[+[Begin 
of (forall_app x10 x11) X2298^14 int
"
"32________________________________[+[Begin 
of x10 X2299^14 int
"
"32--------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X2300^14 X2301^14)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"32________________________________[+[Begin 
of x11 X2302^14 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X2303^14 X2304^14)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x12 X2305^14 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X2306^14 X2307^14)
"
"30------------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"30______________________________[+[Begin 
of x13 X2308^14 int
"
"30------------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"30______________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"30------------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"29-----------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (propId singleton star star) (X2309^13 x13)
"
"29-----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"28----------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2310^12 x12)
"
"28----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2311^11 x11)
"
"27---------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"24------------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"23-----------------------]-]Success  
of
 (elim_setSigma x6 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
hnf
 (app x4
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (app x4
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
"
"22______________________[+[Begin 
hnf
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
 X2312^9
"
"23_______________________[+[Begin 
ofType
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) _
 X2313^9
"
"24________________________[+[Begin 
ofType (setPi singleton x9 \ propId singleton star x0) X2314^9 X2313^9
"
"25_________________________[+[Begin 
of star X2315^10 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of x0 X2316^10 int
"
"25-------------------------]-]Success  
of x0 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X2317^9 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
pts_fun set props X2314^9
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pts_fun set props set
"
"24------------------------]-]Success  
ofType (setPi singleton x9 \ propId singleton star x0) set X2313^9
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2318^9 X2313^9
"
"25_________________________[+[Begin 
ofType singleton X2319^10 X2313^9
"
"25-------------------------]-]Success  
ofType singleton set X2313^9
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2320^10 X2313^9)
"
"26__________________________[+[Begin 
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2320^10 X2313^9
"
"27___________________________[+[Begin 
ofType singleton X2321^11 X2313^9
"
"27---------------------------]-]Success  
ofType singleton set X2313^9
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2322^11 X2313^9)
"
"28____________________________[+[Begin 
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2322^11 X2313^9
"
"29_____________________________[+[Begin 
ofType (propId singleton x10 x11) X2323^12 X2313^9
"
"30______________________________[+[Begin 
of x10 X2324^12 int
"
"30------------------------------]-]Success  
of x10 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x11 X2325^12 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2323^12 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton x10 x11) props X2313^9
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) X2326^12 X2313^9)
"
"30______________________________[+[Begin 
ofType (propId singleton star star) X2326^12 X2313^9
"
"31_______________________________[+[Begin 
of star X2327^13 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of star X2328^13 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2326^12 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton star star) props X2313^9
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) props X2313^9)
"
"29_____________________________[+[Begin 
pts_for props props X2322^11
"
"29-----------------------------]-]Success  
pts_for props props props
"
"28----------------------------]-]Success  
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2313^9
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2313^9)
"
"27___________________________[+[Begin 
pts_for set props X2320^10
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2313^9
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2313^9)
"
"25_________________________[+[Begin 
pts_for set props X2318^9
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props X2313^9
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
ofType
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) _
 X2313^9
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isa
   (app x4
     (elim_setSigma x9 (x10 \
       setSigma (setPi singleton x11 \ propId singleton star star) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x10 \ x11 \
       pair (setPi singleton x12 \ propId singleton star star) (x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
        (lambda singleton x12 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x10 x12))
        (forall_lam singleton x12 \
          forall_lam singleton x13 \
           forall_lam (propId singleton x12 x13) x14 \
            forall_app (forall_app (forall_app x11 x12) x13) x14)))
   (X2329^9 x9) X2313^9
"
"24________________________[+[Begin 
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) X2330^10
 X2313^9
"
"25_________________________[+[Begin 
of x4 (setPi X2331^10 X2332^10) X2313^9
"
"25-------------------------]-]Success  
of x4
 (setPi
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x10 \ singleton) X2313^9
"
"25_________________________[+[Begin 
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2313^9
"
"26__________________________[+[Begin 
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14)) X2333^10
 X2313^9
"
"27___________________________[+[Begin 
of x9 (setSigma X2334^10 X2335^10) X2313^9
"
"27---------------------------]-]Success  
of x9
 (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2313^9
"
"27___________________________[+[Begin 
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   X2313^9
"
"28____________________________[+[Begin 
ofType (setPi singleton x11 \ propId singleton star star) X2336^11 X2313^9
"
"29_____________________________[+[Begin 
of star X2337^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2338^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2339^11 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29_____________________________[+[Begin 
pts_fun set props X2336^11
"
"30______________________________[+[Begin 
pts_leq set set
"
"30------------------------------]-]Success  
pts_leq set set
"
"30______________________________[+[Begin 
pts_leq props set
"
"30------------------------------]-]Success  
pts_leq props set
"
"29-----------------------------]-]Success  
pts_fun set props set
"
"28----------------------------]-]Success  
ofType (setPi singleton x11 \ propId singleton star star) set X2313^9
"
"28____________________________[+[Begin 
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   X2340^11 X2313^9
"
"29_____________________________[+[Begin 
ofType singleton X2341^12 X2313^9
"
"29-----------------------------]-]Success  
ofType singleton set X2313^9
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2342^12 X2313^9)
"
"30______________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2342^12 X2313^9
"
"31_______________________________[+[Begin 
ofType singleton X2343^13 X2313^9
"
"31-------------------------------]-]Success  
ofType singleton set X2313^9
"
"31_______________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2344^13 X2313^9)
"
"32________________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2344^13 X2313^9
"
"33_________________________________[+[Begin 
ofType (propId singleton x12 x13) X2345^14 X2313^9
"
"34__________________________________[+[Begin 
of x12 X2346^14 int
"
"34----------------------------------]-]Success  
of x12 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
of x13 X2347^14 int
"
"34----------------------------------]-]Success  
of x13 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
(pts_leq set set),
(X2345^14 = props)
"
"34----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"33---------------------------------]-]Success  
ofType (propId singleton x12 x13) props X2313^9
"
"33_________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X2348^14 X2313^9)
"
"34__________________________________[+[Begin 
ofType (propId singleton star star) X2348^14 X2313^9
"
"35___________________________________[+[Begin 
of star X2349^15 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
of star X2350^15 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
(pts_leq set set),
(X2348^14 = props)
"
"35-----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"34----------------------------------]-]Success  
ofType (propId singleton star star) props X2313^9
"
"33---------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props X2313^9)
"
"33_________________________________[+[Begin 
pts_for props props X2344^13
"
"33---------------------------------]-]Success  
pts_for props props props
"
"32--------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props X2313^9
"
"31-------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props X2313^9)
"
"31_______________________________[+[Begin 
pts_for set props X2342^12
"
"31-------------------------------]-]Success  
pts_for set props props
"
"30------------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 X2313^9
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props X2313^9)
"
"29_____________________________[+[Begin 
pts_for set props X2340^11
"
"29-----------------------------]-]Success  
pts_for set props props
"
"28----------------------------]-]Success  
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   props X2313^9
"
"28____________________________[+[Begin 
pts_leq set set
"
"28----------------------------]-]Success  
pts_leq set set
"
"28____________________________[+[Begin 
pts_leq props set
"
"28----------------------------]-]Success  
pts_leq props set
"
"27---------------------------]-]Success  
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   X2313^9
"
"27___________________________[+[Begin 
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     X2313^9
"
"28____________________________[+[Begin 
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14)) X2351^12
 X2313^9
"
"29_____________________________[+[Begin 
of star X2352^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2353^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2354^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29_____________________________[+[Begin 
pts_fun set props X2355^12
"
"30______________________________[+[Begin 
pts_leq set set
"
"30------------------------------]-]Success  
pts_leq set set
"
"30______________________________[+[Begin 
pts_leq props set
"
"30------------------------------]-]Success  
pts_leq props set
"
"29-----------------------------]-]Success  
pts_fun set props set
"
"29_____________________________[+[Begin 
ofType singleton X2356^12 X2313^9
"
"29-----------------------------]-]Success  
ofType singleton set X2313^9
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2357^12 X2313^9)
"
"30______________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2357^12 X2313^9
"
"31_______________________________[+[Begin 
ofType singleton X2358^13 X2313^9
"
"31-------------------------------]-]Success  
ofType singleton set X2313^9
"
"31_______________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2359^13 X2313^9)
"
"32________________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2359^13 X2313^9
"
"33_________________________________[+[Begin 
ofType (propId singleton x12 x13) X2360^14 X2313^9
"
"34__________________________________[+[Begin 
of x12 X2361^14 int
"
"34----------------------------------]-]Success  
of x12 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
of x13 X2362^14 int
"
"34----------------------------------]-]Success  
of x13 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
(pts_leq set set),
(X2360^14 = props)
"
"34----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"33---------------------------------]-]Success  
ofType (propId singleton x12 x13) props X2313^9
"
"33_________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X2363^14 X2313^9)
"
"34__________________________________[+[Begin 
ofType (propId singleton star star) X2363^14 X2313^9
"
"35___________________________________[+[Begin 
of star X2364^15 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
of star X2365^15 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
(pts_leq set set),
(X2363^14 = props)
"
"35-----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"34----------------------------------]-]Success  
ofType (propId singleton star star) props X2313^9
"
"33---------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props X2313^9)
"
"33_________________________________[+[Begin 
pts_for props props X2359^13
"
"33---------------------------------]-]Success  
pts_for props props props
"
"32--------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props X2313^9
"
"31-------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props X2313^9)
"
"31_______________________________[+[Begin 
pts_for set props X2357^12
"
"31-------------------------------]-]Success  
pts_for set props props
"
"30------------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 X2313^9
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props X2313^9)
"
"29_____________________________[+[Begin 
pts_for set props X2366^12
"
"29-----------------------------]-]Success  
pts_for set props props
"
"29_____________________________[+[Begin 
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12)) X2367^12 X2313^9
"
"30______________________________[+[Begin 
ofType singleton _ X2313^9
"
"30------------------------------]-]Success  
ofType singleton _ X2313^9
"
"30______________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (X2368^12 x12) X2313^9
"
"31_______________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) X2369^13 X2313^9
"
"32________________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X2370^13 X2369^13) X2313^9
"
"33_________________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X2371^13 X2313^9
"
"34__________________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X2372^13 X2371^13) X2313^9
"
"35___________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X2373^13 X2313^9
"
"36____________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X2374^13 X2313^9
"
"37_____________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X2375^13
 X2313^9
"
"38______________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2376^13 X2375^13) X2313^9
"
"39_______________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2377^13 X2313^9
"
"40________________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2378^13 X2313^9
"
"41_________________________________________[+[Begin 
of (k_propId singleton) X2379^13 X2313^9
"
"41-----------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 X2313^9
"
"41_________________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall X2380^13 X2381^13)
"
"41-----------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
"
"41_________________________________________[+[Begin 
of star X2382^13 X2313^9
"
"41-----------------------------------------]-]Success  
of star singleton X2313^9
"
"41_________________________________________[+[Begin 
conv singleton singleton
"
"41-----------------------------------------]-]Success  
conv singleton singleton
"
"40----------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 X2313^9
"
"40________________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall X2383^13 X2384^13)
"
"40----------------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
"
"40________________________________________[+[Begin 
of star X2385^13 X2313^9
"
"40----------------------------------------]-]Success  
of star singleton X2313^9
"
"40________________________________________[+[Begin 
conv singleton singleton
"
"40----------------------------------------]-]Success  
conv singleton singleton
"
"39---------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 X2313^9
"
"39_______________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies X2376^13 X2375^13)
"
"39---------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
"
"38--------------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 X2313^9
"
"38______________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) X2313^9
"
"39_______________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X2386^13
 X2313^9
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"39---------------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"39_______________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"39---------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"38--------------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"37-------------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14))) int
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall X2387^13 X2388^13)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
"
"37_____________________________________[+[Begin 
of x0 X2389^13 int
"
"37-------------------------------------]-]Success  
of x0 singleton int
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13))) int
"
"36____________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall X2390^13 X2391^13)
"
"36------------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
"
"36____________________________________[+[Begin 
of star X2392^13 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"35___________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2372^13 X2371^13)
"
"35-----------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"34----------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"34__________________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"35___________________________________[+[Begin 
of x1 X2393^13 int
"
"35-----------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"35___________________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"35-----------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"34----------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"33---------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"33_________________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2370^13 X2369^13)
"
"33---------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"32--------------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"32________________________________[+[Begin 
isa (app x10 x12) (propId singleton star x0) int
"
"33_________________________________[+[Begin 
of (app x10 x12) X2394^13 int
"
"34__________________________________[+[Begin 
of x10 (setPi X2395^13 X2396^13) int
"
"34----------------------------------]-]Success  
of x10 (setPi singleton x13 \ propId singleton star x0) int
"
"34__________________________________[+[Begin 
isa x12 singleton int
"
"35___________________________________[+[Begin 
of x12 X2397^13 int
"
"35-----------------------------------]-]Success  
of x12 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
isa x12 singleton int
"
"33---------------------------------]-]Success  
of (app x10 x12) (propId singleton star x0) int
"
"33_________________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"33---------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"32--------------------------------]-]Success  
isa (app x10 x12) (propId singleton star x0) int
"
"31-------------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) (propId singleton star star) int
"
"31_______________________________[+[Begin 
conv (propId singleton star star) (X2368^12 x12)
"
"31-------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"30------------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (propId singleton star star) int
"
"29-----------------------------]-]Success  
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12))
 (setPi singleton x12 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"29-----------------------------]-]Success  
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14) X2398^12 int
"
"30______________________________[+[Begin 
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14) X2399^13 int
"
"31_______________________________[+[Begin 
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14) X2400^14 int
"
"32________________________________[+[Begin 
of x12 X2401^14 int
"
"32--------------------------------]-]Success  
of x12 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of x13 X2402^14 int
"
"32--------------------------------]-]Success  
of x13 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2403^14 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"32________________________________[+[Begin 
of (forall_app (forall_app (forall_app x11 x12) x13) x14) X2404^15 int
"
"33_________________________________[+[Begin 
of (forall_app (forall_app x11 x12) x13) X2405^15 int
"
"34__________________________________[+[Begin 
of (forall_app x11 x12) X2406^15 int
"
"35___________________________________[+[Begin 
of x11 X2407^15 int
"
"35-----------------------------------]-]Success  
of x11
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star) int
"
"35___________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall X2408^15 X2409^15)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
"
"35___________________________________[+[Begin 
of x12 X2410^15 int
"
"35-----------------------------------]-]Success  
of x12 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of (forall_app x11 x12)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall X2411^15 X2412^15)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
"
"34__________________________________[+[Begin 
of x13 X2413^15 int
"
"34----------------------------------]-]Success  
of x13 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (forall_app (forall_app x11 x12) x13)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star) int
"
"33_________________________________[+[Begin 
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall X2414^15 X2415^15)
"
"33---------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star)
"
"33_________________________________[+[Begin 
of x14 X2416^15 int
"
"33---------------------------------]-]Success  
of x14 (propId singleton x12 x13) int
"
"33_________________________________[+[Begin 
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"33---------------------------------]-]Success  
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"32--------------------------------]-]Success  
of (forall_app (forall_app (forall_app x11 x12) x13) x14)
 (propId singleton star star) int
"
"32________________________________[+[Begin 
conv (propId singleton star star) (X2417^14 x14)
"
"32--------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"31-------------------------------]-]Success  
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X2418^13 x13)
"
"31-------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"30------------------------------]-]Success  
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X2419^12 x12)
"
"30------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"29-----------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"28----------------------------]-]Success  
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"28----------------------------]-]Success  
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"27---------------------------]-]Success  
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     int
"
"26--------------------------]-]Success  
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"24------------------------]-]Success  
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) singleton
 int
"
"24________________________[+[Begin 
conv singleton (X2329^9 x9)
"
"24------------------------]-]Success  
conv singleton singleton
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isa
   (app x4
     (elim_setSigma x9 (x10 \
       setSigma (setPi singleton x11 \ propId singleton star star) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x10 \ x11 \
       pair (setPi singleton x12 \ propId singleton star star) (x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
        (lambda singleton x12 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x10 x12))
        (forall_lam singleton x12 \
          forall_lam singleton x13 \
           forall_lam (propId singleton x12 x13) x14 \
            forall_app (forall_app (forall_app x11 x12) x13) x14))) singleton
   int
"
"23_______________________[+[Begin 
ofType (setPi singleton x9 \ propId singleton star x0) X2420^9 int
"
"24________________________[+[Begin 
of star X2421^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of x0 X2422^10 int
"
"24------------------------]-]Success  
of x0 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X2423^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
pts_fun set props X2420^9
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pts_fun set props set
"
"23-----------------------]-]Success  
ofType (setPi singleton x9 \ propId singleton star x0) set int
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2424^9 int
"
"24________________________[+[Begin 
ofType singleton X2425^10 int
"
"24------------------------]-]Success  
ofType singleton set int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2426^10 int)
"
"25_________________________[+[Begin 
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2426^10 int
"
"26__________________________[+[Begin 
ofType singleton X2427^11 int
"
"26--------------------------]-]Success  
ofType singleton set int
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2428^11 int)
"
"27___________________________[+[Begin 
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2428^11 int
"
"28____________________________[+[Begin 
ofType (propId singleton x10 x11) X2429^12 int
"
"29_____________________________[+[Begin 
of x10 X2430^12 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x11 X2431^12 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2429^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton x10 x11) props int
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) X2432^12 int)
"
"29_____________________________[+[Begin 
ofType (propId singleton star star) X2432^12 int
"
"30______________________________[+[Begin 
of star X2433^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X2434^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2432^12 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton star star) props int
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) props int)
"
"28____________________________[+[Begin 
pts_for props props X2428^11
"
"28----------------------------]-]Success  
pts_for props props props
"
"27---------------------------]-]Success  
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props int
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"26__________________________[+[Begin 
pts_for set props X2426^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 int
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"24________________________[+[Begin 
pts_for set props X2424^9
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props int
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"23_______________________[+[Begin 
of x6 X2435^9 int
"
"23-----------------------]-]Success  
of x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23_______________________[+[Begin 
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) X2436^10
 int
"
"24________________________[+[Begin 
of x4 (setPi X2437^10 X2438^10) int
"
"24------------------------]-]Success  
of x4
 (setPi
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x10 \ singleton) int
"
"24________________________[+[Begin 
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"25_________________________[+[Begin 
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14)) X2439^10 int
"
"26__________________________[+[Begin 
of x9 (setSigma X2440^10 X2441^10) int
"
"26--------------------------]-]Success  
of x9
 (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   int
"
"27___________________________[+[Begin 
ofType (setPi singleton x11 \ propId singleton star star) X2442^11 int
"
"28____________________________[+[Begin 
of star X2443^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X2444^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2445^11 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28____________________________[+[Begin 
pts_fun set props X2442^11
"
"29_____________________________[+[Begin 
pts_leq set set
"
"29-----------------------------]-]Success  
pts_leq set set
"
"29_____________________________[+[Begin 
pts_leq props set
"
"29-----------------------------]-]Success  
pts_leq props set
"
"28----------------------------]-]Success  
pts_fun set props set
"
"27---------------------------]-]Success  
ofType (setPi singleton x11 \ propId singleton star star) set int
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   X2446^11 int
"
"28____________________________[+[Begin 
ofType singleton X2447^12 int
"
"28----------------------------]-]Success  
ofType singleton set int
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2448^12 int)
"
"29_____________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2448^12 int
"
"30______________________________[+[Begin 
ofType singleton X2449^13 int
"
"30------------------------------]-]Success  
ofType singleton set int
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2450^13 int)
"
"31_______________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2450^13 int
"
"32________________________________[+[Begin 
ofType (propId singleton x12 x13) X2451^14 int
"
"33_________________________________[+[Begin 
of x12 X2452^14 int
"
"33---------------------------------]-]Success  
of x12 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
of x13 X2453^14 int
"
"33---------------------------------]-]Success  
of x13 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
(pts_leq set set),
(X2451^14 = props)
"
"33---------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"32--------------------------------]-]Success  
ofType (propId singleton x12 x13) props int
"
"32________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X2454^14 int)
"
"33_________________________________[+[Begin 
ofType (propId singleton star star) X2454^14 int
"
"34__________________________________[+[Begin 
of star X2455^15 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
of star X2456^15 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
(pts_leq set set),
(X2454^14 = props)
"
"34----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"33---------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"32--------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props int)
"
"32________________________________[+[Begin 
pts_for props props X2450^13
"
"32--------------------------------]-]Success  
pts_for props props props
"
"31-------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props int
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"30______________________________[+[Begin 
pts_for set props X2448^12
"
"30------------------------------]-]Success  
pts_for set props props
"
"29-----------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 int
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"28____________________________[+[Begin 
pts_for set props X2446^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   props int
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   int
"
"26__________________________[+[Begin 
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     int
"
"27___________________________[+[Begin 
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14)) X2457^12 int
"
"28____________________________[+[Begin 
of star X2458^13 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X2459^13 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2460^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28____________________________[+[Begin 
pts_fun set props X2461^12
"
"29_____________________________[+[Begin 
pts_leq set set
"
"29-----------------------------]-]Success  
pts_leq set set
"
"29_____________________________[+[Begin 
pts_leq props set
"
"29-----------------------------]-]Success  
pts_leq props set
"
"28----------------------------]-]Success  
pts_fun set props set
"
"28____________________________[+[Begin 
ofType singleton X2462^12 int
"
"28----------------------------]-]Success  
ofType singleton set int
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2463^12 int)
"
"29_____________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2463^12 int
"
"30______________________________[+[Begin 
ofType singleton X2464^13 int
"
"30------------------------------]-]Success  
ofType singleton set int
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2465^13 int)
"
"31_______________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2465^13 int
"
"32________________________________[+[Begin 
ofType (propId singleton x12 x13) X2466^14 int
"
"33_________________________________[+[Begin 
of x12 X2467^14 int
"
"33---------------------------------]-]Success  
of x12 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
of x13 X2468^14 int
"
"33---------------------------------]-]Success  
of x13 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
(pts_leq set set),
(X2466^14 = props)
"
"33---------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"32--------------------------------]-]Success  
ofType (propId singleton x12 x13) props int
"
"32________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X2469^14 int)
"
"33_________________________________[+[Begin 
ofType (propId singleton star star) X2469^14 int
"
"34__________________________________[+[Begin 
of star X2470^15 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
of star X2471^15 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
(pts_leq set set),
(X2469^14 = props)
"
"34----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"33---------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"32--------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props int)
"
"32________________________________[+[Begin 
pts_for props props X2465^13
"
"32--------------------------------]-]Success  
pts_for props props props
"
"31-------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props int
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"30______________________________[+[Begin 
pts_for set props X2463^12
"
"30------------------------------]-]Success  
pts_for set props props
"
"29-----------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 int
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"28____________________________[+[Begin 
pts_for set props X2472^12
"
"28----------------------------]-]Success  
pts_for set props props
"
"28____________________________[+[Begin 
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12)) X2473^12 int
"
"29_____________________________[+[Begin 
ofType singleton _ int
"
"29-----------------------------]-]Success  
ofType singleton _ int
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (X2474^12 x12) int
"
"30______________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) X2475^13 int
"
"31_______________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X2476^13 X2475^13) int
"
"32________________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X2477^13 int
"
"33_________________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X2478^13 X2477^13) int
"
"34__________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X2479^13 int
"
"35___________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X2480^13 int
"
"36____________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X2481^13
 int
"
"37_____________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2482^13 X2481^13) int
"
"38______________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2483^13 int
"
"39_______________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2484^13 int
"
"40________________________________________[+[Begin 
of (k_propId singleton) X2485^13 int
"
"40----------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 int
"
"40________________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall X2486^13 X2487^13)
"
"40----------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
"
"40________________________________________[+[Begin 
of star X2488^13 int
"
"40----------------------------------------]-]Success  
of star singleton int
"
"40________________________________________[+[Begin 
conv singleton singleton
"
"40----------------------------------------]-]Success  
conv singleton singleton
"
"39---------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 int
"
"39_______________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall X2489^13 X2490^13)
"
"39---------------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
"
"39_______________________________________[+[Begin 
of star X2491^13 int
"
"39---------------------------------------]-]Success  
of star singleton int
"
"39_______________________________________[+[Begin 
conv singleton singleton
"
"39---------------------------------------]-]Success  
conv singleton singleton
"
"38--------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 int
"
"38______________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies X2482^13 X2481^13)
"
"38--------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
"
"37-------------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 int
"
"37_____________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"38______________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X2492^13 int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"38--------------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"38______________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"38--------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"37-------------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"36------------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14))) int
"
"36____________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall X2493^13 X2494^13)
"
"36------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
"
"36____________________________________[+[Begin 
of x0 X2495^13 int
"
"36------------------------------------]-]Success  
of x0 singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13))) int
"
"35___________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall X2496^13 X2497^13)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
"
"35___________________________________[+[Begin 
of star X2498^13 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"34__________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2478^13 X2477^13)
"
"34----------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"33---------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"33_________________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"34__________________________________[+[Begin 
of x1 X2499^13 int
"
"34----------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"34__________________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"34----------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"33---------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"32--------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"32________________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2476^13 X2475^13)
"
"32--------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"31-------------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"31_______________________________[+[Begin 
isa (app x10 x12) (propId singleton star x0) int
"
"32________________________________[+[Begin 
of (app x10 x12) X2500^13 int
"
"33_________________________________[+[Begin 
of x10 (setPi X2501^13 X2502^13) int
"
"33---------------------------------]-]Success  
of x10 (setPi singleton x13 \ propId singleton star x0) int
"
"33_________________________________[+[Begin 
isa x12 singleton int
"
"34__________________________________[+[Begin 
of x12 X2503^13 int
"
"34----------------------------------]-]Success  
of x12 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
isa x12 singleton int
"
"32--------------------------------]-]Success  
of (app x10 x12) (propId singleton star x0) int
"
"32________________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"32--------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"31-------------------------------]-]Success  
isa (app x10 x12) (propId singleton star x0) int
"
"30------------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) (propId singleton star star) int
"
"30______________________________[+[Begin 
conv (propId singleton star star) (X2474^12 x12)
"
"30------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (propId singleton star star) int
"
"28----------------------------]-]Success  
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12))
 (setPi singleton x12 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"28----------------------------]-]Success  
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"28____________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14) X2504^12 int
"
"29_____________________________[+[Begin 
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14) X2505^13 int
"
"30______________________________[+[Begin 
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14) X2506^14 int
"
"31_______________________________[+[Begin 
of x12 X2507^14 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x13 X2508^14 int
"
"31-------------------------------]-]Success  
of x13 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2509^14 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31_______________________________[+[Begin 
of (forall_app (forall_app (forall_app x11 x12) x13) x14) X2510^15 int
"
"32________________________________[+[Begin 
of (forall_app (forall_app x11 x12) x13) X2511^15 int
"
"33_________________________________[+[Begin 
of (forall_app x11 x12) X2512^15 int
"
"34__________________________________[+[Begin 
of x11 X2513^15 int
"
"34----------------------------------]-]Success  
of x11
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall X2514^15 X2515^15)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
"
"34__________________________________[+[Begin 
of x12 X2516^15 int
"
"34----------------------------------]-]Success  
of x12 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (forall_app x11 x12)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall X2517^15 X2518^15)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
"
"33_________________________________[+[Begin 
of x13 X2519^15 int
"
"33---------------------------------]-]Success  
of x13 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of (forall_app (forall_app x11 x12) x13)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall X2520^15 X2521^15)
"
"32--------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star)
"
"32________________________________[+[Begin 
of x14 X2522^15 int
"
"32--------------------------------]-]Success  
of x14 (propId singleton x12 x13) int
"
"32________________________________[+[Begin 
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"32--------------------------------]-]Success  
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"31-------------------------------]-]Success  
of (forall_app (forall_app (forall_app x11 x12) x13) x14)
 (propId singleton star star) int
"
"31_______________________________[+[Begin 
conv (propId singleton star star) (X2523^14 x14)
"
"31-------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"30------------------------------]-]Success  
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X2524^13 x13)
"
"30------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"29-----------------------------]-]Success  
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X2525^12 x12)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"28----------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"28----------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"27---------------------------]-]Success  
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"27---------------------------]-]Success  
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"26--------------------------]-]Success  
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     int
"
"25-------------------------]-]Success  
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"24------------------------]-]Success  
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"23-----------------------]-]Success  
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) singleton
 int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
ofType (setPi singleton x9 \ propId singleton star star) X2526^9 X2527^9
"
"24________________________[+[Begin 
of star X2528^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X2529^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X2530^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
pts_fun set props X2526^9
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pts_fun set props set
"
"23-----------------------]-]Success  
ofType (setPi singleton x9 \ propId singleton star star) set X2527^9
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2531^9 X2527^9
"
"24________________________[+[Begin 
ofType singleton X2532^10 X2527^9
"
"24------------------------]-]Success  
ofType singleton set X2527^9
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2533^10 X2527^9)
"
"25_________________________[+[Begin 
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2533^10 X2527^9
"
"26__________________________[+[Begin 
ofType singleton X2534^11 X2527^9
"
"26--------------------------]-]Success  
ofType singleton set X2527^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2535^11 X2527^9)
"
"27___________________________[+[Begin 
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2535^11 X2527^9
"
"28____________________________[+[Begin 
ofType (propId singleton x10 x11) X2536^12 X2527^9
"
"29_____________________________[+[Begin 
of x10 X2537^12 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x11 X2538^12 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2536^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton x10 x11) props X2527^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) X2539^12 X2527^9)
"
"29_____________________________[+[Begin 
ofType (propId singleton star star) X2539^12 X2527^9
"
"30______________________________[+[Begin 
of star X2540^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X2541^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2539^12 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton star star) props X2527^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) props X2527^9)
"
"28____________________________[+[Begin 
pts_for props props X2535^11
"
"28----------------------------]-]Success  
pts_for props props props
"
"27---------------------------]-]Success  
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2527^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2527^9)
"
"26__________________________[+[Begin 
pts_for set props X2533^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2527^9
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2527^9)
"
"24________________________[+[Begin 
pts_for set props X2531^9
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props X2527^9
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"23_______________________[+[Begin 
of
 (elim_setSigma x6 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X2542^9
 X2527^9
"
"24________________________[+[Begin 
of x6 (setSigma X2543^9 X2544^9) X2527^9
"
"24------------------------]-]Success  
of x6
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2527^9
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2527^9
"
"25_________________________[+[Begin 
ofType (setPi singleton x10 \ propId singleton star star) X2545^10 X2527^9
"
"26__________________________[+[Begin 
of star X2546^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2547^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2548^10 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2545^10
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"25-------------------------]-]Success  
ofType (setPi singleton x10 \ propId singleton star star) set X2527^9
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X2549^10 X2527^9
"
"26__________________________[+[Begin 
ofType singleton X2550^11 X2527^9
"
"26--------------------------]-]Success  
ofType singleton set X2527^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2551^11 X2527^9)
"
"27___________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2551^11 X2527^9
"
"28____________________________[+[Begin 
ofType singleton X2552^12 X2527^9
"
"28----------------------------]-]Success  
ofType singleton set X2527^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2553^12 X2527^9)
"
"29_____________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2553^12 X2527^9
"
"30______________________________[+[Begin 
ofType (propId singleton x11 x12) X2554^13 X2527^9
"
"31_______________________________[+[Begin 
of x11 X2555^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2556^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2554^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton x11 x12) props X2527^9
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2557^13 X2527^9)
"
"31_______________________________[+[Begin 
ofType (propId singleton star star) X2557^13 X2527^9
"
"32________________________________[+[Begin 
of star X2558^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2559^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2557^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
ofType (propId singleton star star) props X2527^9
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props X2527^9)
"
"30______________________________[+[Begin 
pts_for props props X2553^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2527^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2527^9)
"
"28____________________________[+[Begin 
pts_for set props X2551^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2527^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2527^9)
"
"26__________________________[+[Begin 
pts_for set props X2549^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props X2527^9
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2527^9
"
"24________________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2527^9
"
"25_________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X2560^11
 X2527^9
"
"26__________________________[+[Begin 
of star X2561^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2562^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2563^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2564^11
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"26__________________________[+[Begin 
ofType singleton X2565^11 X2527^9
"
"26--------------------------]-]Success  
ofType singleton set X2527^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2566^11 X2527^9)
"
"27___________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2566^11 X2527^9
"
"28____________________________[+[Begin 
ofType singleton X2567^12 X2527^9
"
"28----------------------------]-]Success  
ofType singleton set X2527^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2568^12 X2527^9)
"
"29_____________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2568^12 X2527^9
"
"30______________________________[+[Begin 
ofType (propId singleton x11 x12) X2569^13 X2527^9
"
"31_______________________________[+[Begin 
of x11 X2570^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2571^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2569^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton x11 x12) props X2527^9
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2572^13 X2527^9)
"
"31_______________________________[+[Begin 
ofType (propId singleton star star) X2572^13 X2527^9
"
"32________________________________[+[Begin 
of star X2573^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2574^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2572^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
ofType (propId singleton star star) props X2527^9
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props X2527^9)
"
"30______________________________[+[Begin 
pts_for props props X2568^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2527^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2527^9)
"
"28____________________________[+[Begin 
pts_for set props X2566^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2527^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2527^9)
"
"26__________________________[+[Begin 
pts_for set props X2575^11
"
"26--------------------------]-]Success  
pts_for set props props
"
"26__________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11)) X2576^11 X2527^9
"
"27___________________________[+[Begin 
ofType singleton _ X2527^9
"
"27---------------------------]-]Success  
ofType singleton _ X2527^9
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (X2577^11 x11) X2527^9
"
"28____________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) X2578^12 X2527^9
"
"29_____________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X2579^12 X2578^12) X2527^9
"
"30______________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X2580^12 X2527^9
"
"31_______________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X2581^12 X2580^12) X2527^9
"
"32________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X2582^12 X2527^9
"
"33_________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X2583^12 X2527^9
"
"34__________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X2584^12
 X2527^9
"
"35___________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2585^12 X2584^12) X2527^9
"
"36____________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2586^12 X2527^9
"
"37_____________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2587^12 X2527^9
"
"38______________________________________[+[Begin 
of (k_propId singleton) X2588^12 X2527^9
"
"38--------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 X2527^9
"
"38______________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X2589^12 X2590^12)
"
"38--------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"38______________________________________[+[Begin 
of star X2591^12 X2527^9
"
"38--------------------------------------]-]Success  
of star singleton X2527^9
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 X2527^9
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X2592^12 X2593^12)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"37_____________________________________[+[Begin 
of star X2594^12 X2527^9
"
"37-------------------------------------]-]Success  
of star singleton X2527^9
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2527^9
"
"36____________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X2585^12 X2584^12)
"
"36------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"35-----------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2527^9
"
"35___________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) X2527^9
"
"36____________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X2595^12
 X2527^9
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"36------------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"36____________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"36------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"35-----------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"34----------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X2596^12 X2597^12)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"34__________________________________[+[Begin 
of x0 X2598^12 int
"
"34----------------------------------]-]Success  
of x0 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X2599^12 X2600^12)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"33_________________________________[+[Begin 
of star X2601^12 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"32________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2581^12 X2580^12)
"
"32--------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"31-------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"31_______________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"32________________________________[+[Begin 
of x1 X2602^12 int
"
"32--------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"32________________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"32--------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"31-------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"30------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"30______________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2579^12 X2578^12)
"
"30------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"29-----------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"29_____________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
of (app x9 x11) X2603^12 int
"
"31_______________________________[+[Begin 
of x9 (setPi X2604^12 X2605^12) int
"
"31-------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"31_______________________________[+[Begin 
isa x11 singleton int
"
"32________________________________[+[Begin 
of x11 X2606^12 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
isa x11 singleton int
"
"30------------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"30------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"29-----------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"28----------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) (propId singleton star star) int
"
"28____________________________[+[Begin 
conv (propId singleton star star) (X2577^11 x11)
"
"28----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (propId singleton star star) int
"
"26--------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11))
 (setPi singleton x11 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26__________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X2607^11 int
"
"27___________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X2608^12 int
"
"28____________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X2609^13 int
"
"29_____________________________[+[Begin 
of x11 X2610^13 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x12 X2611^13 int
"
"29-----------------------------]-]Success  
of x12 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2612^13 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29_____________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X2613^14 int
"
"30______________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X2614^14 int
"
"31_______________________________[+[Begin 
of (forall_app x10 x11) X2615^14 int
"
"32________________________________[+[Begin 
of x10 X2616^14 int
"
"32--------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X2617^14 X2618^14)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"32________________________________[+[Begin 
of x11 X2619^14 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X2620^14 X2621^14)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x12 X2622^14 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X2623^14 X2624^14)
"
"30------------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"30______________________________[+[Begin 
of x13 X2625^14 int
"
"30------------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"30______________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"30------------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"29-----------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (propId singleton star star) (X2626^13 x13)
"
"29-----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"28----------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2627^12 x12)
"
"28----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2628^11 x11)
"
"27---------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"24------------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"23-----------------------]-]Success  
of
 (elim_setSigma x6 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
hnf
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
 (app x4
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
"
"22______________________[+[Begin 
dconv
 (app x4
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (app x4
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
"
"22----------------------]-]Success  
dconv
 (app x4
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (app x4
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
"
"21---------------------]-]Success  
conv
 (app x4
   (elim_setSigma x6 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
"
"21_____________________[+[Begin 
conv
 (app x4
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x7)
"
"22______________________[+[Begin 
hnf
 (app x4
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) X2629^9
"
"23_______________________[+[Begin 
ofType (setPi singleton x9 \ propId singleton star star) X2630^9 X2631^9
"
"24________________________[+[Begin 
of star X2632^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X2633^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X2634^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
pts_fun set props X2630^9
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pts_fun set props set
"
"23-----------------------]-]Success  
ofType (setPi singleton x9 \ propId singleton star star) set X2631^9
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2635^9 X2631^9
"
"24________________________[+[Begin 
ofType singleton X2636^10 X2631^9
"
"24------------------------]-]Success  
ofType singleton set X2631^9
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2637^10 X2631^9)
"
"25_________________________[+[Begin 
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2637^10 X2631^9
"
"26__________________________[+[Begin 
ofType singleton X2638^11 X2631^9
"
"26--------------------------]-]Success  
ofType singleton set X2631^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2639^11 X2631^9)
"
"27___________________________[+[Begin 
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2639^11 X2631^9
"
"28____________________________[+[Begin 
ofType (propId singleton x10 x11) X2640^12 X2631^9
"
"29_____________________________[+[Begin 
of x10 X2641^12 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x11 X2642^12 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2640^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton x10 x11) props X2631^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) X2643^12 X2631^9)
"
"29_____________________________[+[Begin 
ofType (propId singleton star star) X2643^12 X2631^9
"
"30______________________________[+[Begin 
of star X2644^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X2645^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2643^12 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton star star) props X2631^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) props X2631^9)
"
"28____________________________[+[Begin 
pts_for props props X2639^11
"
"28----------------------------]-]Success  
pts_for props props props
"
"27---------------------------]-]Success  
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2631^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2631^9)
"
"26__________________________[+[Begin 
pts_for set props X2637^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2631^9
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2631^9)
"
"24________________________[+[Begin 
pts_for set props X2635^9
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props X2631^9
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"23_______________________[+[Begin 
of
 (elim_setSigma x7 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X2646^9
 X2631^9
"
"24________________________[+[Begin 
of x7 (setSigma X2647^9 X2648^9) X2631^9
"
"24------------------------]-]Success  
of x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2631^9
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2631^9
"
"25_________________________[+[Begin 
ofType (setPi singleton x10 \ propId singleton star star) X2649^10 X2631^9
"
"26__________________________[+[Begin 
of star X2650^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2651^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2652^10 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2649^10
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"25-------------------------]-]Success  
ofType (setPi singleton x10 \ propId singleton star star) set X2631^9
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X2653^10 X2631^9
"
"26__________________________[+[Begin 
ofType singleton X2654^11 X2631^9
"
"26--------------------------]-]Success  
ofType singleton set X2631^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2655^11 X2631^9)
"
"27___________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2655^11 X2631^9
"
"28____________________________[+[Begin 
ofType singleton X2656^12 X2631^9
"
"28----------------------------]-]Success  
ofType singleton set X2631^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2657^12 X2631^9)
"
"29_____________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2657^12 X2631^9
"
"30______________________________[+[Begin 
ofType (propId singleton x11 x12) X2658^13 X2631^9
"
"31_______________________________[+[Begin 
of x11 X2659^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2660^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2658^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton x11 x12) props X2631^9
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2661^13 X2631^9)
"
"31_______________________________[+[Begin 
ofType (propId singleton star star) X2661^13 X2631^9
"
"32________________________________[+[Begin 
of star X2662^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2663^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2661^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
ofType (propId singleton star star) props X2631^9
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props X2631^9)
"
"30______________________________[+[Begin 
pts_for props props X2657^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2631^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2631^9)
"
"28____________________________[+[Begin 
pts_for set props X2655^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2631^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2631^9)
"
"26__________________________[+[Begin 
pts_for set props X2653^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props X2631^9
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2631^9
"
"24________________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2631^9
"
"25_________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X2664^11
 X2631^9
"
"26__________________________[+[Begin 
of star X2665^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2666^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2667^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2668^11
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"26__________________________[+[Begin 
ofType singleton X2669^11 X2631^9
"
"26--------------------------]-]Success  
ofType singleton set X2631^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2670^11 X2631^9)
"
"27___________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2670^11 X2631^9
"
"28____________________________[+[Begin 
ofType singleton X2671^12 X2631^9
"
"28----------------------------]-]Success  
ofType singleton set X2631^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2672^12 X2631^9)
"
"29_____________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2672^12 X2631^9
"
"30______________________________[+[Begin 
ofType (propId singleton x11 x12) X2673^13 X2631^9
"
"31_______________________________[+[Begin 
of x11 X2674^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2675^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2673^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton x11 x12) props X2631^9
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2676^13 X2631^9)
"
"31_______________________________[+[Begin 
ofType (propId singleton star star) X2676^13 X2631^9
"
"32________________________________[+[Begin 
of star X2677^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2678^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2676^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
ofType (propId singleton star star) props X2631^9
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props X2631^9)
"
"30______________________________[+[Begin 
pts_for props props X2672^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2631^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2631^9)
"
"28____________________________[+[Begin 
pts_for set props X2670^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2631^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2631^9)
"
"26__________________________[+[Begin 
pts_for set props X2679^11
"
"26--------------------------]-]Success  
pts_for set props props
"
"26__________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11)) X2680^11 X2631^9
"
"27___________________________[+[Begin 
ofType singleton _ X2631^9
"
"27---------------------------]-]Success  
ofType singleton _ X2631^9
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (X2681^11 x11) X2631^9
"
"28____________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) X2682^12 X2631^9
"
"29_____________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X2683^12 X2682^12) X2631^9
"
"30______________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X2684^12 X2631^9
"
"31_______________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X2685^12 X2684^12) X2631^9
"
"32________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X2686^12 X2631^9
"
"33_________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X2687^12 X2631^9
"
"34__________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X2688^12
 X2631^9
"
"35___________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2689^12 X2688^12) X2631^9
"
"36____________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2690^12 X2631^9
"
"37_____________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2691^12 X2631^9
"
"38______________________________________[+[Begin 
of (k_propId singleton) X2692^12 X2631^9
"
"38--------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 X2631^9
"
"38______________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X2693^12 X2694^12)
"
"38--------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"38______________________________________[+[Begin 
of star X2695^12 X2631^9
"
"38--------------------------------------]-]Success  
of star singleton X2631^9
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 X2631^9
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X2696^12 X2697^12)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"37_____________________________________[+[Begin 
of star X2698^12 X2631^9
"
"37-------------------------------------]-]Success  
of star singleton X2631^9
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2631^9
"
"36____________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X2689^12 X2688^12)
"
"36------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"35-----------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2631^9
"
"35___________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) X2631^9
"
"36____________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X2699^12
 X2631^9
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"36------------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"36____________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"36------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"35-----------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"34----------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X2700^12 X2701^12)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"34__________________________________[+[Begin 
of x0 X2702^12 int
"
"34----------------------------------]-]Success  
of x0 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X2703^12 X2704^12)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"33_________________________________[+[Begin 
of star X2705^12 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"32________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2685^12 X2684^12)
"
"32--------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"31-------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"31_______________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"32________________________________[+[Begin 
of x1 X2706^12 int
"
"32--------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"32________________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"32--------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"31-------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"30------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"30______________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2683^12 X2682^12)
"
"30------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"29-----------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"29_____________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
of (app x9 x11) X2707^12 int
"
"31_______________________________[+[Begin 
of x9 (setPi X2708^12 X2709^12) int
"
"31-------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"31_______________________________[+[Begin 
isa x11 singleton int
"
"32________________________________[+[Begin 
of x11 X2710^12 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
isa x11 singleton int
"
"30------------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"30------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"29-----------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"28----------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) (propId singleton star star) int
"
"28____________________________[+[Begin 
conv (propId singleton star star) (X2681^11 x11)
"
"28----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (propId singleton star star) int
"
"26--------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11))
 (setPi singleton x11 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26__________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X2711^11 int
"
"27___________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X2712^12 int
"
"28____________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X2713^13 int
"
"29_____________________________[+[Begin 
of x11 X2714^13 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x12 X2715^13 int
"
"29-----------------------------]-]Success  
of x12 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2716^13 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29_____________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X2717^14 int
"
"30______________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X2718^14 int
"
"31_______________________________[+[Begin 
of (forall_app x10 x11) X2719^14 int
"
"32________________________________[+[Begin 
of x10 X2720^14 int
"
"32--------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X2721^14 X2722^14)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"32________________________________[+[Begin 
of x11 X2723^14 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X2724^14 X2725^14)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x12 X2726^14 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X2727^14 X2728^14)
"
"30------------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"30______________________________[+[Begin 
of x13 X2729^14 int
"
"30------------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"30______________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"30------------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"29-----------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (propId singleton star star) (X2730^13 x13)
"
"29-----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"28----------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2731^12 x12)
"
"28----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2732^11 x11)
"
"27---------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"24------------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"23-----------------------]-]Success  
of
 (elim_setSigma x7 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
hnf
 (app x4
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (app x4
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
"
"22______________________[+[Begin 
hnf
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x7)
 X2733^9
"
"23_______________________[+[Begin 
ofType
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) _
 X2734^9
"
"24________________________[+[Begin 
ofType (setPi singleton x9 \ propId singleton star x0) X2735^9 X2734^9
"
"25_________________________[+[Begin 
of star X2736^10 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of x0 X2737^10 int
"
"25-------------------------]-]Success  
of x0 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X2738^9 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
pts_fun set props X2735^9
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pts_fun set props set
"
"24------------------------]-]Success  
ofType (setPi singleton x9 \ propId singleton star x0) set X2734^9
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2739^9 X2734^9
"
"25_________________________[+[Begin 
ofType singleton X2740^10 X2734^9
"
"25-------------------------]-]Success  
ofType singleton set X2734^9
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2741^10 X2734^9)
"
"26__________________________[+[Begin 
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2741^10 X2734^9
"
"27___________________________[+[Begin 
ofType singleton X2742^11 X2734^9
"
"27---------------------------]-]Success  
ofType singleton set X2734^9
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2743^11 X2734^9)
"
"28____________________________[+[Begin 
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2743^11 X2734^9
"
"29_____________________________[+[Begin 
ofType (propId singleton x10 x11) X2744^12 X2734^9
"
"30______________________________[+[Begin 
of x10 X2745^12 int
"
"30------------------------------]-]Success  
of x10 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x11 X2746^12 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2744^12 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton x10 x11) props X2734^9
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) X2747^12 X2734^9)
"
"30______________________________[+[Begin 
ofType (propId singleton star star) X2747^12 X2734^9
"
"31_______________________________[+[Begin 
of star X2748^13 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of star X2749^13 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2747^12 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton star star) props X2734^9
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) props X2734^9)
"
"29_____________________________[+[Begin 
pts_for props props X2743^11
"
"29-----------------------------]-]Success  
pts_for props props props
"
"28----------------------------]-]Success  
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2734^9
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2734^9)
"
"27___________________________[+[Begin 
pts_for set props X2741^10
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2734^9
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2734^9)
"
"25_________________________[+[Begin 
pts_for set props X2739^9
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props X2734^9
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
ofType
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) _
 X2734^9
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isa
   (app x4
     (elim_setSigma x9 (x10 \
       setSigma (setPi singleton x11 \ propId singleton star star) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x10 \ x11 \
       pair (setPi singleton x12 \ propId singleton star star) (x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
        (lambda singleton x12 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x10 x12))
        (forall_lam singleton x12 \
          forall_lam singleton x13 \
           forall_lam (propId singleton x12 x13) x14 \
            forall_app (forall_app (forall_app x11 x12) x13) x14)))
   (X2750^9 x9) X2734^9
"
"24________________________[+[Begin 
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) X2751^10
 X2734^9
"
"25_________________________[+[Begin 
of x4 (setPi X2752^10 X2753^10) X2734^9
"
"25-------------------------]-]Success  
of x4
 (setPi
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x10 \ singleton) X2734^9
"
"25_________________________[+[Begin 
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2734^9
"
"26__________________________[+[Begin 
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14)) X2754^10
 X2734^9
"
"27___________________________[+[Begin 
of x9 (setSigma X2755^10 X2756^10) X2734^9
"
"27---------------------------]-]Success  
of x9
 (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2734^9
"
"27___________________________[+[Begin 
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   X2734^9
"
"28____________________________[+[Begin 
ofType (setPi singleton x11 \ propId singleton star star) X2757^11 X2734^9
"
"29_____________________________[+[Begin 
of star X2758^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2759^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2760^11 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29_____________________________[+[Begin 
pts_fun set props X2757^11
"
"30______________________________[+[Begin 
pts_leq set set
"
"30------------------------------]-]Success  
pts_leq set set
"
"30______________________________[+[Begin 
pts_leq props set
"
"30------------------------------]-]Success  
pts_leq props set
"
"29-----------------------------]-]Success  
pts_fun set props set
"
"28----------------------------]-]Success  
ofType (setPi singleton x11 \ propId singleton star star) set X2734^9
"
"28____________________________[+[Begin 
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   X2761^11 X2734^9
"
"29_____________________________[+[Begin 
ofType singleton X2762^12 X2734^9
"
"29-----------------------------]-]Success  
ofType singleton set X2734^9
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2763^12 X2734^9)
"
"30______________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2763^12 X2734^9
"
"31_______________________________[+[Begin 
ofType singleton X2764^13 X2734^9
"
"31-------------------------------]-]Success  
ofType singleton set X2734^9
"
"31_______________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2765^13 X2734^9)
"
"32________________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2765^13 X2734^9
"
"33_________________________________[+[Begin 
ofType (propId singleton x12 x13) X2766^14 X2734^9
"
"34__________________________________[+[Begin 
of x12 X2767^14 int
"
"34----------------------------------]-]Success  
of x12 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
of x13 X2768^14 int
"
"34----------------------------------]-]Success  
of x13 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
(pts_leq set set),
(X2766^14 = props)
"
"34----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"33---------------------------------]-]Success  
ofType (propId singleton x12 x13) props X2734^9
"
"33_________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X2769^14 X2734^9)
"
"34__________________________________[+[Begin 
ofType (propId singleton star star) X2769^14 X2734^9
"
"35___________________________________[+[Begin 
of star X2770^15 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
of star X2771^15 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
(pts_leq set set),
(X2769^14 = props)
"
"35-----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"34----------------------------------]-]Success  
ofType (propId singleton star star) props X2734^9
"
"33---------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props X2734^9)
"
"33_________________________________[+[Begin 
pts_for props props X2765^13
"
"33---------------------------------]-]Success  
pts_for props props props
"
"32--------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props X2734^9
"
"31-------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props X2734^9)
"
"31_______________________________[+[Begin 
pts_for set props X2763^12
"
"31-------------------------------]-]Success  
pts_for set props props
"
"30------------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 X2734^9
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props X2734^9)
"
"29_____________________________[+[Begin 
pts_for set props X2761^11
"
"29-----------------------------]-]Success  
pts_for set props props
"
"28----------------------------]-]Success  
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   props X2734^9
"
"28____________________________[+[Begin 
pts_leq set set
"
"28----------------------------]-]Success  
pts_leq set set
"
"28____________________________[+[Begin 
pts_leq props set
"
"28----------------------------]-]Success  
pts_leq props set
"
"27---------------------------]-]Success  
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   X2734^9
"
"27___________________________[+[Begin 
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     X2734^9
"
"28____________________________[+[Begin 
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14)) X2772^12
 X2734^9
"
"29_____________________________[+[Begin 
of star X2773^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2774^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2775^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29_____________________________[+[Begin 
pts_fun set props X2776^12
"
"30______________________________[+[Begin 
pts_leq set set
"
"30------------------------------]-]Success  
pts_leq set set
"
"30______________________________[+[Begin 
pts_leq props set
"
"30------------------------------]-]Success  
pts_leq props set
"
"29-----------------------------]-]Success  
pts_fun set props set
"
"29_____________________________[+[Begin 
ofType singleton X2777^12 X2734^9
"
"29-----------------------------]-]Success  
ofType singleton set X2734^9
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2778^12 X2734^9)
"
"30______________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2778^12 X2734^9
"
"31_______________________________[+[Begin 
ofType singleton X2779^13 X2734^9
"
"31-------------------------------]-]Success  
ofType singleton set X2734^9
"
"31_______________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2780^13 X2734^9)
"
"32________________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2780^13 X2734^9
"
"33_________________________________[+[Begin 
ofType (propId singleton x12 x13) X2781^14 X2734^9
"
"34__________________________________[+[Begin 
of x12 X2782^14 int
"
"34----------------------------------]-]Success  
of x12 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
of x13 X2783^14 int
"
"34----------------------------------]-]Success  
of x13 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
(pts_leq set set),
(X2781^14 = props)
"
"34----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"33---------------------------------]-]Success  
ofType (propId singleton x12 x13) props X2734^9
"
"33_________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X2784^14 X2734^9)
"
"34__________________________________[+[Begin 
ofType (propId singleton star star) X2784^14 X2734^9
"
"35___________________________________[+[Begin 
of star X2785^15 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
of star X2786^15 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"35___________________________________[+[Begin 
(pts_leq set set),
(X2784^14 = props)
"
"35-----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"34----------------------------------]-]Success  
ofType (propId singleton star star) props X2734^9
"
"33---------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props X2734^9)
"
"33_________________________________[+[Begin 
pts_for props props X2780^13
"
"33---------------------------------]-]Success  
pts_for props props props
"
"32--------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props X2734^9
"
"31-------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props X2734^9)
"
"31_______________________________[+[Begin 
pts_for set props X2778^12
"
"31-------------------------------]-]Success  
pts_for set props props
"
"30------------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 X2734^9
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props X2734^9)
"
"29_____________________________[+[Begin 
pts_for set props X2787^12
"
"29-----------------------------]-]Success  
pts_for set props props
"
"29_____________________________[+[Begin 
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12)) X2788^12 X2734^9
"
"30______________________________[+[Begin 
ofType singleton _ X2734^9
"
"30------------------------------]-]Success  
ofType singleton _ X2734^9
"
"30______________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (X2789^12 x12) X2734^9
"
"31_______________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) X2790^13 X2734^9
"
"32________________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X2791^13 X2790^13) X2734^9
"
"33_________________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X2792^13 X2734^9
"
"34__________________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X2793^13 X2792^13) X2734^9
"
"35___________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X2794^13 X2734^9
"
"36____________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X2795^13 X2734^9
"
"37_____________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X2796^13
 X2734^9
"
"38______________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2797^13 X2796^13) X2734^9
"
"39_______________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2798^13 X2734^9
"
"40________________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2799^13 X2734^9
"
"41_________________________________________[+[Begin 
of (k_propId singleton) X2800^13 X2734^9
"
"41-----------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 X2734^9
"
"41_________________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall X2801^13 X2802^13)
"
"41-----------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
"
"41_________________________________________[+[Begin 
of star X2803^13 X2734^9
"
"41-----------------------------------------]-]Success  
of star singleton X2734^9
"
"41_________________________________________[+[Begin 
conv singleton singleton
"
"41-----------------------------------------]-]Success  
conv singleton singleton
"
"40----------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 X2734^9
"
"40________________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall X2804^13 X2805^13)
"
"40----------------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
"
"40________________________________________[+[Begin 
of star X2806^13 X2734^9
"
"40----------------------------------------]-]Success  
of star singleton X2734^9
"
"40________________________________________[+[Begin 
conv singleton singleton
"
"40----------------------------------------]-]Success  
conv singleton singleton
"
"39---------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 X2734^9
"
"39_______________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies X2797^13 X2796^13)
"
"39---------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
"
"38--------------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 X2734^9
"
"38______________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) X2734^9
"
"39_______________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X2807^13
 X2734^9
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"39---------------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"39_______________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"39---------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"38--------------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"37-------------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14))) int
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall X2808^13 X2809^13)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
"
"37_____________________________________[+[Begin 
of x0 X2810^13 int
"
"37-------------------------------------]-]Success  
of x0 singleton int
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13))) int
"
"36____________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall X2811^13 X2812^13)
"
"36------------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
"
"36____________________________________[+[Begin 
of star X2813^13 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"35___________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2793^13 X2792^13)
"
"35-----------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"34----------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"34__________________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"35___________________________________[+[Begin 
of x1 X2814^13 int
"
"35-----------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"35___________________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"35-----------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"34----------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"33---------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"33_________________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2791^13 X2790^13)
"
"33---------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"32--------------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"32________________________________[+[Begin 
isa (app x10 x12) (propId singleton star x0) int
"
"33_________________________________[+[Begin 
of (app x10 x12) X2815^13 int
"
"34__________________________________[+[Begin 
of x10 (setPi X2816^13 X2817^13) int
"
"34----------------------------------]-]Success  
of x10 (setPi singleton x13 \ propId singleton star x0) int
"
"34__________________________________[+[Begin 
isa x12 singleton int
"
"35___________________________________[+[Begin 
of x12 X2818^13 int
"
"35-----------------------------------]-]Success  
of x12 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
isa x12 singleton int
"
"33---------------------------------]-]Success  
of (app x10 x12) (propId singleton star x0) int
"
"33_________________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"33---------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"32--------------------------------]-]Success  
isa (app x10 x12) (propId singleton star x0) int
"
"31-------------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) (propId singleton star star) int
"
"31_______________________________[+[Begin 
conv (propId singleton star star) (X2789^12 x12)
"
"31-------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"30------------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (propId singleton star star) int
"
"29-----------------------------]-]Success  
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12))
 (setPi singleton x12 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"29-----------------------------]-]Success  
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14) X2819^12 int
"
"30______________________________[+[Begin 
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14) X2820^13 int
"
"31_______________________________[+[Begin 
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14) X2821^14 int
"
"32________________________________[+[Begin 
of x12 X2822^14 int
"
"32--------------------------------]-]Success  
of x12 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of x13 X2823^14 int
"
"32--------------------------------]-]Success  
of x13 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2824^14 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"32________________________________[+[Begin 
of (forall_app (forall_app (forall_app x11 x12) x13) x14) X2825^15 int
"
"33_________________________________[+[Begin 
of (forall_app (forall_app x11 x12) x13) X2826^15 int
"
"34__________________________________[+[Begin 
of (forall_app x11 x12) X2827^15 int
"
"35___________________________________[+[Begin 
of x11 X2828^15 int
"
"35-----------------------------------]-]Success  
of x11
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star) int
"
"35___________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall X2829^15 X2830^15)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
"
"35___________________________________[+[Begin 
of x12 X2831^15 int
"
"35-----------------------------------]-]Success  
of x12 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of (forall_app x11 x12)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall X2832^15 X2833^15)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
"
"34__________________________________[+[Begin 
of x13 X2834^15 int
"
"34----------------------------------]-]Success  
of x13 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (forall_app (forall_app x11 x12) x13)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star) int
"
"33_________________________________[+[Begin 
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall X2835^15 X2836^15)
"
"33---------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star)
"
"33_________________________________[+[Begin 
of x14 X2837^15 int
"
"33---------------------------------]-]Success  
of x14 (propId singleton x12 x13) int
"
"33_________________________________[+[Begin 
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"33---------------------------------]-]Success  
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"32--------------------------------]-]Success  
of (forall_app (forall_app (forall_app x11 x12) x13) x14)
 (propId singleton star star) int
"
"32________________________________[+[Begin 
conv (propId singleton star star) (X2838^14 x14)
"
"32--------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"31-------------------------------]-]Success  
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X2839^13 x13)
"
"31-------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"30------------------------------]-]Success  
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X2840^12 x12)
"
"30------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"29-----------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"28----------------------------]-]Success  
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"28----------------------------]-]Success  
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"27---------------------------]-]Success  
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     int
"
"26--------------------------]-]Success  
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"24------------------------]-]Success  
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) singleton
 int
"
"24________________________[+[Begin 
conv singleton (X2750^9 x9)
"
"24------------------------]-]Success  
conv singleton singleton
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isa
   (app x4
     (elim_setSigma x9 (x10 \
       setSigma (setPi singleton x11 \ propId singleton star star) x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
       x10 \ x11 \
       pair (setPi singleton x12 \ propId singleton star star) (x12 \
        forall singleton x13 \
         forall singleton x14 \
          forall (propId singleton x13 x14) x15 \ propId singleton star star)
        (lambda singleton x12 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x10 x12))
        (forall_lam singleton x12 \
          forall_lam singleton x13 \
           forall_lam (propId singleton x12 x13) x14 \
            forall_app (forall_app (forall_app x11 x12) x13) x14))) singleton
   int
"
"23_______________________[+[Begin 
ofType (setPi singleton x9 \ propId singleton star x0) X2841^9 int
"
"24________________________[+[Begin 
of star X2842^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of x0 X2843^10 int
"
"24------------------------]-]Success  
of x0 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X2844^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
pts_fun set props X2841^9
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pts_fun set props set
"
"23-----------------------]-]Success  
ofType (setPi singleton x9 \ propId singleton star x0) set int
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2845^9 int
"
"24________________________[+[Begin 
ofType singleton X2846^10 int
"
"24------------------------]-]Success  
ofType singleton set int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2847^10 int)
"
"25_________________________[+[Begin 
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2847^10 int
"
"26__________________________[+[Begin 
ofType singleton X2848^11 int
"
"26--------------------------]-]Success  
ofType singleton set int
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2849^11 int)
"
"27___________________________[+[Begin 
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2849^11 int
"
"28____________________________[+[Begin 
ofType (propId singleton x10 x11) X2850^12 int
"
"29_____________________________[+[Begin 
of x10 X2851^12 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x11 X2852^12 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2850^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton x10 x11) props int
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) X2853^12 int)
"
"29_____________________________[+[Begin 
ofType (propId singleton star star) X2853^12 int
"
"30______________________________[+[Begin 
of star X2854^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X2855^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2853^12 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton star star) props int
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) props int)
"
"28____________________________[+[Begin 
pts_for props props X2849^11
"
"28----------------------------]-]Success  
pts_for props props props
"
"27---------------------------]-]Success  
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props int
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"26__________________________[+[Begin 
pts_for set props X2847^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 int
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"24________________________[+[Begin 
pts_for set props X2845^9
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star x0) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props int
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"23_______________________[+[Begin 
of x7 X2856^9 int
"
"23-----------------------]-]Success  
of x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23_______________________[+[Begin 
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) X2857^10
 int
"
"24________________________[+[Begin 
of x4 (setPi X2858^10 X2859^10) int
"
"24------------------------]-]Success  
of x4
 (setPi
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x10 \ singleton) int
"
"24________________________[+[Begin 
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"25_________________________[+[Begin 
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14)) X2860^10 int
"
"26__________________________[+[Begin 
of x9 (setSigma X2861^10 X2862^10) int
"
"26--------------------------]-]Success  
of x9
 (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   int
"
"27___________________________[+[Begin 
ofType (setPi singleton x11 \ propId singleton star star) X2863^11 int
"
"28____________________________[+[Begin 
of star X2864^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X2865^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2866^11 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28____________________________[+[Begin 
pts_fun set props X2863^11
"
"29_____________________________[+[Begin 
pts_leq set set
"
"29-----------------------------]-]Success  
pts_leq set set
"
"29_____________________________[+[Begin 
pts_leq props set
"
"29-----------------------------]-]Success  
pts_leq props set
"
"28----------------------------]-]Success  
pts_fun set props set
"
"27---------------------------]-]Success  
ofType (setPi singleton x11 \ propId singleton star star) set int
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   X2867^11 int
"
"28____________________________[+[Begin 
ofType singleton X2868^12 int
"
"28----------------------------]-]Success  
ofType singleton set int
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2869^12 int)
"
"29_____________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2869^12 int
"
"30______________________________[+[Begin 
ofType singleton X2870^13 int
"
"30------------------------------]-]Success  
ofType singleton set int
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2871^13 int)
"
"31_______________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2871^13 int
"
"32________________________________[+[Begin 
ofType (propId singleton x12 x13) X2872^14 int
"
"33_________________________________[+[Begin 
of x12 X2873^14 int
"
"33---------------------------------]-]Success  
of x12 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
of x13 X2874^14 int
"
"33---------------------------------]-]Success  
of x13 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
(pts_leq set set),
(X2872^14 = props)
"
"33---------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"32--------------------------------]-]Success  
ofType (propId singleton x12 x13) props int
"
"32________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X2875^14 int)
"
"33_________________________________[+[Begin 
ofType (propId singleton star star) X2875^14 int
"
"34__________________________________[+[Begin 
of star X2876^15 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
of star X2877^15 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
(pts_leq set set),
(X2875^14 = props)
"
"34----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"33---------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"32--------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props int)
"
"32________________________________[+[Begin 
pts_for props props X2871^13
"
"32--------------------------------]-]Success  
pts_for props props props
"
"31-------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props int
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"30______________________________[+[Begin 
pts_for set props X2869^12
"
"30------------------------------]-]Success  
pts_for set props props
"
"29-----------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 int
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"28____________________________[+[Begin 
pts_for set props X2867^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 (setPi singleton x12 \ propId singleton star star) =>
  ofType
   (forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   props int
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pi x10 \
 locDecl x10
  (setSigma (setPi singleton x11 \ propId singleton star x0) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
     forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) _
   int
"
"26__________________________[+[Begin 
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     int
"
"27___________________________[+[Begin 
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14)) X2878^12 int
"
"28____________________________[+[Begin 
of star X2879^13 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X2880^13 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2881^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28____________________________[+[Begin 
pts_fun set props X2882^12
"
"29_____________________________[+[Begin 
pts_leq set set
"
"29-----------------------------]-]Success  
pts_leq set set
"
"29_____________________________[+[Begin 
pts_leq props set
"
"29-----------------------------]-]Success  
pts_leq props set
"
"28----------------------------]-]Success  
pts_fun set props set
"
"28____________________________[+[Begin 
ofType singleton X2883^12 int
"
"28----------------------------]-]Success  
ofType singleton set int
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2884^12 int)
"
"29_____________________________[+[Begin 
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2884^12 int
"
"30______________________________[+[Begin 
ofType singleton X2885^13 int
"
"30------------------------------]-]Success  
ofType singleton set int
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2886^13 int)
"
"31_______________________________[+[Begin 
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 X2886^13 int
"
"32________________________________[+[Begin 
ofType (propId singleton x12 x13) X2887^14 int
"
"33_________________________________[+[Begin 
of x12 X2888^14 int
"
"33---------------------------------]-]Success  
of x12 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
of x13 X2889^14 int
"
"33---------------------------------]-]Success  
of x13 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
(pts_leq set set),
(X2887^14 = props)
"
"33---------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"32--------------------------------]-]Success  
ofType (propId singleton x12 x13) props int
"
"32________________________________[+[Begin 
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) X2890^14 int)
"
"33_________________________________[+[Begin 
ofType (propId singleton star star) X2890^14 int
"
"34__________________________________[+[Begin 
of star X2891^15 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
of star X2892^15 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"34__________________________________[+[Begin 
(pts_leq set set),
(X2890^14 = props)
"
"34----------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"33---------------------------------]-]Success  
ofType (propId singleton star star) props int
"
"32--------------------------------]-]Success  
pi x14 \
 locDecl x14 (propId singleton x12 x13) =>
  spy (ofType (propId singleton star star) props int)
"
"32________________________________[+[Begin 
pts_for props props X2886^13
"
"32--------------------------------]-]Success  
pts_for props props props
"
"31-------------------------------]-]Success  
ofType (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 props int
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 singleton =>
  spy
   (ofType
     (forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"30______________________________[+[Begin 
pts_for set props X2884^12
"
"30------------------------------]-]Success  
pts_for set props props
"
"29-----------------------------]-]Success  
ofType
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) props
 int
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star)
     props int)
"
"28____________________________[+[Begin 
pts_for set props X2893^12
"
"28----------------------------]-]Success  
pts_for set props props
"
"28____________________________[+[Begin 
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12)) X2894^12 int
"
"29_____________________________[+[Begin 
ofType singleton _ int
"
"29-----------------------------]-]Success  
ofType singleton _ int
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (X2895^12 x12) int
"
"30______________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) X2896^13 int
"
"31_______________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X2897^13 X2896^13) int
"
"32________________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X2898^13 int
"
"33_________________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X2899^13 X2898^13) int
"
"34__________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X2900^13 int
"
"35___________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X2901^13 int
"
"36____________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X2902^13
 int
"
"37_____________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2903^13 X2902^13) int
"
"38______________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2904^13 int
"
"39_______________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2905^13 int
"
"40________________________________________[+[Begin 
of (k_propId singleton) X2906^13 int
"
"40----------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 int
"
"40________________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall X2907^13 X2908^13)
"
"40----------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (forall singleton x15 \
       forall singleton x16 \
        implies (propId singleton x15 x16)
         (implies (propId singleton x13 x15) (propId singleton x14 x16))))
"
"40________________________________________[+[Begin 
of star X2909^13 int
"
"40----------------------------------------]-]Success  
of star singleton int
"
"40________________________________________[+[Begin 
conv singleton singleton
"
"40----------------------------------------]-]Success  
conv singleton singleton
"
"39---------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 int
"
"39_______________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall X2910^13 X2911^13)
"
"39---------------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
 (forall singleton x13 \
   implies (propId singleton star x13)
    (forall singleton x14 \
      forall singleton x15 \
       implies (propId singleton x14 x15)
        (implies (propId singleton star x14) (propId singleton x13 x15))))
"
"39_______________________________________[+[Begin 
of star X2912^13 int
"
"39---------------------------------------]-]Success  
of star singleton int
"
"39_______________________________________[+[Begin 
conv singleton singleton
"
"39---------------------------------------]-]Success  
conv singleton singleton
"
"38--------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 int
"
"38______________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies X2903^13 X2902^13)
"
"38--------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
"
"37-------------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x13 \
     forall singleton x14 \
      implies (propId singleton x13 x14)
       (implies (propId singleton star x13) (propId singleton star x14))))
 int
"
"37_____________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"38______________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X2913^13 int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"38--------------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"38______________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"38--------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"37-------------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"36------------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14))) int
"
"36____________________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall X2914^13 X2915^13)
"
"36------------------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
 (forall singleton x13 \
   forall singleton x14 \
    implies (propId singleton x13 x14)
     (implies (propId singleton star x13) (propId singleton star x14)))
"
"36____________________________________[+[Begin 
of x0 X2916^13 int
"
"36------------------------------------]-]Success  
of x0 singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13))) int
"
"35___________________________________[+[Begin 
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall X2917^13 X2918^13)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
 (forall singleton x13 \
   implies (propId singleton x0 x13)
    (implies (propId singleton star x0) (propId singleton star x13)))
"
"35___________________________________[+[Begin 
of star X2919^13 int
"
"35-----------------------------------]-]Success  
of star singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"34__________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2899^13 X2898^13)
"
"34----------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"33---------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"33_________________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"34__________________________________[+[Begin 
of x1 X2920^13 int
"
"34----------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"34__________________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"34----------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"33---------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"32--------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"32________________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2897^13 X2896^13)
"
"32--------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"31-------------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"31_______________________________[+[Begin 
isa (app x10 x12) (propId singleton star x0) int
"
"32________________________________[+[Begin 
of (app x10 x12) X2921^13 int
"
"33_________________________________[+[Begin 
of x10 (setPi X2922^13 X2923^13) int
"
"33---------------------------------]-]Success  
of x10 (setPi singleton x13 \ propId singleton star x0) int
"
"33_________________________________[+[Begin 
isa x12 singleton int
"
"34__________________________________[+[Begin 
of x12 X2924^13 int
"
"34----------------------------------]-]Success  
of x12 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
isa x12 singleton int
"
"32--------------------------------]-]Success  
of (app x10 x12) (propId singleton star x0) int
"
"32________________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"32--------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"31-------------------------------]-]Success  
isa (app x10 x12) (propId singleton star x0) int
"
"30------------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x10 x12)) (propId singleton star star) int
"
"30______________________________[+[Begin 
conv (propId singleton star star) (X2895^12 x12)
"
"30------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x10 x12)) (propId singleton star star) int
"
"28----------------------------]-]Success  
of
 (lambda singleton x12 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x10 x12))
 (setPi singleton x12 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"28----------------------------]-]Success  
conv (setPi singleton x12 \ propId singleton star star)
 (setPi singleton x12 \ propId singleton star star)
"
"28____________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14) X2925^12 int
"
"29_____________________________[+[Begin 
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14) X2926^13 int
"
"30______________________________[+[Begin 
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14) X2927^14 int
"
"31_______________________________[+[Begin 
of x12 X2928^14 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x13 X2929^14 int
"
"31-------------------------------]-]Success  
of x13 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2930^14 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31_______________________________[+[Begin 
of (forall_app (forall_app (forall_app x11 x12) x13) x14) X2931^15 int
"
"32________________________________[+[Begin 
of (forall_app (forall_app x11 x12) x13) X2932^15 int
"
"33_________________________________[+[Begin 
of (forall_app x11 x12) X2933^15 int
"
"34__________________________________[+[Begin 
of x11 X2934^15 int
"
"34----------------------------------]-]Success  
of x11
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall X2935^15 X2936^15)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
 (forall singleton x15 \
   forall singleton x16 \
    forall (propId singleton x15 x16) x17 \ propId singleton star star)
"
"34__________________________________[+[Begin 
of x12 X2937^15 int
"
"34----------------------------------]-]Success  
of x12 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (forall_app x11 x12)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall X2938^15 X2939^15)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
 (forall singleton x15 \
   forall (propId singleton x12 x15) x16 \ propId singleton star star)
"
"33_________________________________[+[Begin 
of x13 X2940^15 int
"
"33---------------------------------]-]Success  
of x13 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of (forall_app (forall_app x11 x12) x13)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall X2941^15 X2942^15)
"
"32--------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x15 \ propId singleton star star)
 (forall (propId singleton x12 x13) x15 \ propId singleton star star)
"
"32________________________________[+[Begin 
of x14 X2943^15 int
"
"32--------------------------------]-]Success  
of x14 (propId singleton x12 x13) int
"
"32________________________________[+[Begin 
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"32--------------------------------]-]Success  
conv (propId singleton x12 x13) (propId singleton x12 x13)
"
"31-------------------------------]-]Success  
of (forall_app (forall_app (forall_app x11 x12) x13) x14)
 (propId singleton star star) int
"
"31_______________________________[+[Begin 
conv (propId singleton star star) (X2944^14 x14)
"
"31-------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"30------------------------------]-]Success  
of
 (forall_lam (propId singleton x12 x13) x14 \
   forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X2945^13 x13)
"
"30------------------------------]-]Success  
conv (forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"29-----------------------------]-]Success  
of
 (forall_lam singleton x13 \
   forall_lam (propId singleton x12 x13) x14 \
    forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (X2946^12 x12)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"28----------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam singleton x13 \
    forall_lam (propId singleton x12 x13) x14 \
     forall_app (forall_app (forall_app x11 x12) x13) x14)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"28----------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (forall singleton x12 \
   forall singleton x13 \
    forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"27---------------------------]-]Success  
of
 (pair (setPi singleton x12 \ propId singleton star star) (x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
   (lambda singleton x12 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x10 x12))
   (forall_lam singleton x12 \
     forall_lam singleton x13 \
      forall_lam (propId singleton x12 x13) x14 \
       forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"27---------------------------]-]Success  
conv
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
   forall singleton x13 \
    forall singleton x14 \
     forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"26--------------------------]-]Success  
pi x10 \
 pi x11 \
  locDecl x10 (setPi singleton x12 \ propId singleton star x0) =>
   locDecl x11
    (forall singleton x12 \
      forall singleton x13 \
       forall (propId singleton x12 x13) x14 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x12 \ propId singleton star star) (x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
       (lambda singleton x12 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1)
          (app x10 x12))
       (forall_lam singleton x12 \
         forall_lam singleton x13 \
          forall_lam (propId singleton x12 x13) x14 \
           forall_app (forall_app (forall_app x11 x12) x13) x14))
     (setSigma (setPi singleton x12 \ propId singleton star star) x12 \
       forall singleton x13 \
        forall singleton x14 \
         forall (propId singleton x13 x14) x15 \ propId singleton star star)
     int
"
"25-------------------------]-]Success  
of
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"24------------------------]-]Success  
isa
 (elim_setSigma x9 (x10 \
   setSigma (setPi singleton x11 \ propId singleton star star) x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
   x10 \ x11 \
   pair (setPi singleton x12 \ propId singleton star star) (x12 \
    forall singleton x13 \
     forall singleton x14 \
      forall (propId singleton x13 x14) x15 \ propId singleton star star)
    (lambda singleton x12 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x10 x12))
    (forall_lam singleton x12 \
      forall_lam singleton x13 \
       forall_lam (propId singleton x12 x13) x14 \
        forall_app (forall_app (forall_app x11 x12) x13) x14))
 (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"23-----------------------]-]Success  
of
 (app x4
   (elim_setSigma x9 (x10 \
     setSigma (setPi singleton x11 \ propId singleton star star) x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x10 \ x11 \
     pair (setPi singleton x12 \ propId singleton star star) (x12 \
      forall singleton x13 \
       forall singleton x14 \
        forall (propId singleton x13 x14) x15 \ propId singleton star star)
      (lambda singleton x12 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x10 x12))
      (forall_lam singleton x12 \
        forall_lam singleton x13 \
         forall_lam (propId singleton x12 x13) x14 \
          forall_app (forall_app (forall_app x11 x12) x13) x14))) singleton
 int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
ofType (setPi singleton x9 \ propId singleton star star) X2947^9 X2948^9
"
"24________________________[+[Begin 
of star X2949^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of star X2950^10 int
"
"24------------------------]-]Success  
of star singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X2951^9 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
pts_fun set props X2947^9
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pts_fun set props set
"
"23-----------------------]-]Success  
ofType (setPi singleton x9 \ propId singleton star star) set X2948^9
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2952^9 X2948^9
"
"24________________________[+[Begin 
ofType singleton X2953^10 X2948^9
"
"24------------------------]-]Success  
ofType singleton set X2948^9
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2954^10 X2948^9)
"
"25_________________________[+[Begin 
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2954^10 X2948^9
"
"26__________________________[+[Begin 
ofType singleton X2955^11 X2948^9
"
"26--------------------------]-]Success  
ofType singleton set X2948^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2956^11 X2948^9)
"
"27___________________________[+[Begin 
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2956^11 X2948^9
"
"28____________________________[+[Begin 
ofType (propId singleton x10 x11) X2957^12 X2948^9
"
"29_____________________________[+[Begin 
of x10 X2958^12 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x11 X2959^12 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2957^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
ofType (propId singleton x10 x11) props X2948^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) X2960^12 X2948^9)
"
"29_____________________________[+[Begin 
ofType (propId singleton star star) X2960^12 X2948^9
"
"30______________________________[+[Begin 
of star X2961^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of star X2962^13 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2960^12 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
ofType (propId singleton star star) props X2948^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (ofType (propId singleton star star) props X2948^9)
"
"28____________________________[+[Begin 
pts_for props props X2956^11
"
"28----------------------------]-]Success  
pts_for props props props
"
"27---------------------------]-]Success  
ofType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2948^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2948^9)
"
"26__________________________[+[Begin 
pts_for set props X2954^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
ofType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2948^9
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (ofType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2948^9)
"
"24________________________[+[Begin 
pts_for set props X2952^9
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  ofType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props X2948^9
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"23_______________________[+[Begin 
of
 (elim_setSigma x7 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X2963^9
 X2948^9
"
"24________________________[+[Begin 
of x7 (setSigma X2964^9 X2965^9) X2948^9
"
"24------------------------]-]Success  
of x7
 (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2948^9
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2948^9
"
"25_________________________[+[Begin 
ofType (setPi singleton x10 \ propId singleton star star) X2966^10 X2948^9
"
"26__________________________[+[Begin 
of star X2967^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2968^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2969^10 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2966^10
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"25-------------------------]-]Success  
ofType (setPi singleton x10 \ propId singleton star star) set X2948^9
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X2970^10 X2948^9
"
"26__________________________[+[Begin 
ofType singleton X2971^11 X2948^9
"
"26--------------------------]-]Success  
ofType singleton set X2948^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2972^11 X2948^9)
"
"27___________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2972^11 X2948^9
"
"28____________________________[+[Begin 
ofType singleton X2973^12 X2948^9
"
"28----------------------------]-]Success  
ofType singleton set X2948^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2974^12 X2948^9)
"
"29_____________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2974^12 X2948^9
"
"30______________________________[+[Begin 
ofType (propId singleton x11 x12) X2975^13 X2948^9
"
"31_______________________________[+[Begin 
of x11 X2976^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2977^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2975^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton x11 x12) props X2948^9
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2978^13 X2948^9)
"
"31_______________________________[+[Begin 
ofType (propId singleton star star) X2978^13 X2948^9
"
"32________________________________[+[Begin 
of star X2979^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2980^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2978^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
ofType (propId singleton star star) props X2948^9
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props X2948^9)
"
"30______________________________[+[Begin 
pts_for props props X2974^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2948^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2948^9)
"
"28____________________________[+[Begin 
pts_for set props X2972^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2948^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2948^9)
"
"26__________________________[+[Begin 
pts_for set props X2970^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  ofType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props X2948^9
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9
  (setSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  ofType
   (setSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2948^9
"
"24________________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2948^9
"
"25_________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X2981^11
 X2948^9
"
"26__________________________[+[Begin 
of star X2982^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2983^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2984^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2985^11
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"26__________________________[+[Begin 
ofType singleton X2986^11 X2948^9
"
"26--------------------------]-]Success  
ofType singleton set X2948^9
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2987^11 X2948^9)
"
"27___________________________[+[Begin 
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2987^11 X2948^9
"
"28____________________________[+[Begin 
ofType singleton X2988^12 X2948^9
"
"28----------------------------]-]Success  
ofType singleton set X2948^9
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2989^12 X2948^9)
"
"29_____________________________[+[Begin 
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2989^12 X2948^9
"
"30______________________________[+[Begin 
ofType (propId singleton x11 x12) X2990^13 X2948^9
"
"31_______________________________[+[Begin 
of x11 X2991^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2992^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2990^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
ofType (propId singleton x11 x12) props X2948^9
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) X2993^13 X2948^9)
"
"31_______________________________[+[Begin 
ofType (propId singleton star star) X2993^13 X2948^9
"
"32________________________________[+[Begin 
of star X2994^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2995^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2993^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
ofType (propId singleton star star) props X2948^9
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (ofType (propId singleton star star) props X2948^9)
"
"30______________________________[+[Begin 
pts_for props props X2989^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
ofType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2948^9
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (ofType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2948^9)
"
"28____________________________[+[Begin 
pts_for set props X2987^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
ofType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2948^9
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (ofType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2948^9)
"
"26__________________________[+[Begin 
pts_for set props X2996^11
"
"26--------------------------]-]Success  
pts_for set props props
"
"26__________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11)) X2997^11 X2948^9
"
"27___________________________[+[Begin 
ofType singleton _ X2948^9
"
"27---------------------------]-]Success  
ofType singleton _ X2948^9
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (X2998^11 x11) X2948^9
"
"28____________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) X2999^12 X2948^9
"
"29_____________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) (implies X3000^12 X2999^12) X2948^9
"
"30______________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1) X3001^12 X2948^9
"
"31_______________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) (implies X3002^12 X3001^12) X2948^9
"
"32________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star) X3003^12 X2948^9
"
"33_________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 X3004^12 X2948^9
"
"34__________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star))) X3005^12
 X2948^9
"
"35___________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X3006^12 X3005^12) X2948^9
"
"36____________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X3007^12 X2948^9
"
"37_____________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X3008^12 X2948^9
"
"38______________________________________[+[Begin 
of (k_propId singleton) X3009^12 X2948^9
"
"38--------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 X2948^9
"
"38______________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X3010^12 X3011^12)
"
"38--------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"38______________________________________[+[Begin 
of star X3012^12 X2948^9
"
"38--------------------------------------]-]Success  
of star singleton X2948^9
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 X2948^9
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X3013^12 X3014^12)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"37_____________________________________[+[Begin 
of star X3015^12 X2948^9
"
"37-------------------------------------]-]Success  
of star singleton X2948^9
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2948^9
"
"36____________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X3006^12 X3005^12)
"
"36------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"35-----------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2948^9
"
"35___________________________________[+[Begin 
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) X2948^9
"
"36____________________________________[+[Begin 
of (fixMe "prova di riflessivita'" (propId singleton star star)) X3016^12
 X2948^9
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di riflessivita'"
"propId singleton star star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"36------------------------------------]-]Success  
of (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"36____________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"36------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"35-----------------------------------]-]Success  
isa (fixMe "prova di riflessivita'" (propId singleton star star))
 (propId singleton star star) int
"
"34----------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (fixMe "prova di riflessivita'" (propId singleton star star)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X3017^12 X3018^12)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"34__________________________________[+[Begin 
of x0 X3019^12 int
"
"34----------------------------------]-]Success  
of x0 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X3020^12 X3021^12)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"33_________________________________[+[Begin 
of star X3022^12 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"32________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X3002^12 X3001^12)
"
"32--------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"31-------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
   star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"31_______________________________[+[Begin 
isa x1 (propId singleton x0 star) int
"
"32________________________________[+[Begin 
of x1 X3023^12 int
"
"32--------------------------------]-]Success  
of x1 (propId singleton x0 star) int
"
"32________________________________[+[Begin 
conv (propId singleton x0 star) (propId singleton x0 star)
"
"32--------------------------------]-]Success  
conv (propId singleton x0 star) (propId singleton x0 star)
"
"31-------------------------------]-]Success  
isa x1 (propId singleton x0 star) int
"
"30------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"30______________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X3000^12 X2999^12)
"
"30------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"29-----------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
     star) x1)
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"29_____________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
of (app x9 x11) X3024^12 int
"
"31_______________________________[+[Begin 
of x9 (setPi X3025^12 X3026^12) int
"
"31-------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"31_______________________________[+[Begin 
isa x11 singleton int
"
"32________________________________[+[Begin 
of x11 X3027^12 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
isa x11 singleton int
"
"30------------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"30------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"29-----------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"28----------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
       star) x1) (app x9 x11)) (propId singleton star star) int
"
"28____________________________[+[Begin 
conv (propId singleton star star) (X2998^11 x11)
"
"28----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (fixMe "prova di riflessivita'" (propId singleton star star)))
           x0) star) x1) (app x9 x11)) (propId singleton star star) int
"
"26--------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (fixMe "prova di riflessivita'" (propId singleton star star))) x0)
        star) x1) (app x9 x11))
 (setPi singleton x11 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26__________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X3028^11 int
"
"27___________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X3029^12 int
"
"28____________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X3030^13 int
"
"29_____________________________[+[Begin 
of x11 X3031^13 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x12 X3032^13 int
"
"29-----------------------------]-]Success  
of x12 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X3033^13 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29_____________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X3034^14 int
"
"30______________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X3035^14 int
"
"31_______________________________[+[Begin 
of (forall_app x10 x11) X3036^14 int
"
"32________________________________[+[Begin 
of x10 X3037^14 int
"
"32--------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X3038^14 X3039^14)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"32________________________________[+[Begin 
of x11 X3040^14 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X3041^14 X3042^14)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x12 X3043^14 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X3044^14 X3045^14)
"
"30------------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"30______________________________[+[Begin 
of x13 X3046^14 int
"
"30------------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"30______________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"30------------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"29-----------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (propId singleton star star) (X3047^13 x13)
"
"29-----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"28----------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X3048^12 x12)
"
"28----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X3049^11 x11)
"
"27---------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (fixMe "prova di riflessivita'" (propId singleton star star)))
            x0) star) x1) (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"24------------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (fixMe "prova di riflessivita'"
                    (propId singleton star star))) x0) star) x1) (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (setSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"23-----------------------]-]Success  
of
 (elim_setSigma x7 (x9 \
   setSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (fixMe "prova di riflessivita'" (propId singleton star star)))
             x0) star) x1) (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (setSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
hnf
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x7)
 (app x4
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
"
"22______________________[+[Begin 
dconv
 (app x4
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (app x4
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
"
"22----------------------]-]Success  
dconv
 (app x4
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (app x4
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
"
"21---------------------]-]Success  
conv
 (app x4
   (elim_setSigma x7 (x9 \
     setSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (fixMe "prova di riflessivita'" (propId singleton star star)))
               x0) star) x1) (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (app
   (lambda
     (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x4
      (elim_setSigma x9 (x10 \
        setSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14))) x7)
"
"20--------------------]-]Success  
dconv
 (propId singleton
   (app x4
     (elim_setSigma x6 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (app x4
     (elim_setSigma x7 (x9 \
       setSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (fixMe "prova di riflessivita'"
                     (propId singleton star star))) x0) star) x1)
           (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (propId singleton
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
   (app
     (lambda
       (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       app x4
        (elim_setSigma x9 (x10 \
          setSigma (setPi singleton x11 \ propId singleton star star) x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star) x10 \ x11 \
          pair (setPi singleton x12 \ propId singleton star star) (x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star)
           (lambda singleton x12 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x10 x12))
           (forall_lam singleton x12 \
             forall_lam singleton x13 \
              forall_lam (propId singleton x12 x13) x14 \
               forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"19-------------------]-]Success  
dconv
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x4
      (elim_setSigma x6 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x4
      (elim_setSigma x7 (x9 \
        setSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
    (app
      (lambda
        (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        app x4
         (elim_setSigma x9 (x10 \
           setSigma (setPi singleton x11 \ propId singleton star star) x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star) x10 \ x11 \
           pair (setPi singleton x12 \ propId singleton star star) (x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star)
            (lambda singleton x12 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x10 x12))
            (forall_lam singleton x12 \
              forall_lam singleton x13 \
               forall_lam (propId singleton x12 x13) x14 \
                forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"18------------------]-]Success  
dconv
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app x4
       (elim_setSigma x6 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (app x4
       (elim_setSigma x7 (x9 \
         setSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall
   (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   forall (forall singleton x8 \ propId singleton star star) x8 \
    propId singleton
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
     (app
       (lambda
         (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         app x4
          (elim_setSigma x9 (x10 \
            setSigma (setPi singleton x11 \ propId singleton star star) x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star) x10 \ x11 \
            pair (setPi singleton x12 \ propId singleton star star) (x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star)
             (lambda singleton x12 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x10 x12))
             (forall_lam singleton x12 \
               forall_lam singleton x13 \
                forall_lam (propId singleton x12 x13) x14 \
                 forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"17-----------------]-]Success  
dconv
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app x4
        (elim_setSigma x6 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (app x4
        (elim_setSigma x7 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"16----------------]-]Success  
conv
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app x4
        (elim_setSigma x6 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (app x4
        (elim_setSigma x7 (x9 \
          setSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (fixMe "prova di riflessivita'"
                        (propId singleton star star))) x0) star) x1)
              (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall
   (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall (forall singleton x8 \ propId singleton star star) x8 \
     propId singleton
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x6)
      (app
        (lambda
          (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          app x4
           (elim_setSigma x9 (x10 \
             setSigma (setPi singleton x11 \ propId singleton star star)
              x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x10 \ x11 \
             pair (setPi singleton x12 \ propId singleton star star) (x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star)
              (lambda singleton x12 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x10 x12))
              (forall_lam singleton x12 \
                forall_lam singleton x13 \
                 forall_lam (propId singleton x12 x13) x14 \
                  forall_app (forall_app (forall_app x11 x12) x13) x14))) x7))
"
"15---------------]-]Success  
of
 (pair
   (setPi
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) (x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
   (lambda
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     app x4
      (elim_setSigma x6 (x7 \
        setSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x7 \ x8 \
        pair (setPi singleton x9 \ propId singleton star star) (x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
         (lambda singleton x9 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (fixMe "prova di riflessivita'"
                      (propId singleton star star))) x0) star) x1)
            (app x7 x9))
         (forall_lam singleton x9 \
           forall_lam singleton x10 \
            forall_lam (propId singleton x9 x10) x11 \
             forall_app (forall_app (forall_app x8 x9) x10) x11)))
   (forall_lam
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall_lam
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall_lam (forall singleton x8 \ propId singleton star star) x8 \
       forall_app
        (forall_app
          (forall_app x5
            (elim_setSigma x6 (x9 \
              setSigma (setPi singleton x10 \ propId singleton star star)
               x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x9 \ x10 \
              pair (setPi singleton x11 \ propId singleton star star) (x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star)
               (lambda singleton x11 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x0) star) x1)
                  (app x9 x11))
               (forall_lam singleton x11 \
                 forall_lam singleton x12 \
                  forall_lam (propId singleton x11 x12) x13 \
                   forall_app (forall_app (forall_app x10 x11) x12) x13)))
          (elim_setSigma x7 (x9 \
            setSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13)))
        (forall_lam singleton x9 \ forall_app x8 x9)))
 (setSigma
   (setPi
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8)) int
"
"15_______________[+[Begin 
conv
 (setSigma
   (setPi
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
 (setSigma
   (setPi
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
"
"15---------------]-]Success  
conv
 (setSigma
   (setPi
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
 (setSigma
   (setPi
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
"
"14--------------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4
   (setPi
     (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) =>
   locDecl x5
    (forall
      (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (setSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x4 x6) (app x4 x7)) =>
    isa
     (pair
       (setPi
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) (x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8))
       (lambda
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         app x4
          (elim_setSigma x6 (x7 \
            setSigma (setPi singleton x8 \ propId singleton star star) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x7 \ x8 \
            pair (setPi singleton x9 \ propId singleton star star) (x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star)
             (lambda singleton x9 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star)
                        (fixMe "prova di riflessivita'"
                          (propId singleton star star))) x0) star) x1)
                (app x7 x9))
             (forall_lam singleton x9 \
               forall_lam singleton x10 \
                forall_lam (propId singleton x9 x10) x11 \
                 forall_app (forall_app (forall_app x8 x9) x10) x11)))
       (forall_lam
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall_lam
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall_lam (forall singleton x8 \ propId singleton star star) x8 \
           forall_app
            (forall_app
              (forall_app x5
                (elim_setSigma x6 (x9 \
                  setSigma (setPi singleton x10 \ propId singleton star star)
                   x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star) x9 \ x10 \
                  pair (setPi singleton x11 \ propId singleton star star)
                   (x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton star star)
                   (lambda singleton x11 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (fixMe "prova di riflessivita'"
                                (propId singleton star star))) x0) star) x1)
                      (app x9 x11))
                   (forall_lam singleton x11 \
                     forall_lam singleton x12 \
                      forall_lam (propId singleton x11 x12) x13 \
                       forall_app (forall_app (forall_app x10 x11) x12) x13)))
              (elim_setSigma x7 (x9 \
                setSigma (setPi singleton x10 \ propId singleton star star)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x9 \ x10 \
                pair (setPi singleton x11 \ propId singleton star star)
                 (x11 \
                 forall singleton x12 \
                  forall singleton x13 \
                   forall (propId singleton x12 x13) x14 \
                    propId singleton star star)
                 (lambda singleton x11 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x0) star) x1)
                    (app x9 x11))
                 (forall_lam singleton x11 \
                   forall_lam singleton x12 \
                    forall_lam (propId singleton x11 x12) x13 \
                     forall_app (forall_app (forall_app x10 x11) x12) x13)))
            (forall_lam singleton x9 \ forall_app x8 x9)))
     (setSigma
       (setPi
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8)) int
"
"13-------------]-]Success  
of
 (elim_setSigma
   (pair
     (setPi
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ singleton) (x4 \
     forall
      (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6))
     (lambda
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ star)
     (forall_lam
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall_lam
        (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall_lam (forall singleton x6 \ propId singleton star star) x6 \
         fixMe "prova di riflessivita'" (propId singleton star star))) (x4 \
   setSigma
    (setPi
      (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
   pair
    (setPi
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \ singleton) (x6 \
    forall
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall (forall singleton x9 \ propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8))
    (lambda
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      app x4
       (elim_setSigma x6 (x7 \
         setSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
         x7 \ x8 \
         pair (setPi singleton x9 \ propId singleton star star) (x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star)
          (lambda singleton x9 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x7 x9))
          (forall_lam singleton x9 \
            forall_lam singleton x10 \
             forall_lam (propId singleton x9 x10) x11 \
              forall_app (forall_app (forall_app x8 x9) x10) x11)))
    (forall_lam
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall_lam
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall_lam (forall singleton x8 \ propId singleton star star) x8 \
        forall_app
         (forall_app
           (forall_app x5
             (elim_setSigma x6 (x9 \
               setSigma (setPi singleton x10 \ propId singleton star star)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x9 \ x10 \
               pair (setPi singleton x11 \ propId singleton star star) (x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star)
                (lambda singleton x11 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x9 x11))
                (forall_lam singleton x11 \
                  forall_lam singleton x12 \
                   forall_lam (propId singleton x11 x12) x13 \
                    forall_app (forall_app (forall_app x10 x11) x12) x13)))
           (elim_setSigma x7 (x9 \
             setSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13)))
         (forall_lam singleton x9 \ forall_app x8 x9)))
 (setSigma
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"13_____________[+[Begin 
conv
 (setSigma
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (setSigma
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"13-------------]-]Success  
conv
 (setSigma
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (setSigma
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"12------------]-]Success  
isa
 (elim_setSigma
   (pair
     (setPi
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ singleton) (x4 \
     forall
      (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6))
     (lambda
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ star)
     (forall_lam
       (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall_lam
        (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall_lam (forall singleton x6 \ propId singleton star star) x6 \
         fixMe "prova di riflessivita'" (propId singleton star star))) (x4 \
   setSigma
    (setPi
      (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
   pair
    (setPi
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \ singleton) (x6 \
    forall
     (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall
      (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall (forall singleton x9 \ propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8))
    (lambda
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      app x4
       (elim_setSigma x6 (x7 \
         setSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
         x7 \ x8 \
         pair (setPi singleton x9 \ propId singleton star star) (x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star)
          (lambda singleton x9 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (fixMe "prova di riflessivita'"
                       (propId singleton star star))) x0) star) x1)
             (app x7 x9))
          (forall_lam singleton x9 \
            forall_lam singleton x10 \
             forall_lam (propId singleton x9 x10) x11 \
              forall_app (forall_app (forall_app x8 x9) x10) x11)))
    (forall_lam
      (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall_lam
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall_lam (forall singleton x8 \ propId singleton star star) x8 \
        forall_app
         (forall_app
           (forall_app x5
             (elim_setSigma x6 (x9 \
               setSigma (setPi singleton x10 \ propId singleton star star)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x9 \ x10 \
               pair (setPi singleton x11 \ propId singleton star star) (x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star)
                (lambda singleton x11 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x9 x11))
                (forall_lam singleton x11 \
                  forall_lam singleton x12 \
                   forall_lam (propId singleton x11 x12) x13 \
                    forall_app (forall_app (forall_app x10 x11) x12) x13)))
           (elim_setSigma x7 (x9 \
             setSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13)))
         (forall_lam singleton x9 \ forall_app x8 x9)))
 (setSigma
   (setPi
     (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"11-----------]-]Success  
of
 (app
   (elim_setSigma x3 (x4 \
     setPi
      (setSigma
        (setPi
          (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
     x5 \ x4)
   (elim_setSigma
     (pair
       (setPi
         (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) (x4 \
       forall
        (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6))
       (lambda
         (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ star)
       (forall_lam
         (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \
         forall_lam
          (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall_lam (forall singleton x6 \ propId singleton star star) x6 \
           fixMe "prova di riflessivita'" (propId singleton star star)))
     (x4 \
     setSigma
      (setPi
        (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \ singleton) x5 \
      forall
       (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall
        (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall (forall singleton x8 \ propId singleton star star) x8 \
         propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
     pair
      (setPi
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) (x6 \
      forall
       (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8))
      (lambda
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        app x4
         (elim_setSigma x6 (x7 \
           setSigma (setPi singleton x8 \ propId singleton star star) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x7 \ x8 \
           pair (setPi singleton x9 \ propId singleton star star) (x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star)
            (lambda singleton x9 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star)
                       (fixMe "prova di riflessivita'"
                         (propId singleton star star))) x0) star) x1)
               (app x7 x9))
            (forall_lam singleton x9 \
              forall_lam singleton x10 \
               forall_lam (propId singleton x9 x10) x11 \
                forall_app (forall_app (forall_app x8 x9) x10) x11)))
      (forall_lam
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall_lam
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall_lam (forall singleton x8 \ propId singleton star star) x8 \
          forall_app
           (forall_app
             (forall_app x5
               (elim_setSigma x6 (x9 \
                 setSigma (setPi singleton x10 \ propId singleton star star)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x9 \ x10 \
                 pair (setPi singleton x11 \ propId singleton star star)
                  (x11 \
                  forall singleton x12 \
                   forall singleton x13 \
                    forall (propId singleton x12 x13) x14 \
                     propId singleton star star)
                  (lambda singleton x11 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x0) star) x1)
                     (app x9 x11))
                  (forall_lam singleton x11 \
                    forall_lam singleton x12 \
                     forall_lam (propId singleton x11 x12) x13 \
                      forall_app (forall_app (forall_app x10 x11) x12) x13)))
             (elim_setSigma x7 (x9 \
               setSigma (setPi singleton x10 \ propId singleton star star)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x9 \ x10 \
               pair (setPi singleton x11 \ propId singleton star star) (x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star)
                (lambda singleton x11 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x9 x11))
                (forall_lam singleton x11 \
                  forall_lam singleton x12 \
                   forall_lam (propId singleton x11 x12) x13 \
                    forall_app (forall_app (forall_app x10 x11) x12) x13)))
           (forall_lam singleton x9 \ forall_app x8 x9)))) singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of star X3050^4 int
"
"11-----------]-]Success  
of star singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X1205^3 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
ofType
 (propId singleton
   (app
     (elim_setSigma x3 (x4 \
       setPi
        (setSigma
          (setPi
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \ singleton) x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall (forall singleton x8 \ propId singleton star star) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
       x5 \ x4)
     (elim_setSigma
       (pair
         (setPi
           (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ singleton) (x4 \
         forall
          (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall (forall singleton x7 \ propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6))
         (lambda
           (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ star)
         (forall_lam
           (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall_lam
            (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall_lam (forall singleton x6 \ propId singleton star star)
             x6 \ fixMe "prova di riflessivita'" (propId singleton star star)))
       (x4 \
       setSigma
        (setPi
          (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
       pair
        (setPi
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ singleton) (x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall
          (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall (forall singleton x9 \ propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8))
        (lambda
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          app x4
           (elim_setSigma x6 (x7 \
             setSigma (setPi singleton x8 \ propId singleton star star) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x7 \ x8 \
             pair (setPi singleton x9 \ propId singleton star star) (x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star)
              (lambda singleton x9 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star)
                         (fixMe "prova di riflessivita'"
                           (propId singleton star star))) x0) star) x1)
                 (app x7 x9))
              (forall_lam singleton x9 \
                forall_lam singleton x10 \
                 forall_lam (propId singleton x9 x10) x11 \
                  forall_app (forall_app (forall_app x8 x9) x10) x11)))
        (forall_lam
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall_lam
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall_lam (forall singleton x8 \ propId singleton star star) x8 \
            forall_app
             (forall_app
               (forall_app x5
                 (elim_setSigma x6 (x9 \
                   setSigma
                    (setPi singleton x10 \ propId singleton star star) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton star star) x9 \ x10 \
                   pair (setPi singleton x11 \ propId singleton star star)
                    (x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton star star)
                    (lambda singleton x11 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (fixMe "prova di riflessivita'"
                                 (propId singleton star star))) x0) star) x1)
                       (app x9 x11))
                    (forall_lam singleton x11 \
                      forall_lam singleton x12 \
                       forall_lam (propId singleton x11 x12) x13 \
                        forall_app (forall_app (forall_app x10 x11) x12) x13)))
               (elim_setSigma x7 (x9 \
                 setSigma (setPi singleton x10 \ propId singleton star star)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x9 \ x10 \
                 pair (setPi singleton x11 \ propId singleton star star)
                  (x11 \
                  forall singleton x12 \
                   forall singleton x13 \
                    forall (propId singleton x12 x13) x14 \
                     propId singleton star star)
                  (lambda singleton x11 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x0) star) x1)
                     (app x9 x11))
                  (forall_lam singleton x11 \
                    forall_lam singleton x12 \
                     forall_lam (propId singleton x11 x12) x13 \
                      forall_app (forall_app (forall_app x10 x11) x12) x13)))
             (forall_lam singleton x9 \ forall_app x8 x9)))) star) props int
"
"9---------]-]Success  
pi x3 \
 locDecl x3
  (setSigma
    (setPi
      (setSigma
        (setPi
          (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x4 \
    forall
     (setSigma
       (setPi
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ singleton) x6 \
        forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall
          (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall (forall singleton x9 \ propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (forall
         (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         propId singleton
          (app
            (elim_setSigma x5 (x8 \
              setPi
               (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)
          (app
            (elim_setSigma x6 (x8 \
              setPi
               (setSigma (setPi singleton x9 \ propId singleton star x0) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)) x7 \ propId singleton (app x4 x5) (app x4 x6)) =>
  spy
   (ofType
     (propId singleton
       (app
         (elim_setSigma x3 (x4 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
            singleton) x4 \ x5 \ x4)
         (elim_setSigma
           (pair
             (setPi
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) (x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star star)
                 x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6))
             (lambda
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ star)
             (forall_lam
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall_lam
                (setSigma (setPi singleton x5 \ propId singleton star star)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall_lam (forall singleton x6 \ propId singleton star star)
                 x6 \
                 fixMe "prova di riflessivita'" (propId singleton star star)))
           (x4 \
           setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
           pair
            (setPi
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \ singleton) (x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall (forall singleton x9 \ propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8))
            (lambda
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              app x4
               (elim_setSigma x6 (x7 \
                 setSigma (setPi singleton x8 \ propId singleton star star)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x7 \ x8 \
                 pair (setPi singleton x9 \ propId singleton star star) (x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star)
                  (lambda singleton x9 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x0) star) x1)
                     (app x7 x9))
                  (forall_lam singleton x9 \
                    forall_lam singleton x10 \
                     forall_lam (propId singleton x9 x10) x11 \
                      forall_app (forall_app (forall_app x8 x9) x10) x11)))
            (forall_lam
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall_lam
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall_lam (forall singleton x8 \ propId singleton star star)
                x8 \
                forall_app
                 (forall_app
                   (forall_app x5
                     (elim_setSigma x6 (x9 \
                       setSigma
                        (setPi singleton x10 \ propId singleton star star)
                        x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star) x9 \ x10 \
                       pair
                        (setPi singleton x11 \ propId singleton star star)
                        (x11 \
                        forall singleton x12 \
                         forall singleton x13 \
                          forall (propId singleton x12 x13) x14 \
                           propId singleton star star)
                        (lambda singleton x11 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star)
                                   (fixMe "prova di riflessivita'"
                                     (propId singleton star star))) x0) star)
                             x1) (app x9 x11))
                        (forall_lam singleton x11 \
                          forall_lam singleton x12 \
                           forall_lam (propId singleton x11 x12) x13 \
                            forall_app (forall_app (forall_app x10 x11) x12)
                             x13)))
                   (elim_setSigma x7 (x9 \
                     setSigma
                      (setPi singleton x10 \ propId singleton star star)
                      x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star) x9 \ x10 \
                     pair (setPi singleton x11 \ propId singleton star star)
                      (x11 \
                      forall singleton x12 \
                       forall singleton x13 \
                        forall (propId singleton x12 x13) x14 \
                         propId singleton star star)
                      (lambda singleton x11 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star)
                                 (fixMe "prova di riflessivita'"
                                   (propId singleton star star))) x0) star)
                           x1) (app x9 x11))
                      (forall_lam singleton x11 \
                        forall_lam singleton x12 \
                         forall_lam (propId singleton x11 x12) x13 \
                          forall_app (forall_app (forall_app x10 x11) x12)
                           x13)))
                 (forall_lam singleton x9 \ forall_app x8 x9)))) star) props
     int)
"
"9_________[+[Begin 
pts_for set props X929^2
"
"9---------]-]Success  
pts_for set props props
"
"8--------]-]Success  
ofType
 (forall
   (setSigma
     (setPi
       (setSigma
         (setPi
           (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \ singleton) x3 \
         forall
          (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \
          forall
           (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall (forall singleton x6 \ propId singleton star star) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
     forall
      (setSigma
        (setPi
          (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \ singleton) x5 \
         forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall (forall singleton x8 \ propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \
       forall
        (forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          propId singleton
           (app
             (elim_setSigma x4 (x7 \
               setPi
                (setSigma (setPi singleton x8 \ propId singleton star x0)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
             x6)
           (app
             (elim_setSigma x5 (x7 \
               setPi
                (setSigma (setPi singleton x8 \ propId singleton star x0)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
             x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
   propId singleton
    (app
      (elim_setSigma x3 (x4 \
        setPi
         (setSigma
           (setPi
             (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \ singleton) x5 \
           forall
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall (forall singleton x8 \ propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
        x5 \ x4)
      (elim_setSigma
        (pair
          (setPi
            (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ singleton) (x4 \
          forall
           (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall
            (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall (forall singleton x7 \ propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6))
          (lambda
            (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ star)
          (forall_lam
            (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \
            forall_lam
             (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall_lam (forall singleton x6 \ propId singleton star star)
              x6 \
              fixMe "prova di riflessivita'" (propId singleton star star)))
        (x4 \
        setSigma
         (setPi
           (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \ singleton) x5 \
         forall
          (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall (forall singleton x8 \ propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
        pair
         (setPi
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \ singleton) (x6 \
         forall
          (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall
           (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           forall (forall singleton x9 \ propId singleton star star) x9 \
            propId singleton (app x6 x7) (app x6 x8))
         (lambda
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           app x4
            (elim_setSigma x6 (x7 \
              setSigma (setPi singleton x8 \ propId singleton star star) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x7 \ x8 \
              pair (setPi singleton x9 \ propId singleton star star) (x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star)
               (lambda singleton x9 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star)
                          (fixMe "prova di riflessivita'"
                            (propId singleton star star))) x0) star) x1)
                  (app x7 x9))
               (forall_lam singleton x9 \
                 forall_lam singleton x10 \
                  forall_lam (propId singleton x9 x10) x11 \
                   forall_app (forall_app (forall_app x8 x9) x10) x11)))
         (forall_lam
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall_lam
            (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall_lam (forall singleton x8 \ propId singleton star star)
             x8 \
             forall_app
              (forall_app
                (forall_app x5
                  (elim_setSigma x6 (x9 \
                    setSigma
                     (setPi singleton x10 \ propId singleton star star) x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton star star) x9 \ x10 \
                    pair (setPi singleton x11 \ propId singleton star star)
                     (x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton star star)
                     (lambda singleton x11 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (fixMe "prova di riflessivita'"
                                  (propId singleton star star))) x0) star) x1)
                        (app x9 x11))
                     (forall_lam singleton x11 \
                       forall_lam singleton x12 \
                        forall_lam (propId singleton x11 x12) x13 \
                         forall_app (forall_app (forall_app x10 x11) x12) x13)))
                (elim_setSigma x7 (x9 \
                  setSigma (setPi singleton x10 \ propId singleton star star)
                   x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star) x9 \ x10 \
                  pair (setPi singleton x11 \ propId singleton star star)
                   (x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton star star)
                   (lambda singleton x11 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (fixMe "prova di riflessivita'"
                                (propId singleton star star))) x0) star) x1)
                      (app x9 x11))
                   (forall_lam singleton x11 \
                     forall_lam singleton x12 \
                      forall_lam (propId singleton x11 x12) x13 \
                       forall_app (forall_app (forall_app x10 x11) x12) x13)))
              (forall_lam singleton x9 \ forall_app x8 x9)))) star) props int
"
"7-------]-]Success  
pi x2 \
 locDecl x2 (propId singleton star x0) =>
  spy
   (ofType
     (forall
       (setSigma
         (setPi
           (setSigma
             (setPi
               (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \ singleton) x3 \
             forall
              (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \
              forall
               (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall (forall singleton x6 \ propId singleton star star) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
         x3 \
         forall
          (setSigma
            (setPi
              (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ singleton) x4 \
            forall
             (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall (forall singleton x7 \ propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \
          forall
           (setSigma
             (setPi
               (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ singleton) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall (forall singleton x8 \ propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \
           forall
            (forall
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              propId singleton
               (app
                 (elim_setSigma x4 (x7 \
                   setPi
                    (setSigma (setPi singleton x8 \ propId singleton star x0)
                      x8 \
                      forall singleton x9 \
                       forall singleton x10 \
                        forall (propId singleton x9 x10) x11 \
                         propId singleton star star) x8 \ singleton) x7 \
                   x8 \ x7) x6)
               (app
                 (elim_setSigma x5 (x7 \
                   setPi
                    (setSigma (setPi singleton x8 \ propId singleton star x0)
                      x8 \
                      forall singleton x9 \
                       forall singleton x10 \
                        forall (propId singleton x9 x10) x11 \
                         propId singleton star star) x8 \ singleton) x7 \
                   x8 \ x7) x6)) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       propId singleton
        (app
          (elim_setSigma x3 (x4 \
            setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x5 \ propId singleton star x0)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \ singleton) x5 \
               forall
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall
                 (setSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall (forall singleton x8 \ propId singleton star star)
                  x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
             singleton) x4 \ x5 \ x4)
          (elim_setSigma
            (pair
              (setPi
                (setSigma (setPi singleton x4 \ propId singleton star star)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) (x4 \
              forall
               (setSigma (setPi singleton x5 \ propId singleton star star)
                 x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (setSigma (setPi singleton x6 \ propId singleton star star)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6))
              (lambda
                (setSigma (setPi singleton x4 \ propId singleton star star)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ star)
              (forall_lam
                (setSigma (setPi singleton x4 \ propId singleton star star)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall_lam
                 (setSigma (setPi singleton x5 \ propId singleton star star)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall_lam
                  (forall singleton x6 \ propId singleton star star) x6 \
                  fixMe "prova di riflessivita'" (propId singleton star star)))
            (x4 \
            setSigma
             (setPi
               (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ singleton) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall (forall singleton x8 \ propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
            pair
             (setPi
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \ singleton) (x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall
               (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \
               forall (forall singleton x9 \ propId singleton star star) x9 \
                propId singleton (app x6 x7) (app x6 x8))
             (lambda
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               app x4
                (elim_setSigma x6 (x7 \
                  setSigma (setPi singleton x8 \ propId singleton star star)
                   x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star) x7 \ x8 \
                  pair (setPi singleton x9 \ propId singleton star star)
                   (x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton star star)
                   (lambda singleton x9 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (fixMe "prova di riflessivita'"
                                (propId singleton star star))) x0) star) x1)
                      (app x7 x9))
                   (forall_lam singleton x9 \
                     forall_lam singleton x10 \
                      forall_lam (propId singleton x9 x10) x11 \
                       forall_app (forall_app (forall_app x8 x9) x10) x11)))
             (forall_lam
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall_lam
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall_lam (forall singleton x8 \ propId singleton star star)
                 x8 \
                 forall_app
                  (forall_app
                    (forall_app x5
                      (elim_setSigma x6 (x9 \
                        setSigma
                         (setPi singleton x10 \ propId singleton star star)
                         x10 \
                         forall singleton x11 \
                          forall singleton x12 \
                           forall (propId singleton x11 x12) x13 \
                            propId singleton star star) x9 \ x10 \
                        pair
                         (setPi singleton x11 \ propId singleton star star)
                         (x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star)
                         (lambda singleton x11 \
                           impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app (k_propId singleton) star)
                                      star)
                                    (fixMe "prova di riflessivita'"
                                      (propId singleton star star))) x0) star)
                              x1) (app x9 x11))
                         (forall_lam singleton x11 \
                           forall_lam singleton x12 \
                            forall_lam (propId singleton x11 x12) x13 \
                             forall_app (forall_app (forall_app x10 x11) x12)
                              x13)))
                    (elim_setSigma x7 (x9 \
                      setSigma
                       (setPi singleton x10 \ propId singleton star star)
                       x10 \
                       forall singleton x11 \
                        forall singleton x12 \
                         forall (propId singleton x11 x12) x13 \
                          propId singleton star star) x9 \ x10 \
                      pair (setPi singleton x11 \ propId singleton star star)
                       (x11 \
                       forall singleton x12 \
                        forall singleton x13 \
                         forall (propId singleton x12 x13) x14 \
                          propId singleton star star)
                       (lambda singleton x11 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star)
                                  (fixMe "prova di riflessivita'"
                                    (propId singleton star star))) x0) star)
                            x1) (app x9 x11))
                       (forall_lam singleton x11 \
                         forall_lam singleton x12 \
                          forall_lam (propId singleton x11 x12) x13 \
                           forall_app (forall_app (forall_app x10 x11) x12)
                            x13)))
                  (forall_lam singleton x9 \ forall_app x8 x9)))) star) props
     int)
"
"7_______[+[Begin 
pts_for props props X925^1
"
"7-------]-]Success  
pts_for props props props
"
"6------]-]Success  
ofType
 (forall (propId singleton star x0) x2 \
   forall
    (setSigma
      (setPi
        (setSigma
          (setPi
            (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \ singleton) x3 \
          forall
           (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall (forall singleton x6 \ propId singleton star star) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
      forall
       (setSigma
         (setPi
           (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ singleton) x4 \
         forall
          (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall (forall singleton x7 \ propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall
        (setSigma
          (setPi
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \ singleton) x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall (forall singleton x8 \ propId singleton star star) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x5 \
        forall
         (forall
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           propId singleton
            (app
              (elim_setSigma x4 (x7 \
                setPi
                 (setSigma (setPi singleton x8 \ propId singleton star x0)
                   x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star) x8 \ singleton) x7 \ x8 \
                x7) x6)
            (app
              (elim_setSigma x5 (x7 \
                setPi
                 (setSigma (setPi singleton x8 \ propId singleton star x0)
                   x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star) x8 \ singleton) x7 \ x8 \
                x7) x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
    propId singleton
     (app
       (elim_setSigma x3 (x4 \
         setPi
          (setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) x4 \
         x5 \ x4)
       (elim_setSigma
         (pair
           (setPi
             (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) (x4 \
           forall
            (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star star) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6))
           (lambda
             (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ star)
           (forall_lam
             (setSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall_lam
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall_lam (forall singleton x6 \ propId singleton star star)
               x6 \
               fixMe "prova di riflessivita'" (propId singleton star star)))
         (x4 \
         setSigma
          (setPi
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \ singleton) x5 \
          forall
           (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall (forall singleton x8 \ propId singleton star star) x8 \
             propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
         pair
          (setPi
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \ singleton) (x6 \
          forall
           (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall
            (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \
            forall (forall singleton x9 \ propId singleton star star) x9 \
             propId singleton (app x6 x7) (app x6 x8))
          (lambda
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            app x4
             (elim_setSigma x6 (x7 \
               setSigma (setPi singleton x8 \ propId singleton star star)
                x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x7 \ x8 \
               pair (setPi singleton x9 \ propId singleton star star) (x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star)
                (lambda singleton x9 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star)
                           (fixMe "prova di riflessivita'"
                             (propId singleton star star))) x0) star) x1)
                   (app x7 x9))
                (forall_lam singleton x9 \
                  forall_lam singleton x10 \
                   forall_lam (propId singleton x9 x10) x11 \
                    forall_app (forall_app (forall_app x8 x9) x10) x11)))
          (forall_lam
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall_lam
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall_lam (forall singleton x8 \ propId singleton star star)
              x8 \
              forall_app
               (forall_app
                 (forall_app x5
                   (elim_setSigma x6 (x9 \
                     setSigma
                      (setPi singleton x10 \ propId singleton star star)
                      x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star) x9 \ x10 \
                     pair (setPi singleton x11 \ propId singleton star star)
                      (x11 \
                      forall singleton x12 \
                       forall singleton x13 \
                        forall (propId singleton x12 x13) x14 \
                         propId singleton star star)
                      (lambda singleton x11 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star)
                                 (fixMe "prova di riflessivita'"
                                   (propId singleton star star))) x0) star)
                           x1) (app x9 x11))
                      (forall_lam singleton x11 \
                        forall_lam singleton x12 \
                         forall_lam (propId singleton x11 x12) x13 \
                          forall_app (forall_app (forall_app x10 x11) x12)
                           x13)))
                 (elim_setSigma x7 (x9 \
                   setSigma
                    (setPi singleton x10 \ propId singleton star star) x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton star star) x9 \ x10 \
                   pair (setPi singleton x11 \ propId singleton star star)
                    (x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton star star)
                    (lambda singleton x11 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (fixMe "prova di riflessivita'"
                                 (propId singleton star star))) x0) star) x1)
                       (app x9 x11))
                    (forall_lam singleton x11 \
                      forall_lam singleton x12 \
                       forall_lam (propId singleton x11 x12) x13 \
                        forall_app (forall_app (forall_app x10 x11) x12) x13)))
               (forall_lam singleton x9 \ forall_app x8 x9)))) star) props
 int
"
"5-----]-]Success  
pi x1 \
 locDecl x1 (propId singleton x0 star) =>
  spy
   (ofType
     (forall (propId singleton star x0) x2 \
       forall
        (setSigma
          (setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x3 \ propId singleton star x0)
                  x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton star star) x3 \ singleton) x3 \
              forall
               (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall (forall singleton x6 \ propId singleton star star)
                 x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
            singleton) x3 \
          forall
           (setSigma
             (setPi
               (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \
           forall
            (setSigma
              (setPi
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
            forall
             (forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               propId singleton
                (app
                  (elim_setSigma x4 (x7 \
                    setPi
                     (setSigma
                       (setPi singleton x8 \ propId singleton star x0) x8 \
                       forall singleton x9 \
                        forall singleton x10 \
                         forall (propId singleton x9 x10) x11 \
                          propId singleton star star) x8 \ singleton) x7 \
                    x8 \ x7) x6)
                (app
                  (elim_setSigma x5 (x7 \
                    setPi
                     (setSigma
                       (setPi singleton x8 \ propId singleton star x0) x8 \
                       forall singleton x9 \
                        forall singleton x10 \
                         forall (propId singleton x9 x10) x11 \
                          propId singleton star star) x8 \ singleton) x7 \
                    x8 \ x7) x6)) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        propId singleton
         (app
           (elim_setSigma x3 (x4 \
             setPi
              (setSigma
                (setPi
                  (setSigma (setPi singleton x5 \ propId singleton star x0)
                    x5 \
                    forall singleton x6 \
                     forall singleton x7 \
                      forall (propId singleton x6 x7) x8 \
                       propId singleton star star) x5 \ singleton) x5 \
                forall
                 (setSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall
                  (setSigma (setPi singleton x7 \ propId singleton star x0)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \
                  forall (forall singleton x8 \ propId singleton star star)
                   x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
              singleton) x4 \ x5 \ x4)
           (elim_setSigma
             (pair
               (setPi
                 (setSigma (setPi singleton x4 \ propId singleton star star)
                   x4 \
                   forall singleton x5 \
                    forall singleton x6 \
                     forall (propId singleton x5 x6) x7 \
                      propId singleton star star) x4 \ singleton) (x4 \
               forall
                (setSigma (setPi singleton x5 \ propId singleton star star)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall
                 (setSigma (setPi singleton x6 \ propId singleton star star)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall (forall singleton x7 \ propId singleton star star)
                  x7 \ propId singleton (app x4 x5) (app x4 x6))
               (lambda
                 (setSigma (setPi singleton x4 \ propId singleton star star)
                   x4 \
                   forall singleton x5 \
                    forall singleton x6 \
                     forall (propId singleton x5 x6) x7 \
                      propId singleton star star) x4 \ star)
               (forall_lam
                 (setSigma (setPi singleton x4 \ propId singleton star star)
                   x4 \
                   forall singleton x5 \
                    forall singleton x6 \
                     forall (propId singleton x5 x6) x7 \
                      propId singleton star star) x4 \
                 forall_lam
                  (setSigma (setPi singleton x5 \ propId singleton star star)
                    x5 \
                    forall singleton x6 \
                     forall singleton x7 \
                      forall (propId singleton x6 x7) x8 \
                       propId singleton star star) x5 \
                  forall_lam
                   (forall singleton x6 \ propId singleton star star) x6 \
                   fixMe "prova di riflessivita'"
                    (propId singleton star star))) (x4 \
             setSigma
              (setPi
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
             pair
              (setPi
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \ singleton) (x6 \
              forall
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall
                (setSigma (setPi singleton x8 \ propId singleton star x0)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \
                forall (forall singleton x9 \ propId singleton star star)
                 x9 \ propId singleton (app x6 x7) (app x6 x8))
              (lambda
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                app x4
                 (elim_setSigma x6 (x7 \
                   setSigma (setPi singleton x8 \ propId singleton star star)
                    x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star) x7 \ x8 \
                   pair (setPi singleton x9 \ propId singleton star star)
                    (x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton star star)
                    (lambda singleton x9 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (fixMe "prova di riflessivita'"
                                 (propId singleton star star))) x0) star) x1)
                       (app x7 x9))
                    (forall_lam singleton x9 \
                      forall_lam singleton x10 \
                       forall_lam (propId singleton x9 x10) x11 \
                        forall_app (forall_app (forall_app x8 x9) x10) x11)))
              (forall_lam
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall_lam
                 (setSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall_lam
                  (forall singleton x8 \ propId singleton star star) x8 \
                  forall_app
                   (forall_app
                     (forall_app x5
                       (elim_setSigma x6 (x9 \
                         setSigma
                          (setPi singleton x10 \ propId singleton star star)
                          x10 \
                          forall singleton x11 \
                           forall singleton x12 \
                            forall (propId singleton x11 x12) x13 \
                             propId singleton star star) x9 \ x10 \
                         pair
                          (setPi singleton x11 \ propId singleton star star)
                          (x11 \
                          forall singleton x12 \
                           forall singleton x13 \
                            forall (propId singleton x12 x13) x14 \
                             propId singleton star star)
                          (lambda singleton x11 \
                            impl_app
                             (impl_app
                               (forall_app
                                 (forall_app
                                   (impl_app
                                     (forall_app
                                       (forall_app (k_propId singleton) star)
                                       star)
                                     (fixMe "prova di riflessivita'"
                                       (propId singleton star star))) x0)
                                 star) x1) (app x9 x11))
                          (forall_lam singleton x11 \
                            forall_lam singleton x12 \
                             forall_lam (propId singleton x11 x12) x13 \
                              forall_app
                               (forall_app (forall_app x10 x11) x12) x13)))
                     (elim_setSigma x7 (x9 \
                       setSigma
                        (setPi singleton x10 \ propId singleton star star)
                        x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star) x9 \ x10 \
                       pair
                        (setPi singleton x11 \ propId singleton star star)
                        (x11 \
                        forall singleton x12 \
                         forall singleton x13 \
                          forall (propId singleton x12 x13) x14 \
                           propId singleton star star)
                        (lambda singleton x11 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star)
                                   (fixMe "prova di riflessivita'"
                                     (propId singleton star star))) x0) star)
                             x1) (app x9 x11))
                        (forall_lam singleton x11 \
                          forall_lam singleton x12 \
                           forall_lam (propId singleton x11 x12) x13 \
                            forall_app (forall_app (forall_app x10 x11) x12)
                             x13)))
                   (forall_lam singleton x9 \ forall_app x8 x9)))) star)
     props int)
"
"5_____[+[Begin 
pts_for props props X921
"
"5-----]-]Success  
pts_for props props props
"
"4----]-]Success  
ofType
 (forall (propId singleton x0 star) x1 \
   forall (propId singleton star x0) x2 \
    forall
     (setSigma
       (setPi
         (setSigma
           (setPi
             (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton star star) x3 \ singleton) x3 \
           forall
            (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \
            forall
             (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall (forall singleton x6 \ propId singleton star star) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
       forall
        (setSigma
          (setPi
            (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ singleton) x4 \
          forall
           (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall (forall singleton x7 \ propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \ singleton) x5 \
           forall
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall (forall singleton x8 \ propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x5 \
         forall
          (forall
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            propId singleton
             (app
               (elim_setSigma x4 (x7 \
                 setPi
                  (setSigma (setPi singleton x8 \ propId singleton star x0)
                    x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star) x8 \ singleton) x7 \ x8 \
                 x7) x6)
             (app
               (elim_setSigma x5 (x7 \
                 setPi
                  (setSigma (setPi singleton x8 \ propId singleton star x0)
                    x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star) x8 \ singleton) x7 \ x8 \
                 x7) x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
     propId singleton
      (app
        (elim_setSigma x3 (x4 \
          setPi
           (setSigma
             (setPi
               (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ singleton) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall (forall singleton x8 \ propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
          x4 \ x5 \ x4)
        (elim_setSigma
          (pair
            (setPi
              (setSigma (setPi singleton x4 \ propId singleton star star)
                x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ singleton) (x4 \
            forall
             (setSigma (setPi singleton x5 \ propId singleton star star) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall
              (setSigma (setPi singleton x6 \ propId singleton star star)
                x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall (forall singleton x7 \ propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6))
            (lambda
              (setSigma (setPi singleton x4 \ propId singleton star star)
                x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ star)
            (forall_lam
              (setSigma (setPi singleton x4 \ propId singleton star star)
                x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \
              forall_lam
               (setSigma (setPi singleton x5 \ propId singleton star star)
                 x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall_lam (forall singleton x6 \ propId singleton star star)
                x6 \
                fixMe "prova di riflessivita'" (propId singleton star star)))
          (x4 \
          setSigma
           (setPi
             (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \ singleton) x5 \
           forall
            (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall (forall singleton x8 \ propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
          pair
           (setPi
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \ singleton) (x6 \
           forall
            (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall
             (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             forall (forall singleton x9 \ propId singleton star star) x9 \
              propId singleton (app x6 x7) (app x6 x8))
           (lambda
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             app x4
              (elim_setSigma x6 (x7 \
                setSigma (setPi singleton x8 \ propId singleton star star)
                 x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x7 \ x8 \
                pair (setPi singleton x9 \ propId singleton star star) (x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star)
                 (lambda singleton x9 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (fixMe "prova di riflessivita'"
                              (propId singleton star star))) x0) star) x1)
                    (app x7 x9))
                 (forall_lam singleton x9 \
                   forall_lam singleton x10 \
                    forall_lam (propId singleton x9 x10) x11 \
                     forall_app (forall_app (forall_app x8 x9) x10) x11)))
           (forall_lam
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall_lam
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall_lam (forall singleton x8 \ propId singleton star star)
               x8 \
               forall_app
                (forall_app
                  (forall_app x5
                    (elim_setSigma x6 (x9 \
                      setSigma
                       (setPi singleton x10 \ propId singleton star star)
                       x10 \
                       forall singleton x11 \
                        forall singleton x12 \
                         forall (propId singleton x11 x12) x13 \
                          propId singleton star star) x9 \ x10 \
                      pair (setPi singleton x11 \ propId singleton star star)
                       (x11 \
                       forall singleton x12 \
                        forall singleton x13 \
                         forall (propId singleton x12 x13) x14 \
                          propId singleton star star)
                       (lambda singleton x11 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star)
                                  (fixMe "prova di riflessivita'"
                                    (propId singleton star star))) x0) star)
                            x1) (app x9 x11))
                       (forall_lam singleton x11 \
                         forall_lam singleton x12 \
                          forall_lam (propId singleton x11 x12) x13 \
                           forall_app (forall_app (forall_app x10 x11) x12)
                            x13)))
                  (elim_setSigma x7 (x9 \
                    setSigma
                     (setPi singleton x10 \ propId singleton star star) x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton star star) x9 \ x10 \
                    pair (setPi singleton x11 \ propId singleton star star)
                     (x11 \
                     forall singleton x12 \
                      forall singleton x13 \
                       forall (propId singleton x12 x13) x14 \
                        propId singleton star star)
                     (lambda singleton x11 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (fixMe "prova di riflessivita'"
                                  (propId singleton star star))) x0) star) x1)
                        (app x9 x11))
                     (forall_lam singleton x11 \
                       forall_lam singleton x12 \
                        forall_lam (propId singleton x11 x12) x13 \
                         forall_app (forall_app (forall_app x10 x11) x12) x13)))
                (forall_lam singleton x9 \ forall_app x8 x9)))) star) props
 int
"
"3---]-]Success  
pi x0 \
 locDecl x0 singleton =>
  spy
   (ofType
     (forall (propId singleton x0 star) x1 \
       forall (propId singleton star x0) x2 \
        forall
         (setSigma
           (setPi
             (setSigma
               (setPi
                 (setSigma (setPi singleton x3 \ propId singleton star x0)
                   x3 \
                   forall singleton x4 \
                    forall singleton x5 \
                     forall (propId singleton x4 x5) x6 \
                      propId singleton star star) x3 \ singleton) x3 \
               forall
                (setSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall
                 (setSigma (setPi singleton x5 \ propId singleton star x0)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall (forall singleton x6 \ propId singleton star star)
                  x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
             singleton) x3 \
           forall
            (setSigma
              (setPi
                (setSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) x4 \
              forall
               (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (setSigma
               (setPi
                 (setSigma (setPi singleton x5 \ propId singleton star x0)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \ singleton) x5 \
               forall
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall
                 (setSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall (forall singleton x8 \ propId singleton star star)
                  x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
             forall
              (forall
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                propId singleton
                 (app
                   (elim_setSigma x4 (x7 \
                     setPi
                      (setSigma
                        (setPi singleton x8 \ propId singleton star x0) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton star star) x8 \ singleton) x7 \
                     x8 \ x7) x6)
                 (app
                   (elim_setSigma x5 (x7 \
                     setPi
                      (setSigma
                        (setPi singleton x8 \ propId singleton star x0) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton star star) x8 \ singleton) x7 \
                     x8 \ x7) x6)) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \
         propId singleton
          (app
            (elim_setSigma x3 (x4 \
              setPi
               (setSigma
                 (setPi
                   (setSigma (setPi singleton x5 \ propId singleton star x0)
                     x5 \
                     forall singleton x6 \
                      forall singleton x7 \
                       forall (propId singleton x6 x7) x8 \
                        propId singleton star star) x5 \ singleton) x5 \
                 forall
                  (setSigma (setPi singleton x6 \ propId singleton star x0)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  forall
                   (setSigma (setPi singleton x7 \ propId singleton star x0)
                     x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton star star) x7 \
                   forall (forall singleton x8 \ propId singleton star star)
                    x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
               singleton) x4 \ x5 \ x4)
            (elim_setSigma
              (pair
                (setPi
                  (setSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \ singleton) (x4 \
                forall
                 (setSigma (setPi singleton x5 \ propId singleton star star)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall
                  (setSigma (setPi singleton x6 \ propId singleton star star)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  forall (forall singleton x7 \ propId singleton star star)
                   x7 \ propId singleton (app x4 x5) (app x4 x6))
                (lambda
                  (setSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \ star)
                (forall_lam
                  (setSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \
                  forall_lam
                   (setSigma
                     (setPi singleton x5 \ propId singleton star star) x5 \
                     forall singleton x6 \
                      forall singleton x7 \
                       forall (propId singleton x6 x7) x8 \
                        propId singleton star star) x5 \
                   forall_lam
                    (forall singleton x6 \ propId singleton star star) x6 \
                    fixMe "prova di riflessivita'"
                     (propId singleton star star))) (x4 \
              setSigma
               (setPi
                 (setSigma (setPi singleton x5 \ propId singleton star x0)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \ singleton) x5 \
               forall
                (setSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall
                 (setSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall (forall singleton x8 \ propId singleton star star)
                  x8 \ propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
              pair
               (setPi
                 (setSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \ singleton) (x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall
                 (setSigma (setPi singleton x8 \ propId singleton star x0)
                   x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star) x8 \
                 forall (forall singleton x9 \ propId singleton star star)
                  x9 \ propId singleton (app x6 x7) (app x6 x8))
               (lambda
                 (setSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 app x4
                  (elim_setSigma x6 (x7 \
                    setSigma
                     (setPi singleton x8 \ propId singleton star star) x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x7 \ x8 \
                    pair (setPi singleton x9 \ propId singleton star star)
                     (x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star)
                     (lambda singleton x9 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (fixMe "prova di riflessivita'"
                                  (propId singleton star star))) x0) star) x1)
                        (app x7 x9))
                     (forall_lam singleton x9 \
                       forall_lam singleton x10 \
                        forall_lam (propId singleton x9 x10) x11 \
                         forall_app (forall_app (forall_app x8 x9) x10) x11)))
               (forall_lam
                 (setSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall_lam
                  (setSigma (setPi singleton x7 \ propId singleton star x0)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \
                  forall_lam
                   (forall singleton x8 \ propId singleton star star) x8 \
                   forall_app
                    (forall_app
                      (forall_app x5
                        (elim_setSigma x6 (x9 \
                          setSigma
                           (setPi singleton x10 \ propId singleton star star)
                           x10 \
                           forall singleton x11 \
                            forall singleton x12 \
                             forall (propId singleton x11 x12) x13 \
                              propId singleton star star) x9 \ x10 \
                          pair
                           (setPi singleton x11 \ propId singleton star star)
                           (x11 \
                           forall singleton x12 \
                            forall singleton x13 \
                             forall (propId singleton x12 x13) x14 \
                              propId singleton star star)
                           (lambda singleton x11 \
                             impl_app
                              (impl_app
                                (forall_app
                                  (forall_app
                                    (impl_app
                                      (forall_app
                                        (forall_app (k_propId singleton) star)
                                        star)
                                      (fixMe "prova di riflessivita'"
                                        (propId singleton star star))) x0)
                                  star) x1) (app x9 x11))
                           (forall_lam singleton x11 \
                             forall_lam singleton x12 \
                              forall_lam (propId singleton x11 x12) x13 \
                               forall_app
                                (forall_app (forall_app x10 x11) x12) x13)))
                      (elim_setSigma x7 (x9 \
                        setSigma
                         (setPi singleton x10 \ propId singleton star star)
                         x10 \
                         forall singleton x11 \
                          forall singleton x12 \
                           forall (propId singleton x11 x12) x13 \
                            propId singleton star star) x9 \ x10 \
                        pair
                         (setPi singleton x11 \ propId singleton star star)
                         (x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star)
                         (lambda singleton x11 \
                           impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app (k_propId singleton) star)
                                      star)
                                    (fixMe "prova di riflessivita'"
                                      (propId singleton star star))) x0) star)
                              x1) (app x9 x11))
                         (forall_lam singleton x11 \
                           forall_lam singleton x12 \
                            forall_lam (propId singleton x11 x12) x13 \
                             forall_app (forall_app (forall_app x10 x11) x12)
                              x13)))
                    (forall_lam singleton x9 \ forall_app x8 x9)))) star)
     props int)
"
"3___[+[Begin 
pts_for set props X7
"
"3---]-]Success  
pts_for set props props
"
"2--]-]Success  
ofType
 (forall singleton x0 \
   forall (propId singleton x0 star) x1 \
    forall (propId singleton star x0) x2 \
     forall
      (setSigma
        (setPi
          (setSigma
            (setPi
              (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ singleton) x3 \
            forall
             (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall (forall singleton x6 \ propId singleton star star) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
        forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \
          forall
           (forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             propId singleton
              (app
                (elim_setSigma x4 (x7 \
                  setPi
                   (setSigma (setPi singleton x8 \ propId singleton star x0)
                     x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x8 \ singleton) x7 \ x8 \
                  x7) x6)
              (app
                (elim_setSigma x5 (x7 \
                  setPi
                   (setSigma (setPi singleton x8 \ propId singleton star x0)
                     x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x8 \ singleton) x7 \ x8 \
                  x7) x6)) x6 \ propId singleton (app x3 x4) (app x3 x5))
      x3 \
      propId singleton
       (app
         (elim_setSigma x3 (x4 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
            singleton) x4 \ x5 \ x4)
         (elim_setSigma
           (pair
             (setPi
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) (x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star star)
                 x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6))
             (lambda
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ star)
             (forall_lam
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall_lam
                (setSigma (setPi singleton x5 \ propId singleton star star)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall_lam (forall singleton x6 \ propId singleton star star)
                 x6 \
                 fixMe "prova di riflessivita'" (propId singleton star star)))
           (x4 \
           setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
           pair
            (setPi
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \ singleton) (x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall (forall singleton x9 \ propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8))
            (lambda
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              app x4
               (elim_setSigma x6 (x7 \
                 setSigma (setPi singleton x8 \ propId singleton star star)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x7 \ x8 \
                 pair (setPi singleton x9 \ propId singleton star star) (x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star)
                  (lambda singleton x9 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x0) star) x1)
                     (app x7 x9))
                  (forall_lam singleton x9 \
                    forall_lam singleton x10 \
                     forall_lam (propId singleton x9 x10) x11 \
                      forall_app (forall_app (forall_app x8 x9) x10) x11)))
            (forall_lam
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall_lam
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall_lam (forall singleton x8 \ propId singleton star star)
                x8 \
                forall_app
                 (forall_app
                   (forall_app x5
                     (elim_setSigma x6 (x9 \
                       setSigma
                        (setPi singleton x10 \ propId singleton star star)
                        x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star) x9 \ x10 \
                       pair
                        (setPi singleton x11 \ propId singleton star star)
                        (x11 \
                        forall singleton x12 \
                         forall singleton x13 \
                          forall (propId singleton x12 x13) x14 \
                           propId singleton star star)
                        (lambda singleton x11 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star)
                                   (fixMe "prova di riflessivita'"
                                     (propId singleton star star))) x0) star)
                             x1) (app x9 x11))
                        (forall_lam singleton x11 \
                          forall_lam singleton x12 \
                           forall_lam (propId singleton x11 x12) x13 \
                            forall_app (forall_app (forall_app x10 x11) x12)
                             x13)))
                   (elim_setSigma x7 (x9 \
                     setSigma
                      (setPi singleton x10 \ propId singleton star star)
                      x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star) x9 \ x10 \
                     pair (setPi singleton x11 \ propId singleton star star)
                      (x11 \
                      forall singleton x12 \
                       forall singleton x13 \
                        forall (propId singleton x12 x13) x14 \
                         propId singleton star star)
                      (lambda singleton x11 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star)
                                 (fixMe "prova di riflessivita'"
                                   (propId singleton star star))) x0) star)
                           x1) (app x9 x11))
                      (forall_lam singleton x11 \
                        forall_lam singleton x12 \
                         forall_lam (propId singleton x11 x12) x13 \
                          forall_app (forall_app (forall_app x10 x11) x12)
                           x13)))
                 (forall_lam singleton x9 \ forall_app x8 x9)))) star) props
 int
"
"1-]-]Success  
test m props
 (forall singleton x0 \
   forall (propId singleton x0 star) x1 \
    forall (propId singleton star x0) x2 \
     forall
      (setSigma
        (setPi
          (setSigma
            (setPi
              (setSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ singleton) x3 \
            forall
             (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall (forall singleton x6 \ propId singleton star star) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
        forall
         (setSigma
           (setPi
             (setSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x5 \
          forall
           (forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             propId singleton
              (app
                (elim_setSigma x4 (x7 \
                  setPi
                   (setSigma (setPi singleton x8 \ propId singleton star x0)
                     x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x8 \ singleton) x7 \ x8 \
                  x7) x6)
              (app
                (elim_setSigma x5 (x7 \
                  setPi
                   (setSigma (setPi singleton x8 \ propId singleton star x0)
                     x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x8 \ singleton) x7 \ x8 \
                  x7) x6)) x6 \ propId singleton (app x3 x4) (app x3 x5))
      x3 \
      propId singleton
       (app
         (elim_setSigma x3 (x4 \
           setPi
            (setSigma
              (setPi
                (setSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (setSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
            singleton) x4 \ x5 \ x4)
         (elim_setSigma
           (pair
             (setPi
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) (x4 \
             forall
              (setSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (setSigma (setPi singleton x6 \ propId singleton star star)
                 x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6))
             (lambda
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ star)
             (forall_lam
               (setSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall_lam
                (setSigma (setPi singleton x5 \ propId singleton star star)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall_lam (forall singleton x6 \ propId singleton star star)
                 x6 \
                 fixMe "prova di riflessivita'" (propId singleton star star)))
           (x4 \
           setSigma
            (setPi
              (setSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) x5 \
            forall
             (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
           pair
            (setPi
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \ singleton) (x6 \
            forall
             (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall
              (setSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall (forall singleton x9 \ propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8))
            (lambda
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              app x4
               (elim_setSigma x6 (x7 \
                 setSigma (setPi singleton x8 \ propId singleton star star)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x7 \ x8 \
                 pair (setPi singleton x9 \ propId singleton star star) (x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star)
                  (lambda singleton x9 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (fixMe "prova di riflessivita'"
                               (propId singleton star star))) x0) star) x1)
                     (app x7 x9))
                  (forall_lam singleton x9 \
                    forall_lam singleton x10 \
                     forall_lam (propId singleton x9 x10) x11 \
                      forall_app (forall_app (forall_app x8 x9) x10) x11)))
            (forall_lam
              (setSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall_lam
               (setSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall_lam (forall singleton x8 \ propId singleton star star)
                x8 \
                forall_app
                 (forall_app
                   (forall_app x5
                     (elim_setSigma x6 (x9 \
                       setSigma
                        (setPi singleton x10 \ propId singleton star star)
                        x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star) x9 \ x10 \
                       pair
                        (setPi singleton x11 \ propId singleton star star)
                        (x11 \
                        forall singleton x12 \
                         forall singleton x13 \
                          forall (propId singleton x12 x13) x14 \
                           propId singleton star star)
                        (lambda singleton x11 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star)
                                   (fixMe "prova di riflessivita'"
                                     (propId singleton star star))) x0) star)
                             x1) (app x9 x11))
                        (forall_lam singleton x11 \
                          forall_lam singleton x12 \
                           forall_lam (propId singleton x11 x12) x13 \
                            forall_app (forall_app (forall_app x10 x11) x12)
                             x13)))
                   (elim_setSigma x7 (x9 \
                     setSigma
                      (setPi singleton x10 \ propId singleton star star)
                      x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star) x9 \ x10 \
                     pair (setPi singleton x11 \ propId singleton star star)
                      (x11 \
                      forall singleton x12 \
                       forall singleton x13 \
                        forall (propId singleton x12 x13) x14 \
                         propId singleton star star)
                      (lambda singleton x11 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star)
                                 (fixMe "prova di riflessivita'"
                                   (propId singleton star star))) x0) star)
                           x1) (app x9 x11))
                      (forall_lam singleton x11 \
                        forall_lam singleton x12 \
                         forall_lam (propId singleton x11 x12) x13 \
                          forall_app (forall_app (forall_app x10 x11) x12)
                           x13)))
                 (forall_lam singleton x9 \ forall_app x8 x9)))) star) props
"
