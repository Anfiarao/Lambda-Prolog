"debug.elpi:   6: Warning: indent is undeclared"
"debug.elpi:  27: Error: (print_indent) has type prop but is applied to C S N"
"debug.elpi:  29: Error: (print_indent) has type prop but is applied to IC I N"
"debug.elpi:  34: Warning: indent is undeclared"
"debug.elpi:  34: Warning: indent is undeclared"
"trad.elpi:  58: Warning: k_propId is undeclared"
"trad.elpi:  78: Warning: k_propId is undeclared"
"trad.elpi: 109: Warning: fixMe is undeclared"
"main.elpi:  65: Warning: fixMe2 is undeclared"
"main.elpi:  73: Warning: fixMe is undeclared"
"letIn.elpi:  10: Error: (letIn KIND1 T S) has type mttTerm but is used with type mttType"
"test.elpi:  24: Warning: l is undeclared"
"test.elpi:  45: Warning: i is undeclared"
"test.elpi:  86: Warning: h is undeclared"
"test.elpi:  98: Warning: g is undeclared"
"test.elpi: 120: Warning: f is undeclared"
"dummy:   1:query: Warning: l is undeclared"
"|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
"
"1_[+[Begin 
trad
 (forall
   (setPi (setPi singleton x0 \ propEq singleton star x0) x0 \ singleton)
   x0 \
   implies (propEq singleton x star)
    (implies (propEq singleton star x)
      (propEq singleton (app x0 (lambda singleton x1 \ eqId singleton star))
        star))) X0
"
"1 >>trad
 (forall
   (setPi (setPi singleton x0 \ propEq singleton star x0) x0 \ singleton)
   x0 \
   implies (propEq singleton x star)
    (implies (propEq singleton star x)
      (propEq singleton (app x0 (lambda singleton x1 \ eqId singleton star))
        star))) X0
"
"2__[+[Begin 
trad (setPi (setPi singleton x0 \ propEq singleton star x0) x0 \ singleton)
 X1
"
"2  >>trad (setPi (setPi singleton x0 \ propEq singleton star x0) x0 \ singleton)
 X1
"
"3___[+[Begin 
trad (setPi singleton x0 \ propEq singleton star x0) X2
"
"3   >>trad (setPi singleton x0 \ propEq singleton star x0) X2
"
"4____[+[Begin 
trad singleton X3
"
"4    >>trad singleton X3
"
"4----]-]Success  
trad singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 => trad (propEq singleton star x0) (X4 x1)
"
"4    >>trad (propEq singleton star x0) (X4 x1)
"
"5_____[+[Begin 
equ singleton X5^2
"
"5     >>equ singleton X5^2
"
"5-----]-]Success  
equ singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
trad_isa star singleton X6^2
"
"6______[+[Begin 
of star X7^2 ext
"
"6      >>of star X7^2 ext
"
"6      >>of star X7^2 ext
"
"6      >>locDecl star X7^2
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
trad star X8^2
"
"6      >>trad star X8^2
"
"6------]-]Success  
trad star star
"
"6______[+[Begin 
pippo singleton singleton X9^2
"
"6      >>pippo singleton singleton X9^2
"
"6------]-]Success  
pippo singleton singleton x2 \ x2
"
"6______[+[Begin 
X6^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
trad_isa star singleton star
"
"5_____[+[Begin 
trad_isa x0 singleton X10^2
"
"6______[+[Begin 
of x0 X11^2 ext
"
"6      >>of x0 X11^2 ext
"
"6      >>of x0 X11^2 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
trad x0 X12^2
"
"6------]-]Success  
trad x0 x1
"
"6______[+[Begin 
pippo singleton singleton X13^2
"
"6      >>pippo singleton singleton X13^2
"
"6------]-]Success  
pippo singleton singleton x2 \ x2
"
"6______[+[Begin 
X10^2 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
trad_isa x0 singleton x1
"
"5_____[+[Begin 
X4 x1 = propId singleton star x1
"
"5-----]-]Success  
propId singleton star x1 = propId singleton star x1
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 => trad (propEq singleton star x0) (propId singleton star x1)
"
"4____[+[Begin 
equ singleton X14
"
"4    >>equ singleton X14
"
"4----]-]Success  
equ singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 => equ (propEq singleton star x0) (X15 x1)
"
"4    >>equ (propEq singleton star x0) (X15 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 =>
     (equ (propEq singleton star x0) x2 \ x3 \ propId singleton star star)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          trad x0 x3 =>
           trad x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              trad x2 x5 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x1)
                  (X16 x3 x4 x5))
"
"5_____[+[Begin 
pippo (propEq singleton star x0) (propEq singleton star x1) (X16 x3 x4 x5)
"
"5     >>pippo (propEq singleton star x0) (propEq singleton star x1) (X16 x3 x4 x5)
"
"6______[+[Begin 
pippoequ star star singleton X17^6
"
"6      >>pippoequ star star singleton X17^6
"
"7_______[+[Begin 
of star X18^6 ext
"
"7       >>of star X18^6 ext
"
"7       >>of star X18^6 ext
"
"7       >>locDecl star X18^6
"
"7-------]-]Success  
of star singleton ext
"
"7_______[+[Begin 
trad star X19^6
"
"7       >>trad star X19^6
"
"7-------]-]Success  
trad star star
"
"7_______[+[Begin 
pippo singleton singleton X20^6
"
"7       >>pippo singleton singleton X20^6
"
"7-------]-]Success  
pippo singleton singleton x6 \ x6
"
"7_______[+[Begin 
X21^6 = star
"
"7-------]-]Success  
star = star
"
"6------]-]Success  
pippoequ star star singleton (id singleton star)
"
"6______[+[Begin 
pippoequ x0 x1 singleton X22^6
"
"6      >>pippoequ x0 x1 singleton X22^6
"
"7_______[+[Begin 
locDecl X23^6 (propEq X24^6 x0 x1)
"
"7-------]-]Success  
locDecl x2 (propEq singleton x0 x1)
"
"7_______[+[Begin 
trad_isa x2 (propEq singleton x0 x1) X22^6
"
"8________[+[Begin 
of x2 X25^6 ext
"
"8        >>of x2 X25^6 ext
"
"8        >>of x2 X25^6 ext
"
"8--------]-]Success  
of x2 (propEq singleton x0 x1) ext
"
"8________[+[Begin 
trad x2 X26^6
"
"8--------]-]Success  
trad x2 x5
"
"8________[+[Begin 
pippo (propEq singleton x0 x1) (propEq singleton x0 x1) X27^6
"
"8        >>pippo (propEq singleton x0 x1) (propEq singleton x0 x1) X27^6
"
"8--------]-]Success  
pippo (propEq singleton x0 x1) (propEq singleton x0 x1) x6 \ x6
"
"8________[+[Begin 
X22^6 = x5
"
"8--------]-]Success  
x5 = x5
"
"7-------]-]Success  
trad_isa x2 (propEq singleton x0 x1) x5
"
"6------]-]Success  
pippoequ x0 x1 singleton x5
"
"6______[+[Begin 
trad_isa star singleton X28^6
"
"7_______[+[Begin 
of star X29^6 ext
"
"7       >>of star X29^6 ext
"
"7       >>of star X29^6 ext
"
"7       >>locDecl star X29^6
"
"7-------]-]Success  
of star singleton ext
"
"7_______[+[Begin 
trad star X30^6
"
"7       >>trad star X30^6
"
"7-------]-]Success  
trad star star
"
"7_______[+[Begin 
pippo singleton singleton X31^6
"
"7       >>pippo singleton singleton X31^6
"
"7-------]-]Success  
pippo singleton singleton x6 \ x6
"
"7_______[+[Begin 
X28^6 = star
"
"7-------]-]Success  
star = star
"
"6------]-]Success  
trad_isa star singleton star
"
"6______[+[Begin 
trad_isa x0 singleton X32^6
"
"7_______[+[Begin 
of x0 X33^6 ext
"
"7       >>of x0 X33^6 ext
"
"7       >>of x0 X33^6 ext
"
"7-------]-]Success  
of x0 singleton ext
"
"7_______[+[Begin 
trad x0 X34^6
"
"7-------]-]Success  
trad x0 x3
"
"7_______[+[Begin 
pippo singleton singleton X35^6
"
"7       >>pippo singleton singleton X35^6
"
"7-------]-]Success  
pippo singleton singleton x6 \ x6
"
"7_______[+[Begin 
X32^6 = x3
"
"7-------]-]Success  
x3 = x3
"
"6------]-]Success  
trad_isa x0 singleton x3
"
"6______[+[Begin 
trad_isa star singleton X36^6
"
"7_______[+[Begin 
of star X37^6 ext
"
"7       >>of star X37^6 ext
"
"7       >>of star X37^6 ext
"
"7       >>locDecl star X37^6
"
"7-------]-]Success  
of star singleton ext
"
"7_______[+[Begin 
trad star X38^6
"
"7       >>trad star X38^6
"
"7-------]-]Success  
trad star star
"
"7_______[+[Begin 
pippo singleton singleton X39^6
"
"7       >>pippo singleton singleton X39^6
"
"7-------]-]Success  
pippo singleton singleton x6 \ x6
"
"7_______[+[Begin 
X36^6 = star
"
"7-------]-]Success  
star = star
"
"6------]-]Success  
trad_isa star singleton star
"
"6______[+[Begin 
trad_isa x1 singleton X40^6
"
"7_______[+[Begin 
of x1 X41^6 ext
"
"7       >>of x1 X41^6 ext
"
"7       >>of x1 X41^6 ext
"
"7-------]-]Success  
of x1 singleton ext
"
"7_______[+[Begin 
trad x1 X42^6
"
"7-------]-]Success  
trad x1 x4
"
"7_______[+[Begin 
pippo singleton singleton X43^6
"
"7       >>pippo singleton singleton X43^6
"
"7-------]-]Success  
pippo singleton singleton x6 \ x6
"
"7_______[+[Begin 
X40^6 = x4
"
"7-------]-]Success  
x4 = x4
"
"6------]-]Success  
trad_isa x1 singleton x4
"
"6______[+[Begin 
trad singleton X44^6
"
"6      >>trad singleton X44^6
"
"6------]-]Success  
trad singleton singleton
"
"5-----]-]Success  
pippo (propEq singleton star x0) (propEq singleton star x1) x6 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (id singleton star)) x3) x4) x5) x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          trad x0 x3 =>
           trad x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              trad x2 x5 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x1)
                  x6 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x3) x4) x5) x6)
"
"3---]-]Success  
trad (setPi singleton x0 \ propEq singleton star x0)
 (colSigma (setPi singleton x0 \ propId singleton star x0) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \ propId singleton star star)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton star x2) =>
   locDecl x1
    (colSigma (setPi singleton x2 \ propId singleton star x2) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    trad x0 x1 => trad singleton (X45 x1)
"
"3   >>trad singleton (X45 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton star x2) =>
   locDecl x1
    (colSigma (setPi singleton x2 \ propId singleton star x2) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    trad x0 x1 => trad singleton singleton
"
"3___[+[Begin 
equ (setPi singleton x0 \ propEq singleton star x0) X46
"
"3   >>equ (setPi singleton x0 \ propEq singleton star x0) X46
"
"4____[+[Begin 
trad singleton X47
"
"4    >>trad singleton X47
"
"4----]-]Success  
trad singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 => trad (propEq singleton star x0) (X48 x1)
"
"4    >>trad (propEq singleton star x0) (X48 x1)
"
"5_____[+[Begin 
equ singleton X49^2
"
"5     >>equ singleton X49^2
"
"5-----]-]Success  
equ singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
trad_isa star singleton X50^2
"
"6______[+[Begin 
of star X51^2 ext
"
"6      >>of star X51^2 ext
"
"6      >>of star X51^2 ext
"
"6      >>locDecl star X51^2
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
trad star X52^2
"
"6      >>trad star X52^2
"
"6------]-]Success  
trad star star
"
"6______[+[Begin 
pippo singleton singleton X53^2
"
"6      >>pippo singleton singleton X53^2
"
"6------]-]Success  
pippo singleton singleton x2 \ x2
"
"6______[+[Begin 
X50^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
trad_isa star singleton star
"
"5_____[+[Begin 
trad_isa x0 singleton X54^2
"
"6______[+[Begin 
of x0 X55^2 ext
"
"6      >>of x0 X55^2 ext
"
"6      >>of x0 X55^2 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
trad x0 X56^2
"
"6------]-]Success  
trad x0 x1
"
"6______[+[Begin 
pippo singleton singleton X57^2
"
"6      >>pippo singleton singleton X57^2
"
"6------]-]Success  
pippo singleton singleton x2 \ x2
"
"6______[+[Begin 
X54^2 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
trad_isa x0 singleton x1
"
"5_____[+[Begin 
X48 x1 = propId singleton star x1
"
"5-----]-]Success  
propId singleton star x1 = propId singleton star x1
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 => trad (propEq singleton star x0) (propId singleton star x1)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 =>
     ((trad (propEq singleton star x0) (propId singleton star x1)),
     (equ (propEq singleton star x0) (X58 x1)))
"
"4    >>trad (propEq singleton star x0) (propId singleton star x1)
"
"5_____[+[Begin 
equ singleton X59^2
"
"5     >>equ singleton X59^2
"
"5-----]-]Success  
equ singleton x2 \ x3 \ propId singleton x2 x3
"
"5_____[+[Begin 
trad_isa star singleton X60^2
"
"6______[+[Begin 
of star X61^2 ext
"
"6      >>of star X61^2 ext
"
"6      >>of star X61^2 ext
"
"6      >>locDecl star X61^2
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
trad star X62^2
"
"6      >>trad star X62^2
"
"6------]-]Success  
trad star star
"
"6______[+[Begin 
pippo singleton singleton X63^2
"
"6      >>pippo singleton singleton X63^2
"
"6------]-]Success  
pippo singleton singleton x2 \ x2
"
"6______[+[Begin 
X60^2 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
trad_isa star singleton star
"
"5_____[+[Begin 
trad_isa x0 singleton X64^2
"
"6______[+[Begin 
of x0 X65^2 ext
"
"6      >>of x0 X65^2 ext
"
"6      >>of x0 X65^2 ext
"
"6------]-]Success  
of x0 singleton ext
"
"6______[+[Begin 
trad x0 X66^2
"
"6------]-]Success  
trad x0 x1
"
"6______[+[Begin 
pippo singleton singleton X67^2
"
"6      >>pippo singleton singleton X67^2
"
"6------]-]Success  
pippo singleton singleton x2 \ x2
"
"6______[+[Begin 
X64^2 = x1
"
"6------]-]Success  
x1 = x1
"
"5-----]-]Success  
trad_isa x0 singleton x1
"
"5_____[+[Begin 
propId singleton star x1 = propId singleton star x1
"
"5-----]-]Success  
propId singleton star x1 = propId singleton star x1
"
"4    >>equ (propEq singleton star x0) (X58 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 =>
     ((trad (propEq singleton star x0) (propId singleton star x1)),
     (equ (propEq singleton star x0) x2 \ x3 \ propId singleton star star))
"
"3---]-]Success  
equ (setPi singleton x0 \ propEq singleton star x0) x0 \ x1 \
 forall singleton x2 \ propId singleton star star
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton star x2) =>
   locDecl x1
    (colSigma (setPi singleton x2 \ propId singleton star x2) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    trad x0 x1 => equ singleton (X68 x1)
"
"3   >>equ singleton (X68 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ propEq singleton star x2) =>
   locDecl x1
    (colSigma (setPi singleton x2 \ propId singleton star x2) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \ propId singleton star star) =>
    trad x0 x1 => (equ singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ propEq singleton star x6) =>
       locDecl x1 (setPi singleton x6 \ propEq singleton star x6) =>
        locDecl x3
         (colSigma (setPi singleton x6 \ propId singleton star x6) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         =>
         locDecl x4
          (colSigma (setPi singleton x6 \ propId singleton star x6) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          =>
          trad x0 x3 =>
           trad x1 x4 =>
            locDecl x2
             (propEq (setPi singleton x6 \ propEq singleton star x6) x0 x1)
             =>
             locDecl x5 (forall singleton x6 \ propId singleton star star) =>
              trad x2 x5 => spy (pippo singleton singleton (X69 x3 x4 x5))
"
"4____[+[Begin 
pippo singleton singleton (X69 x3 x4 x5)
"
"4    >>pippo singleton singleton (X69 x3 x4 x5)
"
"4----]-]Success  
pippo singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ propEq singleton star x6) =>
       locDecl x1 (setPi singleton x6 \ propEq singleton star x6) =>
        locDecl x3
         (colSigma (setPi singleton x6 \ propId singleton star x6) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         =>
         locDecl x4
          (colSigma (setPi singleton x6 \ propId singleton star x6) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          =>
          trad x0 x3 =>
           trad x1 x4 =>
            locDecl x2
             (propEq (setPi singleton x6 \ propEq singleton star x6) x0 x1)
             =>
             locDecl x5 (forall singleton x6 \ propId singleton star star) =>
              trad x2 x5 => spy (pippo singleton singleton x6 \ x6)
"
"2--]-]Success  
trad (setPi (setPi singleton x0 \ propEq singleton star x0) x0 \ singleton)
 (colSigma
   (setPi
     (colSigma (setPi singleton x0 \ propId singleton star x0) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \ propId singleton star star)
     x0 \ singleton) x0 \
   forall
    (colSigma (setPi singleton x1 \ propId singleton star x1) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \ propId singleton star star) x1 \
    forall
     (colSigma (setPi singleton x2 \ propId singleton star x2) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \ propId singleton star star)
     x2 \
     forall (forall singleton x3 \ propId singleton star star) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  trad x0 x1 =>
   locDecl x0
    (setPi (setPi singleton x2 \ propEq singleton star x2) x2 \ singleton) =>
    locDecl x1
     (colSigma
       (setPi
         (colSigma (setPi singleton x2 \ propId singleton star x2) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \ propId singleton star star)
         x2 \ singleton) x2 \
       forall
        (colSigma (setPi singleton x3 \ propId singleton star x3) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \ propId singleton star star)
        x3 \
        forall
         (colSigma (setPi singleton x4 \ propId singleton star x4) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \
         forall (forall singleton x5 \ propId singleton star star) x5 \
          propId singleton (app x2 x3) (app x2 x4)) =>
     trad
      (implies (propEq singleton x star)
        (implies (propEq singleton star x)
          (propEq singleton
            (app x0 (lambda singleton x2 \ eqId singleton star)) star)))
      (X70 x1)
"
"2  >>trad
 (implies (propEq singleton x star)
   (implies (propEq singleton star x)
     (propEq singleton (app x0 (lambda singleton x2 \ eqId singleton star))
       star))) (X70 x1)
"
"2  >>trad (propEq singleton x star) (X71 x1)
"
"3___[+[Begin 
equ singleton X72^2
"
"3   >>equ singleton X72^2
"
"3---]-]Success  
equ singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
trad_isa x singleton X73^2
"
"4____[+[Begin 
of x X74^2 ext
"
"4    >>of x X74^2 ext
"
"4    >>of x X74^2 ext
"
"4    >>locDecl x X74^2
"
"4....].]Fail  
of x X74^2 ext
"
"3...].]Fail  
trad_isa x singleton X73^2
"
"2..].]Fail  
pi x0 \
 pi x1 \
  trad x0 x1 =>
   locDecl x0
    (setPi (setPi singleton x2 \ propEq singleton star x2) x2 \ singleton) =>
    locDecl x1
     (colSigma
       (setPi
         (colSigma (setPi singleton x2 \ propId singleton star x2) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \ propId singleton star star)
         x2 \ singleton) x2 \
       forall
        (colSigma (setPi singleton x3 \ propId singleton star x3) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \ propId singleton star star)
        x3 \
        forall
         (colSigma (setPi singleton x4 \ propId singleton star x4) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \
         forall (forall singleton x5 \ propId singleton star star) x5 \
          propId singleton (app x2 x3) (app x2 x4)) =>
     trad
      (implies (propEq singleton x star)
        (implies (propEq singleton star x)
          (propEq singleton
            (app x0 (lambda singleton x2 \ eqId singleton star)) star)))
      (X70 x1)
"
"1.].]Fail  
trad
 (forall
   (setPi (setPi singleton x0 \ propEq singleton star x0) x0 \ singleton)
   x0 \
   implies (propEq singleton x star)
    (implies (propEq singleton star x)
      (propEq singleton (app x0 (lambda singleton x1 \ eqId singleton star))
        star))) X0
"
