"debug.elpi:   6: Warning: indent is undeclared"
"debug.elpi:  27: Error: (print_indent) has type prop but is applied to C S N"
"debug.elpi:  29: Error: (print_indent) has type prop but is applied to IC I N"
"debug.elpi:  34: Warning: indent is undeclared"
"debug.elpi:  34: Warning: indent is undeclared"
"trad.elpi:  58: Warning: k_propId is undeclared"
"trad.elpi:  78: Warning: k_propId is undeclared"
"trad.elpi: 109: Warning: fixMe is undeclared"
"main.elpi:  65: Warning: fixMe2 is undeclared"
"main.elpi:  73: Warning: fixMe is undeclared"
"letIn.elpi:  10: Error: (letIn KIND1 T S) has type mttTerm but is used with type mttType"
"test.elpi:  24: Warning: m is undeclared"
"test.elpi:  47: Warning: l is undeclared"
"test.elpi:  68: Warning: i is undeclared"
"test.elpi: 109: Warning: h is undeclared"
"test.elpi: 121: Warning: g is undeclared"
"test.elpi: 143: Warning: f is undeclared"
"dummy:   1:query: Warning: m is undeclared"
"1_[+[Begin 
isType
 (forall singleton x0 \
   implies (propEq singleton star x0)
    (forall
      (setPi
        (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \ singleton)
        x1 \ singleton) x1 \
      propEq singleton
       (app x1
         (lambda (setPi singleton x2 \ propEq singleton star star) x2 \ star))
       star)) X0 ext
"
"2__[+[Begin 
isType singleton X1 ext
"
"2--]-]Success  
isType singleton set ext
"
"2__[+[Begin 
pi x0 \
 locDecl x0 singleton =>
  spy
   (isType
     (implies (propEq singleton star x0)
       (forall
         (setPi
           (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \
             singleton) x1 \ singleton) x1 \
         propEq singleton
          (app x1
            (lambda (setPi singleton x2 \ propEq singleton star star) x2 \
              star)) star)) X2 ext)
"
"3___[+[Begin 
isType
 (implies (propEq singleton star x0)
   (forall
     (setPi
       (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \ singleton)
       x1 \ singleton) x1 \
     propEq singleton
      (app x1
        (lambda (setPi singleton x2 \ propEq singleton star star) x2 \ star))
      star)) X2 ext
"
"4____[+[Begin 
of star X3^1 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
conv singleton singleton
"
"4----]-]Success  
conv singleton singleton
"
"4____[+[Begin 
of x0 X4^1 ext
"
"4----]-]Success  
of x0 singleton ext
"
"4____[+[Begin 
conv singleton singleton
"
"4----]-]Success  
conv singleton singleton
"
"4____[+[Begin 
isType
 (setPi
   (setPi (setPi singleton x2 \ propEq singleton star x0) x2 \ singleton)
   x2 \ singleton) X5^2 ext
"
"5_____[+[Begin 
of star X6^3 ext
"
"5-----]-]Success  
of star singleton ext
"
"5_____[+[Begin 
conv singleton singleton
"
"5-----]-]Success  
conv singleton singleton
"
"5_____[+[Begin 
of x0 X7^3 ext
"
"5-----]-]Success  
of x0 singleton ext
"
"5_____[+[Begin 
conv singleton singleton
"
"5-----]-]Success  
conv singleton singleton
"
"5_____[+[Begin 
pts_fun set props X8^2
"
"6______[+[Begin 
pts_leq set set
"
"6------]-]Success  
pts_leq set set
"
"6______[+[Begin 
pts_leq props set
"
"6------]-]Success  
pts_leq props set
"
"5-----]-]Success  
pts_fun set props set
"
"5_____[+[Begin 
pts_fun set set X9^2
"
"6______[+[Begin 
pts_leq set set
"
"6------]-]Success  
pts_leq set set
"
"6______[+[Begin 
pts_leq set set
"
"6------]-]Success  
pts_leq set set
"
"5-----]-]Success  
pts_fun set set set
"
"5_____[+[Begin 
pts_fun set set X5^2
"
"6______[+[Begin 
pts_leq set set
"
"6------]-]Success  
pts_leq set set
"
"6______[+[Begin 
pts_leq set set
"
"6------]-]Success  
pts_leq set set
"
"5-----]-]Success  
pts_fun set set set
"
"4----]-]Success  
isType
 (setPi
   (setPi (setPi singleton x2 \ propEq singleton star x0) x2 \ singleton)
   x2 \ singleton) set ext
"
"4____[+[Begin 
pi x2 \
 locDecl x2
  (setPi
    (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
    x3 \ singleton) =>
  spy
   (isType
     (propEq singleton
       (app x2
         (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star))
       star) X10^2 ext)
"
"5_____[+[Begin 
isType
 (propEq singleton
   (app x2
     (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star))
   star) X10^2 ext
"
"6______[+[Begin 
of
 (app x2 (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star))
 X11^3 ext
"
"7_______[+[Begin 
of x2 (setPi X12^3 X13^3) ext
"
"7-------]-]Success  
of x2
 (setPi
   (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
   x3 \ singleton) ext
"
"7_______[+[Begin 
isa (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star)
 (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton) ext
"
"8________[+[Begin 
of (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star) X14^3
 ext
"
"9_________[+[Begin 
isType (setPi singleton x3 \ propEq singleton star star) _ ext
"
"10__________[+[Begin 
of star X15^4 ext
"
"10----------]-]Success  
of star singleton ext
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of star X16^4 ext
"
"10----------]-]Success  
of star singleton ext
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
pts_fun set props X17^3
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq props set
"
"11-----------]-]Success  
pts_leq props set
"
"10----------]-]Success  
pts_fun set props set
"
"9---------]-]Success  
isType (setPi singleton x3 \ propEq singleton star star) _ ext
"
"9_________[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ propEq singleton star star) =>
  isa star (X18^3 x3) ext
"
"10__________[+[Begin 
of star X19^4 ext
"
"10----------]-]Success  
of star singleton ext
"
"10__________[+[Begin 
conv singleton (X18^3 x3)
"
"10----------]-]Success  
conv singleton singleton
"
"9---------]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ propEq singleton star star) =>
  isa star singleton ext
"
"8--------]-]Success  
of (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star)
 (setPi (setPi singleton x3 \ propEq singleton star star) x3 \ singleton) ext
"
"8________[+[Begin 
conv (setPi (setPi singleton x3 \ propEq singleton star star) x3 \ singleton)
 (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
"
"9_________[+[Begin 
hnf (setPi (setPi singleton x3 \ propEq singleton star star) x3 \ singleton)
 X20^3
"
"9---------]-]Success  
hnf (setPi (setPi singleton x3 \ propEq singleton star star) x3 \ singleton)
 (setPi (setPi singleton x3 \ propEq singleton star star) x3 \ singleton)
"
"9_________[+[Begin 
hnf (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
 X21^3
"
"9---------]-]Success  
hnf (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
 (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
"
"9_________[+[Begin 
dconv
 (setPi (setPi singleton x3 \ propEq singleton star star) x3 \ singleton)
 (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
"
"10__________[+[Begin 
hnf (setPi singleton x3 \ propEq singleton star star) X22^3
"
"10----------]-]Success  
hnf (setPi singleton x3 \ propEq singleton star star)
 (setPi singleton x3 \ propEq singleton star star)
"
"10__________[+[Begin 
hnf (setPi singleton x3 \ propEq singleton star x0) X23^3
"
"10----------]-]Success  
hnf (setPi singleton x3 \ propEq singleton star x0)
 (setPi singleton x3 \ propEq singleton star x0)
"
"10__________[+[Begin 
dconv (setPi singleton x3 \ propEq singleton star star)
 (setPi singleton x3 \ propEq singleton star x0)
"
"11___________[+[Begin 
hnf (propEq singleton star star) X24^4
"
"11-----------]-]Success  
hnf (propEq singleton star star) (propEq singleton star star)
"
"11___________[+[Begin 
hnf (propEq singleton star x0) X25^4
"
"11-----------]-]Success  
hnf (propEq singleton star x0) (propEq singleton star x0)
"
"11___________[+[Begin 
dconv (propEq singleton star star) (propEq singleton star x0)
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
conv star star
"
"12------------]-]Success  
conv star star
"
"12____________[+[Begin 
conv star x0
"
"12------------]-]Success  
conv star x0
"
"11-----------]-]Success  
dconv (propEq singleton star star) (propEq singleton star x0)
"
"10----------]-]Success  
dconv (setPi singleton x3 \ propEq singleton star star)
 (setPi singleton x3 \ propEq singleton star x0)
"
"9---------]-]Success  
dconv
 (setPi (setPi singleton x3 \ propEq singleton star star) x3 \ singleton)
 (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
"
"8--------]-]Success  
conv (setPi (setPi singleton x3 \ propEq singleton star star) x3 \ singleton)
 (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
"
"7-------]-]Success  
isa (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star)
 (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton) ext
"
"6------]-]Success  
of
 (app x2 (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star))
 singleton ext
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"6______[+[Begin 
of star X26^3 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
conv singleton singleton
"
"6------]-]Success  
conv singleton singleton
"
"5-----]-]Success  
isType
 (propEq singleton
   (app x2
     (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star))
   star) props ext
"
"4----]-]Success  
pi x2 \
 locDecl x2
  (setPi
    (setPi (setPi singleton x3 \ propEq singleton star x0) x3 \ singleton)
    x3 \ singleton) =>
  spy
   (isType
     (propEq singleton
       (app x2
         (lambda (setPi singleton x3 \ propEq singleton star star) x3 \ star))
       star) props ext)
"
"4____[+[Begin 
pts_for set props props
"
"4----]-]Success  
pts_for set props props
"
"3---]-]Success  
isType
 (implies (propEq singleton star x0)
   (forall
     (setPi
       (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \ singleton)
       x1 \ singleton) x1 \
     propEq singleton
      (app x1
        (lambda (setPi singleton x2 \ propEq singleton star star) x2 \ star))
      star)) props ext
"
"2--]-]Success  
pi x0 \
 locDecl x0 singleton =>
  spy
   (isType
     (implies (propEq singleton star x0)
       (forall
         (setPi
           (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \
             singleton) x1 \ singleton) x1 \
         propEq singleton
          (app x1
            (lambda (setPi singleton x2 \ propEq singleton star star) x2 \
              star)) star)) props ext)
"
"2__[+[Begin 
pts_for set props X0
"
"2--]-]Success  
pts_for set props props
"
"1-]-]Success  
isType
 (forall singleton x0 \
   implies (propEq singleton star x0)
    (forall
      (setPi
        (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \ singleton)
        x1 \ singleton) x1 \
      propEq singleton
       (app x1
         (lambda (setPi singleton x2 \ propEq singleton star star) x2 \ star))
       star)) props ext
"
"|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
"
"1_[+[Begin 
trad
 (forall singleton x0 \
   implies (propEq singleton star x0)
    (forall
      (setPi
        (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \ singleton)
        x1 \ singleton) x1 \
      propEq singleton
       (app x1
         (lambda (setPi singleton x2 \ propEq singleton star star) x2 \ star))
       star)) X27
"
"2__[+[Begin 
trad singleton X28
"
"2--]-]Success  
trad singleton singleton
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  trad x0 x1 =>
   locDecl x0 singleton =>
    locDecl x1 singleton =>
     trad
      (implies (propEq singleton star x0)
        (forall
          (setPi
            (setPi (setPi singleton x2 \ propEq singleton star x0) x2 \
              singleton) x2 \ singleton) x2 \
          propEq singleton
           (app x2
             (lambda (setPi singleton x3 \ propEq singleton star star) x3 \
               star)) star)) (X29 x1)
"
"3___[+[Begin 
equ singleton X30^2
"
"3---]-]Success  
equ singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
trad_isa star singleton X31^2
"
"4____[+[Begin 
of star X32^2 ext
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
trad star X33^2
"
"4----]-]Success  
trad star star
"
"4____[+[Begin 
pippo singleton singleton X34^2
"
"4----]-]Success  
pippo singleton singleton x2 \ x2
"
"4____[+[Begin 
X31^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
trad_isa star singleton star
"
"3___[+[Begin 
trad_isa x0 singleton X35^2
"
"4____[+[Begin 
of x0 X36^2 ext
"
"4----]-]Success  
of x0 singleton ext
"
"4____[+[Begin 
trad x0 X37^2
"
"4----]-]Success  
trad x0 x1
"
"4____[+[Begin 
pippo singleton singleton X38^2
"
"4----]-]Success  
pippo singleton singleton x2 \ x2
"
"4____[+[Begin 
X35^2 = x1
"
"4----]-]Success  
x1 = x1
"
"3---]-]Success  
trad_isa x0 singleton x1
"
"3___[+[Begin 
X39 x1 = propId singleton star x1
"
"3---]-]Success  
propId singleton star x1 = propId singleton star x1
"
"3___[+[Begin 
pi x2 \
 pi x3 \
  ((trad x2 x3), (locDecl x2 (propEq singleton star x0)),
   (locDecl x3 (propId singleton star x1))) =>
   trad
    (forall
      (setPi
        (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
        x4 \ singleton) x4 \
      propEq singleton
       (app x4
         (lambda (setPi singleton x5 \ propEq singleton star star) x5 \ star))
       star) (X40 x1 x3)
"
"4____[+[Begin 
trad
 (setPi
   (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
   x4 \ singleton) (X41 x1 x3)
"
"5_____[+[Begin 
trad (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
 X42^4
"
"6______[+[Begin 
trad (setPi singleton x4 \ propEq singleton star x0) X43^4
"
"7_______[+[Begin 
trad singleton X44^4
"
"7-------]-]Success  
trad singleton singleton
"
"7_______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 => trad (propEq singleton star x0) (X45^4 x5)
"
"8________[+[Begin 
equ singleton X46^6
"
"8--------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"8________[+[Begin 
trad_isa star singleton X47^6
"
"9_________[+[Begin 
of star X48^6 ext
"
"9---------]-]Success  
of star singleton ext
"
"9_________[+[Begin 
trad star X49^6
"
"9---------]-]Success  
trad star star
"
"9_________[+[Begin 
pippo singleton singleton X50^6
"
"9---------]-]Success  
pippo singleton singleton x6 \ x6
"
"9_________[+[Begin 
X47^6 = star
"
"9---------]-]Success  
star = star
"
"8--------]-]Success  
trad_isa star singleton star
"
"8________[+[Begin 
trad_isa x0 singleton X51^6
"
"9_________[+[Begin 
of x0 X52^6 ext
"
"9---------]-]Success  
of x0 singleton ext
"
"9_________[+[Begin 
trad x0 X53^6
"
"9---------]-]Success  
trad x0 x1
"
"9_________[+[Begin 
pippo singleton singleton X54^6
"
"9---------]-]Success  
pippo singleton singleton x6 \ x6
"
"9_________[+[Begin 
X51^6 = x1
"
"9---------]-]Success  
x1 = x1
"
"8--------]-]Success  
trad_isa x0 singleton x1
"
"8________[+[Begin 
X45^4 x5 = propId singleton star x1
"
"8--------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"7-------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 => trad (propEq singleton star x0) (propId singleton star x1)
"
"7_______[+[Begin 
equ singleton X55^4
"
"7-------]-]Success  
equ singleton x4 \ x5 \ propId singleton x4 x5
"
"7_______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 => equ (propEq singleton star x0) (X56^4 x5)
"
"7-------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 =>
     (equ (propEq singleton star x0) x6 \ x7 \ propId singleton star star)
"
"7_______[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          trad x4 x7 =>
           trad x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              trad x6 x9 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  (X57^4 x7 x8 x9))
"
"8________[+[Begin 
pippo (propEq singleton star x0) (propEq singleton star x0) (X57^4 x7 x8 x9)
"
"8--------]-]Success  
pippo (propEq singleton star x0) (propEq singleton star x0) x10 \ x10
"
"7-------]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          trad x4 x7 =>
           trad x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              trad x6 x9 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  x10 \ x10)
"
"6------]-]Success  
trad (setPi singleton x4 \ propEq singleton star x0)
 (colSigma (setPi singleton x4 \ propId singleton star x1) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star)
"
"6______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ propEq singleton star x0) =>
   locDecl x5
    (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
    trad x4 x5 => trad singleton (X58^4 x5)
"
"6------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ propEq singleton star x0) =>
   locDecl x5
    (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
    trad x4 x5 => trad singleton singleton
"
"6______[+[Begin 
equ (setPi singleton x4 \ propEq singleton star x0) X59^4
"
"7_______[+[Begin 
trad singleton X60^4
"
"7-------]-]Success  
trad singleton singleton
"
"7_______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 => trad (propEq singleton star x0) (X61^4 x5)
"
"8________[+[Begin 
equ singleton X62^6
"
"8--------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"8________[+[Begin 
trad_isa star singleton X63^6
"
"9_________[+[Begin 
of star X64^6 ext
"
"9---------]-]Success  
of star singleton ext
"
"9_________[+[Begin 
trad star X65^6
"
"9---------]-]Success  
trad star star
"
"9_________[+[Begin 
pippo singleton singleton X66^6
"
"9---------]-]Success  
pippo singleton singleton x6 \ x6
"
"9_________[+[Begin 
X63^6 = star
"
"9---------]-]Success  
star = star
"
"8--------]-]Success  
trad_isa star singleton star
"
"8________[+[Begin 
trad_isa x0 singleton X67^6
"
"9_________[+[Begin 
of x0 X68^6 ext
"
"9---------]-]Success  
of x0 singleton ext
"
"9_________[+[Begin 
trad x0 X69^6
"
"9---------]-]Success  
trad x0 x1
"
"9_________[+[Begin 
pippo singleton singleton X70^6
"
"9---------]-]Success  
pippo singleton singleton x6 \ x6
"
"9_________[+[Begin 
X67^6 = x1
"
"9---------]-]Success  
x1 = x1
"
"8--------]-]Success  
trad_isa x0 singleton x1
"
"8________[+[Begin 
X61^4 x5 = propId singleton star x1
"
"8--------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"7-------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 => trad (propEq singleton star x0) (propId singleton star x1)
"
"7_______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 =>
     ((trad (propEq singleton star x0) (propId singleton star x1)),
     (equ (propEq singleton star x0) (X71^4 x5)))
"
"8________[+[Begin 
equ singleton X72^6
"
"8--------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"8________[+[Begin 
trad_isa star singleton X73^6
"
"9_________[+[Begin 
of star X74^6 ext
"
"9---------]-]Success  
of star singleton ext
"
"9_________[+[Begin 
trad star X75^6
"
"9---------]-]Success  
trad star star
"
"9_________[+[Begin 
pippo singleton singleton X76^6
"
"9---------]-]Success  
pippo singleton singleton x6 \ x6
"
"9_________[+[Begin 
X73^6 = star
"
"9---------]-]Success  
star = star
"
"8--------]-]Success  
trad_isa star singleton star
"
"8________[+[Begin 
trad_isa x0 singleton X77^6
"
"9_________[+[Begin 
of x0 X78^6 ext
"
"9---------]-]Success  
of x0 singleton ext
"
"9_________[+[Begin 
trad x0 X79^6
"
"9---------]-]Success  
trad x0 x1
"
"9_________[+[Begin 
pippo singleton singleton X80^6
"
"9---------]-]Success  
pippo singleton singleton x6 \ x6
"
"9_________[+[Begin 
X77^6 = x1
"
"9---------]-]Success  
x1 = x1
"
"8--------]-]Success  
trad_isa x0 singleton x1
"
"8________[+[Begin 
propId singleton star x1 = propId singleton star x1
"
"8--------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"7-------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 =>
     ((trad (propEq singleton star x0) (propId singleton star x1)),
     (equ (propEq singleton star x0) x6 \ x7 \ propId singleton star star))
"
"6------]-]Success  
equ (setPi singleton x4 \ propEq singleton star x0) x4 \ x5 \
 forall singleton x6 \ propId singleton star star
"
"6______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ propEq singleton star x0) =>
   locDecl x5
    (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
    trad x4 x5 => equ singleton (X81^4 x5)
"
"6------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ propEq singleton star x0) =>
   locDecl x5
    (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
    trad x4 x5 => (equ singleton x6 \ x7 \ propId singleton x6 x7)
"
"6______[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 (setPi singleton x10 \ propEq singleton star x0) =>
       locDecl x5 (setPi singleton x10 \ propEq singleton star x0) =>
        locDecl x7
         (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) =>
         locDecl x8
          (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) =>
          trad x4 x7 =>
           trad x5 x8 =>
            locDecl x6
             (propEq (setPi singleton x10 \ propEq singleton star x0) x4 x5)
             =>
             locDecl x9 (forall singleton x10 \ propId singleton star star)
              =>
              trad x6 x9 => spy (pippo singleton singleton (X82^4 x7 x8 x9))
"
"7_______[+[Begin 
pippo singleton singleton (X82^4 x7 x8 x9)
"
"7-------]-]Success  
pippo singleton singleton x10 \ x10
"
"6------]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 (setPi singleton x10 \ propEq singleton star x0) =>
       locDecl x5 (setPi singleton x10 \ propEq singleton star x0) =>
        locDecl x7
         (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) =>
         locDecl x8
          (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) =>
          trad x4 x7 =>
           trad x5 x8 =>
            locDecl x6
             (propEq (setPi singleton x10 \ propEq singleton star x0) x4 x5)
             =>
             locDecl x9 (forall singleton x10 \ propId singleton star star)
              => trad x6 x9 => spy (pippo singleton singleton x10 \ x10)
"
"5-----]-]Success  
trad (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
 (colSigma
   (setPi
     (colSigma (setPi singleton x4 \ propId singleton star x1) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (colSigma (setPi singleton x5 \ propId singleton star x1) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4
   (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton) =>
   locDecl x5
    (colSigma
      (setPi
        (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8)) =>
    trad x4 x5 => trad singleton (X83^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4
   (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton) =>
   locDecl x5
    (colSigma
      (setPi
        (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8)) =>
    trad x4 x5 => trad singleton singleton
"
"5_____[+[Begin 
equ (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
 X84^4
"
"6______[+[Begin 
trad (setPi singleton x4 \ propEq singleton star x0) X85^4
"
"7_______[+[Begin 
trad singleton X86^4
"
"7-------]-]Success  
trad singleton singleton
"
"7_______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 => trad (propEq singleton star x0) (X87^4 x5)
"
"8________[+[Begin 
equ singleton X88^6
"
"8--------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"8________[+[Begin 
trad_isa star singleton X89^6
"
"9_________[+[Begin 
of star X90^6 ext
"
"9---------]-]Success  
of star singleton ext
"
"9_________[+[Begin 
trad star X91^6
"
"9---------]-]Success  
trad star star
"
"9_________[+[Begin 
pippo singleton singleton X92^6
"
"9---------]-]Success  
pippo singleton singleton x6 \ x6
"
"9_________[+[Begin 
X89^6 = star
"
"9---------]-]Success  
star = star
"
"8--------]-]Success  
trad_isa star singleton star
"
"8________[+[Begin 
trad_isa x0 singleton X93^6
"
"9_________[+[Begin 
of x0 X94^6 ext
"
"9---------]-]Success  
of x0 singleton ext
"
"9_________[+[Begin 
trad x0 X95^6
"
"9---------]-]Success  
trad x0 x1
"
"9_________[+[Begin 
pippo singleton singleton X96^6
"
"9---------]-]Success  
pippo singleton singleton x6 \ x6
"
"9_________[+[Begin 
X93^6 = x1
"
"9---------]-]Success  
x1 = x1
"
"8--------]-]Success  
trad_isa x0 singleton x1
"
"8________[+[Begin 
X87^4 x5 = propId singleton star x1
"
"8--------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"7-------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 => trad (propEq singleton star x0) (propId singleton star x1)
"
"7_______[+[Begin 
equ singleton X97^4
"
"7-------]-]Success  
equ singleton x4 \ x5 \ propId singleton x4 x5
"
"7_______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 => equ (propEq singleton star x0) (X98^4 x5)
"
"7-------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 singleton =>
   locDecl x5 singleton =>
    trad x4 x5 =>
     (equ (propEq singleton star x0) x6 \ x7 \ propId singleton star star)
"
"7_______[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          trad x4 x7 =>
           trad x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              trad x6 x9 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  (X99^4 x7 x8 x9))
"
"8________[+[Begin 
pippo (propEq singleton star x0) (propEq singleton star x0) (X99^4 x7 x8 x9)
"
"8--------]-]Success  
pippo (propEq singleton star x0) (propEq singleton star x0) x10 \ x10
"
"7-------]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4 singleton =>
       locDecl x5 singleton =>
        locDecl x7 singleton =>
         locDecl x8 singleton =>
          trad x4 x7 =>
           trad x5 x8 =>
            locDecl x6 (propEq singleton x4 x5) =>
             locDecl x9 (propId singleton x7 x8) =>
              trad x6 x9 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  x10 \ x10)
"
"6------]-]Success  
trad (setPi singleton x4 \ propEq singleton star x0)
 (colSigma (setPi singleton x4 \ propId singleton star x1) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star)
"
"6______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ propEq singleton star x0) =>
   locDecl x5
    (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
    trad x4 x5 => trad singleton (X100^4 x5)
"
"6------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ propEq singleton star x0) =>
   locDecl x5
    (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
    trad x4 x5 => trad singleton singleton
"
"6______[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ propEq singleton star x0) =>
   locDecl x5
    (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
    trad x4 x5 => ((trad singleton singleton), (equ singleton (X101^4 x5)))
"
"6------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ propEq singleton star x0) =>
   locDecl x5
    (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
    trad x4 x5 => ((trad singleton singleton),
     (equ singleton x6 \ x7 \ propId singleton x6 x7))
"
"5-----]-]Success  
equ (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
 x4 \ x5 \
 forall
  (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
  propId singleton
   (app
     (elim_colSigma x4 (x7 \
       setPi
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x7 \ x8 \ x7) x6)
   (app
     (elim_colSigma x5 (x7 \
       setPi
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x7 \ x8 \ x7) x6)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4
   (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton) =>
   locDecl x5
    (colSigma
      (setPi
        (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8)) =>
    trad x4 x5 => equ singleton (X102^4 x5)
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  locDecl x4
   (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton) =>
   locDecl x5
    (colSigma
      (setPi
        (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8)) =>
    trad x4 x5 => (equ singleton x6 \ x7 \ propId singleton x6 x7)
"
"5_____[+[Begin 
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4
       (setPi (setPi singleton x10 \ propEq singleton star x0) x10 \
         singleton) =>
       locDecl x5
        (setPi (setPi singleton x10 \ propEq singleton star x0) x10 \
          singleton) =>
        locDecl x7
         (colSigma
           (setPi
             (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x10 \ singleton) x10 \
           forall
            (colSigma (setPi singleton x11 \ propId singleton star x1) x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x11 \
            forall
             (colSigma (setPi singleton x12 \ propId singleton star x1) x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star) x12 \
             forall (forall singleton x13 \ propId singleton star star) x13 \
              propId singleton (app x10 x11) (app x10 x12)) =>
         locDecl x8
          (colSigma
            (setPi
              (colSigma (setPi singleton x10 \ propId singleton star x1)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x10 \ singleton) x10 \
            forall
             (colSigma (setPi singleton x11 \ propId singleton star x1) x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star) x11 \
             forall
              (colSigma (setPi singleton x12 \ propId singleton star x1)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x12 \
              forall (forall singleton x13 \ propId singleton star star)
               x13 \ propId singleton (app x10 x11) (app x10 x12)) =>
          trad x4 x7 =>
           trad x5 x8 =>
            locDecl x6
             (propEq
               (setPi (setPi singleton x10 \ propEq singleton star x0) x10 \
                 singleton) x4 x5) =>
             locDecl x9
              (forall
                (colSigma (setPi singleton x10 \ propId singleton star x1)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x10 \
                propId singleton
                 (app
                   (elim_colSigma x7 (x11 \
                     setPi
                      (colSigma
                        (setPi singleton x12 \ propId singleton star x1)
                        x12 \
                        forall singleton x13 \
                         forall singleton x14 \
                          forall (propId singleton x13 x14) x15 \
                           propId singleton star star) x12 \ singleton) x11 \
                     x12 \ x11) x10)
                 (app
                   (elim_colSigma x8 (x11 \
                     setPi
                      (colSigma
                        (setPi singleton x12 \ propId singleton star x1)
                        x12 \
                        forall singleton x13 \
                         forall singleton x14 \
                          forall (propId singleton x13 x14) x15 \
                           propId singleton star star) x12 \ singleton) x11 \
                     x12 \ x11) x10)) =>
              trad x6 x9 => spy (pippo singleton singleton (X103^4 x7 x8 x9))
"
"6______[+[Begin 
pippo singleton singleton (X103^4 x7 x8 x9)
"
"6------]-]Success  
pippo singleton singleton x10 \ x10
"
"5-----]-]Success  
pi x4 \
 pi x5 \
  pi x6 \
   pi x7 \
    pi x8 \
     pi x9 \
      locDecl x4
       (setPi (setPi singleton x10 \ propEq singleton star x0) x10 \
         singleton) =>
       locDecl x5
        (setPi (setPi singleton x10 \ propEq singleton star x0) x10 \
          singleton) =>
        locDecl x7
         (colSigma
           (setPi
             (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x10 \ singleton) x10 \
           forall
            (colSigma (setPi singleton x11 \ propId singleton star x1) x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star) x11 \
            forall
             (colSigma (setPi singleton x12 \ propId singleton star x1) x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star) x12 \
             forall (forall singleton x13 \ propId singleton star star) x13 \
              propId singleton (app x10 x11) (app x10 x12)) =>
         locDecl x8
          (colSigma
            (setPi
              (colSigma (setPi singleton x10 \ propId singleton star x1)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x10 \ singleton) x10 \
            forall
             (colSigma (setPi singleton x11 \ propId singleton star x1) x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star) x11 \
             forall
              (colSigma (setPi singleton x12 \ propId singleton star x1)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x12 \
              forall (forall singleton x13 \ propId singleton star star)
               x13 \ propId singleton (app x10 x11) (app x10 x12)) =>
          trad x4 x7 =>
           trad x5 x8 =>
            locDecl x6
             (propEq
               (setPi (setPi singleton x10 \ propEq singleton star x0) x10 \
                 singleton) x4 x5) =>
             locDecl x9
              (forall
                (colSigma (setPi singleton x10 \ propId singleton star x1)
                  x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star) x10 \
                propId singleton
                 (app
                   (elim_colSigma x7 (x11 \
                     setPi
                      (colSigma
                        (setPi singleton x12 \ propId singleton star x1)
                        x12 \
                        forall singleton x13 \
                         forall singleton x14 \
                          forall (propId singleton x13 x14) x15 \
                           propId singleton star star) x12 \ singleton) x11 \
                     x12 \ x11) x10)
                 (app
                   (elim_colSigma x8 (x11 \
                     setPi
                      (colSigma
                        (setPi singleton x12 \ propId singleton star x1)
                        x12 \
                        forall singleton x13 \
                         forall singleton x14 \
                          forall (propId singleton x13 x14) x15 \
                           propId singleton star star) x12 \ singleton) x11 \
                     x12 \ x11) x10)) =>
              trad x6 x9 => spy (pippo singleton singleton x10 \ x10)
"
"4----]-]Success  
trad
 (setPi
   (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
   x4 \ singleton)
 (colSigma
   (setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x4 \ propId singleton star x1) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x1) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x4 \
   forall
    (colSigma
      (setPi
        (colSigma (setPi singleton x5 \ propId singleton star x1) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \ singleton) x5 \
      forall
       (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall
        (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall (forall singleton x8 \ propId singleton star star) x8 \
         propId singleton (app x5 x6) (app x5 x7)) x5 \
    forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) x6 \
       forall
        (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8)) x6 \
     forall
      (forall
        (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        propId singleton
         (app
           (elim_colSigma x5 (x8 \
             setPi
              (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
           x7)
         (app
           (elim_colSigma x6 (x8 \
             setPi
              (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
           x7)) x7 \ propId singleton (app x4 x5) (app x4 x6))
"
"4____[+[Begin 
pi x4 \
 pi x5 \
  trad x4 x5 =>
   locDecl x4
    (setPi
      (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
      x6 \ singleton) =>
    locDecl x5
     (colSigma
       (setPi
         (colSigma
           (setPi
             (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \ singleton) x6 \
           forall
            (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall
             (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             forall (forall singleton x9 \ propId singleton star star) x9 \
              propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) x6 \
       forall
        (colSigma
          (setPi
            (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ singleton) x7 \
          forall
           (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           forall
            (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            forall (forall singleton x10 \ propId singleton star star) x10 \
             propId singleton (app x7 x8) (app x7 x9)) x7 \
        forall
         (colSigma
           (setPi
             (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \ singleton) x8 \
           forall
            (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            forall
             (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x10 \
             forall (forall singleton x11 \ propId singleton star star) x11 \
              propId singleton (app x8 x9) (app x8 x10)) x8 \
         forall
          (forall
            (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            propId singleton
             (app
               (elim_colSigma x7 (x10 \
                 setPi
                  (colSigma (setPi singleton x11 \ propId singleton star x1)
                    x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton star star) x11 \ singleton) x10 \
                 x11 \ x10) x9)
             (app
               (elim_colSigma x8 (x10 \
                 setPi
                  (colSigma (setPi singleton x11 \ propId singleton star x1)
                    x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton star star) x11 \ singleton) x10 \
                 x11 \ x10) x9)) x9 \
          propId singleton (app x6 x7) (app x6 x8)) =>
     trad
      (propEq singleton
        (app x4
          (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star))
        star) (X104 x1 x3 x5)
"
"5_____[+[Begin 
equ singleton X105^6
"
"5-----]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"5_____[+[Begin 
trad_isa
 (app x4 (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star))
 singleton X106^6
"
"6______[+[Begin 
of
 (app x4 (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star))
 X107^6 ext
"
"7_______[+[Begin 
of x4 (setPi X108^6 X109^6) ext
"
"7-------]-]Success  
of x4
 (setPi
   (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
   x6 \ singleton) ext
"
"7_______[+[Begin 
isa (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton) ext
"
"8________[+[Begin 
of (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 X110^6 ext
"
"9_________[+[Begin 
isType (setPi singleton x6 \ propEq singleton star star) _ ext
"
"10__________[+[Begin 
of star X111^7 ext
"
"10----------]-]Success  
of star singleton ext
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of star X112^7 ext
"
"10----------]-]Success  
of star singleton ext
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
pts_fun set props X113^6
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq props set
"
"11-----------]-]Success  
pts_leq props set
"
"10----------]-]Success  
pts_fun set props set
"
"9---------]-]Success  
isType (setPi singleton x6 \ propEq singleton star star) _ ext
"
"9_________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propEq singleton star star) =>
  isa star (X114^6 x6) ext
"
"10__________[+[Begin 
of star X115^7 ext
"
"10----------]-]Success  
of star singleton ext
"
"10__________[+[Begin 
conv singleton (X114^6 x6)
"
"10----------]-]Success  
conv singleton singleton
"
"9---------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propEq singleton star star) =>
  isa star singleton ext
"
"8--------]-]Success  
of (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton) ext
"
"8________[+[Begin 
conv (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
"
"9_________[+[Begin 
hnf (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 X116^6
"
"9---------]-]Success  
hnf (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
"
"9_________[+[Begin 
hnf (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
 X117^6
"
"9---------]-]Success  
hnf (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
"
"9_________[+[Begin 
dconv
 (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
"
"10__________[+[Begin 
hnf (setPi singleton x6 \ propEq singleton star star) X118^6
"
"10----------]-]Success  
hnf (setPi singleton x6 \ propEq singleton star star)
 (setPi singleton x6 \ propEq singleton star star)
"
"10__________[+[Begin 
hnf (setPi singleton x6 \ propEq singleton star x0) X119^6
"
"10----------]-]Success  
hnf (setPi singleton x6 \ propEq singleton star x0)
 (setPi singleton x6 \ propEq singleton star x0)
"
"10__________[+[Begin 
dconv (setPi singleton x6 \ propEq singleton star star)
 (setPi singleton x6 \ propEq singleton star x0)
"
"11___________[+[Begin 
hnf (propEq singleton star star) X120^7
"
"11-----------]-]Success  
hnf (propEq singleton star star) (propEq singleton star star)
"
"11___________[+[Begin 
hnf (propEq singleton star x0) X121^7
"
"11-----------]-]Success  
hnf (propEq singleton star x0) (propEq singleton star x0)
"
"11___________[+[Begin 
dconv (propEq singleton star star) (propEq singleton star x0)
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
conv star star
"
"12------------]-]Success  
conv star star
"
"12____________[+[Begin 
conv star x0
"
"12------------]-]Success  
conv star x0
"
"11-----------]-]Success  
dconv (propEq singleton star star) (propEq singleton star x0)
"
"10----------]-]Success  
dconv (setPi singleton x6 \ propEq singleton star star)
 (setPi singleton x6 \ propEq singleton star x0)
"
"9---------]-]Success  
dconv
 (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
"
"8--------]-]Success  
conv (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
"
"7-------]-]Success  
isa (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton) ext
"
"6------]-]Success  
of
 (app x4 (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star))
 singleton ext
"
"6______[+[Begin 
trad
 (app x4 (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star))
 X122^6
"
"7_______[+[Begin 
of x4 (setPi X123^6 X124^6) ext
"
"7-------]-]Success  
of x4
 (setPi
   (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
   x6 \ singleton) ext
"
"7_______[+[Begin 
trad_isa (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
 X125^6
"
"8________[+[Begin 
of (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 X126^6 ext
"
"9_________[+[Begin 
isType (setPi singleton x6 \ propEq singleton star star) _ ext
"
"10__________[+[Begin 
of star X127^7 ext
"
"10----------]-]Success  
of star singleton ext
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of star X128^7 ext
"
"10----------]-]Success  
of star singleton ext
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
pts_fun set props X129^6
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq props set
"
"11-----------]-]Success  
pts_leq props set
"
"10----------]-]Success  
pts_fun set props set
"
"9---------]-]Success  
isType (setPi singleton x6 \ propEq singleton star star) _ ext
"
"9_________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propEq singleton star star) =>
  isa star (X130^6 x6) ext
"
"10__________[+[Begin 
of star X131^7 ext
"
"10----------]-]Success  
of star singleton ext
"
"10__________[+[Begin 
conv singleton (X130^6 x6)
"
"10----------]-]Success  
conv singleton singleton
"
"9---------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propEq singleton star star) =>
  isa star singleton ext
"
"8--------]-]Success  
of (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton) ext
"
"8________[+[Begin 
trad (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 X132^6
"
"9_________[+[Begin 
of (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 (setPi (setPi singleton x6 \ propEq singleton star star) X133^6) ext
"
"10__________[+[Begin 
isType (setPi singleton x6 \ propEq singleton star star) _ ext
"
"11___________[+[Begin 
of star X134^7 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of star X135^7 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
pts_fun set props X136^6
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"11-----------]-]Success  
pts_fun set props set
"
"10----------]-]Success  
isType (setPi singleton x6 \ propEq singleton star star) _ ext
"
"10__________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propEq singleton star star) =>
  isa star (X133^6 x6) ext
"
"11___________[+[Begin 
of star X137^7 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
conv singleton (X133^6 x6)
"
"11-----------]-]Success  
conv singleton singleton
"
"10----------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propEq singleton star star) =>
  isa star singleton ext
"
"9---------]-]Success  
of (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton) ext
"
"9_________[+[Begin 
trad (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (colSigma (setPi X138^6 X139^6) X140^6)
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star star) X141^6
"
"11___________[+[Begin 
trad singleton X142^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X143^6 x7)
"
"12____________[+[Begin 
equ singleton X144^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X145^8
"
"13_____________[+[Begin 
of star X146^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X147^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X148^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X145^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X149^8
"
"13_____________[+[Begin 
of star X150^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X151^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X152^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X149^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X143^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
equ singleton X153^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star star) (X154^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) (X155^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star star) (propEq singleton star star)
 (X155^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star star) (propEq singleton star star) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star star) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => trad singleton (X156^6 x7)
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star star) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => trad singleton singleton
"
"10__________[+[Begin 
equ (setPi singleton x6 \ propEq singleton star star) X157^6
"
"11___________[+[Begin 
trad singleton X158^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X159^6 x7)
"
"12____________[+[Begin 
equ singleton X160^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X161^8
"
"13_____________[+[Begin 
of star X162^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X163^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X164^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X161^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X165^8
"
"13_____________[+[Begin 
of star X166^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X167^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X168^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X165^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X159^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) (X169^6 x7)))
"
"12____________[+[Begin 
equ singleton X170^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X171^8
"
"13_____________[+[Begin 
of star X172^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X173^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X174^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X171^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X175^8
"
"13_____________[+[Begin 
of star X176^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X177^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X178^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X175^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
propId singleton star star = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star))
"
"10----------]-]Success  
equ (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star star) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => equ singleton (X179^6 x7)
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star star) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => (equ singleton x8 \ x9 \ propId singleton x8 x9)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              trad x8 x11 =>
               spy (pippo singleton singleton (X180^6 x9 x10 x11))
"
"11___________[+[Begin 
pippo singleton singleton (X180^6 x9 x10 x11)
"
"11-----------]-]Success  
pippo singleton singleton x12 \ x12
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              => trad x8 x11 => spy (pippo singleton singleton x12 \ x12)
"
"9---------]-]Success  
trad (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
"
"9_________[+[Begin 
equ (setPi singleton x6 \ propEq singleton star star) X181^6
"
"10__________[+[Begin 
trad singleton X182^6
"
"10----------]-]Success  
trad singleton singleton
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X183^6 x7)
"
"11___________[+[Begin 
equ singleton X184^8
"
"11-----------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
trad_isa star singleton X185^8
"
"12____________[+[Begin 
of star X186^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X187^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X188^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X185^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
trad_isa star singleton X189^8
"
"12____________[+[Begin 
of star X190^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X191^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X192^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X189^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
X183^6 x7 = propId singleton star star
"
"11-----------]-]Success  
propId singleton star star = propId singleton star star
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) (X193^6 x7)))
"
"11___________[+[Begin 
equ singleton X194^8
"
"11-----------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
trad_isa star singleton X195^8
"
"12____________[+[Begin 
of star X196^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X197^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X198^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X195^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
trad_isa star singleton X199^8
"
"12____________[+[Begin 
of star X200^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X201^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X202^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X199^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
propId singleton star star = propId singleton star star
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star))
"
"9---------]-]Success  
equ (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"9_________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star star) X203^6
"
"10__________[+[Begin 
trad singleton X204^6
"
"10----------]-]Success  
trad singleton singleton
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X205^6 x7)
"
"11___________[+[Begin 
equ singleton X206^8
"
"11-----------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
trad_isa star singleton X207^8
"
"12____________[+[Begin 
of star X208^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X209^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X210^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X207^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
trad_isa star singleton X211^8
"
"12____________[+[Begin 
of star X212^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X213^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X214^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X211^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
X205^6 x7 = propId singleton star star
"
"11-----------]-]Success  
propId singleton star star = propId singleton star star
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"10__________[+[Begin 
equ singleton X215^6
"
"10----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star star) (X216^6 x7)
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) (X217^6 x9 x10 x11))
"
"11___________[+[Begin 
pippo (propEq singleton star star) (propEq singleton star star)
 (X217^6 x9 x10 x11)
"
"11-----------]-]Success  
pippo (propEq singleton star star) (propEq singleton star star) x12 \ x12
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) x12 \ x12)
"
"9---------]-]Success  
trad (setPi singleton x6 \ propEq singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"9_________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              => trad x8 x11 => spy (trad star (X218^6 x9))
"
"10__________[+[Begin 
trad star (X218^6 x9)
"
"10----------]-]Success  
trad star star
"
"9---------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              => trad x8 x11 => spy (trad star star)
"
"9_________[+[Begin 
trad singleton X219^6
"
"9---------]-]Success  
trad singleton singleton
"
"9_________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X220^6 x7)
"
"10__________[+[Begin 
equ singleton X221^8
"
"10----------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"10__________[+[Begin 
trad_isa star singleton X222^8
"
"11___________[+[Begin 
of star X223^8 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
trad star X224^8
"
"11-----------]-]Success  
trad star star
"
"11___________[+[Begin 
pippo singleton singleton X225^8
"
"11-----------]-]Success  
pippo singleton singleton x8 \ x8
"
"11___________[+[Begin 
X222^8 = star
"
"11-----------]-]Success  
star = star
"
"10----------]-]Success  
trad_isa star singleton star
"
"10__________[+[Begin 
trad_isa star singleton X226^8
"
"11___________[+[Begin 
of star X227^8 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
trad star X228^8
"
"11-----------]-]Success  
trad star star
"
"11___________[+[Begin 
pippo singleton singleton X229^8
"
"11-----------]-]Success  
pippo singleton singleton x8 \ x8
"
"11___________[+[Begin 
X226^8 = star
"
"11-----------]-]Success  
star = star
"
"10----------]-]Success  
trad_isa star singleton star
"
"10__________[+[Begin 
X220^6 x7 = propId singleton star star
"
"10----------]-]Success  
propId singleton star star = propId singleton star star
"
"9---------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"9_________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) (X230^6 x7)))
"
"10__________[+[Begin 
equ singleton X231^8
"
"10----------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"10__________[+[Begin 
trad_isa star singleton X232^8
"
"11___________[+[Begin 
of star X233^8 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
trad star X234^8
"
"11-----------]-]Success  
trad star star
"
"11___________[+[Begin 
pippo singleton singleton X235^8
"
"11-----------]-]Success  
pippo singleton singleton x8 \ x8
"
"11___________[+[Begin 
X232^8 = star
"
"11-----------]-]Success  
star = star
"
"10----------]-]Success  
trad_isa star singleton star
"
"10__________[+[Begin 
trad_isa star singleton X236^8
"
"11___________[+[Begin 
of star X237^8 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
trad star X238^8
"
"11-----------]-]Success  
trad star star
"
"11___________[+[Begin 
pippo singleton singleton X239^8
"
"11-----------]-]Success  
pippo singleton singleton x8 \ x8
"
"11___________[+[Begin 
X236^8 = star
"
"11-----------]-]Success  
star = star
"
"10----------]-]Success  
trad_isa star singleton star
"
"10__________[+[Begin 
propId singleton star star = propId singleton star star
"
"10----------]-]Success  
propId singleton star star = propId singleton star star
"
"9---------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star))
"
"9_________[+[Begin 
equ (setPi singleton x6 \ propEq singleton star star) X240^6
"
"10__________[+[Begin 
trad singleton X241^6
"
"10----------]-]Success  
trad singleton singleton
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X242^6 x7)
"
"11___________[+[Begin 
equ singleton X243^8
"
"11-----------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
trad_isa star singleton X244^8
"
"12____________[+[Begin 
of star X245^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X246^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X247^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X244^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
trad_isa star singleton X248^8
"
"12____________[+[Begin 
of star X249^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X250^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X251^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X248^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
X242^6 x7 = propId singleton star star
"
"11-----------]-]Success  
propId singleton star star = propId singleton star star
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) (X252^6 x7)))
"
"11___________[+[Begin 
equ singleton X253^8
"
"11-----------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
trad_isa star singleton X254^8
"
"12____________[+[Begin 
of star X255^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X256^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X257^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X254^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
trad_isa star singleton X258^8
"
"12____________[+[Begin 
of star X259^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X260^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X261^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X258^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
propId singleton star star = propId singleton star star
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star))
"
"9---------]-]Success  
equ (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"9_________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star star) X262^6
"
"10__________[+[Begin 
trad singleton X263^6
"
"10----------]-]Success  
trad singleton singleton
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X264^6 x7)
"
"11___________[+[Begin 
equ singleton X265^8
"
"11-----------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
trad_isa star singleton X266^8
"
"12____________[+[Begin 
of star X267^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X268^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X269^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X266^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
trad_isa star singleton X270^8
"
"12____________[+[Begin 
of star X271^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X272^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X273^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X270^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
X264^6 x7 = propId singleton star star
"
"11-----------]-]Success  
propId singleton star star = propId singleton star star
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"10__________[+[Begin 
equ singleton X274^6
"
"10----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star star) (X275^6 x7)
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) (X276^6 x9 x10 x11))
"
"11___________[+[Begin 
pippo (propEq singleton star star) (propEq singleton star star)
 (X276^6 x9 x10 x11)
"
"11-----------]-]Success  
pippo (propEq singleton star star) (propEq singleton star star) x12 \ x12
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) x12 \ x12)
"
"9---------]-]Success  
trad (setPi singleton x6 \ propEq singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"9_________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              trad x8 x11 =>
               spy (pippoequ star star singleton (X277^6 x9 x10 x11))
"
"10__________[+[Begin 
pippoequ star star singleton (X277^6 x9 x10 x11)
"
"11___________[+[Begin 
of star X278^12 ext
"
"11-----------]-]Success  
of star singleton ext
"
"11___________[+[Begin 
trad star X279^12
"
"11-----------]-]Success  
trad star star
"
"11___________[+[Begin 
pippo singleton singleton X280^12
"
"11-----------]-]Success  
pippo singleton singleton x12 \ x12
"
"11___________[+[Begin 
X281^12 = star
"
"11-----------]-]Success  
star = star
"
"10----------]-]Success  
pippoequ star star singleton (id singleton star)
"
"9---------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              trad x8 x11 =>
               spy (pippoequ star star singleton (id singleton star))
"
"8--------]-]Success  
trad (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 (pair
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) (x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star)
   (forall_lam
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall_lam
      (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall_lam (forall singleton x8 \ propId singleton star star) x8 \
       id singleton star))
"
"8________[+[Begin 
pippo
 (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
 X282^6
"
"9_________[+[Begin 
trad (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (colSigma X283^6 X284^6)
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star star) X285^6
"
"11___________[+[Begin 
trad singleton X286^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X287^6 x7)
"
"12____________[+[Begin 
equ singleton X288^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X289^8
"
"13_____________[+[Begin 
of star X290^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X291^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X292^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X289^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X293^8
"
"13_____________[+[Begin 
of star X294^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X295^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X296^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X293^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X287^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
equ singleton X297^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star star) (X298^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) (X299^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star star) (propEq singleton star star)
 (X299^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star star) (propEq singleton star star) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star star) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => trad singleton (X300^6 x7)
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star star) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => trad singleton singleton
"
"10__________[+[Begin 
equ (setPi singleton x6 \ propEq singleton star star) X301^6
"
"11___________[+[Begin 
trad singleton X302^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X303^6 x7)
"
"12____________[+[Begin 
equ singleton X304^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X305^8
"
"13_____________[+[Begin 
of star X306^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X307^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X308^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X305^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X309^8
"
"13_____________[+[Begin 
of star X310^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X311^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X312^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X309^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X303^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) (X313^6 x7)))
"
"12____________[+[Begin 
equ singleton X314^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X315^8
"
"13_____________[+[Begin 
of star X316^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X317^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X318^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X315^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X319^8
"
"13_____________[+[Begin 
of star X320^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X321^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X322^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X319^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
propId singleton star star = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star))
"
"10----------]-]Success  
equ (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star star) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => equ singleton (X323^6 x7)
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star star) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => (equ singleton x8 \ x9 \ propId singleton x8 x9)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              trad x8 x11 =>
               spy (pippo singleton singleton (X324^6 x9 x10 x11))
"
"11___________[+[Begin 
pippo singleton singleton (X324^6 x9 x10 x11)
"
"11-----------]-]Success  
pippo singleton singleton x12 \ x12
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              => trad x8 x11 => spy (pippo singleton singleton x12 \ x12)
"
"9---------]-]Success  
trad (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
"
"9_________[+[Begin 
(setPi
  (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
  singleton) = setPi X325^6 X326^6
"
"9---------]-]Success  
(setPi
  (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
  singleton) =
 (setPi
   (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton)
"
"9_________[+[Begin 
trad (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
 (colSigma X327^6 X328^6)
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star x0) X329^6
"
"11___________[+[Begin 
trad singleton X330^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (X331^6 x7)
"
"12____________[+[Begin 
equ singleton X332^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X333^8
"
"13_____________[+[Begin 
of star X334^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X335^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X336^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X333^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa x0 singleton X337^8
"
"13_____________[+[Begin 
of x0 X338^8 ext
"
"13-------------]-]Success  
of x0 singleton ext
"
"13_____________[+[Begin 
trad x0 X339^8
"
"13-------------]-]Success  
trad x0 x1
"
"13_____________[+[Begin 
pippo singleton singleton X340^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X337^8 = x1
"
"13-------------]-]Success  
x1 = x1
"
"12------------]-]Success  
trad_isa x0 singleton x1
"
"12____________[+[Begin 
X331^6 x7 = propId singleton star x1
"
"12------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (propId singleton star x1)
"
"11___________[+[Begin 
equ singleton X341^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star x0) (X342^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star x0) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  (X343^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star x0) (propEq singleton star x0)
 (X343^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star x0) (propEq singleton star x0) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star x0)
 (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => trad singleton (X344^6 x7)
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => trad singleton singleton
"
"10__________[+[Begin 
equ (setPi singleton x6 \ propEq singleton star x0) X345^6
"
"11___________[+[Begin 
trad singleton X346^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (X347^6 x7)
"
"12____________[+[Begin 
equ singleton X348^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X349^8
"
"13_____________[+[Begin 
of star X350^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X351^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X352^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X349^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa x0 singleton X353^8
"
"13_____________[+[Begin 
of x0 X354^8 ext
"
"13-------------]-]Success  
of x0 singleton ext
"
"13_____________[+[Begin 
trad x0 X355^8
"
"13-------------]-]Success  
trad x0 x1
"
"13_____________[+[Begin 
pippo singleton singleton X356^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X353^8 = x1
"
"13-------------]-]Success  
x1 = x1
"
"12------------]-]Success  
trad_isa x0 singleton x1
"
"12____________[+[Begin 
X347^6 x7 = propId singleton star x1
"
"12------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (propId singleton star x1)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star x0) (propId singleton star x1)),
     (equ (propEq singleton star x0) (X357^6 x7)))
"
"12____________[+[Begin 
equ singleton X358^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X359^8
"
"13_____________[+[Begin 
of star X360^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X361^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X362^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X359^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa x0 singleton X363^8
"
"13_____________[+[Begin 
of x0 X364^8 ext
"
"13-------------]-]Success  
of x0 singleton ext
"
"13_____________[+[Begin 
trad x0 X365^8
"
"13-------------]-]Success  
trad x0 x1
"
"13_____________[+[Begin 
pippo singleton singleton X366^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X363^8 = x1
"
"13-------------]-]Success  
x1 = x1
"
"12------------]-]Success  
trad_isa x0 singleton x1
"
"12____________[+[Begin 
propId singleton star x1 = propId singleton star x1
"
"12------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star x0) (propId singleton star x1)),
     (equ (propEq singleton star x0) x8 \ x9 \ propId singleton star star))
"
"10----------]-]Success  
equ (setPi singleton x6 \ propEq singleton star x0) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => equ singleton (X367^6 x7)
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propEq singleton star x0) =>
   locDecl x7
    (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star) =>
    trad x6 x7 => (equ singleton x8 \ x9 \ propId singleton x8 x9)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star x0) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star x0) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star x1) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star x1) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star x0) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              trad x8 x11 =>
               spy (pippo singleton singleton (X368^6 x9 x10 x11))
"
"11___________[+[Begin 
pippo singleton singleton (X368^6 x9 x10 x11)
"
"11-----------]-]Success  
pippo singleton singleton x12 \ x12
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star x0) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star x0) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star x1) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star x1) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star x0) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              => trad x8 x11 => spy (pippo singleton singleton x12 \ x12)
"
"9---------]-]Success  
trad (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
"
"9_________[+[Begin 
(setPi
  (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
  singleton) = setPi X369^6 X370^6
"
"9---------]-]Success  
(setPi
  (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
  singleton) =
 (setPi
   (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton)
"
"9_________[+[Begin 
equ (setPi singleton x6 \ propEq singleton star x0) X371^6
"
"10__________[+[Begin 
trad singleton X372^6
"
"10----------]-]Success  
trad singleton singleton
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (X373^6 x7)
"
"11___________[+[Begin 
equ singleton X374^8
"
"11-----------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
trad_isa star singleton X375^8
"
"12____________[+[Begin 
of star X376^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X377^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X378^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X375^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
trad_isa x0 singleton X379^8
"
"12____________[+[Begin 
of x0 X380^8 ext
"
"12------------]-]Success  
of x0 singleton ext
"
"12____________[+[Begin 
trad x0 X381^8
"
"12------------]-]Success  
trad x0 x1
"
"12____________[+[Begin 
pippo singleton singleton X382^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X379^8 = x1
"
"12------------]-]Success  
x1 = x1
"
"11-----------]-]Success  
trad_isa x0 singleton x1
"
"11___________[+[Begin 
X373^6 x7 = propId singleton star x1
"
"11-----------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (propId singleton star x1)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star x0) (propId singleton star x1)),
     (equ (propEq singleton star x0) (X383^6 x7)))
"
"11___________[+[Begin 
equ singleton X384^8
"
"11-----------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"11___________[+[Begin 
trad_isa star singleton X385^8
"
"12____________[+[Begin 
of star X386^8 ext
"
"12------------]-]Success  
of star singleton ext
"
"12____________[+[Begin 
trad star X387^8
"
"12------------]-]Success  
trad star star
"
"12____________[+[Begin 
pippo singleton singleton X388^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X385^8 = star
"
"12------------]-]Success  
star = star
"
"11-----------]-]Success  
trad_isa star singleton star
"
"11___________[+[Begin 
trad_isa x0 singleton X389^8
"
"12____________[+[Begin 
of x0 X390^8 ext
"
"12------------]-]Success  
of x0 singleton ext
"
"12____________[+[Begin 
trad x0 X391^8
"
"12------------]-]Success  
trad x0 x1
"
"12____________[+[Begin 
pippo singleton singleton X392^8
"
"12------------]-]Success  
pippo singleton singleton x8 \ x8
"
"12____________[+[Begin 
X389^8 = x1
"
"12------------]-]Success  
x1 = x1
"
"11-----------]-]Success  
trad_isa x0 singleton x1
"
"11___________[+[Begin 
propId singleton star x1 = propId singleton star x1
"
"11-----------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star x0) (propId singleton star x1)),
     (equ (propEq singleton star x0) x8 \ x9 \ propId singleton star star))
"
"9---------]-]Success  
equ (setPi singleton x6 \ propEq singleton star x0) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"9_________[+[Begin 
macro_trad (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \ x8 \
 x9 \ x10 \ x11 \ equ singleton (X393^6 x10)
"
"10__________[+[Begin 
equ (setPi singleton x6 \ propEq singleton star star) X394^6
"
"11___________[+[Begin 
trad singleton X395^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X396^6 x7)
"
"12____________[+[Begin 
equ singleton X397^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X398^8
"
"13_____________[+[Begin 
of star X399^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X400^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X401^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X398^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X402^8
"
"13_____________[+[Begin 
of star X403^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X404^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X405^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X402^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X396^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) (X406^6 x7)))
"
"12____________[+[Begin 
equ singleton X407^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X408^8
"
"13_____________[+[Begin 
of star X409^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X410^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X411^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X408^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X412^8
"
"13_____________[+[Begin 
of star X413^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X414^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X415^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X412^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
propId singleton star star = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star))
"
"10----------]-]Success  
equ (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star star) X416^6
"
"11___________[+[Begin 
trad singleton X417^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X418^6 x7)
"
"12____________[+[Begin 
equ singleton X419^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X420^8
"
"13_____________[+[Begin 
of star X421^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X422^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X423^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X420^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X424^8
"
"13_____________[+[Begin 
of star X425^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X426^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X427^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X424^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X418^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
equ singleton X428^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star star) (X429^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) (X430^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star star) (propEq singleton star star)
 (X430^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star star) (propEq singleton star star) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              => trad x8 x11 => spy (equ singleton (X393^6 x10))
"
"11___________[+[Begin 
equ singleton (X393^6 x10)
"
"11-----------]-]Success  
equ singleton x12 \ x13 \ propId singleton x12 x13
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              trad x8 x11 =>
               spy (equ singleton x12 \ x13 \ propId singleton x12 x13)
"
"9---------]-]Success  
macro_trad (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \ x8 \
 x9 \ x10 \ x11 \ equ singleton x12 \ x13 \ propId singleton x12 x13
"
"9_________[+[Begin 
pippo (setPi singleton x6 \ propEq singleton star x0)
 (setPi singleton x6 \ propEq singleton star star) X431^6
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star x0) (colSigma X432^6 X433^6)
"
"11___________[+[Begin 
trad singleton X434^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (X435^6 x7)
"
"12____________[+[Begin 
equ singleton X436^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X437^8
"
"13_____________[+[Begin 
of star X438^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X439^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X440^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X437^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa x0 singleton X441^8
"
"13_____________[+[Begin 
of x0 X442^8 ext
"
"13-------------]-]Success  
of x0 singleton ext
"
"13_____________[+[Begin 
trad x0 X443^8
"
"13-------------]-]Success  
trad x0 x1
"
"13_____________[+[Begin 
pippo singleton singleton X444^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X441^8 = x1
"
"13-------------]-]Success  
x1 = x1
"
"12------------]-]Success  
trad_isa x0 singleton x1
"
"12____________[+[Begin 
X435^6 x7 = propId singleton star x1
"
"12------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (propId singleton star x1)
"
"11___________[+[Begin 
equ singleton X445^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star x0) (X446^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star x0) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  (X447^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star x0) (propEq singleton star x0)
 (X447^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star x0) (propEq singleton star x0) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star x0)
 (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
(setPi singleton x6 \ propId singleton star x1) = setPi X448^6 X449^6
"
"10----------]-]Success  
(setPi singleton x6 \ propId singleton star x1) =
 (setPi singleton x6 \ propId singleton star x1)
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star star)
 (colSigma X450^6 X451^6)
"
"11___________[+[Begin 
trad singleton X452^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X453^6 x7)
"
"12____________[+[Begin 
equ singleton X454^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X455^8
"
"13_____________[+[Begin 
of star X456^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X457^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X458^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X455^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X459^8
"
"13_____________[+[Begin 
of star X460^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X461^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X462^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X459^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X453^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
equ singleton X463^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star star) (X464^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) (X465^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star star) (propEq singleton star star)
 (X465^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star star) (propEq singleton star star) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
(setPi singleton x6 \ propId singleton star star) = setPi X466^6 X467^6
"
"10----------]-]Success  
(setPi singleton x6 \ propId singleton star star) =
 (setPi singleton x6 \ propId singleton star star)
"
"10__________[+[Begin 
equ singleton X468^6
"
"10----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"10__________[+[Begin 
macro_trad singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 equ (propEq singleton star x0) (X469^6 x10)
"
"11___________[+[Begin 
equ singleton X470^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
trad singleton X471^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy (equ (propEq singleton star x0) (X469^6 x10))
"
"12____________[+[Begin 
equ (propEq singleton star x0) (X469^6 x10)
"
"12------------]-]Success  
equ (propEq singleton star x0) x12 \ x13 \ propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (equ (propEq singleton star x0) x12 \ x13 \
                  propId singleton star star)
"
"10----------]-]Success  
macro_trad singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 equ (propEq singleton star x0) x12 \ x13 \ propId singleton star star
"
"10__________[+[Begin 
pippo singleton singleton X472^6
"
"10----------]-]Success  
pippo singleton singleton x6 \ x6
"
"10__________[+[Begin 
macro_pippo singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 pippo (propEq singleton star x0) (propEq singleton star star)
  (X473^6 x9 x10)
"
"11___________[+[Begin 
equ singleton X474^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
trad singleton X475^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
trad singleton X476^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0)
                  (propEq singleton star star) (X473^6 x9 x10))
"
"12____________[+[Begin 
pippo (propEq singleton star x0) (propEq singleton star star) (X473^6 x9 x10)
"
"13_____________[+[Begin 
pippoequ star star singleton X477^12
"
"14______________[+[Begin 
of star X478^12 ext
"
"14--------------]-]Success  
of star singleton ext
"
"14______________[+[Begin 
trad star X479^12
"
"14--------------]-]Success  
trad star star
"
"14______________[+[Begin 
pippo singleton singleton X480^12
"
"14--------------]-]Success  
pippo singleton singleton x12 \ x12
"
"14______________[+[Begin 
X481^12 = star
"
"14--------------]-]Success  
star = star
"
"13-------------]-]Success  
pippoequ star star singleton (id singleton star)
"
"13_____________[+[Begin 
pippoequ x0 star singleton X482^12
"
"14______________[+[Begin 
locDecl X483^12 (propEq X484^12 x0 star)
"
"14..............].]Fail  
locDecl X483^12 (propEq X484^12 x0 star)
"
"14______________[+[Begin 
trad_isa x2 (propEq singleton star x0) X485^12
"
"15_______________[+[Begin 
of x2 X486^12 ext
"
"15---------------]-]Success  
of x2 (propEq singleton star x0) ext
"
"15_______________[+[Begin 
trad x2 X487^12
"
"15---------------]-]Success  
trad x2 x3
"
"15_______________[+[Begin 
pippo (propEq singleton star x0) (propEq singleton star x0) X488^12
"
"15---------------]-]Success  
pippo (propEq singleton star x0) (propEq singleton star x0) x12 \ x12
"
"15_______________[+[Begin 
X485^12 = x3
"
"15---------------]-]Success  
x3 = x3
"
"14--------------]-]Success  
trad_isa x2 (propEq singleton star x0) x3
"
"14______________[+[Begin 
symmu singleton X489^12
"
"14--------------]-]Success  
symmu singleton x12 \ fixMe "prova di symmetria"
"
"13-------------]-]Success  
pippoequ x0 star singleton (fixMe "prova di symmetria")
"
"13_____________[+[Begin 
trad_isa star singleton X490^12
"
"14______________[+[Begin 
of star X491^12 ext
"
"14--------------]-]Success  
of star singleton ext
"
"14______________[+[Begin 
trad star X492^12
"
"14--------------]-]Success  
trad star star
"
"14______________[+[Begin 
pippo singleton singleton X493^12
"
"14--------------]-]Success  
pippo singleton singleton x12 \ x12
"
"14______________[+[Begin 
X490^12 = star
"
"14--------------]-]Success  
star = star
"
"13-------------]-]Success  
trad_isa star singleton star
"
"13_____________[+[Begin 
trad_isa x0 singleton X494^12
"
"14______________[+[Begin 
of x0 X495^12 ext
"
"14--------------]-]Success  
of x0 singleton ext
"
"14______________[+[Begin 
trad x0 X496^12
"
"14--------------]-]Success  
trad x0 x1
"
"14______________[+[Begin 
pippo singleton singleton X497^12
"
"14--------------]-]Success  
pippo singleton singleton x12 \ x12
"
"14______________[+[Begin 
X494^12 = x1
"
"14--------------]-]Success  
x1 = x1
"
"13-------------]-]Success  
trad_isa x0 singleton x1
"
"13_____________[+[Begin 
trad_isa star singleton X498^12
"
"14______________[+[Begin 
of star X499^12 ext
"
"14--------------]-]Success  
of star singleton ext
"
"14______________[+[Begin 
trad star X500^12
"
"14--------------]-]Success  
trad star star
"
"14______________[+[Begin 
pippo singleton singleton X501^12
"
"14--------------]-]Success  
pippo singleton singleton x12 \ x12
"
"14______________[+[Begin 
X498^12 = star
"
"14--------------]-]Success  
star = star
"
"13-------------]-]Success  
trad_isa star singleton star
"
"13_____________[+[Begin 
trad_isa star singleton X502^12
"
"14______________[+[Begin 
of star X503^12 ext
"
"14--------------]-]Success  
of star singleton ext
"
"14______________[+[Begin 
trad star X504^12
"
"14--------------]-]Success  
trad star star
"
"14______________[+[Begin 
pippo singleton singleton X505^12
"
"14--------------]-]Success  
pippo singleton singleton x12 \ x12
"
"14______________[+[Begin 
X502^12 = star
"
"14--------------]-]Success  
star = star
"
"13-------------]-]Success  
trad_isa star singleton star
"
"13_____________[+[Begin 
trad singleton X506^12
"
"13-------------]-]Success  
trad singleton singleton
"
"12------------]-]Success  
pippo (propEq singleton star x0) (propEq singleton star star) x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (id singleton star)) x1) star) (fixMe "prova di symmetria")) x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0)
                  (propEq singleton star star) x12 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x1) star)
                     (fixMe "prova di symmetria")) x12)
"
"10----------]-]Success  
macro_pippo singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 pippo (propEq singleton star x0) (propEq singleton star star) x12 \
  impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x1) star) (fixMe "prova di symmetria")) x12
"
"10__________[+[Begin 
macro_trad singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 pippo (propEq singleton star x0) (propEq singleton star x0) (X507^6 x9 x10)
"
"11___________[+[Begin 
equ singleton X508^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
trad singleton X509^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  (X507^6 x9 x10))
"
"12____________[+[Begin 
pippo (propEq singleton star x0) (propEq singleton star x0) (X507^6 x9 x10)
"
"12------------]-]Success  
pippo (propEq singleton star x0) (propEq singleton star x0) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  x12 \ x12)
"
"10----------]-]Success  
macro_trad singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 pippo (propEq singleton star x0) (propEq singleton star x0) x12 \ x12
"
"10__________[+[Begin 
pippo_trasp singleton singleton X510^6
"
"10----------]-]Success  
pippo_trasp singleton singleton x6 \ x7 \ x8 \ x8
"
"10__________[+[Begin 
macro_pippo singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 pippo_trasp (propEq singleton star x0) (propEq singleton star star)
  (X511^6 x9 x10 x11)
"
"11___________[+[Begin 
equ singleton X512^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
trad singleton X513^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
trad singleton X514^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo_trasp (propEq singleton star x0)
                  (propEq singleton star star) (X511^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo_trasp (propEq singleton star x0) (propEq singleton star star)
 (X511^6 x9 x10 x11)
"
"12------------]-]Success  
pippo_trasp (propEq singleton star x0) (propEq singleton star star) x12 \
 x13 \ x14 \ x14
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo_trasp (propEq singleton star x0)
                  (propEq singleton star star) x12 \ x13 \ x14 \ x14)
"
"10----------]-]Success  
macro_pippo singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 pippo_trasp (propEq singleton star x0) (propEq singleton star star) x12 \
  x13 \ x14 \ x14
"
"9---------]-]Success  
pippo (setPi singleton x6 \ propEq singleton star x0)
 (setPi singleton x6 \ propEq singleton star star) x6 \
 elim_colSigma x6 (x7 \
  colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) x7 \
  x8 \
  pair (setPi singleton x9 \ propId singleton star star) (x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
   (lambda singleton x9 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x1) star) (fixMe "prova di symmetria"))
      (app x7 x9))
   (forall_lam singleton x9 \
     forall_lam singleton x10 \
      forall_lam (propId singleton x9 x10) x11 \
       forall_app (forall_app (forall_app x8 x9) x10) x11)
"
"9_________[+[Begin 
macro_pippo (setPi singleton x6 \ propEq singleton star star)
 (setPi singleton x6 \ propEq singleton star x0) x6 \ x7 \ x8 \ x9 \ x10 \
 x11 \ pippo singleton singleton (X515^6 x9 x10)
"
"10__________[+[Begin 
equ (setPi singleton x6 \ propEq singleton star star) X516^6
"
"11___________[+[Begin 
trad singleton X517^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X518^6 x7)
"
"12____________[+[Begin 
equ singleton X519^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X520^8
"
"13_____________[+[Begin 
of star X521^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X522^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X523^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X520^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X524^8
"
"13_____________[+[Begin 
of star X525^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X526^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X527^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X524^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X518^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) (X528^6 x7)))
"
"12____________[+[Begin 
equ singleton X529^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X530^8
"
"13_____________[+[Begin 
of star X531^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X532^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X533^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X530^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X534^8
"
"13_____________[+[Begin 
of star X535^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X536^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X537^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X534^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
propId singleton star star = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star))
"
"10----------]-]Success  
equ (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star star) X538^6
"
"11___________[+[Begin 
trad singleton X539^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X540^6 x7)
"
"12____________[+[Begin 
equ singleton X541^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X542^8
"
"13_____________[+[Begin 
of star X543^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X544^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X545^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X542^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X546^8
"
"13_____________[+[Begin 
of star X547^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X548^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X549^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X546^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X540^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
equ singleton X550^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star star) (X551^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) (X552^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star star) (propEq singleton star star)
 (X552^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star star) (propEq singleton star star) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star x0) X553^6
"
"11___________[+[Begin 
trad singleton X554^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (X555^6 x7)
"
"12____________[+[Begin 
equ singleton X556^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X557^8
"
"13_____________[+[Begin 
of star X558^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X559^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X560^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X557^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa x0 singleton X561^8
"
"13_____________[+[Begin 
of x0 X562^8 ext
"
"13-------------]-]Success  
of x0 singleton ext
"
"13_____________[+[Begin 
trad x0 X563^8
"
"13-------------]-]Success  
trad x0 x1
"
"13_____________[+[Begin 
pippo singleton singleton X564^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X561^8 = x1
"
"13-------------]-]Success  
x1 = x1
"
"12------------]-]Success  
trad_isa x0 singleton x1
"
"12____________[+[Begin 
X555^6 x7 = propId singleton star x1
"
"12------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (propId singleton star x1)
"
"11___________[+[Begin 
equ singleton X565^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star x0) (X566^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star x0) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  (X567^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star x0) (propEq singleton star x0)
 (X567^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star x0) (propEq singleton star x0) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star x0)
 (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star x0) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star x1) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              trad x8 x11 => spy (pippo singleton singleton (X515^6 x9 x10))
"
"11___________[+[Begin 
pippo singleton singleton (X515^6 x9 x10)
"
"11-----------]-]Success  
pippo singleton singleton x12 \ x12
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star x0) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star x1) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              => trad x8 x11 => spy (pippo singleton singleton x12 \ x12)
"
"9---------]-]Success  
macro_pippo (setPi singleton x6 \ propEq singleton star star)
 (setPi singleton x6 \ propEq singleton star x0) x6 \ x7 \ x8 \ x9 \ x10 \
 x11 \ pippo singleton singleton x12 \ x12
"
"9_________[+[Begin 
macro_trad (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \ x8 \
 x9 \ x10 \ x11 \ pippo singleton singleton (X568^6 x9 x10)
"
"10__________[+[Begin 
equ (setPi singleton x6 \ propEq singleton star star) X569^6
"
"11___________[+[Begin 
trad singleton X570^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X571^6 x7)
"
"12____________[+[Begin 
equ singleton X572^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X573^8
"
"13_____________[+[Begin 
of star X574^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X575^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X576^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X573^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X577^8
"
"13_____________[+[Begin 
of star X578^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X579^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X580^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X577^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X571^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) (X581^6 x7)))
"
"12____________[+[Begin 
equ singleton X582^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X583^8
"
"13_____________[+[Begin 
of star X584^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X585^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X586^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X583^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X587^8
"
"13_____________[+[Begin 
of star X588^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X589^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X590^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X587^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
propId singleton star star = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star))
"
"10----------]-]Success  
equ (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star star) X591^6
"
"11___________[+[Begin 
trad singleton X592^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X593^6 x7)
"
"12____________[+[Begin 
equ singleton X594^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X595^8
"
"13_____________[+[Begin 
of star X596^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X597^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X598^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X595^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X599^8
"
"13_____________[+[Begin 
of star X600^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X601^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X602^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X599^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X593^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
equ singleton X603^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star star) (X604^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) (X605^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star star) (propEq singleton star star)
 (X605^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star star) (propEq singleton star star) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              trad x8 x11 => spy (pippo singleton singleton (X568^6 x9 x10))
"
"11___________[+[Begin 
pippo singleton singleton (X568^6 x9 x10)
"
"11-----------]-]Success  
pippo singleton singleton x12 \ x12
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star star) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              => trad x8 x11 => spy (pippo singleton singleton x12 \ x12)
"
"9---------]-]Success  
macro_trad (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \ x8 \
 x9 \ x10 \ x11 \ pippo singleton singleton x12 \ x12
"
"9_________[+[Begin 
pippo_trasp (setPi singleton x6 \ propEq singleton star x0)
 (setPi singleton x6 \ propEq singleton star star) X606^6
"
"10__________[+[Begin 
macro_pippo singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 pippo_trasp (propEq singleton star x0) (propEq singleton star star)
  (X607^6 x9 x10 x11)
"
"11___________[+[Begin 
equ singleton X608^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
trad singleton X609^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
trad singleton X610^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo_trasp (propEq singleton star x0)
                  (propEq singleton star star) (X607^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo_trasp (propEq singleton star x0) (propEq singleton star star)
 (X607^6 x9 x10 x11)
"
"12------------]-]Success  
pippo_trasp (propEq singleton star x0) (propEq singleton star star) x12 \
 x13 \ x14 \ x14
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo_trasp (propEq singleton star x0)
                  (propEq singleton star star) x12 \ x13 \ x14 \ x14)
"
"10----------]-]Success  
macro_pippo singleton singleton x6 \ x7 \ x8 \ x9 \ x10 \ x11 \
 pippo_trasp (propEq singleton star x0) (propEq singleton star star) x12 \
  x13 \ x14 \ x14
"
"10__________[+[Begin 
pippo singleton singleton X611^6
"
"10----------]-]Success  
pippo singleton singleton x6 \ x6
"
"9---------]-]Success  
pippo_trasp (setPi singleton x6 \ propEq singleton star x0)
 (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \ x8 \
 forall_lam singleton x9 \ forall_app x8 x9
"
"9_________[+[Begin 
macro_pippo (setPi singleton x6 \ propEq singleton star star)
 (setPi singleton x6 \ propEq singleton star x0) x6 \ x7 \ x8 \ x9 \ x10 \
 x11 \ pippo_trasp singleton singleton (X612^6 x9 x10 x11)
"
"10__________[+[Begin 
equ (setPi singleton x6 \ propEq singleton star star) X613^6
"
"11___________[+[Begin 
trad singleton X614^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X615^6 x7)
"
"12____________[+[Begin 
equ singleton X616^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X617^8
"
"13_____________[+[Begin 
of star X618^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X619^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X620^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X617^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X621^8
"
"13_____________[+[Begin 
of star X622^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X623^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X624^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X621^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X615^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) (X625^6 x7)))
"
"12____________[+[Begin 
equ singleton X626^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X627^8
"
"13_____________[+[Begin 
of star X628^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X629^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X630^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X627^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X631^8
"
"13_____________[+[Begin 
of star X632^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X633^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X634^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X631^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
propId singleton star star = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     ((trad (propEq singleton star star) (propId singleton star star)),
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star))
"
"10----------]-]Success  
equ (setPi singleton x6 \ propEq singleton star star) x6 \ x7 \
 forall singleton x8 \ propId singleton star star
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star star) X635^6
"
"11___________[+[Begin 
trad singleton X636^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star star) (X637^6 x7)
"
"12____________[+[Begin 
equ singleton X638^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X639^8
"
"13_____________[+[Begin 
of star X640^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X641^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X642^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X639^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa star singleton X643^8
"
"13_____________[+[Begin 
of star X644^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X645^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X646^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X643^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
X637^6 x7 = propId singleton star star
"
"12------------]-]Success  
propId singleton star star = propId singleton star star
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     trad (propEq singleton star star) (propId singleton star star)
"
"11___________[+[Begin 
equ singleton X647^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star star) (X648^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star star) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) (X649^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star star) (propEq singleton star star)
 (X649^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star star) (propEq singleton star star) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star star)
                  (propEq singleton star star) x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
trad (setPi singleton x6 \ propEq singleton star x0) X650^6
"
"11___________[+[Begin 
trad singleton X651^6
"
"11-----------]-]Success  
trad singleton singleton
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (X652^6 x7)
"
"12____________[+[Begin 
equ singleton X653^8
"
"12------------]-]Success  
equ singleton x8 \ x9 \ propId singleton x8 x9
"
"12____________[+[Begin 
trad_isa star singleton X654^8
"
"13_____________[+[Begin 
of star X655^8 ext
"
"13-------------]-]Success  
of star singleton ext
"
"13_____________[+[Begin 
trad star X656^8
"
"13-------------]-]Success  
trad star star
"
"13_____________[+[Begin 
pippo singleton singleton X657^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X654^8 = star
"
"13-------------]-]Success  
star = star
"
"12------------]-]Success  
trad_isa star singleton star
"
"12____________[+[Begin 
trad_isa x0 singleton X658^8
"
"13_____________[+[Begin 
of x0 X659^8 ext
"
"13-------------]-]Success  
of x0 singleton ext
"
"13_____________[+[Begin 
trad x0 X660^8
"
"13-------------]-]Success  
trad x0 x1
"
"13_____________[+[Begin 
pippo singleton singleton X661^8
"
"13-------------]-]Success  
pippo singleton singleton x8 \ x8
"
"13_____________[+[Begin 
X658^8 = x1
"
"13-------------]-]Success  
x1 = x1
"
"12------------]-]Success  
trad_isa x0 singleton x1
"
"12____________[+[Begin 
X652^6 x7 = propId singleton star x1
"
"12------------]-]Success  
propId singleton star x1 = propId singleton star x1
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => trad (propEq singleton star x0) (propId singleton star x1)
"
"11___________[+[Begin 
equ singleton X662^6
"
"11-----------]-]Success  
equ singleton x6 \ x7 \ propId singleton x6 x7
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 => equ (propEq singleton star x0) (X663^6 x7)
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 singleton =>
   locDecl x7 singleton =>
    trad x6 x7 =>
     (equ (propEq singleton star x0) x8 \ x9 \ propId singleton star star)
"
"11___________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  (X664^6 x9 x10 x11))
"
"12____________[+[Begin 
pippo (propEq singleton star x0) (propEq singleton star x0)
 (X664^6 x9 x10 x11)
"
"12------------]-]Success  
pippo (propEq singleton star x0) (propEq singleton star x0) x12 \ x12
"
"11-----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 singleton =>
       locDecl x7 singleton =>
        locDecl x9 singleton =>
         locDecl x10 singleton =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq singleton x6 x7) =>
             locDecl x11 (propId singleton x9 x10) =>
              trad x8 x11 =>
               spy
                (pippo (propEq singleton star x0) (propEq singleton star x0)
                  x12 \ x12)
"
"10----------]-]Success  
trad (setPi singleton x6 \ propEq singleton star x0)
 (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"10__________[+[Begin 
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star x0) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star x1) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              trad x8 x11 =>
               spy (pippo_trasp singleton singleton (X612^6 x9 x10 x11))
"
"11___________[+[Begin 
pippo_trasp singleton singleton (X612^6 x9 x10 x11)
"
"11-----------]-]Success  
pippo_trasp singleton singleton x12 \ x13 \ x14 \ x14
"
"10----------]-]Success  
pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (setPi singleton x12 \ propEq singleton star star) =>
       locDecl x7 (setPi singleton x12 \ propEq singleton star x0) =>
        locDecl x9
         (colSigma (setPi singleton x12 \ propId singleton star star) x12 \
           forall singleton x13 \
            forall singleton x14 \
             forall (propId singleton x13 x14) x15 \
              propId singleton star star) =>
         locDecl x10
          (colSigma (setPi singleton x12 \ propId singleton star x1) x12 \
            forall singleton x13 \
             forall singleton x14 \
              forall (propId singleton x13 x14) x15 \
               propId singleton star star) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8
             (propEq (setPi singleton x12 \ propEq singleton star star) x6 x7)
             =>
             locDecl x11 (forall singleton x12 \ propId singleton star star)
              =>
              trad x8 x11 =>
               spy (pippo_trasp singleton singleton x12 \ x13 \ x14 \ x14)
"
"9---------]-]Success  
macro_pippo (setPi singleton x6 \ propEq singleton star star)
 (setPi singleton x6 \ propEq singleton star x0) x6 \ x7 \ x8 \ x9 \ x10 \
 x11 \ pippo_trasp singleton singleton x12 \ x13 \ x14 \ x14
"
"8--------]-]Success  
pippo
 (setPi (setPi singleton x6 \ propEq singleton star star) x6 \ singleton)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton) x6 \
 elim_colSigma x6 (x7 \
  colSigma
   (setPi
     (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) x8 \
   forall
    (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall
     (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall (forall singleton x11 \ propId singleton star star) x11 \
      propId singleton (app x8 x9) (app x8 x10)) x7 \ x8 \
  pair
   (setPi
     (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \ singleton) (x9 \
   forall
    (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
    x10 \
    forall
     (colSigma (setPi singleton x11 \ propId singleton star x1) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     x11 \
     forall (forall singleton x12 \ propId singleton star star) x12 \
      propId singleton (app x9 x10) (app x9 x11))
   (lambda
     (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     app x7
      (elim_colSigma x9 (x10 \
        colSigma (setPi singleton x11 \ propId singleton star star) x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
        x10 \ x11 \
        pair (setPi singleton x12 \ propId singleton star star) (x12 \
         forall singleton x13 \
          forall singleton x14 \
           forall (propId singleton x13 x14) x15 \ propId singleton star star)
         (lambda singleton x12 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x1) star)
              (fixMe "prova di symmetria")) (app x10 x12))
         (forall_lam singleton x12 \
           forall_lam singleton x13 \
            forall_lam (propId singleton x12 x13) x14 \
             forall_app (forall_app (forall_app x11 x12) x13) x14)))
   (forall_lam
     (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall_lam
      (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall_lam (forall singleton x11 \ propId singleton star star) x11 \
       forall_app
        (forall_app
          (forall_app x8
            (elim_colSigma x9 (x12 \
              colSigma (setPi singleton x13 \ propId singleton star star)
               x13 \
               forall singleton x14 \
                forall singleton x15 \
                 forall (propId singleton x14 x15) x16 \
                  propId singleton star star) x12 \ x13 \
              pair (setPi singleton x14 \ propId singleton star star) (x14 \
               forall singleton x15 \
                forall singleton x16 \
                 forall (propId singleton x15 x16) x17 \
                  propId singleton star star)
               (lambda singleton x14 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x1) star)
                    (fixMe "prova di symmetria")) (app x12 x14))
               (forall_lam singleton x14 \
                 forall_lam singleton x15 \
                  forall_lam (propId singleton x14 x15) x16 \
                   forall_app (forall_app (forall_app x13 x14) x15) x16)))
          (elim_colSigma x10 (x12 \
            colSigma (setPi singleton x13 \ propId singleton star star) x13 \
             forall singleton x14 \
              forall singleton x15 \
               forall (propId singleton x14 x15) x16 \
                propId singleton star star) x12 \ x13 \
            pair (setPi singleton x14 \ propId singleton star star) (x14 \
             forall singleton x15 \
              forall singleton x16 \
               forall (propId singleton x15 x16) x17 \
                propId singleton star star)
             (lambda singleton x14 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x1) star)
                  (fixMe "prova di symmetria")) (app x12 x14))
             (forall_lam singleton x14 \
               forall_lam singleton x15 \
                forall_lam (propId singleton x14 x15) x16 \
                 forall_app (forall_app (forall_app x13 x14) x15) x16)))
        (forall_lam singleton x12 \ forall_app x11 x12))
"
"8________[+[Begin 
X125^6 =
 (elim_colSigma
   (pair
     (setPi
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) (x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8))
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star)
     (forall_lam
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall_lam
        (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall_lam (forall singleton x8 \ propId singleton star star) x8 \
         id singleton star)) (x6 \
   colSigma
    (setPi
      (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall
      (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall (forall singleton x10 \ propId singleton star star) x10 \
       propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
   pair
    (setPi
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) (x8 \
    forall
     (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall
      (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall (forall singleton x11 \ propId singleton star star) x11 \
       propId singleton (app x8 x9) (app x8 x10))
    (lambda
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      app x6
       (elim_colSigma x8 (x9 \
         colSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x1) star)
               (fixMe "prova di symmetria")) (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (forall_lam
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall_lam
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall_lam (forall singleton x10 \ propId singleton star star) x10 \
        forall_app
         (forall_app
           (forall_app x7
             (elim_colSigma x8 (x11 \
               colSigma (setPi singleton x12 \ propId singleton star star)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x11 \ x12 \
               pair (setPi singleton x13 \ propId singleton star star) (x13 \
                forall singleton x14 \
                 forall singleton x15 \
                  forall (propId singleton x14 x15) x16 \
                   propId singleton star star)
                (lambda singleton x13 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x1) star)
                     (fixMe "prova di symmetria")) (app x11 x13))
                (forall_lam singleton x13 \
                  forall_lam singleton x14 \
                   forall_lam (propId singleton x13 x14) x15 \
                    forall_app (forall_app (forall_app x12 x13) x14) x15)))
           (elim_colSigma x9 (x11 \
             colSigma (setPi singleton x12 \ propId singleton star star)
              x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star) x11 \ x12 \
             pair (setPi singleton x13 \ propId singleton star star) (x13 \
              forall singleton x14 \
               forall singleton x15 \
                forall (propId singleton x14 x15) x16 \
                 propId singleton star star)
              (lambda singleton x13 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x1) star)
                   (fixMe "prova di symmetria")) (app x11 x13))
              (forall_lam singleton x13 \
                forall_lam singleton x14 \
                 forall_lam (propId singleton x13 x14) x15 \
                  forall_app (forall_app (forall_app x12 x13) x14) x15)))
         (forall_lam singleton x11 \ forall_app x10 x11)))
"
"8--------]-]Success  
(elim_colSigma
  (pair
    (setPi
      (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \ singleton) (x6 \
    forall
     (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall
      (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall (forall singleton x9 \ propId singleton star star) x9 \
       propId singleton (app x6 x7) (app x6 x8))
    (lambda
      (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \ star)
    (forall_lam
      (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall_lam
       (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall_lam (forall singleton x8 \ propId singleton star star) x8 \
        id singleton star)) (x6 \
  colSigma
   (setPi
     (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) x7 \
   forall
    (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
    x8 \
    forall
     (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall (forall singleton x10 \ propId singleton star star) x10 \
      propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
  pair
   (setPi
     (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) (x8 \
   forall
    (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall
     (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x10 \
     forall (forall singleton x11 \ propId singleton star star) x11 \
      propId singleton (app x8 x9) (app x8 x10))
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x6
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x1) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (forall_lam
     (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall_lam
      (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall_lam (forall singleton x10 \ propId singleton star star) x10 \
       forall_app
        (forall_app
          (forall_app x7
            (elim_colSigma x8 (x11 \
              colSigma (setPi singleton x12 \ propId singleton star star)
               x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star) x11 \ x12 \
              pair (setPi singleton x13 \ propId singleton star star) (x13 \
               forall singleton x14 \
                forall singleton x15 \
                 forall (propId singleton x14 x15) x16 \
                  propId singleton star star)
               (lambda singleton x13 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x1) star)
                    (fixMe "prova di symmetria")) (app x11 x13))
               (forall_lam singleton x13 \
                 forall_lam singleton x14 \
                  forall_lam (propId singleton x13 x14) x15 \
                   forall_app (forall_app (forall_app x12 x13) x14) x15)))
          (elim_colSigma x9 (x11 \
            colSigma (setPi singleton x12 \ propId singleton star star) x12 \
             forall singleton x13 \
              forall singleton x14 \
               forall (propId singleton x13 x14) x15 \
                propId singleton star star) x11 \ x12 \
            pair (setPi singleton x13 \ propId singleton star star) (x13 \
             forall singleton x14 \
              forall singleton x15 \
               forall (propId singleton x14 x15) x16 \
                propId singleton star star)
             (lambda singleton x13 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x1) star)
                  (fixMe "prova di symmetria")) (app x11 x13))
             (forall_lam singleton x13 \
               forall_lam singleton x14 \
                forall_lam (propId singleton x13 x14) x15 \
                 forall_app (forall_app (forall_app x12 x13) x14) x15)))
        (forall_lam singleton x11 \ forall_app x10 x11))) =
 (elim_colSigma
   (pair
     (setPi
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) (x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8))
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star)
     (forall_lam
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall_lam
        (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall_lam (forall singleton x8 \ propId singleton star star) x8 \
         id singleton star)) (x6 \
   colSigma
    (setPi
      (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall
      (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall (forall singleton x10 \ propId singleton star star) x10 \
       propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
   pair
    (setPi
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) (x8 \
    forall
     (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall
      (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall (forall singleton x11 \ propId singleton star star) x11 \
       propId singleton (app x8 x9) (app x8 x10))
    (lambda
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      app x6
       (elim_colSigma x8 (x9 \
         colSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x1) star)
               (fixMe "prova di symmetria")) (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (forall_lam
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall_lam
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall_lam (forall singleton x10 \ propId singleton star star) x10 \
        forall_app
         (forall_app
           (forall_app x7
             (elim_colSigma x8 (x11 \
               colSigma (setPi singleton x12 \ propId singleton star star)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x11 \ x12 \
               pair (setPi singleton x13 \ propId singleton star star) (x13 \
                forall singleton x14 \
                 forall singleton x15 \
                  forall (propId singleton x14 x15) x16 \
                   propId singleton star star)
                (lambda singleton x13 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x1) star)
                     (fixMe "prova di symmetria")) (app x11 x13))
                (forall_lam singleton x13 \
                  forall_lam singleton x14 \
                   forall_lam (propId singleton x13 x14) x15 \
                    forall_app (forall_app (forall_app x12 x13) x14) x15)))
           (elim_colSigma x9 (x11 \
             colSigma (setPi singleton x12 \ propId singleton star star)
              x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star) x11 \ x12 \
             pair (setPi singleton x13 \ propId singleton star star) (x13 \
              forall singleton x14 \
               forall singleton x15 \
                forall (propId singleton x14 x15) x16 \
                 propId singleton star star)
              (lambda singleton x13 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x1) star)
                   (fixMe "prova di symmetria")) (app x11 x13))
              (forall_lam singleton x13 \
                forall_lam singleton x14 \
                 forall_lam (propId singleton x13 x14) x15 \
                  forall_app (forall_app (forall_app x12 x13) x14) x15)))
         (forall_lam singleton x11 \ forall_app x10 x11)))
"
"7-------]-]Success  
trad_isa (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star)
 (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
 (elim_colSigma
   (pair
     (setPi
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) (x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8))
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star)
     (forall_lam
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall_lam
        (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall_lam (forall singleton x8 \ propId singleton star star) x8 \
         id singleton star)) (x6 \
   colSigma
    (setPi
      (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall
      (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall (forall singleton x10 \ propId singleton star star) x10 \
       propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
   pair
    (setPi
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) (x8 \
    forall
     (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall
      (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall (forall singleton x11 \ propId singleton star star) x11 \
       propId singleton (app x8 x9) (app x8 x10))
    (lambda
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      app x6
       (elim_colSigma x8 (x9 \
         colSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x1) star)
               (fixMe "prova di symmetria")) (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (forall_lam
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall_lam
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall_lam (forall singleton x10 \ propId singleton star star) x10 \
        forall_app
         (forall_app
           (forall_app x7
             (elim_colSigma x8 (x11 \
               colSigma (setPi singleton x12 \ propId singleton star star)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x11 \ x12 \
               pair (setPi singleton x13 \ propId singleton star star) (x13 \
                forall singleton x14 \
                 forall singleton x15 \
                  forall (propId singleton x14 x15) x16 \
                   propId singleton star star)
                (lambda singleton x13 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x1) star)
                     (fixMe "prova di symmetria")) (app x11 x13))
                (forall_lam singleton x13 \
                  forall_lam singleton x14 \
                   forall_lam (propId singleton x13 x14) x15 \
                    forall_app (forall_app (forall_app x12 x13) x14) x15)))
           (elim_colSigma x9 (x11 \
             colSigma (setPi singleton x12 \ propId singleton star star)
              x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star) x11 \ x12 \
             pair (setPi singleton x13 \ propId singleton star star) (x13 \
              forall singleton x14 \
               forall singleton x15 \
                forall (propId singleton x14 x15) x16 \
                 propId singleton star star)
              (lambda singleton x13 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x1) star)
                   (fixMe "prova di symmetria")) (app x11 x13))
              (forall_lam singleton x13 \
                forall_lam singleton x14 \
                 forall_lam (propId singleton x13 x14) x15 \
                  forall_app (forall_app (forall_app x12 x13) x14) x15)))
         (forall_lam singleton x11 \ forall_app x10 x11)))
"
"7_______[+[Begin 
trad x4 X665^6
"
"7-------]-]Success  
trad x4 x5
"
"7_______[+[Begin 
of x5 X666^6 int
"
"7-------]-]Success  
of x5
 (colSigma
   (setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) x6 \
       forall
        (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) x6 \
   forall
    (colSigma
      (setPi
        (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ singleton) x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall (forall singleton x10 \ propId singleton star star) x10 \
         propId singleton (app x7 x8) (app x7 x9)) x7 \
    forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) x8 \
       forall
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall
         (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall (forall singleton x11 \ propId singleton star star) x11 \
          propId singleton (app x8 x9) (app x8 x10)) x8 \
     forall
      (forall
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        propId singleton
         (app
           (elim_colSigma x7 (x10 \
             setPi
              (colSigma (setPi singleton x11 \ propId singleton star x1)
                x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star) x11 \ singleton) x10 \ x11 \
             x10) x9)
         (app
           (elim_colSigma x8 (x10 \
             setPi
              (colSigma (setPi singleton x11 \ propId singleton star x1)
                x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star) x11 \ singleton) x10 \ x11 \
             x10) x9)) x9 \ propId singleton (app x6 x7) (app x6 x8)) int
"
"7_______[+[Begin 
(colSigma
  (setPi
    (colSigma
      (setPi
        (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) x6 \
  forall
   (colSigma
     (setPi
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ singleton) x7 \
     forall
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall (forall singleton x10 \ propId singleton star star) x10 \
        propId singleton (app x7 x8) (app x7 x9)) x7 \
   forall
    (colSigma
      (setPi
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10)) x8 \
    forall
     (forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       propId singleton
        (app
          (elim_colSigma x7 (x10 \
            setPi
             (colSigma (setPi singleton x11 \ propId singleton star x1) x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star) x11 \ singleton) x10 \ x11 \
            x10) x9)
        (app
          (elim_colSigma x8 (x10 \
            setPi
             (colSigma (setPi singleton x11 \ propId singleton star x1) x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star) x11 \ singleton) x10 \ x11 \
            x10) x9)) x9 \ propId singleton (app x6 x7) (app x6 x8)) =
 colSigma X667^6 _
"
"7-------]-]Success  
(colSigma
  (setPi
    (colSigma
      (setPi
        (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) x6 \
  forall
   (colSigma
     (setPi
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ singleton) x7 \
     forall
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall (forall singleton x10 \ propId singleton star star) x10 \
        propId singleton (app x7 x8) (app x7 x9)) x7 \
   forall
    (colSigma
      (setPi
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10)) x8 \
    forall
     (forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       propId singleton
        (app
          (elim_colSigma x7 (x10 \
            setPi
             (colSigma (setPi singleton x11 \ propId singleton star x1) x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star) x11 \ singleton) x10 \ x11 \
            x10) x9)
        (app
          (elim_colSigma x8 (x10 \
            setPi
             (colSigma (setPi singleton x11 \ propId singleton star x1) x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star) x11 \ singleton) x10 \ x11 \
            x10) x9)) x9 \ propId singleton (app x6 x7) (app x6 x8)) =
 colSigma
  (setPi
    (colSigma
      (setPi
        (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) _
"
"6------]-]Success  
trad
 (app x4 (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star))
 (app
   (elim_colSigma x5 (x6 \
     setPi
      (colSigma
        (setPi
          (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ singleton) x7 \
        forall
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall
          (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall (forall singleton x10 \ propId singleton star star) x10 \
           propId singleton (app x7 x8) (app x7 x9)) x7 \ singleton) x6 \
     x7 \ x6)
   (elim_colSigma
     (pair
       (setPi
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) (x6 \
       forall
        (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8))
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star)
       (forall_lam
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall_lam
          (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall_lam (forall singleton x8 \ propId singleton star star) x8 \
           id singleton star)) (x6 \
     colSigma
      (setPi
        (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ singleton) x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall (forall singleton x10 \ propId singleton star star) x10 \
         propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
     pair
      (setPi
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) (x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10))
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x6
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x1) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (forall_lam
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall_lam
         (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall_lam (forall singleton x10 \ propId singleton star star) x10 \
          forall_app
           (forall_app
             (forall_app x7
               (elim_colSigma x8 (x11 \
                 colSigma (setPi singleton x12 \ propId singleton star star)
                  x12 \
                  forall singleton x13 \
                   forall singleton x14 \
                    forall (propId singleton x13 x14) x15 \
                     propId singleton star star) x11 \ x12 \
                 pair (setPi singleton x13 \ propId singleton star star)
                  (x13 \
                  forall singleton x14 \
                   forall singleton x15 \
                    forall (propId singleton x14 x15) x16 \
                     propId singleton star star)
                  (lambda singleton x13 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (id singleton star)) x1) star)
                       (fixMe "prova di symmetria")) (app x11 x13))
                  (forall_lam singleton x13 \
                    forall_lam singleton x14 \
                     forall_lam (propId singleton x13 x14) x15 \
                      forall_app (forall_app (forall_app x12 x13) x14) x15)))
             (elim_colSigma x9 (x11 \
               colSigma (setPi singleton x12 \ propId singleton star star)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x11 \ x12 \
               pair (setPi singleton x13 \ propId singleton star star) (x13 \
                forall singleton x14 \
                 forall singleton x15 \
                  forall (propId singleton x14 x15) x16 \
                   propId singleton star star)
                (lambda singleton x13 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x1) star)
                     (fixMe "prova di symmetria")) (app x11 x13))
                (forall_lam singleton x13 \
                  forall_lam singleton x14 \
                   forall_lam (propId singleton x13 x14) x15 \
                    forall_app (forall_app (forall_app x12 x13) x14) x15)))
           (forall_lam singleton x11 \ forall_app x10 x11))))
"
"6______[+[Begin 
pippo singleton singleton X668^6
"
"6------]-]Success  
pippo singleton singleton x6 \ x6
"
"6______[+[Begin 
X106^6 =
 app
  (elim_colSigma x5 (x6 \
    setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ singleton) x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall
         (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall (forall singleton x10 \ propId singleton star star) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x7 \ singleton) x6 \ x7 \
    x6)
  (elim_colSigma
    (pair
      (setPi
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) (x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8))
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star)
      (forall_lam
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall_lam
         (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall_lam (forall singleton x8 \ propId singleton star star) x8 \
          id singleton star)) (x6 \
    colSigma
     (setPi
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ singleton) x7 \
     forall
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall (forall singleton x10 \ propId singleton star star) x10 \
        propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
    pair
     (setPi
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ singleton) (x8 \
     forall
      (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall
       (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall (forall singleton x11 \ propId singleton star star) x11 \
        propId singleton (app x8 x9) (app x8 x10))
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x6
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x1) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (forall_lam
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall_lam
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall_lam (forall singleton x10 \ propId singleton star star) x10 \
         forall_app
          (forall_app
            (forall_app x7
              (elim_colSigma x8 (x11 \
                colSigma (setPi singleton x12 \ propId singleton star star)
                 x12 \
                 forall singleton x13 \
                  forall singleton x14 \
                   forall (propId singleton x13 x14) x15 \
                    propId singleton star star) x11 \ x12 \
                pair (setPi singleton x13 \ propId singleton star star)
                 (x13 \
                 forall singleton x14 \
                  forall singleton x15 \
                   forall (propId singleton x14 x15) x16 \
                    propId singleton star star)
                 (lambda singleton x13 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x1) star)
                      (fixMe "prova di symmetria")) (app x11 x13))
                 (forall_lam singleton x13 \
                   forall_lam singleton x14 \
                    forall_lam (propId singleton x13 x14) x15 \
                     forall_app (forall_app (forall_app x12 x13) x14) x15)))
            (elim_colSigma x9 (x11 \
              colSigma (setPi singleton x12 \ propId singleton star star)
               x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star) x11 \ x12 \
              pair (setPi singleton x13 \ propId singleton star star) (x13 \
               forall singleton x14 \
                forall singleton x15 \
                 forall (propId singleton x14 x15) x16 \
                  propId singleton star star)
               (lambda singleton x13 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x1) star)
                    (fixMe "prova di symmetria")) (app x11 x13))
               (forall_lam singleton x13 \
                 forall_lam singleton x14 \
                  forall_lam (propId singleton x13 x14) x15 \
                   forall_app (forall_app (forall_app x12 x13) x14) x15)))
          (forall_lam singleton x11 \ forall_app x10 x11)))
"
"6------]-]Success  
app
 (elim_colSigma x5 (x6 \
   setPi
    (colSigma
      (setPi
        (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ singleton) x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall (forall singleton x10 \ propId singleton star star) x10 \
         propId singleton (app x7 x8) (app x7 x9)) x7 \ singleton) x6 \ x7 \
   x6)
 (elim_colSigma
   (pair
     (setPi
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) (x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8))
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star)
     (forall_lam
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall_lam
        (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall_lam (forall singleton x8 \ propId singleton star star) x8 \
         id singleton star)) (x6 \
   colSigma
    (setPi
      (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall
      (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall (forall singleton x10 \ propId singleton star star) x10 \
       propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
   pair
    (setPi
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \ singleton) (x8 \
    forall
     (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
       forall singleton x10 \
        forall singleton x11 \
         forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x9 \
     forall
      (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x10 \
      forall (forall singleton x11 \ propId singleton star star) x11 \
       propId singleton (app x8 x9) (app x8 x10))
    (lambda
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      app x6
       (elim_colSigma x8 (x9 \
         colSigma (setPi singleton x10 \ propId singleton star star) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x9 \ x10 \
         pair (setPi singleton x11 \ propId singleton star star) (x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star)
          (lambda singleton x11 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x1) star)
               (fixMe "prova di symmetria")) (app x9 x11))
          (forall_lam singleton x11 \
            forall_lam singleton x12 \
             forall_lam (propId singleton x11 x12) x13 \
              forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (forall_lam
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall_lam
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall_lam (forall singleton x10 \ propId singleton star star) x10 \
        forall_app
         (forall_app
           (forall_app x7
             (elim_colSigma x8 (x11 \
               colSigma (setPi singleton x12 \ propId singleton star star)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x11 \ x12 \
               pair (setPi singleton x13 \ propId singleton star star) (x13 \
                forall singleton x14 \
                 forall singleton x15 \
                  forall (propId singleton x14 x15) x16 \
                   propId singleton star star)
                (lambda singleton x13 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x1) star)
                     (fixMe "prova di symmetria")) (app x11 x13))
                (forall_lam singleton x13 \
                  forall_lam singleton x14 \
                   forall_lam (propId singleton x13 x14) x15 \
                    forall_app (forall_app (forall_app x12 x13) x14) x15)))
           (elim_colSigma x9 (x11 \
             colSigma (setPi singleton x12 \ propId singleton star star)
              x12 \
              forall singleton x13 \
               forall singleton x14 \
                forall (propId singleton x13 x14) x15 \
                 propId singleton star star) x11 \ x12 \
             pair (setPi singleton x13 \ propId singleton star star) (x13 \
              forall singleton x14 \
               forall singleton x15 \
                forall (propId singleton x14 x15) x16 \
                 propId singleton star star)
              (lambda singleton x13 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x1) star)
                   (fixMe "prova di symmetria")) (app x11 x13))
              (forall_lam singleton x13 \
                forall_lam singleton x14 \
                 forall_lam (propId singleton x13 x14) x15 \
                  forall_app (forall_app (forall_app x12 x13) x14) x15)))
         (forall_lam singleton x11 \ forall_app x10 x11))) =
 app
  (elim_colSigma x5 (x6 \
    setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ singleton) x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall
         (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall (forall singleton x10 \ propId singleton star star) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x7 \ singleton) x6 \ x7 \
    x6)
  (elim_colSigma
    (pair
      (setPi
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ singleton) (x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall (forall singleton x9 \ propId singleton star star) x9 \
         propId singleton (app x6 x7) (app x6 x8))
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star)
      (forall_lam
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall_lam
         (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall_lam (forall singleton x8 \ propId singleton star star) x8 \
          id singleton star)) (x6 \
    colSigma
     (setPi
       (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \ singleton) x7 \
     forall
      (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall (forall singleton x10 \ propId singleton star star) x10 \
        propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
    pair
     (setPi
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ singleton) (x8 \
     forall
      (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall
       (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x10 \
       forall (forall singleton x11 \ propId singleton star star) x11 \
        propId singleton (app x8 x9) (app x8 x10))
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x6
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x1) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13)))
     (forall_lam
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall_lam
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall_lam (forall singleton x10 \ propId singleton star star) x10 \
         forall_app
          (forall_app
            (forall_app x7
              (elim_colSigma x8 (x11 \
                colSigma (setPi singleton x12 \ propId singleton star star)
                 x12 \
                 forall singleton x13 \
                  forall singleton x14 \
                   forall (propId singleton x13 x14) x15 \
                    propId singleton star star) x11 \ x12 \
                pair (setPi singleton x13 \ propId singleton star star)
                 (x13 \
                 forall singleton x14 \
                  forall singleton x15 \
                   forall (propId singleton x14 x15) x16 \
                    propId singleton star star)
                 (lambda singleton x13 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x1) star)
                      (fixMe "prova di symmetria")) (app x11 x13))
                 (forall_lam singleton x13 \
                   forall_lam singleton x14 \
                    forall_lam (propId singleton x13 x14) x15 \
                     forall_app (forall_app (forall_app x12 x13) x14) x15)))
            (elim_colSigma x9 (x11 \
              colSigma (setPi singleton x12 \ propId singleton star star)
               x12 \
               forall singleton x13 \
                forall singleton x14 \
                 forall (propId singleton x13 x14) x15 \
                  propId singleton star star) x11 \ x12 \
              pair (setPi singleton x13 \ propId singleton star star) (x13 \
               forall singleton x14 \
                forall singleton x15 \
                 forall (propId singleton x14 x15) x16 \
                  propId singleton star star)
               (lambda singleton x13 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x1) star)
                    (fixMe "prova di symmetria")) (app x11 x13))
               (forall_lam singleton x13 \
                 forall_lam singleton x14 \
                  forall_lam (propId singleton x13 x14) x15 \
                   forall_app (forall_app (forall_app x12 x13) x14) x15)))
          (forall_lam singleton x11 \ forall_app x10 x11)))
"
"5-----]-]Success  
trad_isa
 (app x4 (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star))
 singleton
 (app
   (elim_colSigma x5 (x6 \
     setPi
      (colSigma
        (setPi
          (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ singleton) x7 \
        forall
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall
          (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall (forall singleton x10 \ propId singleton star star) x10 \
           propId singleton (app x7 x8) (app x7 x9)) x7 \ singleton) x6 \
     x7 \ x6)
   (elim_colSigma
     (pair
       (setPi
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) (x6 \
       forall
        (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8))
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star)
       (forall_lam
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall_lam
          (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall_lam (forall singleton x8 \ propId singleton star star) x8 \
           id singleton star)) (x6 \
     colSigma
      (setPi
        (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ singleton) x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall (forall singleton x10 \ propId singleton star star) x10 \
         propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
     pair
      (setPi
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) (x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10))
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x6
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x1) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (forall_lam
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall_lam
         (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall_lam (forall singleton x10 \ propId singleton star star) x10 \
          forall_app
           (forall_app
             (forall_app x7
               (elim_colSigma x8 (x11 \
                 colSigma (setPi singleton x12 \ propId singleton star star)
                  x12 \
                  forall singleton x13 \
                   forall singleton x14 \
                    forall (propId singleton x13 x14) x15 \
                     propId singleton star star) x11 \ x12 \
                 pair (setPi singleton x13 \ propId singleton star star)
                  (x13 \
                  forall singleton x14 \
                   forall singleton x15 \
                    forall (propId singleton x14 x15) x16 \
                     propId singleton star star)
                  (lambda singleton x13 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (id singleton star)) x1) star)
                       (fixMe "prova di symmetria")) (app x11 x13))
                  (forall_lam singleton x13 \
                    forall_lam singleton x14 \
                     forall_lam (propId singleton x13 x14) x15 \
                      forall_app (forall_app (forall_app x12 x13) x14) x15)))
             (elim_colSigma x9 (x11 \
               colSigma (setPi singleton x12 \ propId singleton star star)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x11 \ x12 \
               pair (setPi singleton x13 \ propId singleton star star) (x13 \
                forall singleton x14 \
                 forall singleton x15 \
                  forall (propId singleton x14 x15) x16 \
                   propId singleton star star)
                (lambda singleton x13 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x1) star)
                     (fixMe "prova di symmetria")) (app x11 x13))
                (forall_lam singleton x13 \
                  forall_lam singleton x14 \
                   forall_lam (propId singleton x13 x14) x15 \
                    forall_app (forall_app (forall_app x12 x13) x14) x15)))
           (forall_lam singleton x11 \ forall_app x10 x11))))
"
"5_____[+[Begin 
trad_isa star singleton X669^6
"
"6______[+[Begin 
of star X670^6 ext
"
"6------]-]Success  
of star singleton ext
"
"6______[+[Begin 
trad star X671^6
"
"6------]-]Success  
trad star star
"
"6______[+[Begin 
pippo singleton singleton X672^6
"
"6------]-]Success  
pippo singleton singleton x6 \ x6
"
"6______[+[Begin 
X669^6 = star
"
"6------]-]Success  
star = star
"
"5-----]-]Success  
trad_isa star singleton star
"
"5_____[+[Begin 
X104 x1 x3 x5 =
 propId singleton
  (app
    (elim_colSigma x5 (x6 \
      setPi
       (colSigma
         (setPi
           (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ singleton) x7 \
         forall
          (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall
           (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \
           forall (forall singleton x10 \ propId singleton star star) x10 \
            propId singleton (app x7 x8) (app x7 x9)) x7 \ singleton) x6 \
      x7 \ x6)
    (elim_colSigma
      (pair
        (setPi
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ singleton) (x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall
          (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall (forall singleton x9 \ propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8))
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star)
        (forall_lam
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall_lam
           (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall_lam (forall singleton x8 \ propId singleton star star) x8 \
            id singleton star)) (x6 \
      colSigma
       (setPi
         (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ singleton) x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall
         (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall (forall singleton x10 \ propId singleton star star) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
      pair
       (setPi
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) (x8 \
       forall
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall
         (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall (forall singleton x11 \ propId singleton star star) x11 \
          propId singleton (app x8 x9) (app x8 x10))
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x6
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x1) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13)))
       (forall_lam
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall_lam
          (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall_lam (forall singleton x10 \ propId singleton star star)
           x10 \
           forall_app
            (forall_app
              (forall_app x7
                (elim_colSigma x8 (x11 \
                  colSigma (setPi singleton x12 \ propId singleton star star)
                   x12 \
                   forall singleton x13 \
                    forall singleton x14 \
                     forall (propId singleton x13 x14) x15 \
                      propId singleton star star) x11 \ x12 \
                  pair (setPi singleton x13 \ propId singleton star star)
                   (x13 \
                   forall singleton x14 \
                    forall singleton x15 \
                     forall (propId singleton x14 x15) x16 \
                      propId singleton star star)
                   (lambda singleton x13 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (id singleton star)) x1) star)
                        (fixMe "prova di symmetria")) (app x11 x13))
                   (forall_lam singleton x13 \
                     forall_lam singleton x14 \
                      forall_lam (propId singleton x13 x14) x15 \
                       forall_app (forall_app (forall_app x12 x13) x14) x15)))
              (elim_colSigma x9 (x11 \
                colSigma (setPi singleton x12 \ propId singleton star star)
                 x12 \
                 forall singleton x13 \
                  forall singleton x14 \
                   forall (propId singleton x13 x14) x15 \
                    propId singleton star star) x11 \ x12 \
                pair (setPi singleton x13 \ propId singleton star star)
                 (x13 \
                 forall singleton x14 \
                  forall singleton x15 \
                   forall (propId singleton x14 x15) x16 \
                    propId singleton star star)
                 (lambda singleton x13 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x1) star)
                      (fixMe "prova di symmetria")) (app x11 x13))
                 (forall_lam singleton x13 \
                   forall_lam singleton x14 \
                    forall_lam (propId singleton x13 x14) x15 \
                     forall_app (forall_app (forall_app x12 x13) x14) x15)))
            (forall_lam singleton x11 \ forall_app x10 x11)))) star
"
"5-----]-]Success  
propId singleton
 (app
   (elim_colSigma x5 (x6 \
     setPi
      (colSigma
        (setPi
          (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \ singleton) x7 \
        forall
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall
          (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall (forall singleton x10 \ propId singleton star star) x10 \
           propId singleton (app x7 x8) (app x7 x9)) x7 \ singleton) x6 \
     x7 \ x6)
   (elim_colSigma
     (pair
       (setPi
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ singleton) (x6 \
       forall
        (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall
         (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall (forall singleton x9 \ propId singleton star star) x9 \
          propId singleton (app x6 x7) (app x6 x8))
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star)
       (forall_lam
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall_lam
          (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall_lam (forall singleton x8 \ propId singleton star star) x8 \
           id singleton star)) (x6 \
     colSigma
      (setPi
        (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ singleton) x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall (forall singleton x10 \ propId singleton star star) x10 \
         propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
     pair
      (setPi
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \ singleton) (x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall
        (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star) x10 \
        forall (forall singleton x11 \ propId singleton star star) x11 \
         propId singleton (app x8 x9) (app x8 x10))
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x6
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x1) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13)))
      (forall_lam
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall_lam
         (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall_lam (forall singleton x10 \ propId singleton star star) x10 \
          forall_app
           (forall_app
             (forall_app x7
               (elim_colSigma x8 (x11 \
                 colSigma (setPi singleton x12 \ propId singleton star star)
                  x12 \
                  forall singleton x13 \
                   forall singleton x14 \
                    forall (propId singleton x13 x14) x15 \
                     propId singleton star star) x11 \ x12 \
                 pair (setPi singleton x13 \ propId singleton star star)
                  (x13 \
                  forall singleton x14 \
                   forall singleton x15 \
                    forall (propId singleton x14 x15) x16 \
                     propId singleton star star)
                  (lambda singleton x13 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (id singleton star)) x1) star)
                       (fixMe "prova di symmetria")) (app x11 x13))
                  (forall_lam singleton x13 \
                    forall_lam singleton x14 \
                     forall_lam (propId singleton x13 x14) x15 \
                      forall_app (forall_app (forall_app x12 x13) x14) x15)))
             (elim_colSigma x9 (x11 \
               colSigma (setPi singleton x12 \ propId singleton star star)
                x12 \
                forall singleton x13 \
                 forall singleton x14 \
                  forall (propId singleton x13 x14) x15 \
                   propId singleton star star) x11 \ x12 \
               pair (setPi singleton x13 \ propId singleton star star) (x13 \
                forall singleton x14 \
                 forall singleton x15 \
                  forall (propId singleton x14 x15) x16 \
                   propId singleton star star)
                (lambda singleton x13 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x1) star)
                     (fixMe "prova di symmetria")) (app x11 x13))
                (forall_lam singleton x13 \
                  forall_lam singleton x14 \
                   forall_lam (propId singleton x13 x14) x15 \
                    forall_app (forall_app (forall_app x12 x13) x14) x15)))
           (forall_lam singleton x11 \ forall_app x10 x11)))) star =
 propId singleton
  (app
    (elim_colSigma x5 (x6 \
      setPi
       (colSigma
         (setPi
           (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ singleton) x7 \
         forall
          (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall
           (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x9 \
           forall (forall singleton x10 \ propId singleton star star) x10 \
            propId singleton (app x7 x8) (app x7 x9)) x7 \ singleton) x6 \
      x7 \ x6)
    (elim_colSigma
      (pair
        (setPi
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ singleton) (x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall
          (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall (forall singleton x9 \ propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8))
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star)
        (forall_lam
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall_lam
           (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall_lam (forall singleton x8 \ propId singleton star star) x8 \
            id singleton star)) (x6 \
      colSigma
       (setPi
         (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ singleton) x7 \
       forall
        (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        forall
         (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x9 \
         forall (forall singleton x10 \ propId singleton star star) x10 \
          propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
      pair
       (setPi
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \ singleton) (x8 \
       forall
        (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x9 \
        forall
         (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x10 \
         forall (forall singleton x11 \ propId singleton star star) x11 \
          propId singleton (app x8 x9) (app x8 x10))
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x6
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x1) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13)))
       (forall_lam
         (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         forall_lam
          (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x9 \
          forall_lam (forall singleton x10 \ propId singleton star star)
           x10 \
           forall_app
            (forall_app
              (forall_app x7
                (elim_colSigma x8 (x11 \
                  colSigma (setPi singleton x12 \ propId singleton star star)
                   x12 \
                   forall singleton x13 \
                    forall singleton x14 \
                     forall (propId singleton x13 x14) x15 \
                      propId singleton star star) x11 \ x12 \
                  pair (setPi singleton x13 \ propId singleton star star)
                   (x13 \
                   forall singleton x14 \
                    forall singleton x15 \
                     forall (propId singleton x14 x15) x16 \
                      propId singleton star star)
                   (lambda singleton x13 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (id singleton star)) x1) star)
                        (fixMe "prova di symmetria")) (app x11 x13))
                   (forall_lam singleton x13 \
                     forall_lam singleton x14 \
                      forall_lam (propId singleton x13 x14) x15 \
                       forall_app (forall_app (forall_app x12 x13) x14) x15)))
              (elim_colSigma x9 (x11 \
                colSigma (setPi singleton x12 \ propId singleton star star)
                 x12 \
                 forall singleton x13 \
                  forall singleton x14 \
                   forall (propId singleton x13 x14) x15 \
                    propId singleton star star) x11 \ x12 \
                pair (setPi singleton x13 \ propId singleton star star)
                 (x13 \
                 forall singleton x14 \
                  forall singleton x15 \
                   forall (propId singleton x14 x15) x16 \
                    propId singleton star star)
                 (lambda singleton x13 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x1) star)
                      (fixMe "prova di symmetria")) (app x11 x13))
                 (forall_lam singleton x13 \
                   forall_lam singleton x14 \
                    forall_lam (propId singleton x13 x14) x15 \
                     forall_app (forall_app (forall_app x12 x13) x14) x15)))
            (forall_lam singleton x11 \ forall_app x10 x11)))) star
"
"4----]-]Success  
pi x4 \
 pi x5 \
  trad x4 x5 =>
   locDecl x4
    (setPi
      (setPi (setPi singleton x6 \ propEq singleton star x0) x6 \ singleton)
      x6 \ singleton) =>
    locDecl x5
     (colSigma
       (setPi
         (colSigma
           (setPi
             (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \ singleton) x6 \
           forall
            (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall
             (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             forall (forall singleton x9 \ propId singleton star star) x9 \
              propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) x6 \
       forall
        (colSigma
          (setPi
            (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ singleton) x7 \
          forall
           (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           forall
            (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            forall (forall singleton x10 \ propId singleton star star) x10 \
             propId singleton (app x7 x8) (app x7 x9)) x7 \
        forall
         (colSigma
           (setPi
             (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \ singleton) x8 \
           forall
            (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            forall
             (colSigma (setPi singleton x10 \ propId singleton star x1) x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x10 \
             forall (forall singleton x11 \ propId singleton star star) x11 \
              propId singleton (app x8 x9) (app x8 x10)) x8 \
         forall
          (forall
            (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x9 \
            propId singleton
             (app
               (elim_colSigma x7 (x10 \
                 setPi
                  (colSigma (setPi singleton x11 \ propId singleton star x1)
                    x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton star star) x11 \ singleton) x10 \
                 x11 \ x10) x9)
             (app
               (elim_colSigma x8 (x10 \
                 setPi
                  (colSigma (setPi singleton x11 \ propId singleton star x1)
                    x11 \
                    forall singleton x12 \
                     forall singleton x13 \
                      forall (propId singleton x12 x13) x14 \
                       propId singleton star star) x11 \ singleton) x10 \
                 x11 \ x10) x9)) x9 \
          propId singleton (app x6 x7) (app x6 x8)) =>
     trad
      (propEq singleton
        (app x4
          (lambda (setPi singleton x6 \ propEq singleton star star) x6 \ star))
        star)
      (propId singleton
        (app
          (elim_colSigma x5 (x6 \
            setPi
             (colSigma
               (setPi
                 (colSigma (setPi singleton x7 \ propId singleton star x1)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \ singleton) x7 \
               forall
                (colSigma (setPi singleton x8 \ propId singleton star x1)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \
                forall
                 (colSigma (setPi singleton x9 \ propId singleton star x1)
                   x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton star star) x9 \
                 forall (forall singleton x10 \ propId singleton star star)
                  x10 \ propId singleton (app x7 x8) (app x7 x9)) x7 \
             singleton) x6 \ x7 \ x6)
          (elim_colSigma
            (pair
              (setPi
                (colSigma (setPi singleton x6 \ propId singleton star star)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \ singleton) (x6 \
              forall
               (colSigma (setPi singleton x7 \ propId singleton star star)
                 x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall
                (colSigma (setPi singleton x8 \ propId singleton star star)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \
                forall (forall singleton x9 \ propId singleton star star)
                 x9 \ propId singleton (app x6 x7) (app x6 x8))
              (lambda
                (colSigma (setPi singleton x6 \ propId singleton star star)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \ star)
              (forall_lam
                (colSigma (setPi singleton x6 \ propId singleton star star)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall_lam
                 (colSigma (setPi singleton x7 \ propId singleton star star)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall_lam
                  (forall singleton x8 \ propId singleton star star) x8 \
                  id singleton star)) (x6 \
            colSigma
             (setPi
               (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x7 \
             forall
              (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall
               (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \
               forall (forall singleton x10 \ propId singleton star star)
                x10 \ propId singleton (app x7 x8) (app x7 x9)) x6 \ x7 \
            pair
             (setPi
               (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) (x8 \
             forall
              (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x9 \
              forall
               (colSigma (setPi singleton x10 \ propId singleton star x1)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x10 \
               forall (forall singleton x11 \ propId singleton star star)
                x11 \ propId singleton (app x8 x9) (app x8 x10))
             (lambda
               (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \
               app x6
                (elim_colSigma x8 (x9 \
                  colSigma (setPi singleton x10 \ propId singleton star star)
                   x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star) x9 \ x10 \
                  pair (setPi singleton x11 \ propId singleton star star)
                   (x11 \
                   forall singleton x12 \
                    forall singleton x13 \
                     forall (propId singleton x12 x13) x14 \
                      propId singleton star star)
                   (lambda singleton x11 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (id singleton star)) x1) star)
                        (fixMe "prova di symmetria")) (app x9 x11))
                   (forall_lam singleton x11 \
                     forall_lam singleton x12 \
                      forall_lam (propId singleton x11 x12) x13 \
                       forall_app (forall_app (forall_app x10 x11) x12) x13)))
             (forall_lam
               (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \
               forall_lam
                (colSigma (setPi singleton x9 \ propId singleton star x1)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x9 \
                forall_lam
                 (forall singleton x10 \ propId singleton star star) x10 \
                 forall_app
                  (forall_app
                    (forall_app x7
                      (elim_colSigma x8 (x11 \
                        colSigma
                         (setPi singleton x12 \ propId singleton star star)
                         x12 \
                         forall singleton x13 \
                          forall singleton x14 \
                           forall (propId singleton x13 x14) x15 \
                            propId singleton star star) x11 \ x12 \
                        pair
                         (setPi singleton x13 \ propId singleton star star)
                         (x13 \
                         forall singleton x14 \
                          forall singleton x15 \
                           forall (propId singleton x14 x15) x16 \
                            propId singleton star star)
                         (lambda singleton x13 \
                           impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app (k_propId singleton) star)
                                      star) (id singleton star)) x1) star)
                              (fixMe "prova di symmetria")) (app x11 x13))
                         (forall_lam singleton x13 \
                           forall_lam singleton x14 \
                            forall_lam (propId singleton x13 x14) x15 \
                             forall_app (forall_app (forall_app x12 x13) x14)
                              x15)))
                    (elim_colSigma x9 (x11 \
                      colSigma
                       (setPi singleton x12 \ propId singleton star star)
                       x12 \
                       forall singleton x13 \
                        forall singleton x14 \
                         forall (propId singleton x13 x14) x15 \
                          propId singleton star star) x11 \ x12 \
                      pair (setPi singleton x13 \ propId singleton star star)
                       (x13 \
                       forall singleton x14 \
                        forall singleton x15 \
                         forall (propId singleton x14 x15) x16 \
                          propId singleton star star)
                       (lambda singleton x13 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star) (id singleton star)) x1) star)
                            (fixMe "prova di symmetria")) (app x11 x13))
                       (forall_lam singleton x13 \
                         forall_lam singleton x14 \
                          forall_lam (propId singleton x13 x14) x15 \
                           forall_app (forall_app (forall_app x12 x13) x14)
                            x15)))
                  (forall_lam singleton x11 \ forall_app x10 x11)))) star)
"
"3---]-]Success  
pi x2 \
 pi x3 \
  ((trad x2 x3), (locDecl x2 (propEq singleton star x0)),
   (locDecl x3 (propId singleton star x1))) =>
   trad
    (forall
      (setPi
        (setPi (setPi singleton x4 \ propEq singleton star x0) x4 \ singleton)
        x4 \ singleton) x4 \
      propEq singleton
       (app x4
         (lambda (setPi singleton x5 \ propEq singleton star star) x5 \ star))
       star)
    (forall
      (colSigma
        (setPi
          (colSigma
            (setPi
              (colSigma (setPi singleton x4 \ propId singleton star x1) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ singleton) x4 \
            forall
             (colSigma (setPi singleton x5 \ propId singleton star x1) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall
              (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall (forall singleton x7 \ propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x4 \
        forall
         (colSigma
           (setPi
             (colSigma (setPi singleton x5 \ propId singleton star x1) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \ singleton) x5 \
           forall
            (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall
             (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall (forall singleton x8 \ propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7)) x5 \
         forall
          (colSigma
            (setPi
              (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \ singleton) x6 \
            forall
             (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall
              (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall (forall singleton x9 \ propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8)) x6 \
          forall
           (forall
             (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             propId singleton
              (app
                (elim_colSigma x5 (x8 \
                  setPi
                   (colSigma (setPi singleton x9 \ propId singleton star x1)
                     x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star) x9 \ singleton) x8 \ x9 \
                  x8) x7)
              (app
                (elim_colSigma x6 (x8 \
                  setPi
                   (colSigma (setPi singleton x9 \ propId singleton star x1)
                     x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star) x9 \ singleton) x8 \ x9 \
                  x8) x7)) x7 \ propId singleton (app x4 x5) (app x4 x6))
      x4 \
      propId singleton
       (app
         (elim_colSigma x4 (x5 \
           setPi
            (colSigma
              (setPi
                (colSigma (setPi singleton x6 \ propId singleton star x1)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \ singleton) x6 \
              forall
               (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall
                (colSigma (setPi singleton x8 \ propId singleton star x1)
                  x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star) x8 \
                forall (forall singleton x9 \ propId singleton star star)
                 x9 \ propId singleton (app x6 x7) (app x6 x8)) x6 \
            singleton) x5 \ x6 \ x5)
         (elim_colSigma
           (pair
             (setPi
               (colSigma (setPi singleton x5 \ propId singleton star star)
                 x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ singleton) (x5 \
             forall
              (colSigma (setPi singleton x6 \ propId singleton star star)
                x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall
               (colSigma (setPi singleton x7 \ propId singleton star star)
                 x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall (forall singleton x8 \ propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7))
             (lambda
               (colSigma (setPi singleton x5 \ propId singleton star star)
                 x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ star)
             (forall_lam
               (colSigma (setPi singleton x5 \ propId singleton star star)
                 x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall_lam
                (colSigma (setPi singleton x6 \ propId singleton star star)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall_lam (forall singleton x7 \ propId singleton star star)
                 x7 \ id singleton star)) (x5 \
           colSigma
            (setPi
              (colSigma (setPi singleton x6 \ propId singleton star x1) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \ singleton) x6 \
            forall
             (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall
              (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \
              forall (forall singleton x9 \ propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8)) x5 \ x6 \
           pair
            (setPi
              (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \ singleton) (x7 \
            forall
             (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             forall
              (colSigma (setPi singleton x9 \ propId singleton star x1) x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x9 \
              forall (forall singleton x10 \ propId singleton star star)
               x10 \ propId singleton (app x7 x8) (app x7 x9))
            (lambda
              (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              app x5
               (elim_colSigma x7 (x8 \
                 colSigma (setPi singleton x9 \ propId singleton star star)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x8 \ x9 \
                 pair (setPi singleton x10 \ propId singleton star star)
                  (x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star)
                  (lambda singleton x10 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (id singleton star)) x1) star)
                       (fixMe "prova di symmetria")) (app x8 x10))
                  (forall_lam singleton x10 \
                    forall_lam singleton x11 \
                     forall_lam (propId singleton x10 x11) x12 \
                      forall_app (forall_app (forall_app x9 x10) x11) x12)))
            (forall_lam
              (colSigma (setPi singleton x7 \ propId singleton star x1) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall_lam
               (colSigma (setPi singleton x8 \ propId singleton star x1) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \
               forall_lam (forall singleton x9 \ propId singleton star star)
                x9 \
                forall_app
                 (forall_app
                   (forall_app x6
                     (elim_colSigma x7 (x10 \
                       colSigma
                        (setPi singleton x11 \ propId singleton star star)
                        x11 \
                        forall singleton x12 \
                         forall singleton x13 \
                          forall (propId singleton x12 x13) x14 \
                           propId singleton star star) x10 \ x11 \
                       pair
                        (setPi singleton x12 \ propId singleton star star)
                        (x12 \
                        forall singleton x13 \
                         forall singleton x14 \
                          forall (propId singleton x13 x14) x15 \
                           propId singleton star star)
                        (lambda singleton x12 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star) (id singleton star)) x1) star)
                             (fixMe "prova di symmetria")) (app x10 x12))
                        (forall_lam singleton x12 \
                          forall_lam singleton x13 \
                           forall_lam (propId singleton x12 x13) x14 \
                            forall_app (forall_app (forall_app x11 x12) x13)
                             x14)))
                   (elim_colSigma x8 (x10 \
                     colSigma
                      (setPi singleton x11 \ propId singleton star star)
                      x11 \
                      forall singleton x12 \
                       forall singleton x13 \
                        forall (propId singleton x12 x13) x14 \
                         propId singleton star star) x10 \ x11 \
                     pair (setPi singleton x12 \ propId singleton star star)
                      (x12 \
                      forall singleton x13 \
                       forall singleton x14 \
                        forall (propId singleton x13 x14) x15 \
                         propId singleton star star)
                      (lambda singleton x12 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star) (id singleton star)) x1) star)
                           (fixMe "prova di symmetria")) (app x10 x12))
                      (forall_lam singleton x12 \
                        forall_lam singleton x13 \
                         forall_lam (propId singleton x12 x13) x14 \
                          forall_app (forall_app (forall_app x11 x12) x13)
                           x14)))
                 (forall_lam singleton x10 \ forall_app x9 x10)))) star)
"
"2--]-]Success  
pi x0 \
 pi x1 \
  trad x0 x1 =>
   locDecl x0 singleton =>
    locDecl x1 singleton =>
     trad
      (implies (propEq singleton star x0)
        (forall
          (setPi
            (setPi (setPi singleton x2 \ propEq singleton star x0) x2 \
              singleton) x2 \ singleton) x2 \
          propEq singleton
           (app x2
             (lambda (setPi singleton x3 \ propEq singleton star star) x3 \
               star)) star))
      (forall (propId singleton star x1) x2 \
        forall
         (colSigma
           (setPi
             (colSigma
               (setPi
                 (colSigma (setPi singleton x3 \ propId singleton star x1)
                   x3 \
                   forall singleton x4 \
                    forall singleton x5 \
                     forall (propId singleton x4 x5) x6 \
                      propId singleton star star) x3 \ singleton) x3 \
               forall
                (colSigma (setPi singleton x4 \ propId singleton star x1)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall
                 (colSigma (setPi singleton x5 \ propId singleton star x1)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall (forall singleton x6 \ propId singleton star star)
                  x6 \ propId singleton (app x3 x4) (app x3 x5)) x3 \
             singleton) x3 \
           forall
            (colSigma
              (setPi
                (colSigma (setPi singleton x4 \ propId singleton star x1)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star x1) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (colSigma (setPi singleton x6 \ propId singleton star x1)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (colSigma
               (setPi
                 (colSigma (setPi singleton x5 \ propId singleton star x1)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \ singleton) x5 \
               forall
                (colSigma (setPi singleton x6 \ propId singleton star x1)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall
                 (colSigma (setPi singleton x7 \ propId singleton star x1)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall (forall singleton x8 \ propId singleton star star)
                  x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
             forall
              (forall
                (colSigma (setPi singleton x6 \ propId singleton star x1)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                propId singleton
                 (app
                   (elim_colSigma x4 (x7 \
                     setPi
                      (colSigma
                        (setPi singleton x8 \ propId singleton star x1) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton star star) x8 \ singleton) x7 \
                     x8 \ x7) x6)
                 (app
                   (elim_colSigma x5 (x7 \
                     setPi
                      (colSigma
                        (setPi singleton x8 \ propId singleton star x1) x8 \
                        forall singleton x9 \
                         forall singleton x10 \
                          forall (propId singleton x9 x10) x11 \
                           propId singleton star star) x8 \ singleton) x7 \
                     x8 \ x7) x6)) x6 \
              propId singleton (app x3 x4) (app x3 x5)) x3 \
         propId singleton
          (app
            (elim_colSigma x3 (x4 \
              setPi
               (colSigma
                 (setPi
                   (colSigma (setPi singleton x5 \ propId singleton star x1)
                     x5 \
                     forall singleton x6 \
                      forall singleton x7 \
                       forall (propId singleton x6 x7) x8 \
                        propId singleton star star) x5 \ singleton) x5 \
                 forall
                  (colSigma (setPi singleton x6 \ propId singleton star x1)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  forall
                   (colSigma (setPi singleton x7 \ propId singleton star x1)
                     x7 \
                     forall singleton x8 \
                      forall singleton x9 \
                       forall (propId singleton x8 x9) x10 \
                        propId singleton star star) x7 \
                   forall (forall singleton x8 \ propId singleton star star)
                    x8 \ propId singleton (app x5 x6) (app x5 x7)) x5 \
               singleton) x4 \ x5 \ x4)
            (elim_colSigma
              (pair
                (setPi
                  (colSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \ singleton) (x4 \
                forall
                 (colSigma (setPi singleton x5 \ propId singleton star star)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall
                  (colSigma (setPi singleton x6 \ propId singleton star star)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  forall (forall singleton x7 \ propId singleton star star)
                   x7 \ propId singleton (app x4 x5) (app x4 x6))
                (lambda
                  (colSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \ star)
                (forall_lam
                  (colSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \
                  forall_lam
                   (colSigma
                     (setPi singleton x5 \ propId singleton star star) x5 \
                     forall singleton x6 \
                      forall singleton x7 \
                       forall (propId singleton x6 x7) x8 \
                        propId singleton star star) x5 \
                   forall_lam
                    (forall singleton x6 \ propId singleton star star) x6 \
                    id singleton star)) (x4 \
              colSigma
               (setPi
                 (colSigma (setPi singleton x5 \ propId singleton star x1)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \ singleton) x5 \
               forall
                (colSigma (setPi singleton x6 \ propId singleton star x1)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall
                 (colSigma (setPi singleton x7 \ propId singleton star x1)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \
                 forall (forall singleton x8 \ propId singleton star star)
                  x8 \ propId singleton (app x5 x6) (app x5 x7)) x4 \ x5 \
              pair
               (setPi
                 (colSigma (setPi singleton x6 \ propId singleton star x1)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \ singleton) (x6 \
               forall
                (colSigma (setPi singleton x7 \ propId singleton star x1)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall
                 (colSigma (setPi singleton x8 \ propId singleton star x1)
                   x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star) x8 \
                 forall (forall singleton x9 \ propId singleton star star)
                  x9 \ propId singleton (app x6 x7) (app x6 x8))
               (lambda
                 (colSigma (setPi singleton x6 \ propId singleton star x1)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 app x4
                  (elim_colSigma x6 (x7 \
                    colSigma
                     (setPi singleton x8 \ propId singleton star star) x8 \
                     forall singleton x9 \
                      forall singleton x10 \
                       forall (propId singleton x9 x10) x11 \
                        propId singleton star star) x7 \ x8 \
                    pair (setPi singleton x9 \ propId singleton star star)
                     (x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star)
                     (lambda singleton x9 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (id singleton star)) x1) star)
                          (fixMe "prova di symmetria")) (app x7 x9))
                     (forall_lam singleton x9 \
                       forall_lam singleton x10 \
                        forall_lam (propId singleton x9 x10) x11 \
                         forall_app (forall_app (forall_app x8 x9) x10) x11)))
               (forall_lam
                 (colSigma (setPi singleton x6 \ propId singleton star x1)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall_lam
                  (colSigma (setPi singleton x7 \ propId singleton star x1)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \
                  forall_lam
                   (forall singleton x8 \ propId singleton star star) x8 \
                   forall_app
                    (forall_app
                      (forall_app x5
                        (elim_colSigma x6 (x9 \
                          colSigma
                           (setPi singleton x10 \ propId singleton star star)
                           x10 \
                           forall singleton x11 \
                            forall singleton x12 \
                             forall (propId singleton x11 x12) x13 \
                              propId singleton star star) x9 \ x10 \
                          pair
                           (setPi singleton x11 \ propId singleton star star)
                           (x11 \
                           forall singleton x12 \
                            forall singleton x13 \
                             forall (propId singleton x12 x13) x14 \
                              propId singleton star star)
                           (lambda singleton x11 \
                             impl_app
                              (impl_app
                                (forall_app
                                  (forall_app
                                    (impl_app
                                      (forall_app
                                        (forall_app (k_propId singleton) star)
                                        star) (id singleton star)) x1) star)
                                (fixMe "prova di symmetria")) (app x9 x11))
                           (forall_lam singleton x11 \
                             forall_lam singleton x12 \
                              forall_lam (propId singleton x11 x12) x13 \
                               forall_app
                                (forall_app (forall_app x10 x11) x12) x13)))
                      (elim_colSigma x7 (x9 \
                        colSigma
                         (setPi singleton x10 \ propId singleton star star)
                         x10 \
                         forall singleton x11 \
                          forall singleton x12 \
                           forall (propId singleton x11 x12) x13 \
                            propId singleton star star) x9 \ x10 \
                        pair
                         (setPi singleton x11 \ propId singleton star star)
                         (x11 \
                         forall singleton x12 \
                          forall singleton x13 \
                           forall (propId singleton x12 x13) x14 \
                            propId singleton star star)
                         (lambda singleton x11 \
                           impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app (k_propId singleton) star)
                                      star) (id singleton star)) x1) star)
                              (fixMe "prova di symmetria")) (app x9 x11))
                         (forall_lam singleton x11 \
                           forall_lam singleton x12 \
                            forall_lam (propId singleton x11 x12) x13 \
                             forall_app (forall_app (forall_app x10 x11) x12)
                              x13)))
                    (forall_lam singleton x9 \ forall_app x8 x9)))) star)
"
"1-]-]Success  
trad
 (forall singleton x0 \
   implies (propEq singleton star x0)
    (forall
      (setPi
        (setPi (setPi singleton x1 \ propEq singleton star x0) x1 \ singleton)
        x1 \ singleton) x1 \
      propEq singleton
       (app x1
         (lambda (setPi singleton x2 \ propEq singleton star star) x2 \ star))
       star))
 (forall singleton x0 \
   forall (propId singleton star x0) x1 \
    forall
     (colSigma
       (setPi
         (colSigma
           (setPi
             (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
               forall singleton x3 \
                forall singleton x4 \
                 forall (propId singleton x3 x4) x5 \
                  propId singleton star star) x2 \ singleton) x2 \
           forall
            (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \
            forall
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall (forall singleton x5 \ propId singleton star star) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
       forall
        (colSigma
          (setPi
            (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \ singleton) x3 \
          forall
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall (forall singleton x6 \ propId singleton star star) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        forall
         (colSigma
           (setPi
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            propId singleton
             (app
               (elim_colSigma x3 (x6 \
                 setPi
                  (colSigma (setPi singleton x7 \ propId singleton star x0)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \ singleton) x6 \ x7 \
                 x6) x5)
             (app
               (elim_colSigma x4 (x6 \
                 setPi
                  (colSigma (setPi singleton x7 \ propId singleton star x0)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \ singleton) x6 \ x7 \
                 x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) x2 \
     propId singleton
      (app
        (elim_colSigma x2 (x3 \
          setPi
           (colSigma
             (setPi
               (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton)
          x3 \ x4 \ x3)
        (elim_colSigma
          (pair
            (setPi
              (colSigma (setPi singleton x3 \ propId singleton star star)
                x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ singleton) (x3 \
            forall
             (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall (forall singleton x6 \ propId singleton star star) x6 \
               propId singleton (app x3 x4) (app x3 x5))
            (lambda
              (colSigma (setPi singleton x3 \ propId singleton star star)
                x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ star)
            (forall_lam
              (colSigma (setPi singleton x3 \ propId singleton star star)
                x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \
              forall_lam
               (colSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall_lam (forall singleton x5 \ propId singleton star star)
                x5 \ id singleton star)) (x3 \
          colSigma
           (setPi
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
          pair
           (setPi
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \ singleton) (x5 \
           forall
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall
             (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall (forall singleton x8 \ propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7))
           (lambda
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             app x3
              (elim_colSigma x5 (x6 \
                colSigma (setPi singleton x7 \ propId singleton star star)
                 x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x6 \ x7 \
                pair (setPi singleton x8 \ propId singleton star star) (x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star)
                 (lambda singleton x8 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x0) star)
                      (fixMe "prova di symmetria")) (app x6 x8))
                 (forall_lam singleton x8 \
                   forall_lam singleton x9 \
                    forall_lam (propId singleton x8 x9) x10 \
                     forall_app (forall_app (forall_app x7 x8) x9) x10)))
           (forall_lam
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall_lam
              (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall_lam (forall singleton x7 \ propId singleton star star)
               x7 \
               forall_app
                (forall_app
                  (forall_app x4
                    (elim_colSigma x5 (x8 \
                      colSigma
                       (setPi singleton x9 \ propId singleton star star) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton star star) x8 \ x9 \
                      pair (setPi singleton x10 \ propId singleton star star)
                       (x10 \
                       forall singleton x11 \
                        forall singleton x12 \
                         forall (propId singleton x11 x12) x13 \
                          propId singleton star star)
                       (lambda singleton x10 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star) (id singleton star)) x0) star)
                            (fixMe "prova di symmetria")) (app x8 x10))
                       (forall_lam singleton x10 \
                         forall_lam singleton x11 \
                          forall_lam (propId singleton x10 x11) x12 \
                           forall_app (forall_app (forall_app x9 x10) x11)
                            x12)))
                  (elim_colSigma x6 (x8 \
                    colSigma
                     (setPi singleton x9 \ propId singleton star star) x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star) x8 \ x9 \
                    pair (setPi singleton x10 \ propId singleton star star)
                     (x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton star star)
                     (lambda singleton x10 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (id singleton star)) x0) star)
                          (fixMe "prova di symmetria")) (app x8 x10))
                     (forall_lam singleton x10 \
                       forall_lam singleton x11 \
                        forall_lam (propId singleton x10 x11) x12 \
                         forall_app (forall_app (forall_app x9 x10) x11) x12)))
                (forall_lam singleton x8 \ forall_app x7 x8)))) star)
"
"|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
"
"1_[+[Begin 
isType
 (forall singleton x0 \
   forall (propId singleton star x0) x1 \
    forall
     (colSigma
       (setPi
         (colSigma
           (setPi
             (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
               forall singleton x3 \
                forall singleton x4 \
                 forall (propId singleton x3 x4) x5 \
                  propId singleton star star) x2 \ singleton) x2 \
           forall
            (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \
            forall
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall (forall singleton x5 \ propId singleton star star) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
       forall
        (colSigma
          (setPi
            (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \ singleton) x3 \
          forall
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall (forall singleton x6 \ propId singleton star star) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        forall
         (colSigma
           (setPi
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            propId singleton
             (app
               (elim_colSigma x3 (x6 \
                 setPi
                  (colSigma (setPi singleton x7 \ propId singleton star x0)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \ singleton) x6 \ x7 \
                 x6) x5)
             (app
               (elim_colSigma x4 (x6 \
                 setPi
                  (colSigma (setPi singleton x7 \ propId singleton star x0)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \ singleton) x6 \ x7 \
                 x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) x2 \
     propId singleton
      (app
        (elim_colSigma x2 (x3 \
          setPi
           (colSigma
             (setPi
               (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton)
          x3 \ x4 \ x3)
        (elim_colSigma
          (pair
            (setPi
              (colSigma (setPi singleton x3 \ propId singleton star star)
                x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ singleton) (x3 \
            forall
             (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall (forall singleton x6 \ propId singleton star star) x6 \
               propId singleton (app x3 x4) (app x3 x5))
            (lambda
              (colSigma (setPi singleton x3 \ propId singleton star star)
                x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ star)
            (forall_lam
              (colSigma (setPi singleton x3 \ propId singleton star star)
                x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \
              forall_lam
               (colSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall_lam (forall singleton x5 \ propId singleton star star)
                x5 \ id singleton star)) (x3 \
          colSigma
           (setPi
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
          pair
           (setPi
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \ singleton) (x5 \
           forall
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall
             (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall (forall singleton x8 \ propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7))
           (lambda
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             app x3
              (elim_colSigma x5 (x6 \
                colSigma (setPi singleton x7 \ propId singleton star star)
                 x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x6 \ x7 \
                pair (setPi singleton x8 \ propId singleton star star) (x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star)
                 (lambda singleton x8 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x0) star)
                      (fixMe "prova di symmetria")) (app x6 x8))
                 (forall_lam singleton x8 \
                   forall_lam singleton x9 \
                    forall_lam (propId singleton x8 x9) x10 \
                     forall_app (forall_app (forall_app x7 x8) x9) x10)))
           (forall_lam
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall_lam
              (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall_lam (forall singleton x7 \ propId singleton star star)
               x7 \
               forall_app
                (forall_app
                  (forall_app x4
                    (elim_colSigma x5 (x8 \
                      colSigma
                       (setPi singleton x9 \ propId singleton star star) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton star star) x8 \ x9 \
                      pair (setPi singleton x10 \ propId singleton star star)
                       (x10 \
                       forall singleton x11 \
                        forall singleton x12 \
                         forall (propId singleton x11 x12) x13 \
                          propId singleton star star)
                       (lambda singleton x10 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star) (id singleton star)) x0) star)
                            (fixMe "prova di symmetria")) (app x8 x10))
                       (forall_lam singleton x10 \
                         forall_lam singleton x11 \
                          forall_lam (propId singleton x10 x11) x12 \
                           forall_app (forall_app (forall_app x9 x10) x11)
                            x12)))
                  (elim_colSigma x6 (x8 \
                    colSigma
                     (setPi singleton x9 \ propId singleton star star) x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star) x8 \ x9 \
                    pair (setPi singleton x10 \ propId singleton star star)
                     (x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton star star)
                     (lambda singleton x10 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (id singleton star)) x0) star)
                          (fixMe "prova di symmetria")) (app x8 x10))
                     (forall_lam singleton x10 \
                       forall_lam singleton x11 \
                        forall_lam (propId singleton x10 x11) x12 \
                         forall_app (forall_app (forall_app x9 x10) x11) x12)))
                (forall_lam singleton x8 \ forall_app x7 x8)))) star) X673
 int
"
"2__[+[Begin 
isType singleton X674 int
"
"2--]-]Success  
isType singleton set int
"
"2__[+[Begin 
pi x0 \
 locDecl x0 singleton =>
  spy
   (isType
     (forall (propId singleton star x0) x1 \
       forall
        (colSigma
          (setPi
            (colSigma
              (setPi
                (colSigma (setPi singleton x2 \ propId singleton star x0)
                  x2 \
                  forall singleton x3 \
                   forall singleton x4 \
                    forall (propId singleton x3 x4) x5 \
                     propId singleton star star) x2 \ singleton) x2 \
              forall
               (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \
               forall
                (colSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall (forall singleton x5 \ propId singleton star star)
                 x5 \ propId singleton (app x2 x3) (app x2 x4)) x2 \
            singleton) x2 \
          forall
           (colSigma
             (setPi
               (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \ singleton) x3 \
             forall
              (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall (forall singleton x6 \ propId singleton star star) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x3 \
           forall
            (colSigma
              (setPi
                (colSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (colSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (forall
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               propId singleton
                (app
                  (elim_colSigma x3 (x6 \
                    setPi
                     (colSigma
                       (setPi singleton x7 \ propId singleton star x0) x7 \
                       forall singleton x8 \
                        forall singleton x9 \
                         forall (propId singleton x8 x9) x10 \
                          propId singleton star star) x7 \ singleton) x6 \
                    x7 \ x6) x5)
                (app
                  (elim_colSigma x4 (x6 \
                    setPi
                     (colSigma
                       (setPi singleton x7 \ propId singleton star x0) x7 \
                       forall singleton x8 \
                        forall singleton x9 \
                         forall (propId singleton x8 x9) x10 \
                          propId singleton star star) x7 \ singleton) x6 \
                    x7 \ x6) x5)) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        propId singleton
         (app
           (elim_colSigma x2 (x3 \
             setPi
              (colSigma
                (setPi
                  (colSigma (setPi singleton x4 \ propId singleton star x0)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \ singleton) x4 \
                forall
                 (colSigma (setPi singleton x5 \ propId singleton star x0)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall
                  (colSigma (setPi singleton x6 \ propId singleton star x0)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  forall (forall singleton x7 \ propId singleton star star)
                   x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
              singleton) x3 \ x4 \ x3)
           (elim_colSigma
             (pair
               (setPi
                 (colSigma (setPi singleton x3 \ propId singleton star star)
                   x3 \
                   forall singleton x4 \
                    forall singleton x5 \
                     forall (propId singleton x4 x5) x6 \
                      propId singleton star star) x3 \ singleton) (x3 \
               forall
                (colSigma (setPi singleton x4 \ propId singleton star star)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall
                 (colSigma (setPi singleton x5 \ propId singleton star star)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall (forall singleton x6 \ propId singleton star star)
                  x6 \ propId singleton (app x3 x4) (app x3 x5))
               (lambda
                 (colSigma (setPi singleton x3 \ propId singleton star star)
                   x3 \
                   forall singleton x4 \
                    forall singleton x5 \
                     forall (propId singleton x4 x5) x6 \
                      propId singleton star star) x3 \ star)
               (forall_lam
                 (colSigma (setPi singleton x3 \ propId singleton star star)
                   x3 \
                   forall singleton x4 \
                    forall singleton x5 \
                     forall (propId singleton x4 x5) x6 \
                      propId singleton star star) x3 \
                 forall_lam
                  (colSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \
                  forall_lam
                   (forall singleton x5 \ propId singleton star star) x5 \
                   id singleton star)) (x3 \
             colSigma
              (setPi
                (colSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (colSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
             pair
              (setPi
                (colSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) (x5 \
              forall
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (colSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7))
              (lambda
                (colSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                app x3
                 (elim_colSigma x5 (x6 \
                   colSigma (setPi singleton x7 \ propId singleton star star)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x6 \ x7 \
                   pair (setPi singleton x8 \ propId singleton star star)
                    (x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star)
                    (lambda singleton x8 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (id singleton star)) x0) star)
                         (fixMe "prova di symmetria")) (app x6 x8))
                    (forall_lam singleton x8 \
                      forall_lam singleton x9 \
                       forall_lam (propId singleton x8 x9) x10 \
                        forall_app (forall_app (forall_app x7 x8) x9) x10)))
              (forall_lam
                (colSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall_lam
                 (colSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall_lam
                  (forall singleton x7 \ propId singleton star star) x7 \
                  forall_app
                   (forall_app
                     (forall_app x4
                       (elim_colSigma x5 (x8 \
                         colSigma
                          (setPi singleton x9 \ propId singleton star star)
                          x9 \
                          forall singleton x10 \
                           forall singleton x11 \
                            forall (propId singleton x10 x11) x12 \
                             propId singleton star star) x8 \ x9 \
                         pair
                          (setPi singleton x10 \ propId singleton star star)
                          (x10 \
                          forall singleton x11 \
                           forall singleton x12 \
                            forall (propId singleton x11 x12) x13 \
                             propId singleton star star)
                          (lambda singleton x10 \
                            impl_app
                             (impl_app
                               (forall_app
                                 (forall_app
                                   (impl_app
                                     (forall_app
                                       (forall_app (k_propId singleton) star)
                                       star) (id singleton star)) x0) star)
                               (fixMe "prova di symmetria")) (app x8 x10))
                          (forall_lam singleton x10 \
                            forall_lam singleton x11 \
                             forall_lam (propId singleton x10 x11) x12 \
                              forall_app (forall_app (forall_app x9 x10) x11)
                               x12)))
                     (elim_colSigma x6 (x8 \
                       colSigma
                        (setPi singleton x9 \ propId singleton star star)
                        x9 \
                        forall singleton x10 \
                         forall singleton x11 \
                          forall (propId singleton x10 x11) x12 \
                           propId singleton star star) x8 \ x9 \
                       pair
                        (setPi singleton x10 \ propId singleton star star)
                        (x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star)
                        (lambda singleton x10 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star) (id singleton star)) x0) star)
                             (fixMe "prova di symmetria")) (app x8 x10))
                        (forall_lam singleton x10 \
                          forall_lam singleton x11 \
                           forall_lam (propId singleton x10 x11) x12 \
                            forall_app (forall_app (forall_app x9 x10) x11)
                             x12)))
                   (forall_lam singleton x8 \ forall_app x7 x8)))) star) X675
     int)
"
"3___[+[Begin 
isType
 (forall (propId singleton star x0) x1 \
   forall
    (colSigma
      (setPi
        (colSigma
          (setPi
            (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
              forall singleton x3 \
               forall singleton x4 \
                forall (propId singleton x3 x4) x5 \
                 propId singleton star star) x2 \ singleton) x2 \
          forall
           (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \
           forall
            (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \
            forall (forall singleton x5 \ propId singleton star star) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
      forall
       (colSigma
         (setPi
           (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \ singleton) x3 \
         forall
          (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \
          forall
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall (forall singleton x6 \ propId singleton star star) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (colSigma
          (setPi
            (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ singleton) x4 \
          forall
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall (forall singleton x7 \ propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           propId singleton
            (app
              (elim_colSigma x3 (x6 \
                setPi
                 (colSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \ singleton) x6 \ x7 \
                x6) x5)
            (app
              (elim_colSigma x4 (x6 \
                setPi
                 (colSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \ singleton) x6 \ x7 \
                x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) x2 \
    propId singleton
     (app
       (elim_colSigma x2 (x3 \
         setPi
          (colSigma
            (setPi
              (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ singleton) x4 \
            forall
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall
              (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall (forall singleton x7 \ propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
         x4 \ x3)
       (elim_colSigma
         (pair
           (setPi
             (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton star star) x3 \ singleton) (x3 \
           forall
            (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \
            forall
             (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall (forall singleton x6 \ propId singleton star star) x6 \
              propId singleton (app x3 x4) (app x3 x5))
           (lambda
             (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton star star) x3 \ star)
           (forall_lam
             (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton star star) x3 \
             forall_lam
              (colSigma (setPi singleton x4 \ propId singleton star star)
                x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \
              forall_lam (forall singleton x5 \ propId singleton star star)
               x5 \ id singleton star)) (x3 \
         colSigma
          (setPi
            (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ singleton) x4 \
          forall
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall (forall singleton x7 \ propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
         pair
          (setPi
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \ singleton) (x5 \
          forall
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall
            (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall (forall singleton x8 \ propId singleton star star) x8 \
             propId singleton (app x5 x6) (app x5 x7))
          (lambda
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            app x3
             (elim_colSigma x5 (x6 \
               colSigma (setPi singleton x7 \ propId singleton star star)
                x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x6 \ x7 \
               pair (setPi singleton x8 \ propId singleton star star) (x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star)
                (lambda singleton x8 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x6 x8))
                (forall_lam singleton x8 \
                  forall_lam singleton x9 \
                   forall_lam (propId singleton x8 x9) x10 \
                    forall_app (forall_app (forall_app x7 x8) x9) x10)))
          (forall_lam
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall_lam
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall_lam (forall singleton x7 \ propId singleton star star)
              x7 \
              forall_app
               (forall_app
                 (forall_app x4
                   (elim_colSigma x5 (x8 \
                     colSigma
                      (setPi singleton x9 \ propId singleton star star) x9 \
                      forall singleton x10 \
                       forall singleton x11 \
                        forall (propId singleton x10 x11) x12 \
                         propId singleton star star) x8 \ x9 \
                     pair (setPi singleton x10 \ propId singleton star star)
                      (x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star)
                      (lambda singleton x10 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star) (id singleton star)) x0) star)
                           (fixMe "prova di symmetria")) (app x8 x10))
                      (forall_lam singleton x10 \
                        forall_lam singleton x11 \
                         forall_lam (propId singleton x10 x11) x12 \
                          forall_app (forall_app (forall_app x9 x10) x11) x12)))
                 (elim_colSigma x6 (x8 \
                   colSigma (setPi singleton x9 \ propId singleton star star)
                    x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton star star) x8 \ x9 \
                   pair (setPi singleton x10 \ propId singleton star star)
                    (x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton star star)
                    (lambda singleton x10 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (id singleton star)) x0) star)
                         (fixMe "prova di symmetria")) (app x8 x10))
                    (forall_lam singleton x10 \
                      forall_lam singleton x11 \
                       forall_lam (propId singleton x10 x11) x12 \
                        forall_app (forall_app (forall_app x9 x10) x11) x12)))
               (forall_lam singleton x8 \ forall_app x7 x8)))) star) X675 int
"
"4____[+[Begin 
isType (propId singleton star x0) X676^1 int
"
"5_____[+[Begin 
of star X677^1 int
"
"5-----]-]Success  
of star singleton int
"
"5_____[+[Begin 
conv singleton singleton
"
"5-----]-]Success  
conv singleton singleton
"
"5_____[+[Begin 
of x0 X678^1 int
"
"5-----]-]Success  
of x0 singleton int
"
"5_____[+[Begin 
conv singleton singleton
"
"5-----]-]Success  
conv singleton singleton
"
"5_____[+[Begin 
(pts_leq set set),
(X676^1 = props)
"
"5-----]-]Success  
(pts_leq set set),
(props = props)
"
"4----]-]Success  
isType (propId singleton star x0) props int
"
"4____[+[Begin 
pi x1 \
 locDecl x1 (propId singleton star x0) =>
  spy
   (isType
     (forall
       (colSigma
         (setPi
           (colSigma
             (setPi
               (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
                 forall singleton x3 \
                  forall singleton x4 \
                   forall (propId singleton x3 x4) x5 \
                    propId singleton star star) x2 \ singleton) x2 \
             forall
              (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \
              forall
               (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall (forall singleton x5 \ propId singleton star star) x5 \
                propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton)
         x2 \
         forall
          (colSigma
            (setPi
              (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ singleton) x3 \
            forall
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall (forall singleton x6 \ propId singleton star star) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \
          forall
           (colSigma
             (setPi
               (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \
           forall
            (forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              propId singleton
               (app
                 (elim_colSigma x3 (x6 \
                   setPi
                    (colSigma (setPi singleton x7 \ propId singleton star x0)
                      x7 \
                      forall singleton x8 \
                       forall singleton x9 \
                        forall (propId singleton x8 x9) x10 \
                         propId singleton star star) x7 \ singleton) x6 \
                   x7 \ x6) x5)
               (app
                 (elim_colSigma x4 (x6 \
                   setPi
                    (colSigma (setPi singleton x7 \ propId singleton star x0)
                      x7 \
                      forall singleton x8 \
                       forall singleton x9 \
                        forall (propId singleton x8 x9) x10 \
                         propId singleton star star) x7 \ singleton) x6 \
                   x7 \ x6) x5)) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \
       propId singleton
        (app
          (elim_colSigma x2 (x3 \
            setPi
             (colSigma
               (setPi
                 (colSigma (setPi singleton x4 \ propId singleton star x0)
                   x4 \
                   forall singleton x5 \
                    forall singleton x6 \
                     forall (propId singleton x5 x6) x7 \
                      propId singleton star star) x4 \ singleton) x4 \
               forall
                (colSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall
                 (colSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall (forall singleton x7 \ propId singleton star star)
                  x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
             singleton) x3 \ x4 \ x3)
          (elim_colSigma
            (pair
              (setPi
                (colSigma (setPi singleton x3 \ propId singleton star star)
                  x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton star star) x3 \ singleton) (x3 \
              forall
               (colSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall
                (colSigma (setPi singleton x5 \ propId singleton star star)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall (forall singleton x6 \ propId singleton star star)
                 x6 \ propId singleton (app x3 x4) (app x3 x5))
              (lambda
                (colSigma (setPi singleton x3 \ propId singleton star star)
                  x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton star star) x3 \ star)
              (forall_lam
                (colSigma (setPi singleton x3 \ propId singleton star star)
                  x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton star star) x3 \
                forall_lam
                 (colSigma (setPi singleton x4 \ propId singleton star star)
                   x4 \
                   forall singleton x5 \
                    forall singleton x6 \
                     forall (propId singleton x5 x6) x7 \
                      propId singleton star star) x4 \
                 forall_lam
                  (forall singleton x5 \ propId singleton star star) x5 \
                  id singleton star)) (x3 \
            colSigma
             (setPi
               (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
            pair
             (setPi
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ singleton) (x5 \
             forall
              (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall
               (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall (forall singleton x8 \ propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7))
             (lambda
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               app x3
                (elim_colSigma x5 (x6 \
                  colSigma (setPi singleton x7 \ propId singleton star star)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x6 \ x7 \
                  pair (setPi singleton x8 \ propId singleton star star)
                   (x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star)
                   (lambda singleton x8 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (id singleton star)) x0) star)
                        (fixMe "prova di symmetria")) (app x6 x8))
                   (forall_lam singleton x8 \
                     forall_lam singleton x9 \
                      forall_lam (propId singleton x8 x9) x10 \
                       forall_app (forall_app (forall_app x7 x8) x9) x10)))
             (forall_lam
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall_lam
                (colSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall_lam (forall singleton x7 \ propId singleton star star)
                 x7 \
                 forall_app
                  (forall_app
                    (forall_app x4
                      (elim_colSigma x5 (x8 \
                        colSigma
                         (setPi singleton x9 \ propId singleton star star)
                         x9 \
                         forall singleton x10 \
                          forall singleton x11 \
                           forall (propId singleton x10 x11) x12 \
                            propId singleton star star) x8 \ x9 \
                        pair
                         (setPi singleton x10 \ propId singleton star star)
                         (x10 \
                         forall singleton x11 \
                          forall singleton x12 \
                           forall (propId singleton x11 x12) x13 \
                            propId singleton star star)
                         (lambda singleton x10 \
                           impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app (k_propId singleton) star)
                                      star) (id singleton star)) x0) star)
                              (fixMe "prova di symmetria")) (app x8 x10))
                         (forall_lam singleton x10 \
                           forall_lam singleton x11 \
                            forall_lam (propId singleton x10 x11) x12 \
                             forall_app (forall_app (forall_app x9 x10) x11)
                              x12)))
                    (elim_colSigma x6 (x8 \
                      colSigma
                       (setPi singleton x9 \ propId singleton star star) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton star star) x8 \ x9 \
                      pair (setPi singleton x10 \ propId singleton star star)
                       (x10 \
                       forall singleton x11 \
                        forall singleton x12 \
                         forall (propId singleton x11 x12) x13 \
                          propId singleton star star)
                       (lambda singleton x10 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star) (id singleton star)) x0) star)
                            (fixMe "prova di symmetria")) (app x8 x10))
                       (forall_lam singleton x10 \
                         forall_lam singleton x11 \
                          forall_lam (propId singleton x10 x11) x12 \
                           forall_app (forall_app (forall_app x9 x10) x11)
                            x12)))
                  (forall_lam singleton x8 \ forall_app x7 x8)))) star)
     X679^1 int)
"
"5_____[+[Begin 
isType
 (forall
   (colSigma
     (setPi
       (colSigma
         (setPi
           (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
             forall singleton x3 \
              forall singleton x4 \
               forall (propId singleton x3 x4) x5 \
                propId singleton star star) x2 \ singleton) x2 \
         forall
          (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \ propId singleton star star)
          x3 \
          forall
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall (forall singleton x5 \ propId singleton star star) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
     forall
      (colSigma
        (setPi
          (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \ propId singleton star star)
          x3 \ singleton) x3 \
        forall
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \
         forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall (forall singleton x6 \ propId singleton star star) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (colSigma
         (setPi
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ singleton) x4 \
         forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall (forall singleton x7 \ propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall
        (forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          propId singleton
           (app
             (elim_colSigma x3 (x6 \
               setPi
                (colSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
             x5)
           (app
             (elim_colSigma x4 (x6 \
               setPi
                (colSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
             x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) x2 \
   propId singleton
    (app
      (elim_colSigma x2 (x3 \
        setPi
         (colSigma
           (setPi
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
        x4 \ x3)
      (elim_colSigma
        (pair
          (setPi
            (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \ singleton) (x3 \
          forall
           (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall (forall singleton x6 \ propId singleton star star) x6 \
             propId singleton (app x3 x4) (app x3 x5))
          (lambda
            (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \ star)
          (forall_lam
            (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \
            forall_lam
             (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall_lam (forall singleton x5 \ propId singleton star star)
              x5 \ id singleton star)) (x3 \
        colSigma
         (setPi
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ singleton) x4 \
         forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall (forall singleton x7 \ propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
        pair
         (setPi
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \ singleton) (x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall
           (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall (forall singleton x8 \ propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7))
         (lambda
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           app x3
            (elim_colSigma x5 (x6 \
              colSigma (setPi singleton x7 \ propId singleton star star) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x6 \ x7 \
              pair (setPi singleton x8 \ propId singleton star star) (x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star)
               (lambda singleton x8 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x0) star)
                    (fixMe "prova di symmetria")) (app x6 x8))
               (forall_lam singleton x8 \
                 forall_lam singleton x9 \
                  forall_lam (propId singleton x8 x9) x10 \
                   forall_app (forall_app (forall_app x7 x8) x9) x10)))
         (forall_lam
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall_lam
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall_lam (forall singleton x7 \ propId singleton star star)
             x7 \
             forall_app
              (forall_app
                (forall_app x4
                  (elim_colSigma x5 (x8 \
                    colSigma
                     (setPi singleton x9 \ propId singleton star star) x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star) x8 \ x9 \
                    pair (setPi singleton x10 \ propId singleton star star)
                     (x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton star star)
                     (lambda singleton x10 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (id singleton star)) x0) star)
                          (fixMe "prova di symmetria")) (app x8 x10))
                     (forall_lam singleton x10 \
                       forall_lam singleton x11 \
                        forall_lam (propId singleton x10 x11) x12 \
                         forall_app (forall_app (forall_app x9 x10) x11) x12)))
                (elim_colSigma x6 (x8 \
                  colSigma (setPi singleton x9 \ propId singleton star star)
                   x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton star star) x8 \ x9 \
                  pair (setPi singleton x10 \ propId singleton star star)
                   (x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star)
                   (lambda singleton x10 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (id singleton star)) x0) star)
                        (fixMe "prova di symmetria")) (app x8 x10))
                   (forall_lam singleton x10 \
                     forall_lam singleton x11 \
                      forall_lam (propId singleton x10 x11) x12 \
                       forall_app (forall_app (forall_app x9 x10) x11) x12)))
              (forall_lam singleton x8 \ forall_app x7 x8)))) star) X679^1
 int
"
"6______[+[Begin 
isType
 (colSigma
   (setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \ propId singleton star star)
         x2 \ singleton) x2 \
       forall
        (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \ propId singleton star star)
        x3 \
        forall
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \
         forall (forall singleton x5 \ propId singleton star star) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
   forall
    (colSigma
      (setPi
        (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \ propId singleton star star)
        x3 \ singleton) x3 \
      forall
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall (forall singleton x6 \ propId singleton star star) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x3 \
    forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        propId singleton
         (app
           (elim_colSigma x3 (x6 \
             setPi
              (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
           x5)
         (app
           (elim_colSigma x4 (x6 \
             setPi
              (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
           x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) X680^2 int
"
"7_______[+[Begin 
isType
 (setPi
   (colSigma
     (setPi
       (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \ propId singleton star star)
       x2 \ singleton) x2 \
     forall
      (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \ propId singleton star star)
      x3 \
      forall
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall (forall singleton x5 \ propId singleton star star) x5 \
        propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) X681^2 int
"
"8________[+[Begin 
isType
 (setPi
   (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \ propId singleton star star) x2 \
   singleton) X682^2 int
"
"9_________[+[Begin 
isType (setPi singleton x2 \ propId singleton star x0) X683^2 int
"
"10__________[+[Begin 
of star X684^3 int
"
"10----------]-]Success  
of star singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
of x0 X685^3 int
"
"10----------]-]Success  
of x0 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"10__________[+[Begin 
(pts_leq set set),
(X686^2 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"10__________[+[Begin 
pts_fun set props X683^2
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq props set
"
"11-----------]-]Success  
pts_leq props set
"
"10----------]-]Success  
pts_fun set props set
"
"9---------]-]Success  
isType (setPi singleton x2 \ propId singleton star x0) set int
"
"9_________[+[Begin 
pi x2 \
 locDecl x2 (setPi singleton x3 \ propId singleton star x0) =>
  isType
   (forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \ propId singleton star star) X687^2
   int
"
"10__________[+[Begin 
isType singleton X688^3 int
"
"10----------]-]Success  
isType singleton set int
"
"10__________[+[Begin 
pi x3 \
 locDecl x3 singleton =>
  spy
   (isType
     (forall singleton x4 \
       forall (propId singleton x3 x4) x5 \ propId singleton star star)
     X689^3 int)
"
"11___________[+[Begin 
isType
 (forall singleton x4 \
   forall (propId singleton x3 x4) x5 \ propId singleton star star) X689^3
 int
"
"12____________[+[Begin 
isType singleton X690^4 int
"
"12------------]-]Success  
isType singleton set int
"
"12____________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType (forall (propId singleton x3 x4) x5 \ propId singleton star star)
     X691^4 int)
"
"13_____________[+[Begin 
isType (forall (propId singleton x3 x4) x5 \ propId singleton star star)
 X691^4 int
"
"14______________[+[Begin 
isType (propId singleton x3 x4) X692^5 int
"
"15_______________[+[Begin 
of x3 X693^5 int
"
"15---------------]-]Success  
of x3 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of x4 X694^5 int
"
"15---------------]-]Success  
of x4 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X692^5 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"14--------------]-]Success  
isType (propId singleton x3 x4) props int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 (propId singleton x3 x4) =>
  spy (isType (propId singleton star star) X695^5 int)
"
"15_______________[+[Begin 
isType (propId singleton star star) X695^5 int
"
"16________________[+[Begin 
of star X696^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of star X697^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X695^5 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"15---------------]-]Success  
isType (propId singleton star star) props int
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 (propId singleton x3 x4) =>
  spy (isType (propId singleton star star) props int)
"
"14______________[+[Begin 
pts_for props props X691^4
"
"14--------------]-]Success  
pts_for props props props
"
"13-------------]-]Success  
isType (forall (propId singleton x3 x4) x5 \ propId singleton star star)
 props int
"
"12------------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType (forall (propId singleton x3 x4) x5 \ propId singleton star star)
     props int)
"
"12____________[+[Begin 
pts_for set props X689^3
"
"12------------]-]Success  
pts_for set props props
"
"11-----------]-]Success  
isType
 (forall singleton x4 \
   forall (propId singleton x3 x4) x5 \ propId singleton star star) props int
"
"10----------]-]Success  
pi x3 \
 locDecl x3 singleton =>
  spy
   (isType
     (forall singleton x4 \
       forall (propId singleton x3 x4) x5 \ propId singleton star star) props
     int)
"
"10__________[+[Begin 
pts_for set props X687^2
"
"10----------]-]Success  
pts_for set props props
"
"9---------]-]Success  
pi x2 \
 locDecl x2 (setPi singleton x3 \ propId singleton star x0) =>
  isType
   (forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \ propId singleton star star) props
   int
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"9_________[+[Begin 
pts_leq props set
"
"9---------]-]Success  
pts_leq props set
"
"9_________[+[Begin 
pts_fun set set X682^2
"
"10__________[+[Begin 
pts_leq set set
"
"10----------]-]Success  
pts_leq set set
"
"10__________[+[Begin 
pts_leq set set
"
"10----------]-]Success  
pts_leq set set
"
"9---------]-]Success  
pts_fun set set set
"
"8--------]-]Success  
isType
 (setPi
   (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \ propId singleton star star) x2 \
   singleton) set int
"
"8________[+[Begin 
pi x2 \
 locDecl x2
  (setPi
    (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
      forall singleton x4 \
       forall singleton x5 \
        forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
    singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \
     forall
      (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall (forall singleton x5 \ propId singleton star star) x5 \
       propId singleton (app x2 x3) (app x2 x4)) X698^2 int
"
"9_________[+[Begin 
isType
 (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
   forall singleton x4 \
    forall singleton x5 \
     forall (propId singleton x4 x5) x6 \ propId singleton star star) X699^3
 int
"
"10__________[+[Begin 
isType (setPi singleton x3 \ propId singleton star x0) X700^3 int
"
"11___________[+[Begin 
of star X701^4 int
"
"11-----------]-]Success  
of star singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of x0 X702^4 int
"
"11-----------]-]Success  
of x0 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X703^3 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"11___________[+[Begin 
pts_fun set props X700^3
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"11-----------]-]Success  
pts_fun set props set
"
"10----------]-]Success  
isType (setPi singleton x3 \ propId singleton star x0) set int
"
"10__________[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star x0) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star) X704^3
   int
"
"11___________[+[Begin 
isType singleton X705^4 int
"
"11-----------]-]Success  
isType singleton set int
"
"11___________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X706^4 int)
"
"12____________[+[Begin 
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) X706^4
 int
"
"13_____________[+[Begin 
isType singleton X707^5 int
"
"13-------------]-]Success  
isType singleton set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X708^5 int)
"
"14______________[+[Begin 
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 X708^5 int
"
"15_______________[+[Begin 
isType (propId singleton x4 x5) X709^6 int
"
"16________________[+[Begin 
of x4 X710^6 int
"
"16----------------]-]Success  
of x4 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of x5 X711^6 int
"
"16----------------]-]Success  
of x5 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X709^6 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"15---------------]-]Success  
isType (propId singleton x4 x5) props int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) X712^6 int)
"
"16________________[+[Begin 
isType (propId singleton star star) X712^6 int
"
"17_________________[+[Begin 
of star X713^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of star X714^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X712^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16----------------]-]Success  
isType (propId singleton star star) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) props int)
"
"15_______________[+[Begin 
pts_for props props X708^5
"
"15---------------]-]Success  
pts_for props props props
"
"14--------------]-]Success  
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     props int)
"
"13_____________[+[Begin 
pts_for set props X706^4
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) props int
"
"11-----------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) props
     int)
"
"11___________[+[Begin 
pts_for set props X704^3
"
"11-----------]-]Success  
pts_for set props props
"
"10----------]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star x0) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star) props
   int
"
"10__________[+[Begin 
pts_leq set set
"
"10----------]-]Success  
pts_leq set set
"
"10__________[+[Begin 
pts_leq props set
"
"10----------]-]Success  
pts_leq props set
"
"9---------]-]Success  
isType
 (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
   forall singleton x4 \
    forall singleton x5 \
     forall (propId singleton x4 x5) x6 \ propId singleton star star) set int
"
"9_________[+[Begin 
pi x3 \
 locDecl x3
  (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall (forall singleton x5 \ propId singleton star star) x5 \
        propId singleton (app x2 x3) (app x2 x4)) X715^3 int)
"
"10__________[+[Begin 
isType
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton (app x2 x3) (app x2 x4)) X715^3 int
"
"11___________[+[Begin 
isType
 (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) X716^4
 int
"
"12____________[+[Begin 
isType (setPi singleton x4 \ propId singleton star x0) X717^4 int
"
"13_____________[+[Begin 
of star X718^5 int
"
"13-------------]-]Success  
of star singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
of x0 X719^5 int
"
"13-------------]-]Success  
of x0 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
(pts_leq set set),
(X720^4 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"13_____________[+[Begin 
pts_fun set props X717^4
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
pts_fun set props set
"
"12------------]-]Success  
isType (setPi singleton x4 \ propId singleton star x0) set int
"
"12____________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) X721^4
   int
"
"13_____________[+[Begin 
isType singleton X722^5 int
"
"13-------------]-]Success  
isType singleton set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X723^5 int)
"
"14______________[+[Begin 
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X723^5
 int
"
"15_______________[+[Begin 
isType singleton X724^6 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X725^6 int)
"
"16________________[+[Begin 
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X725^6 int
"
"17_________________[+[Begin 
isType (propId singleton x5 x6) X726^7 int
"
"18__________________[+[Begin 
of x5 X727^7 int
"
"18------------------]-]Success  
of x5 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of x6 X728^7 int
"
"18------------------]-]Success  
of x6 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X726^7 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
isType (propId singleton x5 x6) props int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) X729^7 int)
"
"18__________________[+[Begin 
isType (propId singleton star star) X729^7 int
"
"19___________________[+[Begin 
of star X730^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of star X731^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X729^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) props int)
"
"17_________________[+[Begin 
pts_for props props X725^6
"
"17-----------------]-]Success  
pts_for props props props
"
"16----------------]-]Success  
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"15_______________[+[Begin 
pts_for set props X723^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"13_____________[+[Begin 
pts_for set props X721^4
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"11-----------]-]Success  
isType
 (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) set int
"
"11___________[+[Begin 
pi x4 \
 locDecl x4
  (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x5 \ propId singleton star star) x5 \
       propId singleton (app x2 x3) (app x2 x4)) X732^4 int)
"
"12____________[+[Begin 
isType
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton (app x2 x3) (app x2 x4)) X732^4 int
"
"13_____________[+[Begin 
isType (forall singleton x5 \ propId singleton star star) X733^5 int
"
"14______________[+[Begin 
isType singleton X734^5 int
"
"14--------------]-]Success  
isType singleton set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 singleton => spy (isType (propId singleton star star) X735^5 int)
"
"15_______________[+[Begin 
isType (propId singleton star star) X735^5 int
"
"16________________[+[Begin 
of star X736^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of star X737^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X735^5 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"15---------------]-]Success  
isType (propId singleton star star) props int
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 singleton => spy (isType (propId singleton star star) props int)
"
"14______________[+[Begin 
pts_for set props X733^5
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
isType (forall singleton x5 \ propId singleton star star) props int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 (forall singleton x6 \ propId singleton star star) =>
  spy (isType (propId singleton (app x2 x3) (app x2 x4)) X738^5 int)
"
"14______________[+[Begin 
isType (propId singleton (app x2 x3) (app x2 x4)) X738^5 int
"
"15_______________[+[Begin 
of (app x2 x3) X739^6 int
"
"16________________[+[Begin 
of x2 (setPi X740^6 X741^6) int
"
"16----------------]-]Success  
of x2
 (setPi
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton) int
"
"16________________[+[Begin 
isa x3
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"17_________________[+[Begin 
of x3 X742^6 int
"
"17-----------------]-]Success  
of x3
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"17_________________[+[Begin 
conv
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"17-----------------]-]Success  
conv
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"16----------------]-]Success  
isa x3
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"15---------------]-]Success  
of (app x2 x3) singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of (app x2 x4) X743^6 int
"
"16________________[+[Begin 
of x2 (setPi X744^6 X745^6) int
"
"16----------------]-]Success  
of x2
 (setPi
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton) int
"
"16________________[+[Begin 
isa x4
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"17_________________[+[Begin 
of x4 X746^6 int
"
"17-----------------]-]Success  
of x4
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"17_________________[+[Begin 
conv
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"17-----------------]-]Success  
conv
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"16----------------]-]Success  
isa x4
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"15---------------]-]Success  
of (app x2 x4) singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X738^5 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"14--------------]-]Success  
isType (propId singleton (app x2 x3) (app x2 x4)) props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 (forall singleton x6 \ propId singleton star star) =>
  spy (isType (propId singleton (app x2 x3) (app x2 x4)) props int)
"
"13_____________[+[Begin 
pts_for props props X732^4
"
"13-------------]-]Success  
pts_for props props props
"
"12------------]-]Success  
isType
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton (app x2 x3) (app x2 x4)) props int
"
"11-----------]-]Success  
pi x4 \
 locDecl x4
  (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x5 \ propId singleton star star) x5 \
       propId singleton (app x2 x3) (app x2 x4)) props int)
"
"11___________[+[Begin 
pts_for set props X715^3
"
"11-----------]-]Success  
pts_for set props props
"
"10----------]-]Success  
isType
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton (app x2 x3) (app x2 x4)) props int
"
"9---------]-]Success  
pi x3 \
 locDecl x3
  (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall (forall singleton x5 \ propId singleton star star) x5 \
        propId singleton (app x2 x3) (app x2 x4)) props int)
"
"9_________[+[Begin 
pts_for set props X698^2
"
"9---------]-]Success  
pts_for set props props
"
"8--------]-]Success  
pi x2 \
 locDecl x2
  (setPi
    (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
      forall singleton x4 \
       forall singleton x5 \
        forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
    singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \
     forall
      (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall (forall singleton x5 \ propId singleton star star) x5 \
       propId singleton (app x2 x3) (app x2 x4)) props int
"
"8________[+[Begin 
pts_leq set set
"
"8--------]-]Success  
pts_leq set set
"
"8________[+[Begin 
pts_leq props set
"
"8--------]-]Success  
pts_leq props set
"
"8________[+[Begin 
pts_fun set set X681^2
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"8--------]-]Success  
pts_fun set set set
"
"7-------]-]Success  
isType
 (setPi
   (colSigma
     (setPi
       (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \ propId singleton star star)
       x2 \ singleton) x2 \
     forall
      (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \ propId singleton star star)
      x3 \
      forall
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall (forall singleton x5 \ propId singleton star star) x5 \
        propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) set int
"
"7_______[+[Begin 
pi x2 \
 locDecl x2
  (setPi
    (colSigma
      (setPi
        (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \ propId singleton star star)
        x3 \ singleton) x3 \
      forall
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall (forall singleton x6 \ propId singleton star star) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) =>
  isType
   (forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \ singleton) x3 \
       forall
        (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall (forall singleton x6 \ propId singleton star star) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \
     forall
      (colSigma
        (setPi
          (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         propId singleton
          (app
            (elim_colSigma x3 (x6 \
              setPi
               (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
            x5)
          (app
            (elim_colSigma x4 (x6 \
              setPi
               (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
            x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) X747^2 int
"
"8________[+[Begin 
isType
 (colSigma
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5)) X748^3 int
"
"9_________[+[Begin 
isType
 (setPi
   (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   singleton) X749^3 int
"
"10__________[+[Begin 
isType (setPi singleton x3 \ propId singleton star x0) X750^3 int
"
"11___________[+[Begin 
of star X751^4 int
"
"11-----------]-]Success  
of star singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
of x0 X752^4 int
"
"11-----------]-]Success  
of x0 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"11___________[+[Begin 
(pts_leq set set),
(X753^3 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"11___________[+[Begin 
pts_fun set props X750^3
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"11-----------]-]Success  
pts_fun set props set
"
"10----------]-]Success  
isType (setPi singleton x3 \ propId singleton star x0) set int
"
"10__________[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star x0) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star) X754^3
   int
"
"11___________[+[Begin 
isType singleton X755^4 int
"
"11-----------]-]Success  
isType singleton set int
"
"11___________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X756^4 int)
"
"12____________[+[Begin 
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) X756^4
 int
"
"13_____________[+[Begin 
isType singleton X757^5 int
"
"13-------------]-]Success  
isType singleton set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X758^5 int)
"
"14______________[+[Begin 
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 X758^5 int
"
"15_______________[+[Begin 
isType (propId singleton x4 x5) X759^6 int
"
"16________________[+[Begin 
of x4 X760^6 int
"
"16----------------]-]Success  
of x4 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of x5 X761^6 int
"
"16----------------]-]Success  
of x5 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X759^6 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"15---------------]-]Success  
isType (propId singleton x4 x5) props int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) X762^6 int)
"
"16________________[+[Begin 
isType (propId singleton star star) X762^6 int
"
"17_________________[+[Begin 
of star X763^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of star X764^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X762^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16----------------]-]Success  
isType (propId singleton star star) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) props int)
"
"15_______________[+[Begin 
pts_for props props X758^5
"
"15---------------]-]Success  
pts_for props props props
"
"14--------------]-]Success  
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     props int)
"
"13_____________[+[Begin 
pts_for set props X756^4
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) props int
"
"11-----------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) props
     int)
"
"11___________[+[Begin 
pts_for set props X754^3
"
"11-----------]-]Success  
pts_for set props props
"
"10----------]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star x0) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star) props
   int
"
"10__________[+[Begin 
pts_leq set set
"
"10----------]-]Success  
pts_leq set set
"
"10__________[+[Begin 
pts_leq props set
"
"10----------]-]Success  
pts_leq props set
"
"10__________[+[Begin 
pts_fun set set X749^3
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"10----------]-]Success  
pts_fun set set set
"
"9---------]-]Success  
isType
 (setPi
   (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   singleton) set int
"
"9_________[+[Begin 
pi x3 \
 locDecl x3
  (setPi
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \
     forall
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall (forall singleton x6 \ propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) X765^3 int
"
"10__________[+[Begin 
isType
 (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) X766^4
 int
"
"11___________[+[Begin 
isType (setPi singleton x4 \ propId singleton star x0) X767^4 int
"
"12____________[+[Begin 
of star X768^5 int
"
"12------------]-]Success  
of star singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
of x0 X769^5 int
"
"12------------]-]Success  
of x0 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
(pts_leq set set),
(X770^4 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"12____________[+[Begin 
pts_fun set props X767^4
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"12------------]-]Success  
pts_fun set props set
"
"11-----------]-]Success  
isType (setPi singleton x4 \ propId singleton star x0) set int
"
"11___________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) X771^4
   int
"
"12____________[+[Begin 
isType singleton X772^5 int
"
"12------------]-]Success  
isType singleton set int
"
"12____________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X773^5 int)
"
"13_____________[+[Begin 
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X773^5
 int
"
"14______________[+[Begin 
isType singleton X774^6 int
"
"14--------------]-]Success  
isType singleton set int
"
"14______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X775^6 int)
"
"15_______________[+[Begin 
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X775^6 int
"
"16________________[+[Begin 
isType (propId singleton x5 x6) X776^7 int
"
"17_________________[+[Begin 
of x5 X777^7 int
"
"17-----------------]-]Success  
of x5 singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of x6 X778^7 int
"
"17-----------------]-]Success  
of x6 singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X776^7 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16----------------]-]Success  
isType (propId singleton x5 x6) props int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) X779^7 int)
"
"17_________________[+[Begin 
isType (propId singleton star star) X779^7 int
"
"18__________________[+[Begin 
of star X780^8 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of star X781^8 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X779^7 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
isType (propId singleton star star) props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) props int)
"
"16________________[+[Begin 
pts_for props props X775^6
"
"16----------------]-]Success  
pts_for props props props
"
"15---------------]-]Success  
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"14--------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"14______________[+[Begin 
pts_for set props X773^5
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"12------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"12____________[+[Begin 
pts_for set props X771^4
"
"12------------]-]Success  
pts_for set props props
"
"11-----------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq props set
"
"11-----------]-]Success  
pts_leq props set
"
"10----------]-]Success  
isType
 (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) set int
"
"10__________[+[Begin 
pi x4 \
 locDecl x4
  (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5)) X782^4 int)
"
"11___________[+[Begin 
isType
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton (app x3 x4) (app x3 x5)) X782^4 int
"
"12____________[+[Begin 
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) X783^5
 int
"
"13_____________[+[Begin 
isType (setPi singleton x5 \ propId singleton star x0) X784^5 int
"
"14______________[+[Begin 
of star X785^6 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of x0 X786^6 int
"
"14--------------]-]Success  
of x0 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X787^5 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"14______________[+[Begin 
pts_fun set props X784^5
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
isType (setPi singleton x5 \ propId singleton star x0) set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) X788^5
   int
"
"14______________[+[Begin 
isType singleton X789^6 int
"
"14--------------]-]Success  
isType singleton set int
"
"14______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X790^6 int)
"
"15_______________[+[Begin 
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X790^6
 int
"
"16________________[+[Begin 
isType singleton X791^7 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X792^7 int)
"
"17_________________[+[Begin 
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X792^7 int
"
"18__________________[+[Begin 
isType (propId singleton x6 x7) X793^8 int
"
"19___________________[+[Begin 
of x6 X794^8 int
"
"19-------------------]-]Success  
of x6 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x7 X795^8 int
"
"19-------------------]-]Success  
of x7 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X793^8 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton x6 x7) props int
"
"18__________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) X796^8 int)
"
"19___________________[+[Begin 
isType (propId singleton star star) X796^8 int
"
"20____________________[+[Begin 
of star X797^9 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X798^9 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X796^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for props props X792^7
"
"18------------------]-]Success  
pts_for props props props
"
"17-----------------]-]Success  
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"16________________[+[Begin 
pts_for set props X790^6
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"14--------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"14______________[+[Begin 
pts_for set props X788^5
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"12------------]-]Success  
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) set int
"
"12____________[+[Begin 
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x6 \ propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) X799^5 int)
"
"13_____________[+[Begin 
isType
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton (app x3 x4) (app x3 x5)) X799^5 int
"
"14______________[+[Begin 
isType (forall singleton x6 \ propId singleton star star) X800^6 int
"
"15_______________[+[Begin 
isType singleton X801^6 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 singleton => spy (isType (propId singleton star star) X802^6 int)
"
"16________________[+[Begin 
isType (propId singleton star star) X802^6 int
"
"17_________________[+[Begin 
of star X803^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of star X804^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X802^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16----------------]-]Success  
isType (propId singleton star star) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 singleton => spy (isType (propId singleton star star) props int)
"
"15_______________[+[Begin 
pts_for set props X800^6
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
isType (forall singleton x6 \ propId singleton star star) props int
"
"14______________[+[Begin 
pi x6 \
 locDecl x6 (forall singleton x7 \ propId singleton star star) =>
  spy (isType (propId singleton (app x3 x4) (app x3 x5)) X805^6 int)
"
"15_______________[+[Begin 
isType (propId singleton (app x3 x4) (app x3 x5)) X805^6 int
"
"16________________[+[Begin 
of (app x3 x4) X806^7 int
"
"17_________________[+[Begin 
of x3 (setPi X807^7 X808^7) int
"
"17-----------------]-]Success  
of x3
 (setPi
   (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   singleton) int
"
"17_________________[+[Begin 
isa x4
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"18__________________[+[Begin 
of x4 X809^7 int
"
"18------------------]-]Success  
of x4
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"18__________________[+[Begin 
conv
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"18------------------]-]Success  
conv
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"17-----------------]-]Success  
isa x4
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"16----------------]-]Success  
of (app x3 x4) singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of (app x3 x5) X810^7 int
"
"17_________________[+[Begin 
of x3 (setPi X811^7 X812^7) int
"
"17-----------------]-]Success  
of x3
 (setPi
   (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) x7 \
   singleton) int
"
"17_________________[+[Begin 
isa x5
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"18__________________[+[Begin 
of x5 X813^7 int
"
"18------------------]-]Success  
of x5
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"18__________________[+[Begin 
conv
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"18------------------]-]Success  
conv
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"17-----------------]-]Success  
isa x5
 (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
   forall singleton x8 \
    forall singleton x9 \
     forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"16----------------]-]Success  
of (app x3 x5) singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X805^6 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"15---------------]-]Success  
isType (propId singleton (app x3 x4) (app x3 x5)) props int
"
"14--------------]-]Success  
pi x6 \
 locDecl x6 (forall singleton x7 \ propId singleton star star) =>
  spy (isType (propId singleton (app x3 x4) (app x3 x5)) props int)
"
"14______________[+[Begin 
pts_for props props X799^5
"
"14--------------]-]Success  
pts_for props props props
"
"13-------------]-]Success  
isType
 (forall (forall singleton x6 \ propId singleton star star) x6 \
   propId singleton (app x3 x4) (app x3 x5)) props int
"
"12------------]-]Success  
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x6 \ propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) props int)
"
"12____________[+[Begin 
pts_for set props X782^4
"
"12------------]-]Success  
pts_for set props props
"
"11-----------]-]Success  
isType
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall (forall singleton x6 \ propId singleton star star) x6 \
    propId singleton (app x3 x4) (app x3 x5)) props int
"
"10----------]-]Success  
pi x4 \
 locDecl x4
  (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5)) props int)
"
"10__________[+[Begin 
pts_for set props X765^3
"
"10----------]-]Success  
pts_for set props props
"
"9---------]-]Success  
pi x3 \
 locDecl x3
  (setPi
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \
     forall
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall (forall singleton x6 \ propId singleton star star) x6 \
       propId singleton (app x3 x4) (app x3 x5)) props int
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"9_________[+[Begin 
pts_leq props set
"
"9---------]-]Success  
pts_leq props set
"
"8--------]-]Success  
isType
 (colSigma
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5)) set int
"
"8________[+[Begin 
pi x3 \
 locDecl x3
  (colSigma
    (setPi
      (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \ singleton) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) =>
  spy
   (isType
     (forall
       (colSigma
         (setPi
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ singleton) x4 \
         forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall (forall singleton x7 \ propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall
        (forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          propId singleton
           (app
             (elim_colSigma x3 (x6 \
               setPi
                (colSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
             x5)
           (app
             (elim_colSigma x4 (x6 \
               setPi
                (colSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
             x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) X814^3 int)
"
"9_________[+[Begin 
isType
 (forall
   (colSigma
     (setPi
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ singleton) x4 \
     forall
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \
   forall
    (forall
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      propId singleton
       (app
         (elim_colSigma x3 (x6 \
           setPi
            (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5)
       (app
         (elim_colSigma x4 (x6 \
           setPi
            (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5))
    x5 \ propId singleton (app x2 x3) (app x2 x4)) X814^3 int
"
"10__________[+[Begin 
isType
 (colSigma
   (setPi
     (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6)) X815^4 int
"
"11___________[+[Begin 
isType
 (setPi
   (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton) X816^4 int
"
"12____________[+[Begin 
isType (setPi singleton x4 \ propId singleton star x0) X817^4 int
"
"13_____________[+[Begin 
of star X818^5 int
"
"13-------------]-]Success  
of star singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
of x0 X819^5 int
"
"13-------------]-]Success  
of x0 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
(pts_leq set set),
(X820^4 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"13_____________[+[Begin 
pts_fun set props X817^4
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
pts_fun set props set
"
"12------------]-]Success  
isType (setPi singleton x4 \ propId singleton star x0) set int
"
"12____________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) X821^4
   int
"
"13_____________[+[Begin 
isType singleton X822^5 int
"
"13-------------]-]Success  
isType singleton set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X823^5 int)
"
"14______________[+[Begin 
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X823^5
 int
"
"15_______________[+[Begin 
isType singleton X824^6 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X825^6 int)
"
"16________________[+[Begin 
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X825^6 int
"
"17_________________[+[Begin 
isType (propId singleton x5 x6) X826^7 int
"
"18__________________[+[Begin 
of x5 X827^7 int
"
"18------------------]-]Success  
of x5 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of x6 X828^7 int
"
"18------------------]-]Success  
of x6 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X826^7 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
isType (propId singleton x5 x6) props int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) X829^7 int)
"
"18__________________[+[Begin 
isType (propId singleton star star) X829^7 int
"
"19___________________[+[Begin 
of star X830^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of star X831^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X829^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) props int)
"
"17_________________[+[Begin 
pts_for props props X825^6
"
"17-----------------]-]Success  
pts_for props props props
"
"16----------------]-]Success  
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"15_______________[+[Begin 
pts_for set props X823^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"13_____________[+[Begin 
pts_for set props X821^4
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"12____________[+[Begin 
pts_fun set set X816^4
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"12------------]-]Success  
pts_fun set set set
"
"11-----------]-]Success  
isType
 (setPi
   (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton) set int
"
"11___________[+[Begin 
pi x4 \
 locDecl x4
  (setPi
    (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X832^4 int
"
"12____________[+[Begin 
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) X833^5
 int
"
"13_____________[+[Begin 
isType (setPi singleton x5 \ propId singleton star x0) X834^5 int
"
"14______________[+[Begin 
of star X835^6 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of x0 X836^6 int
"
"14--------------]-]Success  
of x0 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X837^5 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"14______________[+[Begin 
pts_fun set props X834^5
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
isType (setPi singleton x5 \ propId singleton star x0) set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) X838^5
   int
"
"14______________[+[Begin 
isType singleton X839^6 int
"
"14--------------]-]Success  
isType singleton set int
"
"14______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X840^6 int)
"
"15_______________[+[Begin 
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X840^6
 int
"
"16________________[+[Begin 
isType singleton X841^7 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X842^7 int)
"
"17_________________[+[Begin 
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X842^7 int
"
"18__________________[+[Begin 
isType (propId singleton x6 x7) X843^8 int
"
"19___________________[+[Begin 
of x6 X844^8 int
"
"19-------------------]-]Success  
of x6 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x7 X845^8 int
"
"19-------------------]-]Success  
of x7 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X843^8 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton x6 x7) props int
"
"18__________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) X846^8 int)
"
"19___________________[+[Begin 
isType (propId singleton star star) X846^8 int
"
"20____________________[+[Begin 
of star X847^9 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X848^9 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X846^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for props props X842^7
"
"18------------------]-]Success  
pts_for props props props
"
"17-----------------]-]Success  
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"16________________[+[Begin 
pts_for set props X840^6
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"14--------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"14______________[+[Begin 
pts_for set props X838^5
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"12------------]-]Success  
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) set int
"
"12____________[+[Begin 
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) X849^5 int)
"
"13_____________[+[Begin 
isType
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) X849^5 int
"
"14______________[+[Begin 
isType
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X850^6
 int
"
"15_______________[+[Begin 
isType (setPi singleton x6 \ propId singleton star x0) X851^6 int
"
"16________________[+[Begin 
of star X852^7 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of x0 X853^7 int
"
"16----------------]-]Success  
of x0 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X854^6 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16________________[+[Begin 
pts_fun set props X851^6
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
pts_fun set props set
"
"15---------------]-]Success  
isType (setPi singleton x6 \ propId singleton star x0) set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) X855^6
   int
"
"16________________[+[Begin 
isType singleton X856^7 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X857^7 int)
"
"17_________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X857^7
 int
"
"18__________________[+[Begin 
isType singleton X858^8 int
"
"18------------------]-]Success  
isType singleton set int
"
"18__________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X859^8 int)
"
"19___________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X859^8 int
"
"20____________________[+[Begin 
isType (propId singleton x7 x8) X860^9 int
"
"21_____________________[+[Begin 
of x7 X861^9 int
"
"21---------------------]-]Success  
of x7 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x8 X862^9 int
"
"21---------------------]-]Success  
of x8 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X860^9 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton x7 x8) props int
"
"20____________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X863^9 int)
"
"21_____________________[+[Begin 
isType (propId singleton star star) X863^9 int
"
"22______________________[+[Begin 
of star X864^10 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X865^10 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X863^9 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
isType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for props props X859^8
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"18------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"18__________________[+[Begin 
pts_for set props X857^7
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"16________________[+[Begin 
pts_for set props X855^6
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
isType
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) set int
"
"14______________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X866^6 int)
"
"15_______________[+[Begin 
isType
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) X866^6 int
"
"16________________[+[Begin 
isType (forall singleton x7 \ propId singleton star star) X867^7 int
"
"17_________________[+[Begin 
isType singleton X868^7 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton => spy (isType (propId singleton star star) X869^7 int)
"
"18__________________[+[Begin 
isType (propId singleton star star) X869^7 int
"
"19___________________[+[Begin 
of star X870^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of star X871^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X869^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton => spy (isType (propId singleton star star) props int)
"
"17_________________[+[Begin 
pts_for set props X867^7
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
isType (forall singleton x7 \ propId singleton star star) props int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 (forall singleton x8 \ propId singleton star star) =>
  spy (isType (propId singleton (app x4 x5) (app x4 x6)) X872^7 int)
"
"17_________________[+[Begin 
isType (propId singleton (app x4 x5) (app x4 x6)) X872^7 int
"
"18__________________[+[Begin 
of (app x4 x5) X873^8 int
"
"19___________________[+[Begin 
of x4 (setPi X874^8 X875^8) int
"
"19-------------------]-]Success  
of x4
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"19___________________[+[Begin 
isa x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
of x5 X876^8 int
"
"20--------------------]-]Success  
of x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"19-------------------]-]Success  
isa x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"18------------------]-]Success  
of (app x4 x5) singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of (app x4 x6) X877^8 int
"
"19___________________[+[Begin 
of x4 (setPi X878^8 X879^8) int
"
"19-------------------]-]Success  
of x4
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"19___________________[+[Begin 
isa x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
of x6 X880^8 int
"
"20--------------------]-]Success  
of x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"19-------------------]-]Success  
isa x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"18------------------]-]Success  
of (app x4 x6) singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X872^7 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
isType (propId singleton (app x4 x5) (app x4 x6)) props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 (forall singleton x8 \ propId singleton star star) =>
  spy (isType (propId singleton (app x4 x5) (app x4 x6)) props int)
"
"16________________[+[Begin 
pts_for props props X866^6
"
"16----------------]-]Success  
pts_for props props props
"
"15---------------]-]Success  
isType
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) props int
"
"14--------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int)
"
"14______________[+[Begin 
pts_for set props X849^5
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
isType
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) props int
"
"12------------]-]Success  
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) props int)
"
"12____________[+[Begin 
pts_for set props X832^4
"
"12------------]-]Success  
pts_for set props props
"
"11-----------]-]Success  
pi x4 \
 locDecl x4
  (setPi
    (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq props set
"
"11-----------]-]Success  
pts_leq props set
"
"10----------]-]Success  
isType
 (colSigma
   (setPi
     (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \ propId singleton star star)
     x4 \ singleton) x4 \
   forall
    (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    forall
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall (forall singleton x7 \ propId singleton star star) x7 \
      propId singleton (app x4 x5) (app x4 x6)) set int
"
"10__________[+[Begin 
pi x4 \
 locDecl x4
  (colSigma
    (setPi
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) x5 \
    forall
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  spy
   (isType
     (forall
       (forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         propId singleton
          (app
            (elim_colSigma x3 (x6 \
              setPi
               (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
            x5)
          (app
            (elim_colSigma x4 (x6 \
              setPi
               (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
            x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) X881^4 int)
"
"11___________[+[Begin 
isType
 (forall
   (forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     propId singleton
      (app
        (elim_colSigma x3 (x6 \
          setPi
           (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5)
      (app
        (elim_colSigma x4 (x6 \
          setPi
           (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5))
   x5 \ propId singleton (app x2 x3) (app x2 x4)) X881^4 int
"
"12____________[+[Begin 
isType
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   propId singleton
    (app
      (elim_colSigma x3 (x6 \
        setPi
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ singleton) x6 \ x7 \ x6) x5)
    (app
      (elim_colSigma x4 (x6 \
        setPi
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ singleton) x6 \ x7 \ x6) x5)) X882^5 int
"
"13_____________[+[Begin 
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) X883^5
 int
"
"14______________[+[Begin 
isType (setPi singleton x5 \ propId singleton star x0) X884^5 int
"
"15_______________[+[Begin 
of star X885^6 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of x0 X886^6 int
"
"15---------------]-]Success  
of x0 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X887^5 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"15_______________[+[Begin 
pts_fun set props X884^5
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
pts_fun set props set
"
"14--------------]-]Success  
isType (setPi singleton x5 \ propId singleton star x0) set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) X888^5
   int
"
"15_______________[+[Begin 
isType singleton X889^6 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X890^6 int)
"
"16________________[+[Begin 
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X890^6
 int
"
"17_________________[+[Begin 
isType singleton X891^7 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X892^7 int)
"
"18__________________[+[Begin 
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X892^7 int
"
"19___________________[+[Begin 
isType (propId singleton x6 x7) X893^8 int
"
"20____________________[+[Begin 
of x6 X894^8 int
"
"20--------------------]-]Success  
of x6 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of x7 X895^8 int
"
"20--------------------]-]Success  
of x7 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X893^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton x6 x7) props int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) X896^8 int)
"
"20____________________[+[Begin 
isType (propId singleton star star) X896^8 int
"
"21_____________________[+[Begin 
of star X897^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X898^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X896^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton star star) props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) props int)
"
"19___________________[+[Begin 
pts_for props props X892^7
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"17_________________[+[Begin 
pts_for set props X890^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"15_______________[+[Begin 
pts_for set props X888^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (propId singleton
       (app
         (elim_colSigma x3 (x6 \
           setPi
            (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5)
       (app
         (elim_colSigma x4 (x6 \
           setPi
            (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5))
     X899^5 int)
"
"14______________[+[Begin 
isType
 (propId singleton
   (app
     (elim_colSigma x3 (x6 \
       setPi
        (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ singleton) x6 \ x7 \ x6) x5)
   (app
     (elim_colSigma x4 (x6 \
       setPi
        (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ singleton) x6 \ x7 \ x6) x5)) X899^5 int
"
"15_______________[+[Begin 
of
 (app
   (elim_colSigma x3 (x6 \
     setPi
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x6 \ x7 \ x6) x5) X900^6 int
"
"16________________[+[Begin 
of
 (elim_colSigma x3 (x6 \
   setPi
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \ singleton) x6 \ x7 \ x6) (setPi X901^6 X902^6) int
"
"17_________________[+[Begin 
of x3 (colSigma X903^6 X904^6) int
"
"17-----------------]-]Success  
of x3
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8)) int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma
    (setPi
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall
      (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall (forall singleton x10 \ propId singleton star star) x10 \
       propId singleton (app x7 x8) (app x7 x9)) =>
  isType
   (setPi
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) _ int
"
"18__________________[+[Begin 
isType (setPi singleton x7 \ propId singleton star x0) X905^7 int
"
"19___________________[+[Begin 
of star X906^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x0 X907^8 int
"
"19-------------------]-]Success  
of x0 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X908^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19___________________[+[Begin 
pts_fun set props X905^7
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"19-------------------]-]Success  
pts_fun set props set
"
"18------------------]-]Success  
isType (setPi singleton x7 \ propId singleton star x0) set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  isType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X909^7 int
"
"19___________________[+[Begin 
isType singleton X910^8 int
"
"19-------------------]-]Success  
isType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X911^8 int)
"
"20____________________[+[Begin 
isType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X911^8
 int
"
"21_____________________[+[Begin 
isType singleton X912^9 int
"
"21---------------------]-]Success  
isType singleton set int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X913^9 int)
"
"22______________________[+[Begin 
isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X913^9 int
"
"23_______________________[+[Begin 
isType (propId singleton x8 x9) X914^10 int
"
"24________________________[+[Begin 
of x8 X915^10 int
"
"24------------------------]-]Success  
of x8 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of x9 X916^10 int
"
"24------------------------]-]Success  
of x9 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X914^10 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
isType (propId singleton x8 x9) props int
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (isType (propId singleton star star) X917^10 int)
"
"24________________________[+[Begin 
isType (propId singleton star star) X917^10 int
"
"25_________________________[+[Begin 
of star X918^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X919^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X917^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
isType (propId singleton star star) props int
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (isType (propId singleton star star) props int)
"
"23_______________________[+[Begin 
pts_for props props X913^9
"
"23-----------------------]-]Success  
pts_for props props props
"
"22----------------------]-]Success  
isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X911^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
isType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X909^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  isType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   int
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"18__________________[+[Begin 
pts_fun set set X920^7
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"18------------------]-]Success  
pts_fun set set set
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma
    (setPi
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall
      (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall (forall singleton x10 \ propId singleton star star) x10 \
       propId singleton (app x7 x8) (app x7 x9)) =>
  isType
   (setPi
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) _ int
"
"17_________________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6
   (setPi
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) =>
   locDecl x7
    (forall
      (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall (forall singleton x10 \ propId singleton star star) x10 \
        propId singleton (app x6 x8) (app x6 x9)) =>
    isa x6
     (setPi
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ singleton) int
"
"18__________________[+[Begin 
of x6 X921^8 int
"
"18------------------]-]Success  
of x6
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"18__________________[+[Begin 
conv
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton)
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton)
"
"18------------------]-]Success  
conv
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton)
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton)
"
"17-----------------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6
   (setPi
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) =>
   locDecl x7
    (forall
      (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall (forall singleton x10 \ propId singleton star star) x10 \
        propId singleton (app x6 x8) (app x6 x9)) =>
    isa x6
     (setPi
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ singleton) int
"
"16----------------]-]Success  
of
 (elim_colSigma x3 (x6 \
   setPi
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \ singleton) x6 \ x7 \ x6)
 (setPi
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton) int
"
"16________________[+[Begin 
isa x5
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"17_________________[+[Begin 
of x5 X922^6 int
"
"17-----------------]-]Success  
of x5
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"17_________________[+[Begin 
conv
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"17-----------------]-]Success  
conv
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"16----------------]-]Success  
isa x5
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"15---------------]-]Success  
of
 (app
   (elim_colSigma x3 (x6 \
     setPi
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x6 \ x7 \ x6) x5) singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of
 (app
   (elim_colSigma x4 (x6 \
     setPi
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x6 \ x7 \ x6) x5) X923^6 int
"
"16________________[+[Begin 
of
 (elim_colSigma x4 (x6 \
   setPi
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \ singleton) x6 \ x7 \ x6) (setPi X924^6 X925^6) int
"
"17_________________[+[Begin 
of x4 (colSigma X926^6 X927^6) int
"
"17-----------------]-]Success  
of x4
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8)) int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma
    (setPi
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall
      (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall (forall singleton x10 \ propId singleton star star) x10 \
       propId singleton (app x7 x8) (app x7 x9)) =>
  isType
   (setPi
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) _ int
"
"18__________________[+[Begin 
isType (setPi singleton x7 \ propId singleton star x0) X928^7 int
"
"19___________________[+[Begin 
of star X929^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x0 X930^8 int
"
"19-------------------]-]Success  
of x0 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X931^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19___________________[+[Begin 
pts_fun set props X928^7
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"19-------------------]-]Success  
pts_fun set props set
"
"18------------------]-]Success  
isType (setPi singleton x7 \ propId singleton star x0) set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  isType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X932^7 int
"
"19___________________[+[Begin 
isType singleton X933^8 int
"
"19-------------------]-]Success  
isType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X934^8 int)
"
"20____________________[+[Begin 
isType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X934^8
 int
"
"21_____________________[+[Begin 
isType singleton X935^9 int
"
"21---------------------]-]Success  
isType singleton set int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X936^9 int)
"
"22______________________[+[Begin 
isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X936^9 int
"
"23_______________________[+[Begin 
isType (propId singleton x8 x9) X937^10 int
"
"24________________________[+[Begin 
of x8 X938^10 int
"
"24------------------------]-]Success  
of x8 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of x9 X939^10 int
"
"24------------------------]-]Success  
of x9 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X937^10 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23-----------------------]-]Success  
isType (propId singleton x8 x9) props int
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (isType (propId singleton star star) X940^10 int)
"
"24________________________[+[Begin 
isType (propId singleton star star) X940^10 int
"
"25_________________________[+[Begin 
of star X941^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X942^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X940^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
isType (propId singleton star star) props int
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (isType (propId singleton star star) props int)
"
"23_______________________[+[Begin 
pts_for props props X936^9
"
"23-----------------------]-]Success  
pts_for props props props
"
"22----------------------]-]Success  
isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X934^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
isType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X932^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star x0) =>
  isType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   int
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"18__________________[+[Begin 
pts_fun set set X943^7
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"18------------------]-]Success  
pts_fun set set set
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma
    (setPi
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall
      (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
      x9 \
      forall (forall singleton x10 \ propId singleton star star) x10 \
       propId singleton (app x7 x8) (app x7 x9)) =>
  isType
   (setPi
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \ singleton) _ int
"
"17_________________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6
   (setPi
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) =>
   locDecl x7
    (forall
      (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall (forall singleton x10 \ propId singleton star star) x10 \
        propId singleton (app x6 x8) (app x6 x9)) =>
    isa x6
     (setPi
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ singleton) int
"
"18__________________[+[Begin 
of x6 X944^8 int
"
"18------------------]-]Success  
of x6
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"18__________________[+[Begin 
conv
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton)
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton)
"
"18------------------]-]Success  
conv
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton)
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton)
"
"17-----------------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6
   (setPi
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \ singleton) =>
   locDecl x7
    (forall
      (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
      x8 \
      forall
       (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x9 \
       forall (forall singleton x10 \ propId singleton star star) x10 \
        propId singleton (app x6 x8) (app x6 x9)) =>
    isa x6
     (setPi
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \ singleton) int
"
"16----------------]-]Success  
of
 (elim_colSigma x4 (x6 \
   setPi
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \ singleton) x6 \ x7 \ x6)
 (setPi
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton) int
"
"16________________[+[Begin 
isa x5
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"17_________________[+[Begin 
of x5 X945^6 int
"
"17-----------------]-]Success  
of x5
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"17_________________[+[Begin 
conv
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"17-----------------]-]Success  
conv
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"16----------------]-]Success  
isa x5
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"15---------------]-]Success  
of
 (app
   (elim_colSigma x4 (x6 \
     setPi
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \ singleton) x6 \ x7 \ x6) x5) singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X899^5 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"14--------------]-]Success  
isType
 (propId singleton
   (app
     (elim_colSigma x3 (x6 \
       setPi
        (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ singleton) x6 \ x7 \ x6) x5)
   (app
     (elim_colSigma x4 (x6 \
       setPi
        (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \ singleton) x6 \ x7 \ x6) x5)) props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (propId singleton
       (app
         (elim_colSigma x3 (x6 \
           setPi
            (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5)
       (app
         (elim_colSigma x4 (x6 \
           setPi
            (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5))
     props int)
"
"13_____________[+[Begin 
pts_for set props X882^5
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
isType
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   propId singleton
    (app
      (elim_colSigma x3 (x6 \
        setPi
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ singleton) x6 \ x7 \ x6) x5)
    (app
      (elim_colSigma x4 (x6 \
        setPi
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \ singleton) x6 \ x7 \ x6) x5)) props int
"
"12____________[+[Begin 
pi x5 \
 locDecl x5
  (forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    propId singleton
     (app
       (elim_colSigma x3 (x7 \
         setPi
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6)
     (app
       (elim_colSigma x4 (x7 \
         setPi
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6))
  => spy (isType (propId singleton (app x2 x3) (app x2 x4)) X946^5 int)
"
"13_____________[+[Begin 
isType (propId singleton (app x2 x3) (app x2 x4)) X946^5 int
"
"14______________[+[Begin 
of (app x2 x3) X947^6 int
"
"15_______________[+[Begin 
of x2 (setPi X948^6 X949^6) int
"
"15---------------]-]Success  
of x2
 (setPi
   (colSigma
     (setPi
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) int
"
"15_______________[+[Begin 
isa x3
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8)) int
"
"16________________[+[Begin 
of x3 X950^6 int
"
"16----------------]-]Success  
of x3
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8)) int
"
"16________________[+[Begin 
conv
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
"
"16----------------]-]Success  
conv
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
"
"15---------------]-]Success  
isa x3
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8)) int
"
"14--------------]-]Success  
of (app x2 x3) singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of (app x2 x4) X951^6 int
"
"15_______________[+[Begin 
of x2 (setPi X952^6 X953^6) int
"
"15---------------]-]Success  
of x2
 (setPi
   (colSigma
     (setPi
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ singleton) x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       forall (forall singleton x9 \ propId singleton star star) x9 \
        propId singleton (app x6 x7) (app x6 x8)) x6 \ singleton) int
"
"15_______________[+[Begin 
isa x4
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8)) int
"
"16________________[+[Begin 
of x4 X954^6 int
"
"16----------------]-]Success  
of x4
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8)) int
"
"16________________[+[Begin 
conv
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
"
"16----------------]-]Success  
conv
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8))
"
"15---------------]-]Success  
isa x4
 (colSigma
   (setPi
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ singleton) x6 \
   forall
    (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
    x7 \
    forall
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     forall (forall singleton x9 \ propId singleton star star) x9 \
      propId singleton (app x6 x7) (app x6 x8)) int
"
"14--------------]-]Success  
of (app x2 x4) singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X946^5 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"13-------------]-]Success  
isType (propId singleton (app x2 x3) (app x2 x4)) props int
"
"12------------]-]Success  
pi x5 \
 locDecl x5
  (forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    propId singleton
     (app
       (elim_colSigma x3 (x7 \
         setPi
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6)
     (app
       (elim_colSigma x4 (x7 \
         setPi
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \ singleton) x7 \ x8 \ x7) x6))
  => spy (isType (propId singleton (app x2 x3) (app x2 x4)) props int)
"
"12____________[+[Begin 
pts_for props props X881^4
"
"12------------]-]Success  
pts_for props props props
"
"11-----------]-]Success  
isType
 (forall
   (forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     propId singleton
      (app
        (elim_colSigma x3 (x6 \
          setPi
           (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5)
      (app
        (elim_colSigma x4 (x6 \
          setPi
           (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5))
   x5 \ propId singleton (app x2 x3) (app x2 x4)) props int
"
"10----------]-]Success  
pi x4 \
 locDecl x4
  (colSigma
    (setPi
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) x5 \
    forall
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  spy
   (isType
     (forall
       (forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         propId singleton
          (app
            (elim_colSigma x3 (x6 \
              setPi
               (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
            x5)
          (app
            (elim_colSigma x4 (x6 \
              setPi
               (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
            x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) props int)
"
"10__________[+[Begin 
pts_for set props X814^3
"
"10----------]-]Success  
pts_for set props props
"
"9---------]-]Success  
isType
 (forall
   (colSigma
     (setPi
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ singleton) x4 \
     forall
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \
   forall
    (forall
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      propId singleton
       (app
         (elim_colSigma x3 (x6 \
           setPi
            (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5)
       (app
         (elim_colSigma x4 (x6 \
           setPi
            (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \ singleton) x6 \ x7 \ x6) x5))
    x5 \ propId singleton (app x2 x3) (app x2 x4)) props int
"
"8--------]-]Success  
pi x3 \
 locDecl x3
  (colSigma
    (setPi
      (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \ singleton) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) =>
  spy
   (isType
     (forall
       (colSigma
         (setPi
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ singleton) x4 \
         forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall (forall singleton x7 \ propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall
        (forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          propId singleton
           (app
             (elim_colSigma x3 (x6 \
               setPi
                (colSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
             x5)
           (app
             (elim_colSigma x4 (x6 \
               setPi
                (colSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
             x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) props int)
"
"8________[+[Begin 
pts_for set props X747^2
"
"8--------]-]Success  
pts_for set props props
"
"7-------]-]Success  
pi x2 \
 locDecl x2
  (setPi
    (colSigma
      (setPi
        (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \ propId singleton star star)
        x3 \ singleton) x3 \
      forall
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall (forall singleton x6 \ propId singleton star star) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) =>
  isType
   (forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \ singleton) x3 \
       forall
        (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall (forall singleton x6 \ propId singleton star star) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \
     forall
      (colSigma
        (setPi
          (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         propId singleton
          (app
            (elim_colSigma x3 (x6 \
              setPi
               (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
            x5)
          (app
            (elim_colSigma x4 (x6 \
              setPi
               (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
            x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) props int
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq props set
"
"7-------]-]Success  
pts_leq props set
"
"6------]-]Success  
isType
 (colSigma
   (setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \ propId singleton star star)
         x2 \ singleton) x2 \
       forall
        (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \ propId singleton star star)
        x3 \
        forall
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \
         forall (forall singleton x5 \ propId singleton star star) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
   forall
    (colSigma
      (setPi
        (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \ propId singleton star star)
        x3 \ singleton) x3 \
      forall
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall (forall singleton x6 \ propId singleton star star) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x3 \
    forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        propId singleton
         (app
           (elim_colSigma x3 (x6 \
             setPi
              (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
           x5)
         (app
           (elim_colSigma x4 (x6 \
             setPi
              (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
           x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) set int
"
"6______[+[Begin 
pi x2 \
 locDecl x2
  (colSigma
    (setPi
      (colSigma
        (setPi
          (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \ propId singleton star star)
          x3 \ singleton) x3 \
        forall
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \
         forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall (forall singleton x6 \ propId singleton star star) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
    forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (colSigma
        (setPi
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         propId singleton
          (app
            (elim_colSigma x4 (x7 \
              setPi
               (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)
          (app
            (elim_colSigma x5 (x7 \
              setPi
               (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) =>
  spy
   (isType
     (propId singleton
       (app
         (elim_colSigma x2 (x3 \
           setPi
            (colSigma
              (setPi
                (colSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (colSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
            singleton) x3 \ x4 \ x3)
         (elim_colSigma
           (pair
             (setPi
               (colSigma (setPi singleton x3 \ propId singleton star star)
                 x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \ singleton) (x3 \
             forall
              (colSigma (setPi singleton x4 \ propId singleton star star)
                x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star star)
                 x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall (forall singleton x6 \ propId singleton star star) x6 \
                propId singleton (app x3 x4) (app x3 x5))
             (lambda
               (colSigma (setPi singleton x3 \ propId singleton star star)
                 x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \ star)
             (forall_lam
               (colSigma (setPi singleton x3 \ propId singleton star star)
                 x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \
               forall_lam
                (colSigma (setPi singleton x4 \ propId singleton star star)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall_lam (forall singleton x5 \ propId singleton star star)
                 x5 \ id singleton star)) (x3 \
           colSigma
            (setPi
              (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ singleton) x4 \
            forall
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall
              (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall (forall singleton x7 \ propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
           pair
            (setPi
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) (x5 \
            forall
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7))
            (lambda
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              app x3
               (elim_colSigma x5 (x6 \
                 colSigma (setPi singleton x7 \ propId singleton star star)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x6 \ x7 \
                 pair (setPi singleton x8 \ propId singleton star star) (x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star)
                  (lambda singleton x8 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (id singleton star)) x0) star)
                       (fixMe "prova di symmetria")) (app x6 x8))
                  (forall_lam singleton x8 \
                    forall_lam singleton x9 \
                     forall_lam (propId singleton x8 x9) x10 \
                      forall_app (forall_app (forall_app x7 x8) x9) x10)))
            (forall_lam
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall_lam
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall_lam (forall singleton x7 \ propId singleton star star)
                x7 \
                forall_app
                 (forall_app
                   (forall_app x4
                     (elim_colSigma x5 (x8 \
                       colSigma
                        (setPi singleton x9 \ propId singleton star star)
                        x9 \
                        forall singleton x10 \
                         forall singleton x11 \
                          forall (propId singleton x10 x11) x12 \
                           propId singleton star star) x8 \ x9 \
                       pair
                        (setPi singleton x10 \ propId singleton star star)
                        (x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star)
                        (lambda singleton x10 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star) (id singleton star)) x0) star)
                             (fixMe "prova di symmetria")) (app x8 x10))
                        (forall_lam singleton x10 \
                          forall_lam singleton x11 \
                           forall_lam (propId singleton x10 x11) x12 \
                            forall_app (forall_app (forall_app x9 x10) x11)
                             x12)))
                   (elim_colSigma x6 (x8 \
                     colSigma
                      (setPi singleton x9 \ propId singleton star star) x9 \
                      forall singleton x10 \
                       forall singleton x11 \
                        forall (propId singleton x10 x11) x12 \
                         propId singleton star star) x8 \ x9 \
                     pair (setPi singleton x10 \ propId singleton star star)
                      (x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star)
                      (lambda singleton x10 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star) (id singleton star)) x0) star)
                           (fixMe "prova di symmetria")) (app x8 x10))
                      (forall_lam singleton x10 \
                        forall_lam singleton x11 \
                         forall_lam (propId singleton x10 x11) x12 \
                          forall_app (forall_app (forall_app x9 x10) x11) x12)))
                 (forall_lam singleton x8 \ forall_app x7 x8)))) star) X955^2
     int)
"
"7_______[+[Begin 
isType
 (propId singleton
   (app
     (elim_colSigma x2 (x3 \
       setPi
        (colSigma
          (setPi
            (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ singleton) x4 \
          forall
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall (forall singleton x7 \ propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
       x4 \ x3)
     (elim_colSigma
       (pair
         (setPi
           (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \ singleton) (x3 \
         forall
          (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \
          forall
           (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall (forall singleton x6 \ propId singleton star star) x6 \
            propId singleton (app x3 x4) (app x3 x5))
         (lambda
           (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \ star)
         (forall_lam
           (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \
           forall_lam
            (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \
            forall_lam (forall singleton x5 \ propId singleton star star)
             x5 \ id singleton star)) (x3 \
       colSigma
        (setPi
          (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
       pair
        (setPi
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) (x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7))
        (lambda
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          app x3
           (elim_colSigma x5 (x6 \
             colSigma (setPi singleton x7 \ propId singleton star star) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x6 \ x7 \
             pair (setPi singleton x8 \ propId singleton star star) (x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star)
              (lambda singleton x8 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x6 x8))
              (forall_lam singleton x8 \
                forall_lam singleton x9 \
                 forall_lam (propId singleton x8 x9) x10 \
                  forall_app (forall_app (forall_app x7 x8) x9) x10)))
        (forall_lam
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall_lam
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall_lam (forall singleton x7 \ propId singleton star star) x7 \
            forall_app
             (forall_app
               (forall_app x4
                 (elim_colSigma x5 (x8 \
                   colSigma (setPi singleton x9 \ propId singleton star star)
                    x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton star star) x8 \ x9 \
                   pair (setPi singleton x10 \ propId singleton star star)
                    (x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton star star)
                    (lambda singleton x10 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (id singleton star)) x0) star)
                         (fixMe "prova di symmetria")) (app x8 x10))
                    (forall_lam singleton x10 \
                      forall_lam singleton x11 \
                       forall_lam (propId singleton x10 x11) x12 \
                        forall_app (forall_app (forall_app x9 x10) x11) x12)))
               (elim_colSigma x6 (x8 \
                 colSigma (setPi singleton x9 \ propId singleton star star)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x8 \ x9 \
                 pair (setPi singleton x10 \ propId singleton star star)
                  (x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star)
                  (lambda singleton x10 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (id singleton star)) x0) star)
                       (fixMe "prova di symmetria")) (app x8 x10))
                  (forall_lam singleton x10 \
                    forall_lam singleton x11 \
                     forall_lam (propId singleton x10 x11) x12 \
                      forall_app (forall_app (forall_app x9 x10) x11) x12)))
             (forall_lam singleton x8 \ forall_app x7 x8)))) star) X955^2 int
"
"8________[+[Begin 
of
 (app
   (elim_colSigma x2 (x3 \
     setPi
      (colSigma
        (setPi
          (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
     x4 \ x3)
   (elim_colSigma
     (pair
       (setPi
         (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \ singleton) (x3 \
       forall
        (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall (forall singleton x6 \ propId singleton star star) x6 \
          propId singleton (app x3 x4) (app x3 x5))
       (lambda
         (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \ star)
       (forall_lam
         (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \
         forall_lam
          (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \
          forall_lam (forall singleton x5 \ propId singleton star star) x5 \
           id singleton star)) (x3 \
     colSigma
      (setPi
        (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \ singleton) x4 \
      forall
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall (forall singleton x7 \ propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
     pair
      (setPi
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \ singleton) (x5 \
      forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall
        (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall (forall singleton x8 \ propId singleton star star) x8 \
         propId singleton (app x5 x6) (app x5 x7))
      (lambda
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        app x3
         (elim_colSigma x5 (x6 \
           colSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x6 \ x7 \
           pair (setPi singleton x8 \ propId singleton star star) (x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star)
            (lambda singleton x8 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x6 x8))
            (forall_lam singleton x8 \
              forall_lam singleton x9 \
               forall_lam (propId singleton x8 x9) x10 \
                forall_app (forall_app (forall_app x7 x8) x9) x10)))
      (forall_lam
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall_lam
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall_lam (forall singleton x7 \ propId singleton star star) x7 \
          forall_app
           (forall_app
             (forall_app x4
               (elim_colSigma x5 (x8 \
                 colSigma (setPi singleton x9 \ propId singleton star star)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x8 \ x9 \
                 pair (setPi singleton x10 \ propId singleton star star)
                  (x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star)
                  (lambda singleton x10 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (id singleton star)) x0) star)
                       (fixMe "prova di symmetria")) (app x8 x10))
                  (forall_lam singleton x10 \
                    forall_lam singleton x11 \
                     forall_lam (propId singleton x10 x11) x12 \
                      forall_app (forall_app (forall_app x9 x10) x11) x12)))
             (elim_colSigma x6 (x8 \
               colSigma (setPi singleton x9 \ propId singleton star star)
                x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x8 \ x9 \
               pair (setPi singleton x10 \ propId singleton star star) (x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star)
                (lambda singleton x10 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x8 x10))
                (forall_lam singleton x10 \
                  forall_lam singleton x11 \
                   forall_lam (propId singleton x10 x11) x12 \
                    forall_app (forall_app (forall_app x9 x10) x11) x12)))
           (forall_lam singleton x8 \ forall_app x7 x8)))) X956^3 int
"
"9_________[+[Begin 
of
 (elim_colSigma x2 (x3 \
   setPi
    (colSigma
      (setPi
        (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \ singleton) x4 \
      forall
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall (forall singleton x7 \ propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \ x4 \
   x3) (setPi X957^3 X958^3) int
"
"10__________[+[Begin 
of x2 (colSigma X959^3 X960^3) int
"
"10----------]-]Success  
of x2
 (colSigma
   (setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \ singleton) x3 \
       forall
        (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall (forall singleton x6 \ propId singleton star star) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
   forall
    (colSigma
      (setPi
        (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \ singleton) x4 \
      forall
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall (forall singleton x7 \ propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        propId singleton
         (app
           (elim_colSigma x4 (x7 \
             setPi
              (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
           x6)
         (app
           (elim_colSigma x5 (x7 \
             setPi
              (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
           x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) int
"
"10__________[+[Begin 
pi x3 \
 locDecl x3
  (colSigma
    (setPi
      (colSigma
        (setPi
          (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x4 \
    forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (colSigma
        (setPi
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ singleton) x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall (forall singleton x9 \ propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         propId singleton
          (app
            (elim_colSigma x5 (x8 \
              setPi
               (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)
          (app
            (elim_colSigma x6 (x8 \
              setPi
               (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)) x7 \ propId singleton (app x4 x5) (app x4 x6)) =>
  isType
   (setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) _ int
"
"11___________[+[Begin 
isType
 (setPi
   (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton) X961^4 int
"
"12____________[+[Begin 
isType (setPi singleton x4 \ propId singleton star x0) X962^4 int
"
"13_____________[+[Begin 
of star X963^5 int
"
"13-------------]-]Success  
of star singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
of x0 X964^5 int
"
"13-------------]-]Success  
of x0 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
(pts_leq set set),
(X965^4 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"13_____________[+[Begin 
pts_fun set props X962^4
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
pts_fun set props set
"
"12------------]-]Success  
isType (setPi singleton x4 \ propId singleton star x0) set int
"
"12____________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) X966^4
   int
"
"13_____________[+[Begin 
isType singleton X967^5 int
"
"13-------------]-]Success  
isType singleton set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X968^5 int)
"
"14______________[+[Begin 
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X968^5
 int
"
"15_______________[+[Begin 
isType singleton X969^6 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X970^6 int)
"
"16________________[+[Begin 
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X970^6 int
"
"17_________________[+[Begin 
isType (propId singleton x5 x6) X971^7 int
"
"18__________________[+[Begin 
of x5 X972^7 int
"
"18------------------]-]Success  
of x5 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of x6 X973^7 int
"
"18------------------]-]Success  
of x6 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X971^7 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
isType (propId singleton x5 x6) props int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) X974^7 int)
"
"18__________________[+[Begin 
isType (propId singleton star star) X974^7 int
"
"19___________________[+[Begin 
of star X975^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of star X976^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X974^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) props int)
"
"17_________________[+[Begin 
pts_for props props X970^6
"
"17-----------------]-]Success  
pts_for props props props
"
"16----------------]-]Success  
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"15_______________[+[Begin 
pts_for set props X968^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"13_____________[+[Begin 
pts_for set props X966^4
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"12____________[+[Begin 
pts_fun set set X961^4
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"12------------]-]Success  
pts_fun set set set
"
"11-----------]-]Success  
isType
 (setPi
   (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton) set int
"
"11___________[+[Begin 
pi x4 \
 locDecl x4
  (setPi
    (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X977^4 int
"
"12____________[+[Begin 
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) X978^5
 int
"
"13_____________[+[Begin 
isType (setPi singleton x5 \ propId singleton star x0) X979^5 int
"
"14______________[+[Begin 
of star X980^6 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of x0 X981^6 int
"
"14--------------]-]Success  
of x0 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X982^5 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"14______________[+[Begin 
pts_fun set props X979^5
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
isType (setPi singleton x5 \ propId singleton star x0) set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) X983^5
   int
"
"14______________[+[Begin 
isType singleton X984^6 int
"
"14--------------]-]Success  
isType singleton set int
"
"14______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X985^6 int)
"
"15_______________[+[Begin 
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X985^6
 int
"
"16________________[+[Begin 
isType singleton X986^7 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X987^7 int)
"
"17_________________[+[Begin 
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X987^7 int
"
"18__________________[+[Begin 
isType (propId singleton x6 x7) X988^8 int
"
"19___________________[+[Begin 
of x6 X989^8 int
"
"19-------------------]-]Success  
of x6 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x7 X990^8 int
"
"19-------------------]-]Success  
of x7 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X988^8 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton x6 x7) props int
"
"18__________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) X991^8 int)
"
"19___________________[+[Begin 
isType (propId singleton star star) X991^8 int
"
"20____________________[+[Begin 
of star X992^9 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X993^9 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X991^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for props props X987^7
"
"18------------------]-]Success  
pts_for props props props
"
"17-----------------]-]Success  
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"16________________[+[Begin 
pts_for set props X985^6
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"14--------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"14______________[+[Begin 
pts_for set props X983^5
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"12------------]-]Success  
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) set int
"
"12____________[+[Begin 
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) X994^5 int)
"
"13_____________[+[Begin 
isType
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) X994^5 int
"
"14______________[+[Begin 
isType
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X995^6
 int
"
"15_______________[+[Begin 
isType (setPi singleton x6 \ propId singleton star x0) X996^6 int
"
"16________________[+[Begin 
of star X997^7 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of x0 X998^7 int
"
"16----------------]-]Success  
of x0 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X999^6 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16________________[+[Begin 
pts_fun set props X996^6
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
pts_fun set props set
"
"15---------------]-]Success  
isType (setPi singleton x6 \ propId singleton star x0) set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1000^6 int
"
"16________________[+[Begin 
isType singleton X1001^7 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1002^7 int)
"
"17_________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1002^7
 int
"
"18__________________[+[Begin 
isType singleton X1003^8 int
"
"18------------------]-]Success  
isType singleton set int
"
"18__________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1004^8 int)
"
"19___________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1004^8 int
"
"20____________________[+[Begin 
isType (propId singleton x7 x8) X1005^9 int
"
"21_____________________[+[Begin 
of x7 X1006^9 int
"
"21---------------------]-]Success  
of x7 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x8 X1007^9 int
"
"21---------------------]-]Success  
of x8 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1005^9 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton x7 x8) props int
"
"20____________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X1008^9 int)
"
"21_____________________[+[Begin 
isType (propId singleton star star) X1008^9 int
"
"22______________________[+[Begin 
of star X1009^10 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1010^10 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1008^9 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
isType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for props props X1004^8
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"18------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"18__________________[+[Begin 
pts_for set props X1002^7
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"16________________[+[Begin 
pts_for set props X1000^6
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
isType
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) set int
"
"14______________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X1011^6 int)
"
"15_______________[+[Begin 
isType
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) X1011^6 int
"
"16________________[+[Begin 
isType (forall singleton x7 \ propId singleton star star) X1012^7 int
"
"17_________________[+[Begin 
isType singleton X1013^7 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy (isType (propId singleton star star) X1014^7 int)
"
"18__________________[+[Begin 
isType (propId singleton star star) X1014^7 int
"
"19___________________[+[Begin 
of star X1015^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of star X1016^8 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1014^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton => spy (isType (propId singleton star star) props int)
"
"17_________________[+[Begin 
pts_for set props X1012^7
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
isType (forall singleton x7 \ propId singleton star star) props int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 (forall singleton x8 \ propId singleton star star) =>
  spy (isType (propId singleton (app x4 x5) (app x4 x6)) X1017^7 int)
"
"17_________________[+[Begin 
isType (propId singleton (app x4 x5) (app x4 x6)) X1017^7 int
"
"18__________________[+[Begin 
of (app x4 x5) X1018^8 int
"
"19___________________[+[Begin 
of x4 (setPi X1019^8 X1020^8) int
"
"19-------------------]-]Success  
of x4
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"19___________________[+[Begin 
isa x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
of x5 X1021^8 int
"
"20--------------------]-]Success  
of x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"19-------------------]-]Success  
isa x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"18------------------]-]Success  
of (app x4 x5) singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of (app x4 x6) X1022^8 int
"
"19___________________[+[Begin 
of x4 (setPi X1023^8 X1024^8) int
"
"19-------------------]-]Success  
of x4
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"19___________________[+[Begin 
isa x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
of x6 X1025^8 int
"
"20--------------------]-]Success  
of x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"19-------------------]-]Success  
isa x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"18------------------]-]Success  
of (app x4 x6) singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1017^7 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
isType (propId singleton (app x4 x5) (app x4 x6)) props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 (forall singleton x8 \ propId singleton star star) =>
  spy (isType (propId singleton (app x4 x5) (app x4 x6)) props int)
"
"16________________[+[Begin 
pts_for props props X1011^6
"
"16----------------]-]Success  
pts_for props props props
"
"15---------------]-]Success  
isType
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) props int
"
"14--------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int)
"
"14______________[+[Begin 
pts_for set props X994^5
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
isType
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) props int
"
"12------------]-]Success  
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) props int)
"
"12____________[+[Begin 
pts_for set props X977^4
"
"12------------]-]Success  
pts_for set props props
"
"11-----------]-]Success  
pi x4 \
 locDecl x4
  (setPi
    (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int
"
"11___________[+[Begin 
pts_leq set set
"
"11-----------]-]Success  
pts_leq set set
"
"11___________[+[Begin 
pts_leq props set
"
"11-----------]-]Success  
pts_leq props set
"
"11___________[+[Begin 
pts_fun set set X1026^4
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"11-----------]-]Success  
pts_fun set set set
"
"10----------]-]Success  
pi x3 \
 locDecl x3
  (colSigma
    (setPi
      (colSigma
        (setPi
          (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x4 \
    forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \
     forall
      (colSigma
        (setPi
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ singleton) x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          forall (forall singleton x9 \ propId singleton star star) x9 \
           propId singleton (app x6 x7) (app x6 x8)) x6 \
      forall
       (forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         propId singleton
          (app
            (elim_colSigma x5 (x8 \
              setPi
               (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)
          (app
            (elim_colSigma x6 (x8 \
              setPi
               (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
            x7)) x7 \ propId singleton (app x4 x5) (app x4 x6)) =>
  isType
   (setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) _ int
"
"10__________[+[Begin 
pi x3 \
 pi x4 \
  locDecl x3
   (setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) =>
   locDecl x4
    (forall
      (colSigma
        (setPi
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (colSigma
         (setPi
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \ singleton) x6 \
         forall
          (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall
           (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           forall (forall singleton x9 \ propId singleton star star) x9 \
            propId singleton (app x6 x7) (app x6 x8)) x6 \
       forall
        (forall
          (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          propId singleton
           (app
             (elim_colSigma x5 (x8 \
               setPi
                (colSigma (setPi singleton x9 \ propId singleton star x0)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
             x7)
           (app
             (elim_colSigma x6 (x8 \
               setPi
                (colSigma (setPi singleton x9 \ propId singleton star x0)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
             x7)) x7 \ propId singleton (app x3 x5) (app x3 x6)) =>
    isa x3
     (setPi
       (colSigma
         (setPi
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \ singleton) x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall
           (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall (forall singleton x8 \ propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) int
"
"11___________[+[Begin 
of x3 X1027^5 int
"
"11-----------]-]Success  
of x3
 (setPi
   (colSigma
     (setPi
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \ singleton) x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) int
"
"11___________[+[Begin 
conv
 (setPi
   (colSigma
     (setPi
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \ singleton) x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
 (setPi
   (colSigma
     (setPi
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \ singleton) x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
"
"11-----------]-]Success  
conv
 (setPi
   (colSigma
     (setPi
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \ singleton) x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
 (setPi
   (colSigma
     (setPi
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \ singleton) x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall
       (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x7 \
       forall (forall singleton x8 \ propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton)
"
"10----------]-]Success  
pi x3 \
 pi x4 \
  locDecl x3
   (setPi
     (colSigma
       (setPi
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) =>
   locDecl x4
    (forall
      (colSigma
        (setPi
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (colSigma
         (setPi
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \ singleton) x6 \
         forall
          (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall
           (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           forall (forall singleton x9 \ propId singleton star star) x9 \
            propId singleton (app x6 x7) (app x6 x8)) x6 \
       forall
        (forall
          (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          propId singleton
           (app
             (elim_colSigma x5 (x8 \
               setPi
                (colSigma (setPi singleton x9 \ propId singleton star x0)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
             x7)
           (app
             (elim_colSigma x6 (x8 \
               setPi
                (colSigma (setPi singleton x9 \ propId singleton star x0)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
             x7)) x7 \ propId singleton (app x3 x5) (app x3 x6)) =>
    isa x3
     (setPi
       (colSigma
         (setPi
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \ singleton) x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall
           (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall (forall singleton x8 \ propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7)) x5 \ singleton) int
"
"9---------]-]Success  
of
 (elim_colSigma x2 (x3 \
   setPi
    (colSigma
      (setPi
        (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \ singleton) x4 \
      forall
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall (forall singleton x7 \ propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \ x4 \
   x3)
 (setPi
   (colSigma
     (setPi
       (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ singleton) x3 \
     forall
      (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) int
"
"9_________[+[Begin 
isa
 (elim_colSigma
   (pair
     (setPi
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ singleton) (x3 \
     forall
      (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall
       (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5))
     (lambda
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ star)
     (forall_lam
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \
       forall_lam
        (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall_lam (forall singleton x5 \ propId singleton star star) x5 \
         id singleton star)) (x3 \
   colSigma
    (setPi
      (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \ singleton) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
   pair
    (setPi
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) (x5 \
    forall
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7))
    (lambda
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      app x3
       (elim_colSigma x5 (x6 \
         colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x6 \ x7 \
         pair (setPi singleton x8 \ propId singleton star star) (x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
          (lambda singleton x8 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x6 x8))
          (forall_lam singleton x8 \
            forall_lam singleton x9 \
             forall_lam (propId singleton x8 x9) x10 \
              forall_app (forall_app (forall_app x7 x8) x9) x10)))
    (forall_lam
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall_lam
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall_lam (forall singleton x7 \ propId singleton star star) x7 \
        forall_app
         (forall_app
           (forall_app x4
             (elim_colSigma x5 (x8 \
               colSigma (setPi singleton x9 \ propId singleton star star)
                x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x8 \ x9 \
               pair (setPi singleton x10 \ propId singleton star star) (x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star)
                (lambda singleton x10 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x8 x10))
                (forall_lam singleton x10 \
                  forall_lam singleton x11 \
                   forall_lam (propId singleton x10 x11) x12 \
                    forall_app (forall_app (forall_app x9 x10) x11) x12)))
           (elim_colSigma x6 (x8 \
             colSigma (setPi singleton x9 \ propId singleton star star) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x8 \ x9 \
             pair (setPi singleton x10 \ propId singleton star star) (x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star)
              (lambda singleton x10 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x8 x10))
              (forall_lam singleton x10 \
                forall_lam singleton x11 \
                 forall_lam (propId singleton x10 x11) x12 \
                  forall_app (forall_app (forall_app x9 x10) x11) x12)))
         (forall_lam singleton x8 \ forall_app x7 x8)))
 (colSigma
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5)) int
"
"10__________[+[Begin 
of
 (elim_colSigma
   (pair
     (setPi
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ singleton) (x3 \
     forall
      (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall
       (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5))
     (lambda
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ star)
     (forall_lam
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \
       forall_lam
        (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall_lam (forall singleton x5 \ propId singleton star star) x5 \
         id singleton star)) (x3 \
   colSigma
    (setPi
      (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \ singleton) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
   pair
    (setPi
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) (x5 \
    forall
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7))
    (lambda
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      app x3
       (elim_colSigma x5 (x6 \
         colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x6 \ x7 \
         pair (setPi singleton x8 \ propId singleton star star) (x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
          (lambda singleton x8 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x6 x8))
          (forall_lam singleton x8 \
            forall_lam singleton x9 \
             forall_lam (propId singleton x8 x9) x10 \
              forall_app (forall_app (forall_app x7 x8) x9) x10)))
    (forall_lam
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall_lam
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall_lam (forall singleton x7 \ propId singleton star star) x7 \
        forall_app
         (forall_app
           (forall_app x4
             (elim_colSigma x5 (x8 \
               colSigma (setPi singleton x9 \ propId singleton star star)
                x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x8 \ x9 \
               pair (setPi singleton x10 \ propId singleton star star) (x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star)
                (lambda singleton x10 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x8 x10))
                (forall_lam singleton x10 \
                  forall_lam singleton x11 \
                   forall_lam (propId singleton x10 x11) x12 \
                    forall_app (forall_app (forall_app x9 x10) x11) x12)))
           (elim_colSigma x6 (x8 \
             colSigma (setPi singleton x9 \ propId singleton star star) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x8 \ x9 \
             pair (setPi singleton x10 \ propId singleton star star) (x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star)
              (lambda singleton x10 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x8 x10))
              (forall_lam singleton x10 \
                forall_lam singleton x11 \
                 forall_lam (propId singleton x10 x11) x12 \
                  forall_app (forall_app (forall_app x9 x10) x11) x12)))
         (forall_lam singleton x8 \ forall_app x7 x8))) X1028^3 int
"
"11___________[+[Begin 
of
 (pair
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) (x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5))
   (lambda
     (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ star)
   (forall_lam
     (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \
     forall_lam
      (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall_lam (forall singleton x5 \ propId singleton star star) x5 \
       id singleton star)) (colSigma X1029^3 X1030^3) int
"
"12____________[+[Begin 
isType (setPi singleton x3 \ propId singleton star star) X1031^3 int
"
"13_____________[+[Begin 
of star X1032^4 int
"
"13-------------]-]Success  
of star singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
of star X1033^4 int
"
"13-------------]-]Success  
of star singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"13_____________[+[Begin 
(pts_leq set set),
(X1034^3 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"13_____________[+[Begin 
pts_fun set props X1031^3
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
pts_fun set props set
"
"12------------]-]Success  
isType (setPi singleton x3 \ propId singleton star star) set int
"
"12____________[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star star) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star)
   X1035^3 int
"
"13_____________[+[Begin 
isType singleton X1036^4 int
"
"13-------------]-]Success  
isType singleton set int
"
"13_____________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X1037^4 int)
"
"14______________[+[Begin 
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) X1037^4
 int
"
"15_______________[+[Begin 
isType singleton X1038^5 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X1039^5 int)
"
"16________________[+[Begin 
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 X1039^5 int
"
"17_________________[+[Begin 
isType (propId singleton x4 x5) X1040^6 int
"
"18__________________[+[Begin 
of x4 X1041^6 int
"
"18------------------]-]Success  
of x4 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of x5 X1042^6 int
"
"18------------------]-]Success  
of x5 singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1040^6 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
isType (propId singleton x4 x5) props int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) X1043^6 int)
"
"18__________________[+[Begin 
isType (propId singleton star star) X1043^6 int
"
"19___________________[+[Begin 
of star X1044^7 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of star X1045^7 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1043^6 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton star star) props int
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) props int)
"
"17_________________[+[Begin 
pts_for props props X1039^5
"
"17-----------------]-]Success  
pts_for props props props
"
"16----------------]-]Success  
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 props int
"
"15---------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     props int)
"
"15_______________[+[Begin 
pts_for set props X1037^4
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) props int
"
"13-------------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) props
     int)
"
"13_____________[+[Begin 
pts_for set props X1035^3
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star star) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star) props
   int
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"12____________[+[Begin 
pts_fun set set X1046^3
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"12------------]-]Success  
pts_fun set set set
"
"12____________[+[Begin 
isType
 (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
   forall singleton x4 \
    forall singleton x5 \
     forall (propId singleton x4 x5) x6 \ propId singleton star star) X1047^3
 int
"
"13_____________[+[Begin 
isType (setPi singleton x3 \ propId singleton star star) X1048^3 int
"
"14______________[+[Begin 
of star X1049^4 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of star X1050^4 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X1051^3 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"14______________[+[Begin 
pts_fun set props X1048^3
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
isType (setPi singleton x3 \ propId singleton star star) set int
"
"13_____________[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star star) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star)
   X1052^3 int
"
"14______________[+[Begin 
isType singleton X1053^4 int
"
"14--------------]-]Success  
isType singleton set int
"
"14______________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X1054^4 int)
"
"15_______________[+[Begin 
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) X1054^4
 int
"
"16________________[+[Begin 
isType singleton X1055^5 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X1056^5 int)
"
"17_________________[+[Begin 
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 X1056^5 int
"
"18__________________[+[Begin 
isType (propId singleton x4 x5) X1057^6 int
"
"19___________________[+[Begin 
of x4 X1058^6 int
"
"19-------------------]-]Success  
of x4 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x5 X1059^6 int
"
"19-------------------]-]Success  
of x5 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1057^6 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton x4 x5) props int
"
"18__________________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) X1060^6 int)
"
"19___________________[+[Begin 
isType (propId singleton star star) X1060^6 int
"
"20____________________[+[Begin 
of star X1061^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1062^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1060^6 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for props props X1056^5
"
"18------------------]-]Success  
pts_for props props props
"
"17-----------------]-]Success  
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 props int
"
"16----------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     props int)
"
"16________________[+[Begin 
pts_for set props X1054^4
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) props int
"
"14--------------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) props
     int)
"
"14______________[+[Begin 
pts_for set props X1052^3
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star star) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star) props
   int
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"12------------]-]Success  
isType
 (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
   forall singleton x4 \
    forall singleton x5 \
     forall (propId singleton x4 x5) x6 \ propId singleton star star) set int
"
"12____________[+[Begin 
pi x3 \
 locDecl x3
  (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall (forall singleton x5 \ propId singleton star star) x5 \
        propId singleton
         (app
           (lambda
             (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \ star) x3)
         (app
           (lambda
             (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \ star) x4)) X1063^3 int)
"
"13_____________[+[Begin 
isType
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x3)
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x4)) X1063^3 int
"
"14______________[+[Begin 
isType
 (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) X1064^4
 int
"
"15_______________[+[Begin 
isType (setPi singleton x4 \ propId singleton star star) X1065^4 int
"
"16________________[+[Begin 
of star X1066^5 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of star X1067^5 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X1068^4 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16________________[+[Begin 
pts_fun set props X1065^4
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
pts_fun set props set
"
"15---------------]-]Success  
isType (setPi singleton x4 \ propId singleton star star) set int
"
"15_______________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star)
   X1069^4 int
"
"16________________[+[Begin 
isType singleton X1070^5 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1071^5 int)
"
"17_________________[+[Begin 
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X1071^5
 int
"
"18__________________[+[Begin 
isType singleton X1072^6 int
"
"18------------------]-]Success  
isType singleton set int
"
"18__________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1073^6 int)
"
"19___________________[+[Begin 
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X1073^6 int
"
"20____________________[+[Begin 
isType (propId singleton x5 x6) X1074^7 int
"
"21_____________________[+[Begin 
of x5 X1075^7 int
"
"21---------------------]-]Success  
of x5 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x6 X1076^7 int
"
"21---------------------]-]Success  
of x6 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1074^7 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton x5 x6) props int
"
"20____________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) X1077^7 int)
"
"21_____________________[+[Begin 
isType (propId singleton star star) X1077^7 int
"
"22______________________[+[Begin 
of star X1078^8 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1079^8 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1077^7 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
isType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for props props X1073^6
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"18------------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"18__________________[+[Begin 
pts_for set props X1071^5
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"16----------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"16________________[+[Begin 
pts_for set props X1069^4
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
isType
 (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \ propId singleton star star) set int
"
"14______________[+[Begin 
pi x4 \
 locDecl x4
  (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x5 \ propId singleton star star) x5 \
       propId singleton
        (app
          (lambda
            (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \ star) x3)
        (app
          (lambda
            (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \ star) x4)) X1080^4 int)
"
"15_______________[+[Begin 
isType
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x3)
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x4)) X1080^4 int
"
"16________________[+[Begin 
isType (forall singleton x5 \ propId singleton star star) X1081^5 int
"
"17_________________[+[Begin 
isType singleton X1082^5 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy (isType (propId singleton star star) X1083^5 int)
"
"18__________________[+[Begin 
isType (propId singleton star star) X1083^5 int
"
"19___________________[+[Begin 
of star X1084^6 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of star X1085^6 int
"
"19-------------------]-]Success  
of star singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1083^5 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton star star) props int
"
"17-----------------]-]Success  
pi x5 \
 locDecl x5 singleton => spy (isType (propId singleton star star) props int)
"
"17_________________[+[Begin 
pts_for set props X1081^5
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
isType (forall singleton x5 \ propId singleton star star) props int
"
"16________________[+[Begin 
pi x5 \
 locDecl x5 (forall singleton x6 \ propId singleton star star) =>
  spy
   (isType
     (propId singleton
       (app
         (lambda
           (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \ star) x3)
       (app
         (lambda
           (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \ star) x4)) X1086^5 int)
"
"17_________________[+[Begin 
isType
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x3)
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x4)) X1086^5 int
"
"18__________________[+[Begin 
of
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x3) X1087^6 int
"
"19___________________[+[Begin 
of
 (lambda
   (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   star) (setPi X1088^6 X1089^6) int
"
"20____________________[+[Begin 
isType
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) _ int
"
"21_____________________[+[Begin 
isType (setPi singleton x6 \ propId singleton star star) X1090^6 int
"
"22______________________[+[Begin 
of star X1091^7 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1092^7 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1093^6 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22______________________[+[Begin 
pts_fun set props X1090^6
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
pts_fun set props set
"
"21---------------------]-]Success  
isType (setPi singleton x6 \ propId singleton star star) set int
"
"21_____________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1094^6 int
"
"22______________________[+[Begin 
isType singleton X1095^7 int
"
"22----------------------]-]Success  
isType singleton set int
"
"22______________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1096^7 int)
"
"23_______________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1096^7
 int
"
"24________________________[+[Begin 
isType singleton X1097^8 int
"
"24------------------------]-]Success  
isType singleton set int
"
"24________________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1098^8 int)
"
"25_________________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1098^8 int
"
"26__________________________[+[Begin 
isType (propId singleton x7 x8) X1099^9 int
"
"27___________________________[+[Begin 
of x7 X1100^9 int
"
"27---------------------------]-]Success  
of x7 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of x8 X1101^9 int
"
"27---------------------------]-]Success  
of x8 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1099^9 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton x7 x8) props int
"
"26__________________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X1102^9 int)
"
"27___________________________[+[Begin 
isType (propId singleton star star) X1102^9 int
"
"28____________________________[+[Begin 
of star X1103^10 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X1104^10 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1102^9 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton star star) props int
"
"26--------------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props int)
"
"26__________________________[+[Begin 
pts_for props props X1098^8
"
"26--------------------------]-]Success  
pts_for props props props
"
"25-------------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"24------------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"24________________________[+[Begin 
pts_for set props X1096^7
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"22----------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"22______________________[+[Begin 
pts_for set props X1094^6
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
isType
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) _ int
"
"20____________________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isa star (X1089^6 x6) int
"
"21_____________________[+[Begin 
of star X1105^7 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton (X1089^6 x6)
"
"21---------------------]-]Success  
conv singleton singleton
"
"20--------------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isa star singleton int
"
"19-------------------]-]Success  
of
 (lambda
   (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   star)
 (setPi
   (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton) int
"
"19___________________[+[Begin 
isa x3
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"20____________________[+[Begin 
of x3 X1106^6 int
"
"20--------------------]-]Success  
of x3
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"19-------------------]-]Success  
isa x3
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"18------------------]-]Success  
of
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x3) singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x4) X1107^6 int
"
"19___________________[+[Begin 
of
 (lambda
   (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   star) (setPi X1108^6 X1109^6) int
"
"20____________________[+[Begin 
isType
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) _ int
"
"21_____________________[+[Begin 
isType (setPi singleton x6 \ propId singleton star star) X1110^6 int
"
"22______________________[+[Begin 
of star X1111^7 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1112^7 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1113^6 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22______________________[+[Begin 
pts_fun set props X1110^6
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
pts_fun set props set
"
"21---------------------]-]Success  
isType (setPi singleton x6 \ propId singleton star star) set int
"
"21_____________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1114^6 int
"
"22______________________[+[Begin 
isType singleton X1115^7 int
"
"22----------------------]-]Success  
isType singleton set int
"
"22______________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1116^7 int)
"
"23_______________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1116^7
 int
"
"24________________________[+[Begin 
isType singleton X1117^8 int
"
"24------------------------]-]Success  
isType singleton set int
"
"24________________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1118^8 int)
"
"25_________________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1118^8 int
"
"26__________________________[+[Begin 
isType (propId singleton x7 x8) X1119^9 int
"
"27___________________________[+[Begin 
of x7 X1120^9 int
"
"27---------------------------]-]Success  
of x7 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of x8 X1121^9 int
"
"27---------------------------]-]Success  
of x8 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1119^9 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton x7 x8) props int
"
"26__________________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X1122^9 int)
"
"27___________________________[+[Begin 
isType (propId singleton star star) X1122^9 int
"
"28____________________________[+[Begin 
of star X1123^10 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X1124^10 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1122^9 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton star star) props int
"
"26--------------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props int)
"
"26__________________________[+[Begin 
pts_for props props X1118^8
"
"26--------------------------]-]Success  
pts_for props props props
"
"25-------------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"24------------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"24________________________[+[Begin 
pts_for set props X1116^7
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"22----------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"22______________________[+[Begin 
pts_for set props X1114^6
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
isType
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) _ int
"
"20____________________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isa star (X1109^6 x6) int
"
"21_____________________[+[Begin 
of star X1125^7 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton (X1109^6 x6)
"
"21---------------------]-]Success  
conv singleton singleton
"
"20--------------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isa star singleton int
"
"19-------------------]-]Success  
of
 (lambda
   (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   star)
 (setPi
   (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton) int
"
"19___________________[+[Begin 
isa x4
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"20____________________[+[Begin 
of x4 X1126^6 int
"
"20--------------------]-]Success  
of x4
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"19-------------------]-]Success  
isa x4
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"18------------------]-]Success  
of
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x4) singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1086^5 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
isType
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x3)
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x4)) props int
"
"16----------------]-]Success  
pi x5 \
 locDecl x5 (forall singleton x6 \ propId singleton star star) =>
  spy
   (isType
     (propId singleton
       (app
         (lambda
           (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \ star) x3)
       (app
         (lambda
           (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \ star) x4)) props int)
"
"16________________[+[Begin 
pts_for props props X1080^4
"
"16----------------]-]Success  
pts_for props props props
"
"15---------------]-]Success  
isType
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x3)
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x4)) props int
"
"14--------------]-]Success  
pi x4 \
 locDecl x4
  (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x5 \ propId singleton star star) x5 \
       propId singleton
        (app
          (lambda
            (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \ star) x3)
        (app
          (lambda
            (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \ star) x4)) props int)
"
"14______________[+[Begin 
pts_for set props X1063^3
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
isType
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x3)
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x4)) props int
"
"12------------]-]Success  
pi x3 \
 locDecl x3
  (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \
       forall (forall singleton x5 \ propId singleton star star) x5 \
        propId singleton
         (app
           (lambda
             (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \ star) x3)
         (app
           (lambda
             (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \ star) x4)) props int)
"
"12____________[+[Begin 
pts_for set props X1127^3
"
"12------------]-]Success  
pts_for set props props
"
"12____________[+[Begin 
of
 (lambda
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   star) X1128^3 int
"
"13_____________[+[Begin 
isType
 (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
   forall singleton x4 \
    forall singleton x5 \
     forall (propId singleton x4 x5) x6 \ propId singleton star star) _ int
"
"14______________[+[Begin 
isType (setPi singleton x3 \ propId singleton star star) X1129^3 int
"
"15_______________[+[Begin 
of star X1130^4 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of star X1131^4 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X1132^3 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"15_______________[+[Begin 
pts_fun set props X1129^3
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
pts_fun set props set
"
"14--------------]-]Success  
isType (setPi singleton x3 \ propId singleton star star) set int
"
"14______________[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star star) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star)
   X1133^3 int
"
"15_______________[+[Begin 
isType singleton X1134^4 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X1135^4 int)
"
"16________________[+[Begin 
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) X1135^4
 int
"
"17_________________[+[Begin 
isType singleton X1136^5 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X1137^5 int)
"
"18__________________[+[Begin 
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 X1137^5 int
"
"19___________________[+[Begin 
isType (propId singleton x4 x5) X1138^6 int
"
"20____________________[+[Begin 
of x4 X1139^6 int
"
"20--------------------]-]Success  
of x4 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of x5 X1140^6 int
"
"20--------------------]-]Success  
of x5 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1138^6 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton x4 x5) props int
"
"19___________________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) X1141^6 int)
"
"20____________________[+[Begin 
isType (propId singleton star star) X1141^6 int
"
"21_____________________[+[Begin 
of star X1142^7 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1143^7 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1141^6 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton star star) props int
"
"19-------------------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) props int)
"
"19___________________[+[Begin 
pts_for props props X1137^5
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 props int
"
"17-----------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     props int)
"
"17_________________[+[Begin 
pts_for set props X1135^4
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) props int
"
"15---------------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) props
     int)
"
"15_______________[+[Begin 
pts_for set props X1133^3
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star star) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star) props
   int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
isType
 (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
   forall singleton x4 \
    forall singleton x5 \
     forall (propId singleton x4 x5) x6 \ propId singleton star star) _ int
"
"13_____________[+[Begin 
pi x3 \
 locDecl x3
  (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) =>
  isa star (X1144^3 x3) int
"
"14______________[+[Begin 
of star X1145^4 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton (X1144^3 x3)
"
"14--------------]-]Success  
conv singleton singleton
"
"13-------------]-]Success  
pi x3 \
 locDecl x3
  (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
    forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) =>
  isa star singleton int
"
"12------------]-]Success  
of
 (lambda
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   star)
 (setPi
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   singleton) int
"
"12____________[+[Begin 
conv
 (setPi
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   singleton)
 (setPi
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   singleton)
"
"12------------]-]Success  
conv
 (setPi
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   singleton)
 (setPi
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   singleton)
"
"12____________[+[Begin 
of
 (forall_lam
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall_lam
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall_lam (forall singleton x5 \ propId singleton star star) x5 \
     id singleton star) X1146^3 int
"
"13_____________[+[Begin 
isType (setPi singleton x3 \ propId singleton star star) X1147^3 int
"
"14______________[+[Begin 
of star X1148^4 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of star X1149^4 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X1150^3 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"14______________[+[Begin 
pts_fun set props X1147^3
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
isType (setPi singleton x3 \ propId singleton star star) set int
"
"13_____________[+[Begin 
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star star) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star)
   X1151^3 int
"
"14______________[+[Begin 
isType singleton X1152^4 int
"
"14--------------]-]Success  
isType singleton set int
"
"14______________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X1153^4 int)
"
"15_______________[+[Begin 
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) X1153^4
 int
"
"16________________[+[Begin 
isType singleton X1154^5 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     X1155^5 int)
"
"17_________________[+[Begin 
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 X1155^5 int
"
"18__________________[+[Begin 
isType (propId singleton x4 x5) X1156^6 int
"
"19___________________[+[Begin 
of x4 X1157^6 int
"
"19-------------------]-]Success  
of x4 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x5 X1158^6 int
"
"19-------------------]-]Success  
of x5 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1156^6 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton x4 x5) props int
"
"18__________________[+[Begin 
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) X1159^6 int)
"
"19___________________[+[Begin 
isType (propId singleton star star) X1159^6 int
"
"20____________________[+[Begin 
of star X1160^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1161^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1159^6 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x6 \
 locDecl x6 (propId singleton x4 x5) =>
  spy (isType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for props props X1155^5
"
"18------------------]-]Success  
pts_for props props props
"
"17-----------------]-]Success  
isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
 props int
"
"16----------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType (forall (propId singleton x4 x5) x6 \ propId singleton star star)
     props int)
"
"16________________[+[Begin 
pts_for set props X1153^4
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
isType
 (forall singleton x5 \
   forall (propId singleton x4 x5) x6 \ propId singleton star star) props int
"
"14--------------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) props
     int)
"
"14______________[+[Begin 
pts_for set props X1151^3
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
pi x3 \
 locDecl x3 (setPi singleton x4 \ propId singleton star star) =>
  isType
   (forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \ propId singleton star star) props
   int
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"13_____________[+[Begin 
of
 (forall_lam
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall_lam (forall singleton x5 \ propId singleton star star) x5 \
    id singleton star) X1162^4 int
"
"14______________[+[Begin 
isType (setPi singleton x4 \ propId singleton star star) X1163^4 int
"
"15_______________[+[Begin 
of star X1164^5 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of star X1165^5 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X1166^4 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"15_______________[+[Begin 
pts_fun set props X1163^4
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
pts_fun set props set
"
"14--------------]-]Success  
isType (setPi singleton x4 \ propId singleton star star) set int
"
"14______________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star)
   X1167^4 int
"
"15_______________[+[Begin 
isType singleton X1168^5 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1169^5 int)
"
"16________________[+[Begin 
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X1169^5
 int
"
"17_________________[+[Begin 
isType singleton X1170^6 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1171^6 int)
"
"18__________________[+[Begin 
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X1171^6 int
"
"19___________________[+[Begin 
isType (propId singleton x5 x6) X1172^7 int
"
"20____________________[+[Begin 
of x5 X1173^7 int
"
"20--------------------]-]Success  
of x5 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of x6 X1174^7 int
"
"20--------------------]-]Success  
of x6 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1172^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton x5 x6) props int
"
"19___________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) X1175^7 int)
"
"20____________________[+[Begin 
isType (propId singleton star star) X1175^7 int
"
"21_____________________[+[Begin 
of star X1176^8 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1177^8 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1175^7 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton star star) props int
"
"19-------------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) props int)
"
"19___________________[+[Begin 
pts_for props props X1171^6
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"17-----------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"17_________________[+[Begin 
pts_for set props X1169^5
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"15---------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"15_______________[+[Begin 
pts_for set props X1167^4
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star star) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"14______________[+[Begin 
of
 (forall_lam (forall singleton x5 \ propId singleton star star) x5 \
   id singleton star) X1178^5 int
"
"15_______________[+[Begin 
isType singleton X1179^5 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy (isType (propId singleton star star) X1180^5 int)
"
"16________________[+[Begin 
isType (propId singleton star star) X1180^5 int
"
"17_________________[+[Begin 
of star X1181^6 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of star X1182^6 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1180^5 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16----------------]-]Success  
isType (propId singleton star star) props int
"
"15---------------]-]Success  
pi x5 \
 locDecl x5 singleton => spy (isType (propId singleton star star) props int)
"
"15_______________[+[Begin 
pts_for set props X1183^5
"
"15---------------]-]Success  
pts_for set props props
"
"15_______________[+[Begin 
of (id singleton star) X1184^6 int
"
"16________________[+[Begin 
of star X1185^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"15_______________[+[Begin 
conv (propId singleton star star) (X1186^5 x5)
"
"15---------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"14--------------]-]Success  
of
 (forall_lam (forall singleton x5 \ propId singleton star star) x5 \
   id singleton star)
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton star star) int
"
"14______________[+[Begin 
conv
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton star star) (X1187^4 x4)
"
"14--------------]-]Success  
conv
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton star star)
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton star star)
"
"13-------------]-]Success  
of
 (forall_lam
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall_lam (forall singleton x5 \ propId singleton star star) x5 \
    id singleton star)
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton star star) int
"
"13_____________[+[Begin 
conv
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton star star) (X1188^3 x3)
"
"13-------------]-]Success  
conv
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton star star)
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton star star)
"
"12------------]-]Success  
of
 (forall_lam
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall_lam
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall_lam (forall singleton x5 \ propId singleton star star) x5 \
     id singleton star)
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton star star) int
"
"12____________[+[Begin 
conv
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton star star)
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x3)
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x4))
"
"13_____________[+[Begin 
hnf
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton star star) X1189^3
"
"13-------------]-]Success  
hnf
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton star star)
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton star star)
"
"13_____________[+[Begin 
hnf
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x3)
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x4)) X1190^3
"
"13-------------]-]Success  
hnf
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x3)
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x4))
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x3)
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x4))
"
"13_____________[+[Begin 
dconv
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton star star)
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x3)
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x4))
"
"14______________[+[Begin 
hnf
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton star star) X1191^4
"
"14--------------]-]Success  
hnf
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton star star)
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton star star)
"
"14______________[+[Begin 
hnf
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x3)
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x4)) X1192^4
"
"14--------------]-]Success  
hnf
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x3)
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x4))
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x3)
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x4))
"
"14______________[+[Begin 
dconv
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton star star)
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x3)
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x4))
"
"15_______________[+[Begin 
hnf
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton star star) X1193^5
"
"15---------------]-]Success  
hnf
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton star star)
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton star star)
"
"15_______________[+[Begin 
hnf
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x3)
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x4)) X1194^5
"
"15---------------]-]Success  
hnf
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x3)
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x4))
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x3)
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x4))
"
"15_______________[+[Begin 
dconv
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton star star)
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x3)
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x4))
"
"16________________[+[Begin 
hnf (propId singleton star star) X1195^6
"
"16----------------]-]Success  
hnf (propId singleton star star) (propId singleton star star)
"
"16________________[+[Begin 
hnf
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x3)
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x4)) X1196^6
"
"16----------------]-]Success  
hnf
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x3)
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x4))
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x3)
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x4))
"
"16________________[+[Begin 
dconv (propId singleton star star)
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x3)
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x4))
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
conv star
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x3)
"
"18__________________[+[Begin 
hnf star X1197^6
"
"18------------------]-]Success  
hnf star star
"
"18__________________[+[Begin 
hnf
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x3) X1198^6
"
"19___________________[+[Begin 
isType
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) _
 X1199^6
"
"20____________________[+[Begin 
isType (setPi singleton x6 \ propId singleton star star) X1200^6 X1199^6
"
"21_____________________[+[Begin 
of star X1201^7 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1202^7 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1203^6 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21_____________________[+[Begin 
pts_fun set props X1200^6
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pts_fun set props set
"
"20--------------------]-]Success  
isType (setPi singleton x6 \ propId singleton star star) set X1199^6
"
"20____________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1204^6 X1199^6
"
"21_____________________[+[Begin 
isType singleton X1205^7 X1199^6
"
"21---------------------]-]Success  
isType singleton set X1199^6
"
"21_____________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1206^7 X1199^6)
"
"22______________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1206^7
 X1199^6
"
"23_______________________[+[Begin 
isType singleton X1207^8 X1199^6
"
"23-----------------------]-]Success  
isType singleton set X1199^6
"
"23_______________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1208^8 X1199^6)
"
"24________________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1208^8 X1199^6
"
"25_________________________[+[Begin 
isType (propId singleton x7 x8) X1209^9 X1199^6
"
"26__________________________[+[Begin 
of x7 X1210^9 int
"
"26--------------------------]-]Success  
of x7 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x8 X1211^9 int
"
"26--------------------------]-]Success  
of x8 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1209^9 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton x7 x8) props X1199^6
"
"25_________________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X1212^9 X1199^6)
"
"26__________________________[+[Begin 
isType (propId singleton star star) X1212^9 X1199^6
"
"27___________________________[+[Begin 
of star X1213^10 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X1214^10 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1212^9 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton star star) props X1199^6
"
"25-------------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props X1199^6)
"
"25_________________________[+[Begin 
pts_for props props X1208^8
"
"25-------------------------]-]Success  
pts_for props props props
"
"24------------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props X1199^6
"
"23-----------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props X1199^6)
"
"23_______________________[+[Begin 
pts_for set props X1206^7
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props
 X1199^6
"
"21---------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     X1199^6)
"
"21_____________________[+[Begin 
pts_for set props X1204^6
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   X1199^6
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"19-------------------]-]Success  
isType
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) _
 X1199^6
"
"19___________________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isa star (X1215^6 x6) X1199^6
"
"20____________________[+[Begin 
of star X1216^7 X1199^6
"
"20--------------------]-]Success  
of star singleton X1199^6
"
"20____________________[+[Begin 
conv singleton (X1215^6 x6)
"
"20--------------------]-]Success  
conv singleton singleton
"
"19-------------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isa star singleton X1199^6
"
"19___________________[+[Begin 
isType (setPi singleton x6 \ propId singleton star star) X1217^6 X1199^6
"
"20____________________[+[Begin 
of star X1218^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1219^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1220^6 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20____________________[+[Begin 
pts_fun set props X1217^6
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
pts_fun set props set
"
"19-------------------]-]Success  
isType (setPi singleton x6 \ propId singleton star star) set X1199^6
"
"19___________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1221^6 X1199^6
"
"20____________________[+[Begin 
isType singleton X1222^7 X1199^6
"
"20--------------------]-]Success  
isType singleton set X1199^6
"
"20____________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1223^7 X1199^6)
"
"21_____________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1223^7
 X1199^6
"
"22______________________[+[Begin 
isType singleton X1224^8 X1199^6
"
"22----------------------]-]Success  
isType singleton set X1199^6
"
"22______________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1225^8 X1199^6)
"
"23_______________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1225^8 X1199^6
"
"24________________________[+[Begin 
isType (propId singleton x7 x8) X1226^9 X1199^6
"
"25_________________________[+[Begin 
of x7 X1227^9 int
"
"25-------------------------]-]Success  
of x7 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of x8 X1228^9 int
"
"25-------------------------]-]Success  
of x8 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1226^9 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
isType (propId singleton x7 x8) props X1199^6
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X1229^9 X1199^6)
"
"25_________________________[+[Begin 
isType (propId singleton star star) X1229^9 X1199^6
"
"26__________________________[+[Begin 
of star X1230^10 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X1231^10 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1229^9 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton star star) props X1199^6
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props X1199^6)
"
"24________________________[+[Begin 
pts_for props props X1225^8
"
"24------------------------]-]Success  
pts_for props props props
"
"23-----------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props X1199^6
"
"22----------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props X1199^6)
"
"22______________________[+[Begin 
pts_for set props X1223^7
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props
 X1199^6
"
"20--------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     X1199^6)
"
"20____________________[+[Begin 
pts_for set props X1221^6
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   X1199^6
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"19___________________[+[Begin 
of x3 X1232^6 X1199^6
"
"19-------------------]-]Success  
of x3
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X1199^6
"
"19___________________[+[Begin 
conv
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"19-------------------]-]Success  
conv
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"19___________________[+[Begin 
of star X1233^7 X1199^6
"
"19-------------------]-]Success  
of star singleton X1199^6
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"18------------------]-]Success  
hnf
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x3) star
"
"18__________________[+[Begin 
dconv star star
"
"18------------------]-]Success  
dconv star star
"
"17-----------------]-]Success  
conv star
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x3)
"
"17_________________[+[Begin 
conv star
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x4)
"
"18__________________[+[Begin 
hnf star X1234^6
"
"18------------------]-]Success  
hnf star star
"
"18__________________[+[Begin 
hnf
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x4) X1235^6
"
"19___________________[+[Begin 
isType
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) _
 X1236^6
"
"20____________________[+[Begin 
isType (setPi singleton x6 \ propId singleton star star) X1237^6 X1236^6
"
"21_____________________[+[Begin 
of star X1238^7 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1239^7 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1240^6 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21_____________________[+[Begin 
pts_fun set props X1237^6
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pts_fun set props set
"
"20--------------------]-]Success  
isType (setPi singleton x6 \ propId singleton star star) set X1236^6
"
"20____________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1241^6 X1236^6
"
"21_____________________[+[Begin 
isType singleton X1242^7 X1236^6
"
"21---------------------]-]Success  
isType singleton set X1236^6
"
"21_____________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1243^7 X1236^6)
"
"22______________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1243^7
 X1236^6
"
"23_______________________[+[Begin 
isType singleton X1244^8 X1236^6
"
"23-----------------------]-]Success  
isType singleton set X1236^6
"
"23_______________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1245^8 X1236^6)
"
"24________________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1245^8 X1236^6
"
"25_________________________[+[Begin 
isType (propId singleton x7 x8) X1246^9 X1236^6
"
"26__________________________[+[Begin 
of x7 X1247^9 int
"
"26--------------------------]-]Success  
of x7 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x8 X1248^9 int
"
"26--------------------------]-]Success  
of x8 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1246^9 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton x7 x8) props X1236^6
"
"25_________________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X1249^9 X1236^6)
"
"26__________________________[+[Begin 
isType (propId singleton star star) X1249^9 X1236^6
"
"27___________________________[+[Begin 
of star X1250^10 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X1251^10 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1249^9 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton star star) props X1236^6
"
"25-------------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props X1236^6)
"
"25_________________________[+[Begin 
pts_for props props X1245^8
"
"25-------------------------]-]Success  
pts_for props props props
"
"24------------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props X1236^6
"
"23-----------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props X1236^6)
"
"23_______________________[+[Begin 
pts_for set props X1243^7
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props
 X1236^6
"
"21---------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     X1236^6)
"
"21_____________________[+[Begin 
pts_for set props X1241^6
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   X1236^6
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"19-------------------]-]Success  
isType
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) _
 X1236^6
"
"19___________________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isa star (X1252^6 x6) X1236^6
"
"20____________________[+[Begin 
of star X1253^7 X1236^6
"
"20--------------------]-]Success  
of star singleton X1236^6
"
"20____________________[+[Begin 
conv singleton (X1252^6 x6)
"
"20--------------------]-]Success  
conv singleton singleton
"
"19-------------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isa star singleton X1236^6
"
"19___________________[+[Begin 
isType (setPi singleton x6 \ propId singleton star star) X1254^6 X1236^6
"
"20____________________[+[Begin 
of star X1255^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1256^7 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1257^6 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20____________________[+[Begin 
pts_fun set props X1254^6
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
pts_fun set props set
"
"19-------------------]-]Success  
isType (setPi singleton x6 \ propId singleton star star) set X1236^6
"
"19___________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1258^6 X1236^6
"
"20____________________[+[Begin 
isType singleton X1259^7 X1236^6
"
"20--------------------]-]Success  
isType singleton set X1236^6
"
"20____________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1260^7 X1236^6)
"
"21_____________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1260^7
 X1236^6
"
"22______________________[+[Begin 
isType singleton X1261^8 X1236^6
"
"22----------------------]-]Success  
isType singleton set X1236^6
"
"22______________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1262^8 X1236^6)
"
"23_______________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1262^8 X1236^6
"
"24________________________[+[Begin 
isType (propId singleton x7 x8) X1263^9 X1236^6
"
"25_________________________[+[Begin 
of x7 X1264^9 int
"
"25-------------------------]-]Success  
of x7 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of x8 X1265^9 int
"
"25-------------------------]-]Success  
of x8 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1263^9 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
isType (propId singleton x7 x8) props X1236^6
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X1266^9 X1236^6)
"
"25_________________________[+[Begin 
isType (propId singleton star star) X1266^9 X1236^6
"
"26__________________________[+[Begin 
of star X1267^10 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X1268^10 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1266^9 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton star star) props X1236^6
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props X1236^6)
"
"24________________________[+[Begin 
pts_for props props X1262^8
"
"24------------------------]-]Success  
pts_for props props props
"
"23-----------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props X1236^6
"
"22----------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props X1236^6)
"
"22______________________[+[Begin 
pts_for set props X1260^7
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props
 X1236^6
"
"20--------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     X1236^6)
"
"20____________________[+[Begin 
pts_for set props X1258^6
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star star) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   X1236^6
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"19___________________[+[Begin 
of x4 X1269^6 X1236^6
"
"19-------------------]-]Success  
of x4
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X1236^6
"
"19___________________[+[Begin 
conv
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"19-------------------]-]Success  
conv
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"19___________________[+[Begin 
of star X1270^7 X1236^6
"
"19-------------------]-]Success  
of star singleton X1236^6
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"18------------------]-]Success  
hnf
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x4) star
"
"18__________________[+[Begin 
dconv star star
"
"18------------------]-]Success  
dconv star star
"
"17-----------------]-]Success  
conv star
 (app
   (lambda
     (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \ star) x4)
"
"16----------------]-]Success  
dconv (propId singleton star star)
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x3)
   (app
     (lambda
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \ star) x4))
"
"15---------------]-]Success  
dconv
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton star star)
 (forall (forall singleton x5 \ propId singleton star star) x5 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x3)
    (app
      (lambda
        (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \ star) x4))
"
"14--------------]-]Success  
dconv
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton star star)
 (forall
   (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   forall (forall singleton x5 \ propId singleton star star) x5 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x3)
     (app
       (lambda
         (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \ star) x4))
"
"13-------------]-]Success  
dconv
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton star star)
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x3)
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x4))
"
"12------------]-]Success  
conv
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton star star)
 (forall
   (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \ propId singleton star star) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall (forall singleton x5 \ propId singleton star star) x5 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x3)
      (app
        (lambda
          (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \ star) x4))
"
"11-----------]-]Success  
of
 (pair
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) (x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5))
   (lambda
     (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ star)
   (forall_lam
     (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \
     forall_lam
      (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall_lam (forall singleton x5 \ propId singleton star star) x5 \
       id singleton star))
 (colSigma
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5)) int
"
"11___________[+[Begin 
pi x3 \
 locDecl x3
  (colSigma
    (setPi
      (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \ singleton) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) =>
  isType
   (colSigma
     (setPi
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ singleton) x4 \
     forall
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) _ int
"
"12____________[+[Begin 
isType
 (setPi
   (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton) X1271^4 int
"
"13_____________[+[Begin 
isType (setPi singleton x4 \ propId singleton star x0) X1272^4 int
"
"14______________[+[Begin 
of star X1273^5 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of x0 X1274^5 int
"
"14--------------]-]Success  
of x0 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X1275^4 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"14______________[+[Begin 
pts_fun set props X1272^4
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
isType (setPi singleton x4 \ propId singleton star x0) set int
"
"13_____________[+[Begin 
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star)
   X1276^4 int
"
"14______________[+[Begin 
isType singleton X1277^5 int
"
"14--------------]-]Success  
isType singleton set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1278^5 int)
"
"15_______________[+[Begin 
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) X1278^5
 int
"
"16________________[+[Begin 
isType singleton X1279^6 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     X1280^6 int)
"
"17_________________[+[Begin 
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 X1280^6 int
"
"18__________________[+[Begin 
isType (propId singleton x5 x6) X1281^7 int
"
"19___________________[+[Begin 
of x5 X1282^7 int
"
"19-------------------]-]Success  
of x5 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x6 X1283^7 int
"
"19-------------------]-]Success  
of x6 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1281^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton x5 x6) props int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) X1284^7 int)
"
"19___________________[+[Begin 
isType (propId singleton star star) X1284^7 int
"
"20____________________[+[Begin 
of star X1285^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1286^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1284^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 (propId singleton x5 x6) =>
  spy (isType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for props props X1280^6
"
"18------------------]-]Success  
pts_for props props props
"
"17-----------------]-]Success  
isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
 props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType (forall (propId singleton x5 x6) x7 \ propId singleton star star)
     props int)
"
"16________________[+[Begin 
pts_for set props X1278^5
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
isType
 (forall singleton x6 \
   forall (propId singleton x5 x6) x7 \ propId singleton star star) props int
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 singleton =>
  spy
   (isType
     (forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) props
     int)
"
"14______________[+[Begin 
pts_for set props X1276^4
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
pi x4 \
 locDecl x4 (setPi singleton x5 \ propId singleton star x0) =>
  isType
   (forall singleton x5 \
     forall singleton x6 \
      forall (propId singleton x5 x6) x7 \ propId singleton star star) props
   int
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"13_____________[+[Begin 
pts_fun set set X1271^4
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"13-------------]-]Success  
pts_fun set set set
"
"12------------]-]Success  
isType
 (setPi
   (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
   singleton) set int
"
"12____________[+[Begin 
pi x4 \
 locDecl x4
  (setPi
    (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X1287^4 int
"
"13_____________[+[Begin 
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) X1288^5
 int
"
"14______________[+[Begin 
isType (setPi singleton x5 \ propId singleton star x0) X1289^5 int
"
"15_______________[+[Begin 
of star X1290^6 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of x0 X1291^6 int
"
"15---------------]-]Success  
of x0 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X1292^5 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"15_______________[+[Begin 
pts_fun set props X1289^5
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
pts_fun set props set
"
"14--------------]-]Success  
isType (setPi singleton x5 \ propId singleton star x0) set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1293^5 int
"
"15_______________[+[Begin 
isType singleton X1294^6 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1295^6 int)
"
"16________________[+[Begin 
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1295^6
 int
"
"17_________________[+[Begin 
isType singleton X1296^7 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1297^7 int)
"
"18__________________[+[Begin 
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1297^7 int
"
"19___________________[+[Begin 
isType (propId singleton x6 x7) X1298^8 int
"
"20____________________[+[Begin 
of x6 X1299^8 int
"
"20--------------------]-]Success  
of x6 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of x7 X1300^8 int
"
"20--------------------]-]Success  
of x7 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1298^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton x6 x7) props int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) X1301^8 int)
"
"20____________________[+[Begin 
isType (propId singleton star star) X1301^8 int
"
"21_____________________[+[Begin 
of star X1302^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1303^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1301^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton star star) props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) props int)
"
"19___________________[+[Begin 
pts_for props props X1297^7
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"17_________________[+[Begin 
pts_for set props X1295^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"15_______________[+[Begin 
pts_for set props X1293^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) X1304^5 int)
"
"14______________[+[Begin 
isType
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) X1304^5 int
"
"15_______________[+[Begin 
isType
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X1305^6
 int
"
"16________________[+[Begin 
isType (setPi singleton x6 \ propId singleton star x0) X1306^6 int
"
"17_________________[+[Begin 
of star X1307^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of x0 X1308^7 int
"
"17-----------------]-]Success  
of x0 singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1309^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"17_________________[+[Begin 
pts_fun set props X1306^6
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
pts_fun set props set
"
"16----------------]-]Success  
isType (setPi singleton x6 \ propId singleton star x0) set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1310^6 int
"
"17_________________[+[Begin 
isType singleton X1311^7 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1312^7 int)
"
"18__________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1312^7
 int
"
"19___________________[+[Begin 
isType singleton X1313^8 int
"
"19-------------------]-]Success  
isType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1314^8 int)
"
"20____________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1314^8 int
"
"21_____________________[+[Begin 
isType (propId singleton x7 x8) X1315^9 int
"
"22______________________[+[Begin 
of x7 X1316^9 int
"
"22----------------------]-]Success  
of x7 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x8 X1317^9 int
"
"22----------------------]-]Success  
of x8 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1315^9 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
isType (propId singleton x7 x8) props int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X1318^9 int)
"
"22______________________[+[Begin 
isType (propId singleton star star) X1318^9 int
"
"23_______________________[+[Begin 
of star X1319^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1320^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1318^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
isType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for props props X1314^8
"
"21---------------------]-]Success  
pts_for props props props
"
"20--------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1312^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"17_________________[+[Begin 
pts_for set props X1310^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
isType
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X1321^6 int)
"
"16________________[+[Begin 
isType
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) X1321^6 int
"
"17_________________[+[Begin 
isType (forall singleton x7 \ propId singleton star star) X1322^7 int
"
"18__________________[+[Begin 
isType singleton X1323^7 int
"
"18------------------]-]Success  
isType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy (isType (propId singleton star star) X1324^7 int)
"
"19___________________[+[Begin 
isType (propId singleton star star) X1324^7 int
"
"20____________________[+[Begin 
of star X1325^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1326^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1324^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton => spy (isType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for set props X1322^7
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
isType (forall singleton x7 \ propId singleton star star) props int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 (forall singleton x8 \ propId singleton star star) =>
  spy (isType (propId singleton (app x4 x5) (app x4 x6)) X1327^7 int)
"
"18__________________[+[Begin 
isType (propId singleton (app x4 x5) (app x4 x6)) X1327^7 int
"
"19___________________[+[Begin 
of (app x4 x5) X1328^8 int
"
"20____________________[+[Begin 
of x4 (setPi X1329^8 X1330^8) int
"
"20--------------------]-]Success  
of x4
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"20____________________[+[Begin 
isa x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
of x5 X1331^8 int
"
"21---------------------]-]Success  
of x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"21---------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
isa x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"19-------------------]-]Success  
of (app x4 x5) singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of (app x4 x6) X1332^8 int
"
"20____________________[+[Begin 
of x4 (setPi X1333^8 X1334^8) int
"
"20--------------------]-]Success  
of x4
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"20____________________[+[Begin 
isa x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
of x6 X1335^8 int
"
"21---------------------]-]Success  
of x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"21---------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
isa x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"19-------------------]-]Success  
of (app x4 x6) singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1327^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton (app x4 x5) (app x4 x6)) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 (forall singleton x8 \ propId singleton star star) =>
  spy (isType (propId singleton (app x4 x5) (app x4 x6)) props int)
"
"17_________________[+[Begin 
pts_for props props X1321^6
"
"17-----------------]-]Success  
pts_for props props props
"
"16----------------]-]Success  
isType
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int)
"
"15_______________[+[Begin 
pts_for set props X1304^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
isType
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) props int)
"
"13_____________[+[Begin 
pts_for set props X1287^4
"
"13-------------]-]Success  
pts_for set props props
"
"12------------]-]Success  
pi x4 \
 locDecl x4
  (setPi
    (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
      forall singleton x6 \
       forall singleton x7 \
        forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
    singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int
"
"12____________[+[Begin 
pts_leq set set
"
"12------------]-]Success  
pts_leq set set
"
"12____________[+[Begin 
pts_leq props set
"
"12------------]-]Success  
pts_leq props set
"
"11-----------]-]Success  
pi x3 \
 locDecl x3
  (colSigma
    (setPi
      (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \ singleton) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) =>
  isType
   (colSigma
     (setPi
       (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \ propId singleton star star)
       x4 \ singleton) x4 \
     forall
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) _ int
"
"11___________[+[Begin 
pi x3 \
 pi x4 \
  locDecl x3
   (setPi
     (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) =>
   locDecl x4
    (forall
      (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x3 x5) (app x3 x6)) =>
    isa
     (pair
       (setPi
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) (x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7))
       (lambda
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         app x3
          (elim_colSigma x5 (x6 \
            colSigma (setPi singleton x7 \ propId singleton star star) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x6 \ x7 \
            pair (setPi singleton x8 \ propId singleton star star) (x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star)
             (lambda singleton x8 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x6 x8))
             (forall_lam singleton x8 \
               forall_lam singleton x9 \
                forall_lam (propId singleton x8 x9) x10 \
                 forall_app (forall_app (forall_app x7 x8) x9) x10)))
       (forall_lam
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall_lam
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall_lam (forall singleton x7 \ propId singleton star star) x7 \
           forall_app
            (forall_app
              (forall_app x4
                (elim_colSigma x5 (x8 \
                  colSigma (setPi singleton x9 \ propId singleton star star)
                   x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton star star) x8 \ x9 \
                  pair (setPi singleton x10 \ propId singleton star star)
                   (x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star)
                   (lambda singleton x10 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (id singleton star)) x0) star)
                        (fixMe "prova di symmetria")) (app x8 x10))
                   (forall_lam singleton x10 \
                     forall_lam singleton x11 \
                      forall_lam (propId singleton x10 x11) x12 \
                       forall_app (forall_app (forall_app x9 x10) x11) x12)))
              (elim_colSigma x6 (x8 \
                colSigma (setPi singleton x9 \ propId singleton star star)
                 x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x8 \ x9 \
                pair (setPi singleton x10 \ propId singleton star star)
                 (x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star)
                 (lambda singleton x10 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x0) star)
                      (fixMe "prova di symmetria")) (app x8 x10))
                 (forall_lam singleton x10 \
                   forall_lam singleton x11 \
                    forall_lam (propId singleton x10 x11) x12 \
                     forall_app (forall_app (forall_app x9 x10) x11) x12)))
            (forall_lam singleton x8 \ forall_app x7 x8)))
     (colSigma
       (setPi
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) int
"
"12____________[+[Begin 
of
 (pair
   (setPi
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) (x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall (forall singleton x8 \ propId singleton star star) x8 \
      propId singleton (app x5 x6) (app x5 x7))
   (lambda
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     app x3
      (elim_colSigma x5 (x6 \
        colSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x6 \ x7 \
        pair (setPi singleton x8 \ propId singleton star star) (x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
         (lambda singleton x8 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x6 x8))
         (forall_lam singleton x8 \
           forall_lam singleton x9 \
            forall_lam (propId singleton x8 x9) x10 \
             forall_app (forall_app (forall_app x7 x8) x9) x10)))
   (forall_lam
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall_lam
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall_lam (forall singleton x7 \ propId singleton star star) x7 \
       forall_app
        (forall_app
          (forall_app x4
            (elim_colSigma x5 (x8 \
              colSigma (setPi singleton x9 \ propId singleton star star) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x8 \ x9 \
              pair (setPi singleton x10 \ propId singleton star star) (x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star)
               (lambda singleton x10 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x0) star)
                    (fixMe "prova di symmetria")) (app x8 x10))
               (forall_lam singleton x10 \
                 forall_lam singleton x11 \
                  forall_lam (propId singleton x10 x11) x12 \
                   forall_app (forall_app (forall_app x9 x10) x11) x12)))
          (elim_colSigma x6 (x8 \
            colSigma (setPi singleton x9 \ propId singleton star star) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x8 \ x9 \
            pair (setPi singleton x10 \ propId singleton star star) (x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star)
             (lambda singleton x10 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x8 x10))
             (forall_lam singleton x10 \
               forall_lam singleton x11 \
                forall_lam (propId singleton x10 x11) x12 \
                 forall_app (forall_app (forall_app x9 x10) x11) x12)))
        (forall_lam singleton x8 \ forall_app x7 x8))) X1336^5 int
"
"13_____________[+[Begin 
isType (setPi singleton x5 \ propId singleton star x0) X1337^5 int
"
"14______________[+[Begin 
of star X1338^6 int
"
"14--------------]-]Success  
of star singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
of x0 X1339^6 int
"
"14--------------]-]Success  
of x0 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"14______________[+[Begin 
(pts_leq set set),
(X1340^5 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"14______________[+[Begin 
pts_fun set props X1337^5
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
pts_fun set props set
"
"13-------------]-]Success  
isType (setPi singleton x5 \ propId singleton star x0) set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1341^5 int
"
"14______________[+[Begin 
isType singleton X1342^6 int
"
"14--------------]-]Success  
isType singleton set int
"
"14______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1343^6 int)
"
"15_______________[+[Begin 
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1343^6
 int
"
"16________________[+[Begin 
isType singleton X1344^7 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1345^7 int)
"
"17_________________[+[Begin 
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1345^7 int
"
"18__________________[+[Begin 
isType (propId singleton x6 x7) X1346^8 int
"
"19___________________[+[Begin 
of x6 X1347^8 int
"
"19-------------------]-]Success  
of x6 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of x7 X1348^8 int
"
"19-------------------]-]Success  
of x7 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1346^8 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType (propId singleton x6 x7) props int
"
"18__________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) X1349^8 int)
"
"19___________________[+[Begin 
isType (propId singleton star star) X1349^8 int
"
"20____________________[+[Begin 
of star X1350^9 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1351^9 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1349^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for props props X1345^7
"
"18------------------]-]Success  
pts_for props props props
"
"17-----------------]-]Success  
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"16________________[+[Begin 
pts_for set props X1343^6
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"14--------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"14______________[+[Begin 
pts_for set props X1341^5
"
"14--------------]-]Success  
pts_for set props props
"
"13-------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"13_____________[+[Begin 
pts_leq set set
"
"13-------------]-]Success  
pts_leq set set
"
"13_____________[+[Begin 
pts_leq props set
"
"13-------------]-]Success  
pts_leq props set
"
"13_____________[+[Begin 
pts_fun set set X1352^5
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"13-------------]-]Success  
pts_fun set set set
"
"13_____________[+[Begin 
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) X1353^5
 int
"
"14______________[+[Begin 
isType (setPi singleton x5 \ propId singleton star x0) X1354^5 int
"
"15_______________[+[Begin 
of star X1355^6 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of x0 X1356^6 int
"
"15---------------]-]Success  
of x0 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X1357^5 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"15_______________[+[Begin 
pts_fun set props X1354^5
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
pts_fun set props set
"
"14--------------]-]Success  
isType (setPi singleton x5 \ propId singleton star x0) set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1358^5 int
"
"15_______________[+[Begin 
isType singleton X1359^6 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1360^6 int)
"
"16________________[+[Begin 
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1360^6
 int
"
"17_________________[+[Begin 
isType singleton X1361^7 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1362^7 int)
"
"18__________________[+[Begin 
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1362^7 int
"
"19___________________[+[Begin 
isType (propId singleton x6 x7) X1363^8 int
"
"20____________________[+[Begin 
of x6 X1364^8 int
"
"20--------------------]-]Success  
of x6 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of x7 X1365^8 int
"
"20--------------------]-]Success  
of x7 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1363^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton x6 x7) props int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) X1366^8 int)
"
"20____________________[+[Begin 
isType (propId singleton star star) X1366^8 int
"
"21_____________________[+[Begin 
of star X1367^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1368^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1366^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton star star) props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) props int)
"
"19___________________[+[Begin 
pts_for props props X1362^7
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"17_________________[+[Begin 
pts_for set props X1360^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"15_______________[+[Begin 
pts_for set props X1358^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"13-------------]-]Success  
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) set int
"
"13_____________[+[Begin 
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton
         (app
           (lambda
             (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             app x3
              (elim_colSigma x8 (x9 \
                colSigma (setPi singleton x10 \ propId singleton star star)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x9 \ x10 \
                pair (setPi singleton x11 \ propId singleton star star)
                 (x11 \
                 forall singleton x12 \
                  forall singleton x13 \
                   forall (propId singleton x12 x13) x14 \
                    propId singleton star star)
                 (lambda singleton x11 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x0) star)
                      (fixMe "prova di symmetria")) (app x9 x11))
                 (forall_lam singleton x11 \
                   forall_lam singleton x12 \
                    forall_lam (propId singleton x11 x12) x13 \
                     forall_app (forall_app (forall_app x10 x11) x12) x13)))
           x5)
         (app
           (lambda
             (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             app x3
              (elim_colSigma x8 (x9 \
                colSigma (setPi singleton x10 \ propId singleton star star)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x9 \ x10 \
                pair (setPi singleton x11 \ propId singleton star star)
                 (x11 \
                 forall singleton x12 \
                  forall singleton x13 \
                   forall (propId singleton x12 x13) x14 \
                    propId singleton star star)
                 (lambda singleton x11 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x0) star)
                      (fixMe "prova di symmetria")) (app x9 x11))
                 (forall_lam singleton x11 \
                   forall_lam singleton x12 \
                    forall_lam (propId singleton x11 x12) x13 \
                     forall_app (forall_app (forall_app x10 x11) x12) x13)))
           x6)) X1369^5 int)
"
"14______________[+[Begin 
isType
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 X1369^5 int
"
"15_______________[+[Begin 
isType
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) X1370^6
 int
"
"16________________[+[Begin 
isType (setPi singleton x6 \ propId singleton star x0) X1371^6 int
"
"17_________________[+[Begin 
of star X1372^7 int
"
"17-----------------]-]Success  
of star singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
of x0 X1373^7 int
"
"17-----------------]-]Success  
of x0 singleton int
"
"17_________________[+[Begin 
conv singleton singleton
"
"17-----------------]-]Success  
conv singleton singleton
"
"17_________________[+[Begin 
(pts_leq set set),
(X1374^6 = props)
"
"17-----------------]-]Success  
(pts_leq set set),
(props = props)
"
"17_________________[+[Begin 
pts_fun set props X1371^6
"
"18__________________[+[Begin 
pts_leq set set
"
"18------------------]-]Success  
pts_leq set set
"
"18__________________[+[Begin 
pts_leq props set
"
"18------------------]-]Success  
pts_leq props set
"
"17-----------------]-]Success  
pts_fun set props set
"
"16----------------]-]Success  
isType (setPi singleton x6 \ propId singleton star x0) set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1375^6 int
"
"17_________________[+[Begin 
isType singleton X1376^7 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1377^7 int)
"
"18__________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1377^7
 int
"
"19___________________[+[Begin 
isType singleton X1378^8 int
"
"19-------------------]-]Success  
isType singleton set int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1379^8 int)
"
"20____________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1379^8 int
"
"21_____________________[+[Begin 
isType (propId singleton x7 x8) X1380^9 int
"
"22______________________[+[Begin 
of x7 X1381^9 int
"
"22----------------------]-]Success  
of x7 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x8 X1382^9 int
"
"22----------------------]-]Success  
of x8 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1380^9 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
isType (propId singleton x7 x8) props int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X1383^9 int)
"
"22______________________[+[Begin 
isType (propId singleton star star) X1383^9 int
"
"23_______________________[+[Begin 
of star X1384^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1385^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1383^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22----------------------]-]Success  
isType (propId singleton star star) props int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props int)
"
"21_____________________[+[Begin 
pts_for props props X1379^8
"
"21---------------------]-]Success  
pts_for props props props
"
"20--------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"19___________________[+[Begin 
pts_for set props X1377^7
"
"19-------------------]-]Success  
pts_for set props props
"
"18------------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"17_________________[+[Begin 
pts_for set props X1375^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
isType
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton
        (app
          (lambda
            (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \
            app x3
             (elim_colSigma x8 (x9 \
               colSigma (setPi singleton x10 \ propId singleton star star)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x9 \ x10 \
               pair (setPi singleton x11 \ propId singleton star star) (x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star)
                (lambda singleton x11 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x9 x11))
                (forall_lam singleton x11 \
                  forall_lam singleton x12 \
                   forall_lam (propId singleton x11 x12) x13 \
                    forall_app (forall_app (forall_app x10 x11) x12) x13)))
          x5)
        (app
          (lambda
            (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \
            app x3
             (elim_colSigma x8 (x9 \
               colSigma (setPi singleton x10 \ propId singleton star star)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x9 \ x10 \
               pair (setPi singleton x11 \ propId singleton star star) (x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star)
                (lambda singleton x11 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x9 x11))
                (forall_lam singleton x11 \
                  forall_lam singleton x12 \
                   forall_lam (propId singleton x11 x12) x13 \
                    forall_app (forall_app (forall_app x10 x11) x12) x13)))
          x6)) X1386^6 int)
"
"16________________[+[Begin 
isType
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 X1386^6 int
"
"17_________________[+[Begin 
isType (forall singleton x7 \ propId singleton star star) X1387^7 int
"
"18__________________[+[Begin 
isType singleton X1388^7 int
"
"18------------------]-]Success  
isType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy (isType (propId singleton star star) X1389^7 int)
"
"19___________________[+[Begin 
isType (propId singleton star star) X1389^7 int
"
"20____________________[+[Begin 
of star X1390^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1391^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1389^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton star star) props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton => spy (isType (propId singleton star star) props int)
"
"18__________________[+[Begin 
pts_for set props X1387^7
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
isType (forall singleton x7 \ propId singleton star star) props int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 (forall singleton x8 \ propId singleton star star) =>
  spy
   (isType
     (propId singleton
       (app
         (lambda
           (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           app x3
            (elim_colSigma x8 (x9 \
              colSigma (setPi singleton x10 \ propId singleton star star)
               x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x9 \ x10 \
              pair (setPi singleton x11 \ propId singleton star star) (x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star)
               (lambda singleton x11 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x0) star)
                    (fixMe "prova di symmetria")) (app x9 x11))
               (forall_lam singleton x11 \
                 forall_lam singleton x12 \
                  forall_lam (propId singleton x11 x12) x13 \
                   forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
       (app
         (lambda
           (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           app x3
            (elim_colSigma x8 (x9 \
              colSigma (setPi singleton x10 \ propId singleton star star)
               x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x9 \ x10 \
              pair (setPi singleton x11 \ propId singleton star star) (x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star)
               (lambda singleton x11 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x0) star)
                    (fixMe "prova di symmetria")) (app x9 x11))
               (forall_lam singleton x11 \
                 forall_lam singleton x12 \
                  forall_lam (propId singleton x11 x12) x13 \
                   forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
     X1392^7 int)
"
"18__________________[+[Begin 
isType
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 X1392^7 int
"
"19___________________[+[Begin 
of
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
 X1393^8 int
"
"20____________________[+[Begin 
of
 (lambda
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   app x3
    (elim_colSigma x8 (x9 \
      colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x9 \ x10 \
      pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (setPi X1394^8 X1395^8) int
"
"21_____________________[+[Begin 
isType
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) _ int
"
"22______________________[+[Begin 
isType (setPi singleton x8 \ propId singleton star x0) X1396^8 int
"
"23_______________________[+[Begin 
of star X1397^9 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of x0 X1398^9 int
"
"23-----------------------]-]Success  
of x0 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1399^8 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X1396^8
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"22----------------------]-]Success  
isType (setPi singleton x8 \ propId singleton star x0) set int
"
"22______________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X1400^8 int
"
"23_______________________[+[Begin 
isType singleton X1401^9 int
"
"23-----------------------]-]Success  
isType singleton set int
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1402^9 int)
"
"24________________________[+[Begin 
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X1402^9
 int
"
"25_________________________[+[Begin 
isType singleton X1403^10 int
"
"25-------------------------]-]Success  
isType singleton set int
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1404^10 int)
"
"26__________________________[+[Begin 
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X1404^10 int
"
"27___________________________[+[Begin 
isType (propId singleton x9 x10) X1405^11 int
"
"28____________________________[+[Begin 
of x9 X1406^11 int
"
"28----------------------------]-]Success  
of x9 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x10 X1407^11 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1405^11 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton x9 x10) props int
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) X1408^11 int)
"
"28____________________________[+[Begin 
isType (propId singleton star star) X1408^11 int
"
"29_____________________________[+[Begin 
of star X1409^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X1410^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X1408^11 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
isType (propId singleton star star) props int
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) props int)
"
"27___________________________[+[Begin 
pts_for props props X1404^10
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props int
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X1402^9
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 int
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"23_______________________[+[Begin 
pts_for set props X1400^8
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props int
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
isType
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) _ int
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isa
   (app x3
     (elim_colSigma x8 (x9 \
       colSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (X1395^8 x8) int
"
"22______________________[+[Begin 
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) X1411^9 int
"
"23_______________________[+[Begin 
of x3 (setPi X1412^9 X1413^9) int
"
"23-----------------------]-]Success  
of x3
 (setPi
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"23_______________________[+[Begin 
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X1414^9 int
"
"25_________________________[+[Begin 
of x8 (colSigma X1415^9 X1416^9) int
"
"25-------------------------]-]Success  
of x8
 (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"25_________________________[+[Begin 
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"26__________________________[+[Begin 
isType (setPi singleton x10 \ propId singleton star star) X1417^10 int
"
"27___________________________[+[Begin 
of star X1418^11 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X1419^11 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1420^10 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27___________________________[+[Begin 
pts_fun set props X1417^10
"
"28____________________________[+[Begin 
pts_leq set set
"
"28----------------------------]-]Success  
pts_leq set set
"
"28____________________________[+[Begin 
pts_leq props set
"
"28----------------------------]-]Success  
pts_leq props set
"
"27---------------------------]-]Success  
pts_fun set props set
"
"26--------------------------]-]Success  
isType (setPi singleton x10 \ propId singleton star star) set int
"
"26__________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X1421^10 int
"
"27___________________________[+[Begin 
isType singleton X1422^11 int
"
"27---------------------------]-]Success  
isType singleton set int
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X1423^11 int)
"
"28____________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X1423^11 int
"
"29_____________________________[+[Begin 
isType singleton X1424^12 int
"
"29-----------------------------]-]Success  
isType singleton set int
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X1425^12 int)
"
"30______________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X1425^12 int
"
"31_______________________________[+[Begin 
isType (propId singleton x11 x12) X1426^13 int
"
"32________________________________[+[Begin 
of x11 X1427^13 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of x12 X1428^13 int
"
"32--------------------------------]-]Success  
of x12 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X1426^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
isType (propId singleton x11 x12) props int
"
"31_______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X1429^13 int)
"
"32________________________________[+[Begin 
isType (propId singleton star star) X1429^13 int
"
"33_________________________________[+[Begin 
of star X1430^14 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
of star X1431^14 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
(pts_leq set set),
(X1429^13 = props)
"
"33---------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"32--------------------------------]-]Success  
isType (propId singleton star star) props int
"
"31-------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props int)
"
"31_______________________________[+[Begin 
pts_for props props X1425^12
"
"31-------------------------------]-]Success  
pts_for props props props
"
"30------------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"29_____________________________[+[Begin 
pts_for set props X1423^11
"
"29-----------------------------]-]Success  
pts_for set props props
"
"28----------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X1421^10
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props int
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"25_________________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"26__________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X1432^11 int
"
"27___________________________[+[Begin 
of star X1433^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X1434^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1435^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27___________________________[+[Begin 
pts_fun set props X1436^11
"
"28____________________________[+[Begin 
pts_leq set set
"
"28----------------------------]-]Success  
pts_leq set set
"
"28____________________________[+[Begin 
pts_leq props set
"
"28----------------------------]-]Success  
pts_leq props set
"
"27---------------------------]-]Success  
pts_fun set props set
"
"27___________________________[+[Begin 
isType singleton X1437^11 int
"
"27---------------------------]-]Success  
isType singleton set int
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X1438^11 int)
"
"28____________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X1438^11 int
"
"29_____________________________[+[Begin 
isType singleton X1439^12 int
"
"29-----------------------------]-]Success  
isType singleton set int
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X1440^12 int)
"
"30______________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X1440^12 int
"
"31_______________________________[+[Begin 
isType (propId singleton x11 x12) X1441^13 int
"
"32________________________________[+[Begin 
of x11 X1442^13 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of x12 X1443^13 int
"
"32--------------------------------]-]Success  
of x12 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X1441^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
isType (propId singleton x11 x12) props int
"
"31_______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X1444^13 int)
"
"32________________________________[+[Begin 
isType (propId singleton star star) X1444^13 int
"
"33_________________________________[+[Begin 
of star X1445^14 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
of star X1446^14 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
(pts_leq set set),
(X1444^13 = props)
"
"33---------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"32--------------------------------]-]Success  
isType (propId singleton star star) props int
"
"31-------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props int)
"
"31_______________________________[+[Begin 
pts_for props props X1440^12
"
"31-------------------------------]-]Success  
pts_for props props props
"
"30------------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"29_____________________________[+[Begin 
pts_for set props X1438^11
"
"29-----------------------------]-]Success  
pts_for set props props
"
"28----------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X1447^11
"
"27---------------------------]-]Success  
pts_for set props props
"
"27___________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) X1448^11 int
"
"28____________________________[+[Begin 
isType singleton _ int
"
"28----------------------------]-]Success  
isType singleton _ int
"
"28____________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (X1449^11 x11) int
"
"29_____________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) X1450^12 int
"
"30______________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X1451^12 X1450^12) int
"
"31_______________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X1452^12 int
"
"32________________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X1453^12 X1452^12) int
"
"33_________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X1454^12 int
"
"34__________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X1455^12 int
"
"35___________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X1456^12 int
"
"36____________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X1457^12 X1456^12) int
"
"37_____________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X1458^12 int
"
"38______________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X1459^12 int
"
"39_______________________________________[+[Begin 
of (k_propId singleton) X1460^12 int
"
"39---------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 int
"
"39_______________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X1461^12 X1462^12)
"
"39---------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"39_______________________________________[+[Begin 
of star X1463^12 int
"
"39---------------------------------------]-]Success  
of star singleton int
"
"39_______________________________________[+[Begin 
conv singleton singleton
"
"39---------------------------------------]-]Success  
conv singleton singleton
"
"38--------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 int
"
"38______________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X1464^12 X1465^12)
"
"38--------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"38______________________________________[+[Begin 
of star X1466^12 int
"
"38--------------------------------------]-]Success  
of star singleton int
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"37_____________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X1457^12 X1456^12)
"
"37-------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"36------------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"36____________________________________[+[Begin 
isa (id singleton star) (propId singleton star star) int
"
"37_____________________________________[+[Begin 
of (id singleton star) X1467^12 int
"
"38______________________________________[+[Begin 
of star X1468^12 int
"
"38--------------------------------------]-]Success  
of star singleton int
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"37_____________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"37-------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"36------------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"35-----------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"35___________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X1469^12 X1470^12)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"35___________________________________[+[Begin 
of x0 X1471^12 int
"
"35-----------------------------------]-]Success  
of x0 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X1472^12 X1473^12)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"34__________________________________[+[Begin 
of star X1474^12 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"33_________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X1453^12 X1452^12)
"
"33---------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"32--------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"32________________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"32--------------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"31-------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"31_______________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X1451^12 X1450^12)
"
"31-------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"30------------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"30______________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"31_______________________________[+[Begin 
of (app x9 x11) X1475^12 int
"
"32________________________________[+[Begin 
of x9 (setPi X1476^12 X1477^12) int
"
"32--------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"32________________________________[+[Begin 
isa x11 singleton int
"
"33_________________________________[+[Begin 
of x11 X1478^12 int
"
"33---------------------------------]-]Success  
of x11 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
isa x11 singleton int
"
"31-------------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"31_______________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"31-------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"30------------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"29-----------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) (propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (propId singleton star star) (X1449^11 x11)
"
"29-----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"28----------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (propId singleton star star) int
"
"27---------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) (setPi singleton x11 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"27---------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"27___________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X1479^11 int
"
"28____________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X1480^12 int
"
"29_____________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X1481^13 int
"
"30______________________________[+[Begin 
of x11 X1482^13 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x12 X1483^13 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X1484^13 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30______________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X1485^14 int
"
"31_______________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X1486^14 int
"
"32________________________________[+[Begin 
of (forall_app x10 x11) X1487^14 int
"
"33_________________________________[+[Begin 
of x10 X1488^14 int
"
"33---------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X1489^14 X1490^14)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"33_________________________________[+[Begin 
of x11 X1491^14 int
"
"33---------------------------------]-]Success  
of x11 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X1492^14 X1493^14)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"32________________________________[+[Begin 
of x12 X1494^14 int
"
"32--------------------------------]-]Success  
of x12 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X1495^14 X1496^14)
"
"31-------------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x13 X1497^14 int
"
"31-------------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"31_______________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"31-------------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"30------------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"30______________________________[+[Begin 
conv (propId singleton star star) (X1498^13 x13)
"
"30------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"29-----------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X1499^12 x12)
"
"29-----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"28----------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X1500^11 x11)
"
"28----------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"25-------------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"24------------------------]-]Success  
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"24------------------------]-]Success  
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22----------------------]-]Success  
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) singleton
 int
"
"22______________________[+[Begin 
conv singleton (X1395^8 x8)
"
"22----------------------]-]Success  
conv singleton singleton
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isa
   (app x3
     (elim_colSigma x8 (x9 \
       colSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))) singleton
   int
"
"20--------------------]-]Success  
of
 (lambda
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   app x3
    (elim_colSigma x8 (x9 \
      colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x9 \ x10 \
      pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"20____________________[+[Begin 
isa x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
of x5 X1501^8 int
"
"21---------------------]-]Success  
of x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"21---------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
isa x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"19-------------------]-]Success  
of
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
of
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x6)
 X1502^8 int
"
"20____________________[+[Begin 
of
 (lambda
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   app x3
    (elim_colSigma x8 (x9 \
      colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x9 \ x10 \
      pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (setPi X1503^8 X1504^8) int
"
"21_____________________[+[Begin 
isType
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) _ int
"
"22______________________[+[Begin 
isType (setPi singleton x8 \ propId singleton star x0) X1505^8 int
"
"23_______________________[+[Begin 
of star X1506^9 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of x0 X1507^9 int
"
"23-----------------------]-]Success  
of x0 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1508^8 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X1505^8
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"22----------------------]-]Success  
isType (setPi singleton x8 \ propId singleton star x0) set int
"
"22______________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X1509^8 int
"
"23_______________________[+[Begin 
isType singleton X1510^9 int
"
"23-----------------------]-]Success  
isType singleton set int
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1511^9 int)
"
"24________________________[+[Begin 
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X1511^9
 int
"
"25_________________________[+[Begin 
isType singleton X1512^10 int
"
"25-------------------------]-]Success  
isType singleton set int
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1513^10 int)
"
"26__________________________[+[Begin 
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X1513^10 int
"
"27___________________________[+[Begin 
isType (propId singleton x9 x10) X1514^11 int
"
"28____________________________[+[Begin 
of x9 X1515^11 int
"
"28----------------------------]-]Success  
of x9 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x10 X1516^11 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1514^11 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton x9 x10) props int
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) X1517^11 int)
"
"28____________________________[+[Begin 
isType (propId singleton star star) X1517^11 int
"
"29_____________________________[+[Begin 
of star X1518^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X1519^12 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X1517^11 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
isType (propId singleton star star) props int
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) props int)
"
"27___________________________[+[Begin 
pts_for props props X1513^10
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props int
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X1511^9
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 int
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"23_______________________[+[Begin 
pts_for set props X1509^8
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props int
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
isType
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) _ int
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isa
   (app x3
     (elim_colSigma x8 (x9 \
       colSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (X1504^8 x8) int
"
"22______________________[+[Begin 
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) X1520^9 int
"
"23_______________________[+[Begin 
of x3 (setPi X1521^9 X1522^9) int
"
"23-----------------------]-]Success  
of x3
 (setPi
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"23_______________________[+[Begin 
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X1523^9 int
"
"25_________________________[+[Begin 
of x8 (colSigma X1524^9 X1525^9) int
"
"25-------------------------]-]Success  
of x8
 (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"25_________________________[+[Begin 
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"26__________________________[+[Begin 
isType (setPi singleton x10 \ propId singleton star star) X1526^10 int
"
"27___________________________[+[Begin 
of star X1527^11 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X1528^11 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1529^10 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27___________________________[+[Begin 
pts_fun set props X1526^10
"
"28____________________________[+[Begin 
pts_leq set set
"
"28----------------------------]-]Success  
pts_leq set set
"
"28____________________________[+[Begin 
pts_leq props set
"
"28----------------------------]-]Success  
pts_leq props set
"
"27---------------------------]-]Success  
pts_fun set props set
"
"26--------------------------]-]Success  
isType (setPi singleton x10 \ propId singleton star star) set int
"
"26__________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X1530^10 int
"
"27___________________________[+[Begin 
isType singleton X1531^11 int
"
"27---------------------------]-]Success  
isType singleton set int
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X1532^11 int)
"
"28____________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X1532^11 int
"
"29_____________________________[+[Begin 
isType singleton X1533^12 int
"
"29-----------------------------]-]Success  
isType singleton set int
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X1534^12 int)
"
"30______________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X1534^12 int
"
"31_______________________________[+[Begin 
isType (propId singleton x11 x12) X1535^13 int
"
"32________________________________[+[Begin 
of x11 X1536^13 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of x12 X1537^13 int
"
"32--------------------------------]-]Success  
of x12 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X1535^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
isType (propId singleton x11 x12) props int
"
"31_______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X1538^13 int)
"
"32________________________________[+[Begin 
isType (propId singleton star star) X1538^13 int
"
"33_________________________________[+[Begin 
of star X1539^14 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
of star X1540^14 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
(pts_leq set set),
(X1538^13 = props)
"
"33---------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"32--------------------------------]-]Success  
isType (propId singleton star star) props int
"
"31-------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props int)
"
"31_______________________________[+[Begin 
pts_for props props X1534^12
"
"31-------------------------------]-]Success  
pts_for props props props
"
"30------------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"29_____________________________[+[Begin 
pts_for set props X1532^11
"
"29-----------------------------]-]Success  
pts_for set props props
"
"28----------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X1530^10
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props int
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"25_________________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"26__________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X1541^11 int
"
"27___________________________[+[Begin 
of star X1542^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X1543^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1544^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27___________________________[+[Begin 
pts_fun set props X1545^11
"
"28____________________________[+[Begin 
pts_leq set set
"
"28----------------------------]-]Success  
pts_leq set set
"
"28____________________________[+[Begin 
pts_leq props set
"
"28----------------------------]-]Success  
pts_leq props set
"
"27---------------------------]-]Success  
pts_fun set props set
"
"27___________________________[+[Begin 
isType singleton X1546^11 int
"
"27---------------------------]-]Success  
isType singleton set int
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X1547^11 int)
"
"28____________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X1547^11 int
"
"29_____________________________[+[Begin 
isType singleton X1548^12 int
"
"29-----------------------------]-]Success  
isType singleton set int
"
"29_____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X1549^12 int)
"
"30______________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X1549^12 int
"
"31_______________________________[+[Begin 
isType (propId singleton x11 x12) X1550^13 int
"
"32________________________________[+[Begin 
of x11 X1551^13 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of x12 X1552^13 int
"
"32--------------------------------]-]Success  
of x12 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X1550^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
isType (propId singleton x11 x12) props int
"
"31_______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X1553^13 int)
"
"32________________________________[+[Begin 
isType (propId singleton star star) X1553^13 int
"
"33_________________________________[+[Begin 
of star X1554^14 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
of star X1555^14 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"33_________________________________[+[Begin 
(pts_leq set set),
(X1553^13 = props)
"
"33---------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"32--------------------------------]-]Success  
isType (propId singleton star star) props int
"
"31-------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props int)
"
"31_______________________________[+[Begin 
pts_for props props X1549^12
"
"31-------------------------------]-]Success  
pts_for props props props
"
"30------------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"29-----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"29_____________________________[+[Begin 
pts_for set props X1547^11
"
"29-----------------------------]-]Success  
pts_for set props props
"
"28----------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X1556^11
"
"27---------------------------]-]Success  
pts_for set props props
"
"27___________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) X1557^11 int
"
"28____________________________[+[Begin 
isType singleton _ int
"
"28----------------------------]-]Success  
isType singleton _ int
"
"28____________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (X1558^11 x11) int
"
"29_____________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) X1559^12 int
"
"30______________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X1560^12 X1559^12) int
"
"31_______________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X1561^12 int
"
"32________________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X1562^12 X1561^12) int
"
"33_________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X1563^12 int
"
"34__________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X1564^12 int
"
"35___________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X1565^12 int
"
"36____________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X1566^12 X1565^12) int
"
"37_____________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X1567^12 int
"
"38______________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X1568^12 int
"
"39_______________________________________[+[Begin 
of (k_propId singleton) X1569^12 int
"
"39---------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 int
"
"39_______________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X1570^12 X1571^12)
"
"39---------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"39_______________________________________[+[Begin 
of star X1572^12 int
"
"39---------------------------------------]-]Success  
of star singleton int
"
"39_______________________________________[+[Begin 
conv singleton singleton
"
"39---------------------------------------]-]Success  
conv singleton singleton
"
"38--------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 int
"
"38______________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X1573^12 X1574^12)
"
"38--------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"38______________________________________[+[Begin 
of star X1575^12 int
"
"38--------------------------------------]-]Success  
of star singleton int
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"37_____________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X1566^12 X1565^12)
"
"37-------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"36------------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"36____________________________________[+[Begin 
isa (id singleton star) (propId singleton star star) int
"
"37_____________________________________[+[Begin 
of (id singleton star) X1576^12 int
"
"38______________________________________[+[Begin 
of star X1577^12 int
"
"38--------------------------------------]-]Success  
of star singleton int
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"37_____________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"37-------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"36------------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"35-----------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"35___________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X1578^12 X1579^12)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"35___________________________________[+[Begin 
of x0 X1580^12 int
"
"35-----------------------------------]-]Success  
of x0 singleton int
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X1581^12 X1582^12)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"34__________________________________[+[Begin 
of star X1583^12 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"33_________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X1562^12 X1561^12)
"
"33---------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"32--------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"32________________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"32--------------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"31-------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"31_______________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X1560^12 X1559^12)
"
"31-------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"30------------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"30______________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"31_______________________________[+[Begin 
of (app x9 x11) X1584^12 int
"
"32________________________________[+[Begin 
of x9 (setPi X1585^12 X1586^12) int
"
"32--------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"32________________________________[+[Begin 
isa x11 singleton int
"
"33_________________________________[+[Begin 
of x11 X1587^12 int
"
"33---------------------------------]-]Success  
of x11 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
isa x11 singleton int
"
"31-------------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"31_______________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"31-------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"30------------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"29-----------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) (propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (propId singleton star star) (X1558^11 x11)
"
"29-----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"28----------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (propId singleton star star) int
"
"27---------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) (setPi singleton x11 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"27---------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"27___________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X1588^11 int
"
"28____________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X1589^12 int
"
"29_____________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X1590^13 int
"
"30______________________________[+[Begin 
of x11 X1591^13 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x12 X1592^13 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X1593^13 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30______________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X1594^14 int
"
"31_______________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X1595^14 int
"
"32________________________________[+[Begin 
of (forall_app x10 x11) X1596^14 int
"
"33_________________________________[+[Begin 
of x10 X1597^14 int
"
"33---------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X1598^14 X1599^14)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"33_________________________________[+[Begin 
of x11 X1600^14 int
"
"33---------------------------------]-]Success  
of x11 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X1601^14 X1602^14)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"32________________________________[+[Begin 
of x12 X1603^14 int
"
"32--------------------------------]-]Success  
of x12 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X1604^14 X1605^14)
"
"31-------------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x13 X1606^14 int
"
"31-------------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"31_______________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"31-------------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"30------------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"30______________________________[+[Begin 
conv (propId singleton star star) (X1607^13 x13)
"
"30------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"29-----------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X1608^12 x12)
"
"29-----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"28----------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X1609^11 x11)
"
"28----------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"25-------------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"24------------------------]-]Success  
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"24------------------------]-]Success  
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22----------------------]-]Success  
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) singleton
 int
"
"22______________________[+[Begin 
conv singleton (X1504^8 x8)
"
"22----------------------]-]Success  
conv singleton singleton
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isa
   (app x3
     (elim_colSigma x8 (x9 \
       colSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))) singleton
   int
"
"20--------------------]-]Success  
of
 (lambda
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   app x3
    (elim_colSigma x8 (x9 \
      colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
      x9 \ x10 \
      pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13)))
 (setPi
   (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \ singleton) int
"
"20____________________[+[Begin 
isa x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
of x6 X1610^8 int
"
"21---------------------]-]Success  
of x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"21---------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
isa x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"19-------------------]-]Success  
of
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x6)
 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"19___________________[+[Begin 
(pts_leq set set),
(X1392^7 = props)
"
"19-------------------]-]Success  
(pts_leq set set),
(props = props)
"
"18------------------]-]Success  
isType
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 (forall singleton x8 \ propId singleton star star) =>
  spy
   (isType
     (propId singleton
       (app
         (lambda
           (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           app x3
            (elim_colSigma x8 (x9 \
              colSigma (setPi singleton x10 \ propId singleton star star)
               x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x9 \ x10 \
              pair (setPi singleton x11 \ propId singleton star star) (x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star)
               (lambda singleton x11 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x0) star)
                    (fixMe "prova di symmetria")) (app x9 x11))
               (forall_lam singleton x11 \
                 forall_lam singleton x12 \
                  forall_lam (propId singleton x11 x12) x13 \
                   forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
       (app
         (lambda
           (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star) x8 \
           app x3
            (elim_colSigma x8 (x9 \
              colSigma (setPi singleton x10 \ propId singleton star star)
               x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star) x9 \ x10 \
              pair (setPi singleton x11 \ propId singleton star star) (x11 \
               forall singleton x12 \
                forall singleton x13 \
                 forall (propId singleton x12 x13) x14 \
                  propId singleton star star)
               (lambda singleton x11 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x0) star)
                    (fixMe "prova di symmetria")) (app x9 x11))
               (forall_lam singleton x11 \
                 forall_lam singleton x12 \
                  forall_lam (propId singleton x11 x12) x13 \
                   forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
     props int)
"
"17_________________[+[Begin 
pts_for props props X1386^6
"
"17-----------------]-]Success  
pts_for props props props
"
"16----------------]-]Success  
isType
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  spy
   (isType
     (forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton
        (app
          (lambda
            (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \
            app x3
             (elim_colSigma x8 (x9 \
               colSigma (setPi singleton x10 \ propId singleton star star)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x9 \ x10 \
               pair (setPi singleton x11 \ propId singleton star star) (x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star)
                (lambda singleton x11 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x9 x11))
                (forall_lam singleton x11 \
                  forall_lam singleton x12 \
                   forall_lam (propId singleton x11 x12) x13 \
                    forall_app (forall_app (forall_app x10 x11) x12) x13)))
          x5)
        (app
          (lambda
            (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star) x8 \
            app x3
             (elim_colSigma x8 (x9 \
               colSigma (setPi singleton x10 \ propId singleton star star)
                x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star) x9 \ x10 \
               pair (setPi singleton x11 \ propId singleton star star) (x11 \
                forall singleton x12 \
                 forall singleton x13 \
                  forall (propId singleton x12 x13) x14 \
                   propId singleton star star)
                (lambda singleton x11 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x9 x11))
                (forall_lam singleton x11 \
                  forall_lam singleton x12 \
                   forall_lam (propId singleton x11 x12) x13 \
                    forall_app (forall_app (forall_app x10 x11) x12) x13)))
          x6)) props int)
"
"15_______________[+[Begin 
pts_for set props X1369^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
isType
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 props int
"
"13-------------]-]Success  
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton
         (app
           (lambda
             (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             app x3
              (elim_colSigma x8 (x9 \
                colSigma (setPi singleton x10 \ propId singleton star star)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x9 \ x10 \
                pair (setPi singleton x11 \ propId singleton star star)
                 (x11 \
                 forall singleton x12 \
                  forall singleton x13 \
                   forall (propId singleton x12 x13) x14 \
                    propId singleton star star)
                 (lambda singleton x11 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x0) star)
                      (fixMe "prova di symmetria")) (app x9 x11))
                 (forall_lam singleton x11 \
                   forall_lam singleton x12 \
                    forall_lam (propId singleton x11 x12) x13 \
                     forall_app (forall_app (forall_app x10 x11) x12) x13)))
           x5)
         (app
           (lambda
             (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star) x8 \
             app x3
              (elim_colSigma x8 (x9 \
                colSigma (setPi singleton x10 \ propId singleton star star)
                 x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star) x9 \ x10 \
                pair (setPi singleton x11 \ propId singleton star star)
                 (x11 \
                 forall singleton x12 \
                  forall singleton x13 \
                   forall (propId singleton x12 x13) x14 \
                    propId singleton star star)
                 (lambda singleton x11 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x0) star)
                      (fixMe "prova di symmetria")) (app x9 x11))
                 (forall_lam singleton x11 \
                   forall_lam singleton x12 \
                    forall_lam (propId singleton x11 x12) x13 \
                     forall_app (forall_app (forall_app x10 x11) x12) x13)))
           x6)) props int)
"
"13_____________[+[Begin 
pts_for set props X1611^5
"
"13-------------]-]Success  
pts_for set props props
"
"13_____________[+[Begin 
of
 (lambda
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   app x3
    (elim_colSigma x5 (x6 \
      colSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x6 \ x7 \
      pair (setPi singleton x8 \ propId singleton star star) (x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
       (lambda singleton x8 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x6 x8))
       (forall_lam singleton x8 \
         forall_lam singleton x9 \
          forall_lam (propId singleton x8 x9) x10 \
           forall_app (forall_app (forall_app x7 x8) x9) x10))) X1612^5 int
"
"14______________[+[Begin 
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) _ int
"
"15_______________[+[Begin 
isType (setPi singleton x5 \ propId singleton star x0) X1613^5 int
"
"16________________[+[Begin 
of star X1614^6 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of x0 X1615^6 int
"
"16----------------]-]Success  
of x0 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X1616^5 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16________________[+[Begin 
pts_fun set props X1613^5
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
pts_fun set props set
"
"15---------------]-]Success  
isType (setPi singleton x5 \ propId singleton star x0) set int
"
"15_______________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1617^5 int
"
"16________________[+[Begin 
isType singleton X1618^6 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1619^6 int)
"
"17_________________[+[Begin 
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1619^6
 int
"
"18__________________[+[Begin 
isType singleton X1620^7 int
"
"18------------------]-]Success  
isType singleton set int
"
"18__________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1621^7 int)
"
"19___________________[+[Begin 
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1621^7 int
"
"20____________________[+[Begin 
isType (propId singleton x6 x7) X1622^8 int
"
"21_____________________[+[Begin 
of x6 X1623^8 int
"
"21---------------------]-]Success  
of x6 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x7 X1624^8 int
"
"21---------------------]-]Success  
of x7 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1622^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton x6 x7) props int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) X1625^8 int)
"
"21_____________________[+[Begin 
isType (propId singleton star star) X1625^8 int
"
"22______________________[+[Begin 
of star X1626^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1627^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1625^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
isType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for props props X1621^7
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"18------------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"18__________________[+[Begin 
pts_for set props X1619^6
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"16----------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"16________________[+[Begin 
pts_for set props X1617^5
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"14--------------]-]Success  
isType
 (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
   forall singleton x6 \
    forall singleton x7 \
     forall (propId singleton x6 x7) x8 \ propId singleton star star) _ int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  isa
   (app x3
     (elim_colSigma x5 (x6 \
       colSigma (setPi singleton x7 \ propId singleton star star) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x6 \ x7 \
       pair (setPi singleton x8 \ propId singleton star star) (x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
        (lambda singleton x8 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x6 x8))
        (forall_lam singleton x8 \
          forall_lam singleton x9 \
           forall_lam (propId singleton x8 x9) x10 \
            forall_app (forall_app (forall_app x7 x8) x9) x10))) (X1628^5 x5)
   int
"
"15_______________[+[Begin 
of
 (app x3
   (elim_colSigma x5 (x6 \
     colSigma (setPi singleton x7 \ propId singleton star star) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x6 \ x7 \
     pair (setPi singleton x8 \ propId singleton star star) (x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
      (lambda singleton x8 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x6 x8))
      (forall_lam singleton x8 \
        forall_lam singleton x9 \
         forall_lam (propId singleton x8 x9) x10 \
          forall_app (forall_app (forall_app x7 x8) x9) x10))) X1629^6 int
"
"16________________[+[Begin 
of x3 (setPi X1630^6 X1631^6) int
"
"16----------------]-]Success  
of x3
 (setPi
   (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   singleton) int
"
"16________________[+[Begin 
isa
 (elim_colSigma x5 (x6 \
   colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) x6 \
   x7 \
   pair (setPi singleton x8 \ propId singleton star star) (x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
    (lambda singleton x8 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x6 x8))
    (forall_lam singleton x8 \
      forall_lam singleton x9 \
       forall_lam (propId singleton x8 x9) x10 \
        forall_app (forall_app (forall_app x7 x8) x9) x10))
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"17_________________[+[Begin 
of
 (elim_colSigma x5 (x6 \
   colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) x6 \
   x7 \
   pair (setPi singleton x8 \ propId singleton star star) (x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
    (lambda singleton x8 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x6 x8))
    (forall_lam singleton x8 \
      forall_lam singleton x9 \
       forall_lam (propId singleton x8 x9) x10 \
        forall_app (forall_app (forall_app x7 x8) x9) x10)) X1632^6 int
"
"18__________________[+[Begin 
of x5 (colSigma X1633^6 X1634^6) int
"
"18------------------]-]Success  
of x5
 (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"18__________________[+[Begin 
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) _
   int
"
"19___________________[+[Begin 
isType (setPi singleton x7 \ propId singleton star star) X1635^7 int
"
"20____________________[+[Begin 
of star X1636^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1637^8 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1638^7 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20____________________[+[Begin 
pts_fun set props X1635^7
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
pts_fun set props set
"
"19-------------------]-]Success  
isType (setPi singleton x7 \ propId singleton star star) set int
"
"19___________________[+[Begin 
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  isType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star)
   X1639^7 int
"
"20____________________[+[Begin 
isType singleton X1640^8 int
"
"20--------------------]-]Success  
isType singleton set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1641^8 int)
"
"21_____________________[+[Begin 
isType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1641^8
 int
"
"22______________________[+[Begin 
isType singleton X1642^9 int
"
"22----------------------]-]Success  
isType singleton set int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1643^9 int)
"
"23_______________________[+[Begin 
isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1643^9 int
"
"24________________________[+[Begin 
isType (propId singleton x8 x9) X1644^10 int
"
"25_________________________[+[Begin 
of x8 X1645^10 int
"
"25-------------------------]-]Success  
of x8 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of x9 X1646^10 int
"
"25-------------------------]-]Success  
of x9 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1644^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
isType (propId singleton x8 x9) props int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (isType (propId singleton star star) X1647^10 int)
"
"25_________________________[+[Begin 
isType (propId singleton star star) X1647^10 int
"
"26__________________________[+[Begin 
of star X1648^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X1649^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1647^10 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton star star) props int
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (isType (propId singleton star star) props int)
"
"24________________________[+[Begin 
pts_for props props X1643^9
"
"24------------------------]-]Success  
pts_for props props props
"
"23-----------------------]-]Success  
isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"22______________________[+[Begin 
pts_for set props X1641^8
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
isType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"20____________________[+[Begin 
pts_for set props X1639^7
"
"20--------------------]-]Success  
pts_for set props props
"
"19-------------------]-]Success  
pi x7 \
 locDecl x7 (setPi singleton x8 \ propId singleton star star) =>
  isType
   (forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) props
   int
"
"19___________________[+[Begin 
pts_leq set set
"
"19-------------------]-]Success  
pts_leq set set
"
"19___________________[+[Begin 
pts_leq props set
"
"19-------------------]-]Success  
pts_leq props set
"
"18------------------]-]Success  
pi x6 \
 locDecl x6
  (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x7 \ propId singleton star star) x7 \
     forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) _
   int
"
"18__________________[+[Begin 
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propId singleton star x0) =>
   locDecl x7
    (forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x8 \ propId singleton star star) (x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
       (lambda singleton x8 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x6 x8))
       (forall_lam singleton x8 \
         forall_lam singleton x9 \
          forall_lam (propId singleton x8 x9) x10 \
           forall_app (forall_app (forall_app x7 x8) x9) x10))
     (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     int
"
"19___________________[+[Begin 
of
 (pair (setPi singleton x8 \ propId singleton star star) (x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
   (lambda singleton x8 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x6 x8))
   (forall_lam singleton x8 \
     forall_lam singleton x9 \
      forall_lam (propId singleton x8 x9) x10 \
       forall_app (forall_app (forall_app x7 x8) x9) x10)) X1650^8 int
"
"20____________________[+[Begin 
of star X1651^9 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of star X1652^9 int
"
"20--------------------]-]Success  
of star singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1653^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20____________________[+[Begin 
pts_fun set props X1654^8
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
pts_fun set props set
"
"20____________________[+[Begin 
isType singleton X1655^8 int
"
"20--------------------]-]Success  
isType singleton set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1656^8 int)
"
"21_____________________[+[Begin 
isType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) X1656^8
 int
"
"22______________________[+[Begin 
isType singleton X1657^9 int
"
"22----------------------]-]Success  
isType singleton set int
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     X1658^9 int)
"
"23_______________________[+[Begin 
isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 X1658^9 int
"
"24________________________[+[Begin 
isType (propId singleton x8 x9) X1659^10 int
"
"25_________________________[+[Begin 
of x8 X1660^10 int
"
"25-------------------------]-]Success  
of x8 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of x9 X1661^10 int
"
"25-------------------------]-]Success  
of x9 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1659^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24------------------------]-]Success  
isType (propId singleton x8 x9) props int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (isType (propId singleton star star) X1662^10 int)
"
"25_________________________[+[Begin 
isType (propId singleton star star) X1662^10 int
"
"26__________________________[+[Begin 
of star X1663^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X1664^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1662^10 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton star star) props int
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 (propId singleton x8 x9) =>
  spy (isType (propId singleton star star) props int)
"
"24________________________[+[Begin 
pts_for props props X1658^9
"
"24------------------------]-]Success  
pts_for props props props
"
"23-----------------------]-]Success  
isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 props int
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType (forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"22______________________[+[Begin 
pts_for set props X1656^8
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
isType
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) props
 int
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType
     (forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star)
     props int)
"
"20____________________[+[Begin 
pts_for set props X1665^8
"
"20--------------------]-]Success  
pts_for set props props
"
"20____________________[+[Begin 
of
 (lambda singleton x8 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x6 x8)) X1666^8 int
"
"21_____________________[+[Begin 
isType singleton _ int
"
"21---------------------]-]Success  
isType singleton _ int
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x6 x8)) (X1667^8 x8) int
"
"22______________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x6 x8)) X1668^9 int
"
"23_______________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X1669^9 X1668^9) int
"
"24________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria")) X1670^9
 int
"
"25_________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X1671^9 X1670^9) int
"
"26__________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X1672^9 int
"
"27___________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X1673^9 int
"
"28____________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X1674^9 int
"
"29_____________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X1675^9 X1674^9) int
"
"30______________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X1676^9 int
"
"31_______________________________[+[Begin 
of (forall_app (k_propId singleton) star) X1677^9 int
"
"32________________________________[+[Begin 
of (k_propId singleton) X1678^9 int
"
"32--------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x9 \
   forall singleton x10 \
    implies (propId singleton x9 x10)
     (forall singleton x11 \
       forall singleton x12 \
        implies (propId singleton x11 x12)
         (implies (propId singleton x9 x11) (propId singleton x10 x12)))) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x9 \
   forall singleton x10 \
    implies (propId singleton x9 x10)
     (forall singleton x11 \
       forall singleton x12 \
        implies (propId singleton x11 x12)
         (implies (propId singleton x9 x11) (propId singleton x10 x12))))
 (forall X1679^9 X1680^9)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x9 \
   forall singleton x10 \
    implies (propId singleton x9 x10)
     (forall singleton x11 \
       forall singleton x12 \
        implies (propId singleton x11 x12)
         (implies (propId singleton x9 x11) (propId singleton x10 x12))))
 (forall singleton x9 \
   forall singleton x10 \
    implies (propId singleton x9 x10)
     (forall singleton x11 \
       forall singleton x12 \
        implies (propId singleton x11 x12)
         (implies (propId singleton x9 x11) (propId singleton x10 x12))))
"
"32________________________________[+[Begin 
of star X1681^9 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x9 \
   implies (propId singleton star x9)
    (forall singleton x10 \
      forall singleton x11 \
       implies (propId singleton x10 x11)
        (implies (propId singleton star x10) (propId singleton x9 x11)))) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x9 \
   implies (propId singleton star x9)
    (forall singleton x10 \
      forall singleton x11 \
       implies (propId singleton x10 x11)
        (implies (propId singleton star x10) (propId singleton x9 x11))))
 (forall X1682^9 X1683^9)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x9 \
   implies (propId singleton star x9)
    (forall singleton x10 \
      forall singleton x11 \
       implies (propId singleton x10 x11)
        (implies (propId singleton star x10) (propId singleton x9 x11))))
 (forall singleton x9 \
   implies (propId singleton star x9)
    (forall singleton x10 \
      forall singleton x11 \
       implies (propId singleton x10 x11)
        (implies (propId singleton star x10) (propId singleton x9 x11))))
"
"31_______________________________[+[Begin 
of star X1684^9 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x9 \
     forall singleton x10 \
      implies (propId singleton x9 x10)
       (implies (propId singleton star x9) (propId singleton star x10)))) int
"
"30______________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x9 \
     forall singleton x10 \
      implies (propId singleton x9 x10)
       (implies (propId singleton star x9) (propId singleton star x10))))
 (implies X1675^9 X1674^9)
"
"30------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x9 \
     forall singleton x10 \
      implies (propId singleton x9 x10)
       (implies (propId singleton star x9) (propId singleton star x10))))
 (implies (propId singleton star star)
   (forall singleton x9 \
     forall singleton x10 \
      implies (propId singleton x9 x10)
       (implies (propId singleton star x9) (propId singleton star x10))))
"
"29-----------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x9 \
     forall singleton x10 \
      implies (propId singleton x9 x10)
       (implies (propId singleton star x9) (propId singleton star x10)))) int
"
"29_____________________________[+[Begin 
isa (id singleton star) (propId singleton star star) int
"
"30______________________________[+[Begin 
of (id singleton star) X1685^9 int
"
"31_______________________________[+[Begin 
of star X1686^9 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"30______________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"30------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"29-----------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"28----------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x9 \
   forall singleton x10 \
    implies (propId singleton x9 x10)
     (implies (propId singleton star x9) (propId singleton star x10))) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x9 \
   forall singleton x10 \
    implies (propId singleton x9 x10)
     (implies (propId singleton star x9) (propId singleton star x10)))
 (forall X1687^9 X1688^9)
"
"28----------------------------]-]Success  
conv
 (forall singleton x9 \
   forall singleton x10 \
    implies (propId singleton x9 x10)
     (implies (propId singleton star x9) (propId singleton star x10)))
 (forall singleton x9 \
   forall singleton x10 \
    implies (propId singleton x9 x10)
     (implies (propId singleton star x9) (propId singleton star x10)))
"
"28____________________________[+[Begin 
of x0 X1689^9 int
"
"28----------------------------]-]Success  
of x0 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"27---------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x9 \
   implies (propId singleton x0 x9)
    (implies (propId singleton star x0) (propId singleton star x9))) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x9 \
   implies (propId singleton x0 x9)
    (implies (propId singleton star x0) (propId singleton star x9)))
 (forall X1690^9 X1691^9)
"
"27---------------------------]-]Success  
conv
 (forall singleton x9 \
   implies (propId singleton x0 x9)
    (implies (propId singleton star x0) (propId singleton star x9)))
 (forall singleton x9 \
   implies (propId singleton x0 x9)
    (implies (propId singleton star x0) (propId singleton star x9)))
"
"27___________________________[+[Begin 
of star X1692^9 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"26--------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"26__________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X1671^9 X1670^9)
"
"26--------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"25-------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"25_________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"25-------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"24------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"24________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X1669^9 X1668^9)
"
"24------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"23-----------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"23_______________________[+[Begin 
isa (app x6 x8) (propId singleton star x0) int
"
"24________________________[+[Begin 
of (app x6 x8) X1693^9 int
"
"25_________________________[+[Begin 
of x6 (setPi X1694^9 X1695^9) int
"
"25-------------------------]-]Success  
of x6 (setPi singleton x9 \ propId singleton star x0) int
"
"25_________________________[+[Begin 
isa x8 singleton int
"
"26__________________________[+[Begin 
of x8 X1696^9 int
"
"26--------------------------]-]Success  
of x8 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"25-------------------------]-]Success  
isa x8 singleton int
"
"24------------------------]-]Success  
of (app x6 x8) (propId singleton star x0) int
"
"24________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"24------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"23-----------------------]-]Success  
isa (app x6 x8) (propId singleton star x0) int
"
"22----------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x6 x8)) (propId singleton star star) int
"
"22______________________[+[Begin 
conv (propId singleton star star) (X1667^8 x8)
"
"22----------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x6 x8)) (propId singleton star star) int
"
"20--------------------]-]Success  
of
 (lambda singleton x8 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x6 x8)) (setPi singleton x8 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv (setPi singleton x8 \ propId singleton star star)
 (setPi singleton x8 \ propId singleton star star)
"
"20--------------------]-]Success  
conv (setPi singleton x8 \ propId singleton star star)
 (setPi singleton x8 \ propId singleton star star)
"
"20____________________[+[Begin 
of
 (forall_lam singleton x8 \
   forall_lam singleton x9 \
    forall_lam (propId singleton x8 x9) x10 \
     forall_app (forall_app (forall_app x7 x8) x9) x10) X1697^8 int
"
"21_____________________[+[Begin 
of
 (forall_lam singleton x9 \
   forall_lam (propId singleton x8 x9) x10 \
    forall_app (forall_app (forall_app x7 x8) x9) x10) X1698^9 int
"
"22______________________[+[Begin 
of
 (forall_lam (propId singleton x8 x9) x10 \
   forall_app (forall_app (forall_app x7 x8) x9) x10) X1699^10 int
"
"23_______________________[+[Begin 
of x8 X1700^10 int
"
"23-----------------------]-]Success  
of x8 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of x9 X1701^10 int
"
"23-----------------------]-]Success  
of x9 singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1702^10 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
of (forall_app (forall_app (forall_app x7 x8) x9) x10) X1703^11 int
"
"24________________________[+[Begin 
of (forall_app (forall_app x7 x8) x9) X1704^11 int
"
"25_________________________[+[Begin 
of (forall_app x7 x8) X1705^11 int
"
"26__________________________[+[Begin 
of x7 X1706^11 int
"
"26--------------------------]-]Success  
of x7
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall X1707^11 X1708^11)
"
"26--------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26__________________________[+[Begin 
of x8 X1709^11 int
"
"26--------------------------]-]Success  
of x8 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"25-------------------------]-]Success  
of (forall_app x7 x8)
 (forall singleton x11 \
   forall (propId singleton x8 x11) x12 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (forall singleton x11 \
   forall (propId singleton x8 x11) x12 \ propId singleton star star)
 (forall X1710^11 X1711^11)
"
"25-------------------------]-]Success  
conv
 (forall singleton x11 \
   forall (propId singleton x8 x11) x12 \ propId singleton star star)
 (forall singleton x11 \
   forall (propId singleton x8 x11) x12 \ propId singleton star star)
"
"25_________________________[+[Begin 
of x9 X1712^11 int
"
"25-------------------------]-]Success  
of x9 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"24------------------------]-]Success  
of (forall_app (forall_app x7 x8) x9)
 (forall (propId singleton x8 x9) x11 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv (forall (propId singleton x8 x9) x11 \ propId singleton star star)
 (forall X1713^11 X1714^11)
"
"24------------------------]-]Success  
conv (forall (propId singleton x8 x9) x11 \ propId singleton star star)
 (forall (propId singleton x8 x9) x11 \ propId singleton star star)
"
"24________________________[+[Begin 
of x10 X1715^11 int
"
"24------------------------]-]Success  
of x10 (propId singleton x8 x9) int
"
"24________________________[+[Begin 
conv (propId singleton x8 x9) (propId singleton x8 x9)
"
"24------------------------]-]Success  
conv (propId singleton x8 x9) (propId singleton x8 x9)
"
"23-----------------------]-]Success  
of (forall_app (forall_app (forall_app x7 x8) x9) x10)
 (propId singleton star star) int
"
"23_______________________[+[Begin 
conv (propId singleton star star) (X1716^10 x10)
"
"23-----------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"22----------------------]-]Success  
of
 (forall_lam (propId singleton x8 x9) x10 \
   forall_app (forall_app (forall_app x7 x8) x9) x10)
 (forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (X1717^9 x9)
"
"22----------------------]-]Success  
conv (forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"21---------------------]-]Success  
of
 (forall_lam singleton x9 \
   forall_lam (propId singleton x8 x9) x10 \
    forall_app (forall_app (forall_app x7 x8) x9) x10)
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (X1718^8 x8)
"
"21---------------------]-]Success  
conv
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (forall singleton x9 \
   forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"20--------------------]-]Success  
of
 (forall_lam singleton x8 \
   forall_lam singleton x9 \
    forall_lam (propId singleton x8 x9) x10 \
     forall_app (forall_app (forall_app x7 x8) x9) x10)
 (forall singleton x8 \
   forall singleton x9 \
    forall (propId singleton x8 x9) x10 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (forall singleton x8 \
   forall singleton x9 \
    forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (forall singleton x8 \
   forall singleton x9 \
    forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (forall singleton x8 \
   forall singleton x9 \
    forall (propId singleton x8 x9) x10 \ propId singleton star star)
 (forall singleton x8 \
   forall singleton x9 \
    forall (propId singleton x8 x9) x10 \ propId singleton star star)
"
"19-------------------]-]Success  
of
 (pair (setPi singleton x8 \ propId singleton star star) (x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
   (lambda singleton x8 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x6 x8))
   (forall_lam singleton x8 \
     forall_lam singleton x9 \
      forall_lam (propId singleton x8 x9) x10 \
       forall_app (forall_app (forall_app x7 x8) x9) x10))
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"19___________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"19-------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"18------------------]-]Success  
pi x6 \
 pi x7 \
  locDecl x6 (setPi singleton x8 \ propId singleton star x0) =>
   locDecl x7
    (forall singleton x8 \
      forall singleton x9 \
       forall (propId singleton x8 x9) x10 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x8 \ propId singleton star star) (x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
       (lambda singleton x8 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x6 x8))
       (forall_lam singleton x8 \
         forall_lam singleton x9 \
          forall_lam (propId singleton x8 x9) x10 \
           forall_app (forall_app (forall_app x7 x8) x9) x10))
     (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     int
"
"17-----------------]-]Success  
of
 (elim_colSigma x5 (x6 \
   colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) x6 \
   x7 \
   pair (setPi singleton x8 \ propId singleton star star) (x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
    (lambda singleton x8 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x6 x8))
    (forall_lam singleton x8 \
      forall_lam singleton x9 \
       forall_lam (propId singleton x8 x9) x10 \
        forall_app (forall_app (forall_app x7 x8) x9) x10))
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"17_________________[+[Begin 
conv
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"17-----------------]-]Success  
conv
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star)
"
"16----------------]-]Success  
isa
 (elim_colSigma x5 (x6 \
   colSigma (setPi singleton x7 \ propId singleton star star) x7 \
    forall singleton x8 \
     forall singleton x9 \
      forall (propId singleton x8 x9) x10 \ propId singleton star star) x6 \
   x7 \
   pair (setPi singleton x8 \ propId singleton star star) (x8 \
    forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
    (lambda singleton x8 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x6 x8))
    (forall_lam singleton x8 \
      forall_lam singleton x9 \
       forall_lam (propId singleton x8 x9) x10 \
        forall_app (forall_app (forall_app x7 x8) x9) x10))
 (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
   forall singleton x7 \
    forall singleton x8 \
     forall (propId singleton x7 x8) x9 \ propId singleton star star) int
"
"15---------------]-]Success  
of
 (app x3
   (elim_colSigma x5 (x6 \
     colSigma (setPi singleton x7 \ propId singleton star star) x7 \
      forall singleton x8 \
       forall singleton x9 \
        forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x6 \ x7 \
     pair (setPi singleton x8 \ propId singleton star star) (x8 \
      forall singleton x9 \
       forall singleton x10 \
        forall (propId singleton x9 x10) x11 \ propId singleton star star)
      (lambda singleton x8 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x6 x8))
      (forall_lam singleton x8 \
        forall_lam singleton x9 \
         forall_lam (propId singleton x8 x9) x10 \
          forall_app (forall_app (forall_app x7 x8) x9) x10))) singleton int
"
"15_______________[+[Begin 
conv singleton (X1628^5 x5)
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
pi x5 \
 locDecl x5
  (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
    forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) =>
  isa
   (app x3
     (elim_colSigma x5 (x6 \
       colSigma (setPi singleton x7 \ propId singleton star star) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
       x6 \ x7 \
       pair (setPi singleton x8 \ propId singleton star star) (x8 \
        forall singleton x9 \
         forall singleton x10 \
          forall (propId singleton x9 x10) x11 \ propId singleton star star)
        (lambda singleton x8 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x6 x8))
        (forall_lam singleton x8 \
          forall_lam singleton x9 \
           forall_lam (propId singleton x8 x9) x10 \
            forall_app (forall_app (forall_app x7 x8) x9) x10))) singleton
   int
"
"13-------------]-]Success  
of
 (lambda
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   app x3
    (elim_colSigma x5 (x6 \
      colSigma (setPi singleton x7 \ propId singleton star star) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x6 \ x7 \
      pair (setPi singleton x8 \ propId singleton star star) (x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
       (lambda singleton x8 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x6 x8))
       (forall_lam singleton x8 \
         forall_lam singleton x9 \
          forall_lam (propId singleton x8 x9) x10 \
           forall_app (forall_app (forall_app x7 x8) x9) x10)))
 (setPi
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton) int
"
"13_____________[+[Begin 
conv
 (setPi
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton)
 (setPi
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton)
"
"13-------------]-]Success  
conv
 (setPi
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton)
 (setPi
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   singleton)
"
"13_____________[+[Begin 
of
 (forall_lam
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall_lam
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall_lam (forall singleton x7 \ propId singleton star star) x7 \
     forall_app
      (forall_app
        (forall_app x4
          (elim_colSigma x5 (x8 \
            colSigma (setPi singleton x9 \ propId singleton star star) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x8 \ x9 \
            pair (setPi singleton x10 \ propId singleton star star) (x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star)
             (lambda singleton x10 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x8 x10))
             (forall_lam singleton x10 \
               forall_lam singleton x11 \
                forall_lam (propId singleton x10 x11) x12 \
                 forall_app (forall_app (forall_app x9 x10) x11) x12)))
        (elim_colSigma x6 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (forall_lam singleton x8 \ forall_app x7 x8)) X1719^5 int
"
"14______________[+[Begin 
isType (setPi singleton x5 \ propId singleton star x0) X1720^5 int
"
"15_______________[+[Begin 
of star X1721^6 int
"
"15---------------]-]Success  
of star singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
of x0 X1722^6 int
"
"15---------------]-]Success  
of x0 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"15_______________[+[Begin 
(pts_leq set set),
(X1723^5 = props)
"
"15---------------]-]Success  
(pts_leq set set),
(props = props)
"
"15_______________[+[Begin 
pts_fun set props X1720^5
"
"16________________[+[Begin 
pts_leq set set
"
"16----------------]-]Success  
pts_leq set set
"
"16________________[+[Begin 
pts_leq props set
"
"16----------------]-]Success  
pts_leq props set
"
"15---------------]-]Success  
pts_fun set props set
"
"14--------------]-]Success  
isType (setPi singleton x5 \ propId singleton star x0) set int
"
"14______________[+[Begin 
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star)
   X1724^5 int
"
"15_______________[+[Begin 
isType singleton X1725^6 int
"
"15---------------]-]Success  
isType singleton set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1726^6 int)
"
"16________________[+[Begin 
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) X1726^6
 int
"
"17_________________[+[Begin 
isType singleton X1727^7 int
"
"17-----------------]-]Success  
isType singleton set int
"
"17_________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     X1728^7 int)
"
"18__________________[+[Begin 
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 X1728^7 int
"
"19___________________[+[Begin 
isType (propId singleton x6 x7) X1729^8 int
"
"20____________________[+[Begin 
of x6 X1730^8 int
"
"20--------------------]-]Success  
of x6 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
of x7 X1731^8 int
"
"20--------------------]-]Success  
of x7 singleton int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
(pts_leq set set),
(X1729^8 = props)
"
"20--------------------]-]Success  
(pts_leq set set),
(props = props)
"
"19-------------------]-]Success  
isType (propId singleton x6 x7) props int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) X1732^8 int)
"
"20____________________[+[Begin 
isType (propId singleton star star) X1732^8 int
"
"21_____________________[+[Begin 
of star X1733^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1734^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1732^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton star star) props int
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8 (propId singleton x6 x7) =>
  spy (isType (propId singleton star star) props int)
"
"19___________________[+[Begin 
pts_for props props X1728^7
"
"19-------------------]-]Success  
pts_for props props props
"
"18------------------]-]Success  
isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
 props int
"
"17-----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType (forall (propId singleton x6 x7) x8 \ propId singleton star star)
     props int)
"
"17_________________[+[Begin 
pts_for set props X1726^6
"
"17-----------------]-]Success  
pts_for set props props
"
"16----------------]-]Success  
isType
 (forall singleton x7 \
   forall (propId singleton x6 x7) x8 \ propId singleton star star) props int
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 singleton =>
  spy
   (isType
     (forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) props
     int)
"
"15_______________[+[Begin 
pts_for set props X1724^5
"
"15---------------]-]Success  
pts_for set props props
"
"14--------------]-]Success  
pi x5 \
 locDecl x5 (setPi singleton x6 \ propId singleton star x0) =>
  isType
   (forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \ propId singleton star star) props
   int
"
"14______________[+[Begin 
pts_leq set set
"
"14--------------]-]Success  
pts_leq set set
"
"14______________[+[Begin 
pts_leq props set
"
"14--------------]-]Success  
pts_leq props set
"
"14______________[+[Begin 
of
 (forall_lam
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall_lam (forall singleton x7 \ propId singleton star star) x7 \
    forall_app
     (forall_app
       (forall_app x4
         (elim_colSigma x5 (x8 \
           colSigma (setPi singleton x9 \ propId singleton star star) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x8 \ x9 \
           pair (setPi singleton x10 \ propId singleton star star) (x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star)
            (lambda singleton x10 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x8 x10))
            (forall_lam singleton x10 \
              forall_lam singleton x11 \
               forall_lam (propId singleton x10 x11) x12 \
                forall_app (forall_app (forall_app x9 x10) x11) x12)))
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (forall_lam singleton x8 \ forall_app x7 x8)) X1735^6 int
"
"15_______________[+[Begin 
isType (setPi singleton x6 \ propId singleton star x0) X1736^6 int
"
"16________________[+[Begin 
of star X1737^7 int
"
"16----------------]-]Success  
of star singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
of x0 X1738^7 int
"
"16----------------]-]Success  
of x0 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"16________________[+[Begin 
(pts_leq set set),
(X1739^6 = props)
"
"16----------------]-]Success  
(pts_leq set set),
(props = props)
"
"16________________[+[Begin 
pts_fun set props X1736^6
"
"17_________________[+[Begin 
pts_leq set set
"
"17-----------------]-]Success  
pts_leq set set
"
"17_________________[+[Begin 
pts_leq props set
"
"17-----------------]-]Success  
pts_leq props set
"
"16----------------]-]Success  
pts_fun set props set
"
"15---------------]-]Success  
isType (setPi singleton x6 \ propId singleton star x0) set int
"
"15_______________[+[Begin 
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star)
   X1740^6 int
"
"16________________[+[Begin 
isType singleton X1741^7 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1742^7 int)
"
"17_________________[+[Begin 
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) X1742^7
 int
"
"18__________________[+[Begin 
isType singleton X1743^8 int
"
"18------------------]-]Success  
isType singleton set int
"
"18__________________[+[Begin 
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     X1744^8 int)
"
"19___________________[+[Begin 
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 X1744^8 int
"
"20____________________[+[Begin 
isType (propId singleton x7 x8) X1745^9 int
"
"21_____________________[+[Begin 
of x7 X1746^9 int
"
"21---------------------]-]Success  
of x7 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x8 X1747^9 int
"
"21---------------------]-]Success  
of x8 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1745^9 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"20--------------------]-]Success  
isType (propId singleton x7 x8) props int
"
"20____________________[+[Begin 
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) X1748^9 int)
"
"21_____________________[+[Begin 
isType (propId singleton star star) X1748^9 int
"
"22______________________[+[Begin 
of star X1749^10 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1750^10 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1748^9 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21---------------------]-]Success  
isType (propId singleton star star) props int
"
"20--------------------]-]Success  
pi x9 \
 locDecl x9 (propId singleton x7 x8) =>
  spy (isType (propId singleton star star) props int)
"
"20____________________[+[Begin 
pts_for props props X1744^8
"
"20--------------------]-]Success  
pts_for props props props
"
"19-------------------]-]Success  
isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
 props int
"
"18------------------]-]Success  
pi x8 \
 locDecl x8 singleton =>
  spy
   (isType (forall (propId singleton x7 x8) x9 \ propId singleton star star)
     props int)
"
"18__________________[+[Begin 
pts_for set props X1742^7
"
"18------------------]-]Success  
pts_for set props props
"
"17-----------------]-]Success  
isType
 (forall singleton x8 \
   forall (propId singleton x7 x8) x9 \ propId singleton star star) props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 singleton =>
  spy
   (isType
     (forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) props
     int)
"
"16________________[+[Begin 
pts_for set props X1740^6
"
"16----------------]-]Success  
pts_for set props props
"
"15---------------]-]Success  
pi x6 \
 locDecl x6 (setPi singleton x7 \ propId singleton star x0) =>
  isType
   (forall singleton x7 \
     forall singleton x8 \
      forall (propId singleton x7 x8) x9 \ propId singleton star star) props
   int
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq props set
"
"15---------------]-]Success  
pts_leq props set
"
"15_______________[+[Begin 
of
 (forall_lam (forall singleton x7 \ propId singleton star star) x7 \
   forall_app
    (forall_app
      (forall_app x4
        (elim_colSigma x5 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (forall_lam singleton x8 \ forall_app x7 x8)) X1751^7 int
"
"16________________[+[Begin 
isType singleton X1752^7 int
"
"16----------------]-]Success  
isType singleton set int
"
"16________________[+[Begin 
pi x7 \
 locDecl x7 singleton =>
  spy (isType (propId singleton star star) X1753^7 int)
"
"17_________________[+[Begin 
isType (propId singleton star star) X1753^7 int
"
"18__________________[+[Begin 
of star X1754^8 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
of star X1755^8 int
"
"18------------------]-]Success  
of star singleton int
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
(pts_leq set set),
(X1753^7 = props)
"
"18------------------]-]Success  
(pts_leq set set),
(props = props)
"
"17-----------------]-]Success  
isType (propId singleton star star) props int
"
"16----------------]-]Success  
pi x7 \
 locDecl x7 singleton => spy (isType (propId singleton star star) props int)
"
"16________________[+[Begin 
pts_for set props X1756^7
"
"16----------------]-]Success  
pts_for set props props
"
"16________________[+[Begin 
of
 (forall_app
   (forall_app
     (forall_app x4
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (forall_lam singleton x8 \ forall_app x7 x8)) X1757^8 int
"
"17_________________[+[Begin 
of
 (forall_app
   (forall_app x4
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12))) X1758^8 int
"
"18__________________[+[Begin 
of
 (forall_app x4
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12))) X1759^8 int
"
"19___________________[+[Begin 
of x4 X1760^8 int
"
"19-------------------]-]Success  
of x4
 (forall
   (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   forall
    (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall (forall singleton x10 \ propId singleton star star) x10 \
     propId singleton (app x3 x8) (app x3 x9)) int
"
"19___________________[+[Begin 
conv
 (forall
   (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   forall
    (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall (forall singleton x10 \ propId singleton star star) x10 \
     propId singleton (app x3 x8) (app x3 x9)) (forall X1761^8 X1762^8)
"
"19-------------------]-]Success  
conv
 (forall
   (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   forall
    (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall (forall singleton x10 \ propId singleton star star) x10 \
     propId singleton (app x3 x8) (app x3 x9))
 (forall
   (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   forall
    (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
    x9 \
    forall (forall singleton x10 \ propId singleton star star) x10 \
     propId singleton (app x3 x8) (app x3 x9))
"
"19___________________[+[Begin 
of
 (elim_colSigma x5 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12)) X1763^8 int
"
"20____________________[+[Begin 
of x5 (colSigma X1764^8 X1765^8) int
"
"20--------------------]-]Success  
of x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   int
"
"21_____________________[+[Begin 
isType (setPi singleton x9 \ propId singleton star star) X1766^9 int
"
"22______________________[+[Begin 
of star X1767^10 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1768^10 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1769^9 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22______________________[+[Begin 
pts_fun set props X1766^9
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
pts_fun set props set
"
"21---------------------]-]Success  
isType (setPi singleton x9 \ propId singleton star star) set int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X1770^9 int
"
"22______________________[+[Begin 
isType singleton X1771^10 int
"
"22----------------------]-]Success  
isType singleton set int
"
"22______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1772^10 int)
"
"23_______________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1772^10 int
"
"24________________________[+[Begin 
isType singleton X1773^11 int
"
"24------------------------]-]Success  
isType singleton set int
"
"24________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1774^11 int)
"
"25_________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1774^11 int
"
"26__________________________[+[Begin 
isType (propId singleton x10 x11) X1775^12 int
"
"27___________________________[+[Begin 
of x10 X1776^12 int
"
"27---------------------------]-]Success  
of x10 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of x11 X1777^12 int
"
"27---------------------------]-]Success  
of x11 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1775^12 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton x10 x11) props int
"
"26__________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X1778^12 int)
"
"27___________________________[+[Begin 
isType (propId singleton star star) X1778^12 int
"
"28____________________________[+[Begin 
of star X1779^13 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X1780^13 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1778^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton star star) props int
"
"26--------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props int)
"
"26__________________________[+[Begin 
pts_for props props X1774^11
"
"26--------------------------]-]Success  
pts_for props props props
"
"25-------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props int
"
"24------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"24________________________[+[Begin 
pts_for set props X1772^10
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 int
"
"22----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"22______________________[+[Begin 
pts_for set props X1770^9
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props int
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   int
"
"20____________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     int
"
"21_____________________[+[Begin 
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12)) X1781^10 int
"
"22______________________[+[Begin 
of star X1782^11 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of star X1783^11 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X1784^10 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22______________________[+[Begin 
pts_fun set props X1785^10
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
pts_fun set props set
"
"22______________________[+[Begin 
isType singleton X1786^10 int
"
"22----------------------]-]Success  
isType singleton set int
"
"22______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1787^10 int)
"
"23_______________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1787^10 int
"
"24________________________[+[Begin 
isType singleton X1788^11 int
"
"24------------------------]-]Success  
isType singleton set int
"
"24________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1789^11 int)
"
"25_________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1789^11 int
"
"26__________________________[+[Begin 
isType (propId singleton x10 x11) X1790^12 int
"
"27___________________________[+[Begin 
of x10 X1791^12 int
"
"27---------------------------]-]Success  
of x10 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of x11 X1792^12 int
"
"27---------------------------]-]Success  
of x11 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1790^12 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton x10 x11) props int
"
"26__________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X1793^12 int)
"
"27___________________________[+[Begin 
isType (propId singleton star star) X1793^12 int
"
"28____________________________[+[Begin 
of star X1794^13 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X1795^13 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1793^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton star star) props int
"
"26--------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props int)
"
"26__________________________[+[Begin 
pts_for props props X1789^11
"
"26--------------------------]-]Success  
pts_for props props props
"
"25-------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props int
"
"24------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"24________________________[+[Begin 
pts_for set props X1787^10
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 int
"
"22----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"22______________________[+[Begin 
pts_for set props X1796^10
"
"22----------------------]-]Success  
pts_for set props props
"
"22______________________[+[Begin 
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) X1797^10 int
"
"23_______________________[+[Begin 
isType singleton _ int
"
"23-----------------------]-]Success  
isType singleton _ int
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (X1798^10 x10) int
"
"24________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) X1799^11 int
"
"25_________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X1800^11 X1799^11) int
"
"26__________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X1801^11 int
"
"27___________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X1802^11 X1801^11) int
"
"28____________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X1803^11 int
"
"29_____________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X1804^11 int
"
"30______________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X1805^11 int
"
"31_______________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X1806^11 X1805^11) int
"
"32________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X1807^11 int
"
"33_________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X1808^11 int
"
"34__________________________________[+[Begin 
of (k_propId singleton) X1809^11 int
"
"34----------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall X1810^11 X1811^11)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
"
"34__________________________________[+[Begin 
of star X1812^11 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall X1813^11 X1814^11)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
"
"33_________________________________[+[Begin 
of star X1815^11 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 int
"
"32________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies X1806^11 X1805^11)
"
"32--------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
"
"31-------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 int
"
"31_______________________________[+[Begin 
isa (id singleton star) (propId singleton star star) int
"
"32________________________________[+[Begin 
of (id singleton star) X1816^11 int
"
"33_________________________________[+[Begin 
of star X1817^11 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"32________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"32--------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"31-------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"30------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12))) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall X1818^11 X1819^11)
"
"30------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
"
"30______________________________[+[Begin 
of x0 X1820^11 int
"
"30------------------------------]-]Success  
of x0 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11))) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall X1821^11 X1822^11)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
"
"29_____________________________[+[Begin 
of star X1823^11 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"28____________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X1802^11 X1801^11)
"
"28----------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"27---------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"27___________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"27---------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"26--------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"26__________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X1800^11 X1799^11)
"
"26--------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"25-------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"25_________________________[+[Begin 
isa (app x8 x10) (propId singleton star x0) int
"
"26__________________________[+[Begin 
of (app x8 x10) X1824^11 int
"
"27___________________________[+[Begin 
of x8 (setPi X1825^11 X1826^11) int
"
"27---------------------------]-]Success  
of x8 (setPi singleton x11 \ propId singleton star x0) int
"
"27___________________________[+[Begin 
isa x10 singleton int
"
"28____________________________[+[Begin 
of x10 X1827^11 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"27---------------------------]-]Success  
isa x10 singleton int
"
"26--------------------------]-]Success  
of (app x8 x10) (propId singleton star x0) int
"
"26__________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"26--------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"25-------------------------]-]Success  
isa (app x8 x10) (propId singleton star x0) int
"
"24------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) (propId singleton star star) int
"
"24________________________[+[Begin 
conv (propId singleton star star) (X1798^10 x10)
"
"24------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (propId singleton star star) int
"
"22----------------------]-]Success  
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) (setPi singleton x10 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"22----------------------]-]Success  
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"22______________________[+[Begin 
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12) X1828^10 int
"
"23_______________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12) X1829^11 int
"
"24________________________[+[Begin 
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12) X1830^12 int
"
"25_________________________[+[Begin 
of x10 X1831^12 int
"
"25-------------------------]-]Success  
of x10 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of x11 X1832^12 int
"
"25-------------------------]-]Success  
of x11 singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X1833^12 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
of (forall_app (forall_app (forall_app x9 x10) x11) x12) X1834^13 int
"
"26__________________________[+[Begin 
of (forall_app (forall_app x9 x10) x11) X1835^13 int
"
"27___________________________[+[Begin 
of (forall_app x9 x10) X1836^13 int
"
"28____________________________[+[Begin 
of x9 X1837^13 int
"
"28----------------------------]-]Success  
of x9
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall X1838^13 X1839^13)
"
"28----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"28____________________________[+[Begin 
of x10 X1840^13 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"27---------------------------]-]Success  
of (forall_app x9 x10)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall X1841^13 X1842^13)
"
"27---------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
"
"27___________________________[+[Begin 
of x11 X1843^13 int
"
"27---------------------------]-]Success  
of x11 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"26--------------------------]-]Success  
of (forall_app (forall_app x9 x10) x11)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall X1844^13 X1845^13)
"
"26--------------------------]-]Success  
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star)
"
"26__________________________[+[Begin 
of x12 X1846^13 int
"
"26--------------------------]-]Success  
of x12 (propId singleton x10 x11) int
"
"26__________________________[+[Begin 
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"26--------------------------]-]Success  
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"25-------------------------]-]Success  
of (forall_app (forall_app (forall_app x9 x10) x11) x12)
 (propId singleton star star) int
"
"25_________________________[+[Begin 
conv (propId singleton star star) (X1847^12 x12)
"
"25-------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"24------------------------]-]Success  
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X1848^11 x11)
"
"24------------------------]-]Success  
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X1849^10 x10)
"
"23-----------------------]-]Success  
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"21---------------------]-]Success  
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"21---------------------]-]Success  
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"20--------------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     int
"
"19-------------------]-]Success  
of
 (elim_colSigma x5 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"19___________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"19-------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"18------------------]-]Success  
of
 (forall_app x4
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (forall
   (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   forall (forall singleton x9 \ propId singleton star star) x9 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x10 \
         colSigma (setPi singleton x11 \ propId singleton star star) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x10 \ x11 \
         pair (setPi singleton x12 \ propId singleton star star) (x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star)
          (lambda singleton x12 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x10 x12))
          (forall_lam singleton x12 \
            forall_lam singleton x13 \
             forall_lam (propId singleton x12 x13) x14 \
              forall_app (forall_app (forall_app x11 x12) x13) x14)))
     (app x3 x8)) int
"
"18__________________[+[Begin 
conv
 (forall
   (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   forall (forall singleton x9 \ propId singleton star star) x9 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x10 \
         colSigma (setPi singleton x11 \ propId singleton star star) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x10 \ x11 \
         pair (setPi singleton x12 \ propId singleton star star) (x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star)
          (lambda singleton x12 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x10 x12))
          (forall_lam singleton x12 \
            forall_lam singleton x13 \
             forall_lam (propId singleton x12 x13) x14 \
              forall_app (forall_app (forall_app x11 x12) x13) x14)))
     (app x3 x8)) (forall X1850^8 X1851^8)
"
"18------------------]-]Success  
conv
 (forall
   (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   forall (forall singleton x9 \ propId singleton star star) x9 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x10 \
         colSigma (setPi singleton x11 \ propId singleton star star) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x10 \ x11 \
         pair (setPi singleton x12 \ propId singleton star star) (x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star)
          (lambda singleton x12 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x10 x12))
          (forall_lam singleton x12 \
            forall_lam singleton x13 \
             forall_lam (propId singleton x12 x13) x14 \
              forall_app (forall_app (forall_app x11 x12) x13) x14)))
     (app x3 x8))
 (forall
   (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
     forall singleton x9 \
      forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
   x8 \
   forall (forall singleton x9 \ propId singleton star star) x9 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x10 \
         colSigma (setPi singleton x11 \ propId singleton star star) x11 \
          forall singleton x12 \
           forall singleton x13 \
            forall (propId singleton x12 x13) x14 \
             propId singleton star star) x10 \ x11 \
         pair (setPi singleton x12 \ propId singleton star star) (x12 \
          forall singleton x13 \
           forall singleton x14 \
            forall (propId singleton x13 x14) x15 \
             propId singleton star star)
          (lambda singleton x12 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x10 x12))
          (forall_lam singleton x12 \
            forall_lam singleton x13 \
             forall_lam (propId singleton x12 x13) x14 \
              forall_app (forall_app (forall_app x11 x12) x13) x14)))
     (app x3 x8))
"
"18__________________[+[Begin 
of
 (elim_colSigma x6 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12)) X1852^8 int
"
"19___________________[+[Begin 
of x6 (colSigma X1853^8 X1854^8) int
"
"19-------------------]-]Success  
of x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"19___________________[+[Begin 
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   int
"
"20____________________[+[Begin 
isType (setPi singleton x9 \ propId singleton star star) X1855^9 int
"
"21_____________________[+[Begin 
of star X1856^10 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1857^10 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1858^9 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21_____________________[+[Begin 
pts_fun set props X1855^9
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pts_fun set props set
"
"20--------------------]-]Success  
isType (setPi singleton x9 \ propId singleton star star) set int
"
"20____________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X1859^9 int
"
"21_____________________[+[Begin 
isType singleton X1860^10 int
"
"21---------------------]-]Success  
isType singleton set int
"
"21_____________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1861^10 int)
"
"22______________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1861^10 int
"
"23_______________________[+[Begin 
isType singleton X1862^11 int
"
"23-----------------------]-]Success  
isType singleton set int
"
"23_______________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1863^11 int)
"
"24________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1863^11 int
"
"25_________________________[+[Begin 
isType (propId singleton x10 x11) X1864^12 int
"
"26__________________________[+[Begin 
of x10 X1865^12 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x11 X1866^12 int
"
"26--------------------------]-]Success  
of x11 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1864^12 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton x10 x11) props int
"
"25_________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X1867^12 int)
"
"26__________________________[+[Begin 
isType (propId singleton star star) X1867^12 int
"
"27___________________________[+[Begin 
of star X1868^13 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X1869^13 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1867^12 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton star star) props int
"
"25-------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props int)
"
"25_________________________[+[Begin 
pts_for props props X1863^11
"
"25-------------------------]-]Success  
pts_for props props props
"
"24------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props int
"
"23-----------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"23_______________________[+[Begin 
pts_for set props X1861^10
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 int
"
"21---------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X1859^9
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props int
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"19-------------------]-]Success  
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   int
"
"19___________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     int
"
"20____________________[+[Begin 
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12)) X1870^10 int
"
"21_____________________[+[Begin 
of star X1871^11 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1872^11 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1873^10 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21_____________________[+[Begin 
pts_fun set props X1874^10
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pts_fun set props set
"
"21_____________________[+[Begin 
isType singleton X1875^10 int
"
"21---------------------]-]Success  
isType singleton set int
"
"21_____________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1876^10 int)
"
"22______________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1876^10 int
"
"23_______________________[+[Begin 
isType singleton X1877^11 int
"
"23-----------------------]-]Success  
isType singleton set int
"
"23_______________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1878^11 int)
"
"24________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1878^11 int
"
"25_________________________[+[Begin 
isType (propId singleton x10 x11) X1879^12 int
"
"26__________________________[+[Begin 
of x10 X1880^12 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x11 X1881^12 int
"
"26--------------------------]-]Success  
of x11 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1879^12 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton x10 x11) props int
"
"25_________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X1882^12 int)
"
"26__________________________[+[Begin 
isType (propId singleton star star) X1882^12 int
"
"27___________________________[+[Begin 
of star X1883^13 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X1884^13 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1882^12 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton star star) props int
"
"25-------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props int)
"
"25_________________________[+[Begin 
pts_for props props X1878^11
"
"25-------------------------]-]Success  
pts_for props props props
"
"24------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props int
"
"23-----------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"23_______________________[+[Begin 
pts_for set props X1876^10
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 int
"
"21---------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X1885^10
"
"21---------------------]-]Success  
pts_for set props props
"
"21_____________________[+[Begin 
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) X1886^10 int
"
"22______________________[+[Begin 
isType singleton _ int
"
"22----------------------]-]Success  
isType singleton _ int
"
"22______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (X1887^10 x10) int
"
"23_______________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) X1888^11 int
"
"24________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X1889^11 X1888^11) int
"
"25_________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X1890^11 int
"
"26__________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X1891^11 X1890^11) int
"
"27___________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X1892^11 int
"
"28____________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X1893^11 int
"
"29_____________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X1894^11 int
"
"30______________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X1895^11 X1894^11) int
"
"31_______________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X1896^11 int
"
"32________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X1897^11 int
"
"33_________________________________[+[Begin 
of (k_propId singleton) X1898^11 int
"
"33---------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall X1899^11 X1900^11)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
"
"33_________________________________[+[Begin 
of star X1901^11 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 int
"
"32________________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall X1902^11 X1903^11)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
"
"32________________________________[+[Begin 
of star X1904^11 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 int
"
"31_______________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies X1895^11 X1894^11)
"
"31-------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
"
"30------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 int
"
"30______________________________[+[Begin 
isa (id singleton star) (propId singleton star star) int
"
"31_______________________________[+[Begin 
of (id singleton star) X1905^11 int
"
"32________________________________[+[Begin 
of star X1906^11 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"31_______________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"31-------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"30------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"29-----------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12))) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall X1907^11 X1908^11)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
"
"29_____________________________[+[Begin 
of x0 X1909^11 int
"
"29-----------------------------]-]Success  
of x0 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11))) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall X1910^11 X1911^11)
"
"28----------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
"
"28____________________________[+[Begin 
of star X1912^11 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"27---------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"27___________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X1891^11 X1890^11)
"
"27---------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"26--------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"26__________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"26--------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"25-------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"25_________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X1889^11 X1888^11)
"
"25-------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"24------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"24________________________[+[Begin 
isa (app x8 x10) (propId singleton star x0) int
"
"25_________________________[+[Begin 
of (app x8 x10) X1913^11 int
"
"26__________________________[+[Begin 
of x8 (setPi X1914^11 X1915^11) int
"
"26--------------------------]-]Success  
of x8 (setPi singleton x11 \ propId singleton star x0) int
"
"26__________________________[+[Begin 
isa x10 singleton int
"
"27___________________________[+[Begin 
of x10 X1916^11 int
"
"27---------------------------]-]Success  
of x10 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"26--------------------------]-]Success  
isa x10 singleton int
"
"25-------------------------]-]Success  
of (app x8 x10) (propId singleton star x0) int
"
"25_________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"25-------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"24------------------------]-]Success  
isa (app x8 x10) (propId singleton star x0) int
"
"23-----------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) (propId singleton star star) int
"
"23_______________________[+[Begin 
conv (propId singleton star star) (X1887^10 x10)
"
"23-----------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"22----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (propId singleton star star) int
"
"21---------------------]-]Success  
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) (setPi singleton x10 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"21---------------------]-]Success  
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"21_____________________[+[Begin 
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12) X1917^10 int
"
"22______________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12) X1918^11 int
"
"23_______________________[+[Begin 
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12) X1919^12 int
"
"24________________________[+[Begin 
of x10 X1920^12 int
"
"24------------------------]-]Success  
of x10 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
of x11 X1921^12 int
"
"24------------------------]-]Success  
of x11 singleton int
"
"24________________________[+[Begin 
conv singleton singleton
"
"24------------------------]-]Success  
conv singleton singleton
"
"24________________________[+[Begin 
(pts_leq set set),
(X1922^12 = props)
"
"24------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"24________________________[+[Begin 
of (forall_app (forall_app (forall_app x9 x10) x11) x12) X1923^13 int
"
"25_________________________[+[Begin 
of (forall_app (forall_app x9 x10) x11) X1924^13 int
"
"26__________________________[+[Begin 
of (forall_app x9 x10) X1925^13 int
"
"27___________________________[+[Begin 
of x9 X1926^13 int
"
"27---------------------------]-]Success  
of x9
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall X1927^13 X1928^13)
"
"27---------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"27___________________________[+[Begin 
of x10 X1929^13 int
"
"27---------------------------]-]Success  
of x10 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"26--------------------------]-]Success  
of (forall_app x9 x10)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall X1930^13 X1931^13)
"
"26--------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
"
"26__________________________[+[Begin 
of x11 X1932^13 int
"
"26--------------------------]-]Success  
of x11 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"25-------------------------]-]Success  
of (forall_app (forall_app x9 x10) x11)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall X1933^13 X1934^13)
"
"25-------------------------]-]Success  
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star)
"
"25_________________________[+[Begin 
of x12 X1935^13 int
"
"25-------------------------]-]Success  
of x12 (propId singleton x10 x11) int
"
"25_________________________[+[Begin 
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"25-------------------------]-]Success  
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"24------------------------]-]Success  
of (forall_app (forall_app (forall_app x9 x10) x11) x12)
 (propId singleton star star) int
"
"24________________________[+[Begin 
conv (propId singleton star star) (X1936^12 x12)
"
"24------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"23-----------------------]-]Success  
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X1937^11 x11)
"
"23-----------------------]-]Success  
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X1938^10 x10)
"
"22----------------------]-]Success  
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"21---------------------]-]Success  
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"21_____________________[+[Begin 
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"21---------------------]-]Success  
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"20--------------------]-]Success  
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"19-------------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     int
"
"18------------------]-]Success  
of
 (elim_colSigma x6 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"18__________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"18------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"17-----------------]-]Success  
of
 (forall_app
   (forall_app x4
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x3
      (elim_colSigma x6 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))) int
"
"17_________________[+[Begin 
conv
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x3
      (elim_colSigma x6 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall X1939^8 X1940^8)
"
"17-----------------]-]Success  
conv
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x3
      (elim_colSigma x6 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))))
 (forall (forall singleton x8 \ propId singleton star star) x8 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13)))
    (app x3
      (elim_colSigma x6 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))))
"
"17_________________[+[Begin 
of (forall_lam singleton x8 \ forall_app x7 x8) X1941^8 int
"
"18__________________[+[Begin 
of (forall_app x7 x8) X1942^9 int
"
"19___________________[+[Begin 
of x7 X1943^9 int
"
"19-------------------]-]Success  
of x7 (forall singleton x9 \ propId singleton star star) int
"
"19___________________[+[Begin 
conv (forall singleton x9 \ propId singleton star star)
 (forall X1944^9 X1945^9)
"
"19-------------------]-]Success  
conv (forall singleton x9 \ propId singleton star star)
 (forall singleton x9 \ propId singleton star star)
"
"19___________________[+[Begin 
of x8 X1946^9 int
"
"19-------------------]-]Success  
of x8 singleton int
"
"19___________________[+[Begin 
conv singleton singleton
"
"19-------------------]-]Success  
conv singleton singleton
"
"18------------------]-]Success  
of (forall_app x7 x8) (propId singleton star star) int
"
"18__________________[+[Begin 
conv (propId singleton star star) (X1947^8 x8)
"
"18------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"17-----------------]-]Success  
of (forall_lam singleton x8 \ forall_app x7 x8)
 (forall singleton x8 \ propId singleton star star) int
"
"17_________________[+[Begin 
conv (forall singleton x8 \ propId singleton star star)
 (forall singleton x8 \ propId singleton star star)
"
"17-----------------]-]Success  
conv (forall singleton x8 \ propId singleton star star)
 (forall singleton x8 \ propId singleton star star)
"
"16----------------]-]Success  
of
 (forall_app
   (forall_app
     (forall_app x4
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (forall_lam singleton x8 \ forall_app x7 x8))
 (propId singleton
   (app x3
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (app x3
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))) int
"
"16________________[+[Begin 
conv
 (propId singleton
   (app x3
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (app x3
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (X1948^7 x7)
"
"16----------------]-]Success  
conv
 (propId singleton
   (app x3
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (app x3
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (propId singleton
   (app x3
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (app x3
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12))))
"
"15---------------]-]Success  
of
 (forall_lam (forall singleton x7 \ propId singleton star star) x7 \
   forall_app
    (forall_app
      (forall_app x4
        (elim_colSigma x5 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (forall_lam singleton x8 \ forall_app x7 x8))
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (app x3
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))) int
"
"15_______________[+[Begin 
conv
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (app x3
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (X1949^6 x6)
"
"15---------------]-]Success  
conv
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (app x3
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (app x3
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12))))
"
"14--------------]-]Success  
of
 (forall_lam
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall_lam (forall singleton x7 \ propId singleton star star) x7 \
    forall_app
     (forall_app
       (forall_app x4
         (elim_colSigma x5 (x8 \
           colSigma (setPi singleton x9 \ propId singleton star star) x9 \
            forall singleton x10 \
             forall singleton x11 \
              forall (propId singleton x10 x11) x12 \
               propId singleton star star) x8 \ x9 \
           pair (setPi singleton x10 \ propId singleton star star) (x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star)
            (lambda singleton x10 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x8 x10))
            (forall_lam singleton x10 \
              forall_lam singleton x11 \
               forall_lam (propId singleton x10 x11) x12 \
                forall_app (forall_app (forall_app x9 x10) x11) x12)))
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (forall_lam singleton x8 \ forall_app x7 x8))
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (app x3
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))) int
"
"14______________[+[Begin 
conv
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (app x3
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (X1950^5 x5)
"
"14--------------]-]Success  
conv
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (app x3
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (app x3
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12))))
"
"13-------------]-]Success  
of
 (forall_lam
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall_lam
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall_lam (forall singleton x7 \ propId singleton star star) x7 \
     forall_app
      (forall_app
        (forall_app x4
          (elim_colSigma x5 (x8 \
            colSigma (setPi singleton x9 \ propId singleton star star) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x8 \ x9 \
            pair (setPi singleton x10 \ propId singleton star star) (x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star)
             (lambda singleton x10 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x8 x10))
             (forall_lam singleton x10 \
               forall_lam singleton x11 \
                forall_lam (propId singleton x10 x11) x12 \
                 forall_app (forall_app (forall_app x9 x10) x11) x12)))
        (elim_colSigma x6 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (forall_lam singleton x8 \ forall_app x7 x8))
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app x3
        (elim_colSigma x5 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (app x3
        (elim_colSigma x6 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))) int
"
"13_____________[+[Begin 
conv
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app x3
        (elim_colSigma x5 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (app x3
        (elim_colSigma x6 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"14______________[+[Begin 
hnf
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app x3
        (elim_colSigma x5 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (app x3
        (elim_colSigma x6 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12))))
 X1951^5
"
"14--------------]-]Success  
hnf
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app x3
        (elim_colSigma x5 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (app x3
        (elim_colSigma x6 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app x3
        (elim_colSigma x5 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (app x3
        (elim_colSigma x6 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12))))
"
"14______________[+[Begin 
hnf
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 X1952^5
"
"14--------------]-]Success  
hnf
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"14______________[+[Begin 
dconv
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app x3
        (elim_colSigma x5 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (app x3
        (elim_colSigma x6 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"15_______________[+[Begin 
hnf
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (app x3
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))) X1953^6
"
"15---------------]-]Success  
hnf
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (app x3
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (app x3
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12))))
"
"15_______________[+[Begin 
hnf
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 X1954^6
"
"15---------------]-]Success  
hnf
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"15_______________[+[Begin 
dconv
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (app x3
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"16________________[+[Begin 
hnf
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (app x3
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))) X1955^7
"
"16----------------]-]Success  
hnf
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (app x3
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (app x3
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12))))
"
"16________________[+[Begin 
hnf
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 X1956^7
"
"16----------------]-]Success  
hnf
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"16________________[+[Begin 
dconv
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (app x3
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"17_________________[+[Begin 
hnf
 (propId singleton
   (app x3
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (app x3
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))) X1957^8
"
"17-----------------]-]Success  
hnf
 (propId singleton
   (app x3
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (app x3
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (propId singleton
   (app x3
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (app x3
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12))))
"
"17_________________[+[Begin 
hnf
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 X1958^8
"
"17-----------------]-]Success  
hnf
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"17_________________[+[Begin 
dconv
 (propId singleton
   (app x3
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (app x3
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"18__________________[+[Begin 
conv singleton singleton
"
"18------------------]-]Success  
conv singleton singleton
"
"18__________________[+[Begin 
conv
 (app x3
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
"
"19___________________[+[Begin 
hnf
 (app x3
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12))) X1959^8
"
"20____________________[+[Begin 
isType (setPi singleton x8 \ propId singleton star star) X1960^8 X1961^8
"
"21_____________________[+[Begin 
of star X1962^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X1963^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X1964^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21_____________________[+[Begin 
pts_fun set props X1960^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pts_fun set props set
"
"20--------------------]-]Success  
isType (setPi singleton x8 \ propId singleton star star) set X1961^8
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star star) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X1965^8 X1961^8
"
"21_____________________[+[Begin 
isType singleton X1966^9 X1961^8
"
"21---------------------]-]Success  
isType singleton set X1961^8
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1967^9 X1961^8)
"
"22______________________[+[Begin 
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X1967^9
 X1961^8
"
"23_______________________[+[Begin 
isType singleton X1968^10 X1961^8
"
"23-----------------------]-]Success  
isType singleton set X1961^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X1969^10 X1961^8)
"
"24________________________[+[Begin 
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X1969^10 X1961^8
"
"25_________________________[+[Begin 
isType (propId singleton x9 x10) X1970^11 X1961^8
"
"26__________________________[+[Begin 
of x9 X1971^11 int
"
"26--------------------------]-]Success  
of x9 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x10 X1972^11 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X1970^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton x9 x10) props X1961^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) X1973^11 X1961^8)
"
"26__________________________[+[Begin 
isType (propId singleton star star) X1973^11 X1961^8
"
"27___________________________[+[Begin 
of star X1974^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X1975^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X1973^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton star star) props X1961^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) props X1961^8)
"
"25_________________________[+[Begin 
pts_for props props X1969^10
"
"25-------------------------]-]Success  
pts_for props props props
"
"24------------------------]-]Success  
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props X1961^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X1961^8)
"
"23_______________________[+[Begin 
pts_for set props X1967^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 X1961^8
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X1961^8)
"
"21_____________________[+[Begin 
pts_for set props X1965^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star star) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props X1961^8
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"20____________________[+[Begin 
of
 (elim_colSigma x5 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12)) X1976^8 X1961^8
"
"21_____________________[+[Begin 
of x5 (colSigma X1977^8 X1978^8) X1961^8
"
"21---------------------]-]Success  
of x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X1961^8
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   X1961^8
"
"22______________________[+[Begin 
isType (setPi singleton x9 \ propId singleton star star) X1979^9 X1961^8
"
"23_______________________[+[Begin 
of star X1980^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1981^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1982^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X1979^9
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"22----------------------]-]Success  
isType (setPi singleton x9 \ propId singleton star star) set X1961^8
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X1983^9 X1961^8
"
"23_______________________[+[Begin 
isType singleton X1984^10 X1961^8
"
"23-----------------------]-]Success  
isType singleton set X1961^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1985^10 X1961^8)
"
"24________________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1985^10 X1961^8
"
"25_________________________[+[Begin 
isType singleton X1986^11 X1961^8
"
"25-------------------------]-]Success  
isType singleton set X1961^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X1987^11 X1961^8)
"
"26__________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X1987^11 X1961^8
"
"27___________________________[+[Begin 
isType (propId singleton x10 x11) X1988^12 X1961^8
"
"28____________________________[+[Begin 
of x10 X1989^12 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x11 X1990^12 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X1988^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton x10 x11) props X1961^8
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X1991^12 X1961^8)
"
"28____________________________[+[Begin 
isType (propId singleton star star) X1991^12 X1961^8
"
"29_____________________________[+[Begin 
of star X1992^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X1993^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X1991^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
isType (propId singleton star star) props X1961^8
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props X1961^8)
"
"27___________________________[+[Begin 
pts_for props props X1987^11
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X1961^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X1961^8)
"
"25_________________________[+[Begin 
pts_for set props X1985^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X1961^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X1961^8)
"
"23_______________________[+[Begin 
pts_for set props X1983^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props X1961^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   X1961^8
"
"21_____________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X1961^8
"
"22______________________[+[Begin 
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12)) X1994^10 X1961^8
"
"23_______________________[+[Begin 
of star X1995^11 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X1996^11 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X1997^10 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X1998^10
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"23_______________________[+[Begin 
isType singleton X1999^10 X1961^8
"
"23-----------------------]-]Success  
isType singleton set X1961^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2000^10 X1961^8)
"
"24________________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2000^10 X1961^8
"
"25_________________________[+[Begin 
isType singleton X2001^11 X1961^8
"
"25-------------------------]-]Success  
isType singleton set X1961^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2002^11 X1961^8)
"
"26__________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2002^11 X1961^8
"
"27___________________________[+[Begin 
isType (propId singleton x10 x11) X2003^12 X1961^8
"
"28____________________________[+[Begin 
of x10 X2004^12 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x11 X2005^12 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2003^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton x10 x11) props X1961^8
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X2006^12 X1961^8)
"
"28____________________________[+[Begin 
isType (propId singleton star star) X2006^12 X1961^8
"
"29_____________________________[+[Begin 
of star X2007^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2008^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2006^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
isType (propId singleton star star) props X1961^8
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props X1961^8)
"
"27___________________________[+[Begin 
pts_for props props X2002^11
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X1961^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X1961^8)
"
"25_________________________[+[Begin 
pts_for set props X2000^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X1961^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X1961^8)
"
"23_______________________[+[Begin 
pts_for set props X2009^10
"
"23-----------------------]-]Success  
pts_for set props props
"
"23_______________________[+[Begin 
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) X2010^10 X1961^8
"
"24________________________[+[Begin 
isType singleton _ X1961^8
"
"24------------------------]-]Success  
isType singleton _ X1961^8
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (X2011^10 x10) X1961^8
"
"25_________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) X2012^11 X1961^8
"
"26__________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X2013^11 X2012^11) X1961^8
"
"27___________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X2014^11 X1961^8
"
"28____________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X2015^11 X2014^11) X1961^8
"
"29_____________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X2016^11 X1961^8
"
"30______________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X2017^11 X1961^8
"
"31_______________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X2018^11 X1961^8
"
"32________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2019^11 X2018^11) X1961^8
"
"33_________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2020^11 X1961^8
"
"34__________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2021^11 X1961^8
"
"35___________________________________[+[Begin 
of (k_propId singleton) X2022^11 X1961^8
"
"35-----------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 X1961^8
"
"35___________________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall X2023^11 X2024^11)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
"
"35___________________________________[+[Begin 
of star X2025^11 X1961^8
"
"35-----------------------------------]-]Success  
of star singleton X1961^8
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 X1961^8
"
"34__________________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall X2026^11 X2027^11)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
"
"34__________________________________[+[Begin 
of star X2028^11 X1961^8
"
"34----------------------------------]-]Success  
of star singleton X1961^8
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 X1961^8
"
"33_________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies X2019^11 X2018^11)
"
"33---------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
"
"32--------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 X1961^8
"
"32________________________________[+[Begin 
isa (id singleton star) (propId singleton star star) X1961^8
"
"33_________________________________[+[Begin 
of (id singleton star) X2029^11 X1961^8
"
"34__________________________________[+[Begin 
of star X2030^11 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"33_________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"33---------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"32--------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"31-------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12))) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall X2031^11 X2032^11)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
"
"31_______________________________[+[Begin 
of x0 X2033^11 int
"
"31-------------------------------]-]Success  
of x0 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11))) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall X2034^11 X2035^11)
"
"30------------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
"
"30______________________________[+[Begin 
of star X2036^11 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"29_____________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2015^11 X2014^11)
"
"29-----------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"28----------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"28____________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"28----------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"27---------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"27___________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2013^11 X2012^11)
"
"27---------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"26--------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"26__________________________[+[Begin 
isa (app x8 x10) (propId singleton star x0) int
"
"27___________________________[+[Begin 
of (app x8 x10) X2037^11 int
"
"28____________________________[+[Begin 
of x8 (setPi X2038^11 X2039^11) int
"
"28----------------------------]-]Success  
of x8 (setPi singleton x11 \ propId singleton star x0) int
"
"28____________________________[+[Begin 
isa x10 singleton int
"
"29_____________________________[+[Begin 
of x10 X2040^11 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
isa x10 singleton int
"
"27---------------------------]-]Success  
of (app x8 x10) (propId singleton star x0) int
"
"27___________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"27---------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"26--------------------------]-]Success  
isa (app x8 x10) (propId singleton star x0) int
"
"25-------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) (propId singleton star star) int
"
"25_________________________[+[Begin 
conv (propId singleton star star) (X2011^10 x10)
"
"25-------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (propId singleton star star) int
"
"23-----------------------]-]Success  
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) (setPi singleton x10 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"23_______________________[+[Begin 
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12) X2041^10 int
"
"24________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12) X2042^11 int
"
"25_________________________[+[Begin 
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12) X2043^12 int
"
"26__________________________[+[Begin 
of x10 X2044^12 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x11 X2045^12 int
"
"26--------------------------]-]Success  
of x11 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2046^12 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
of (forall_app (forall_app (forall_app x9 x10) x11) x12) X2047^13 int
"
"27___________________________[+[Begin 
of (forall_app (forall_app x9 x10) x11) X2048^13 int
"
"28____________________________[+[Begin 
of (forall_app x9 x10) X2049^13 int
"
"29_____________________________[+[Begin 
of x9 X2050^13 int
"
"29-----------------------------]-]Success  
of x9
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall X2051^13 X2052^13)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of x10 X2053^13 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
of (forall_app x9 x10)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall X2054^13 X2055^13)
"
"28----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
"
"28____________________________[+[Begin 
of x11 X2056^13 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"27---------------------------]-]Success  
of (forall_app (forall_app x9 x10) x11)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall X2057^13 X2058^13)
"
"27---------------------------]-]Success  
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star)
"
"27___________________________[+[Begin 
of x12 X2059^13 int
"
"27---------------------------]-]Success  
of x12 (propId singleton x10 x11) int
"
"27___________________________[+[Begin 
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"27---------------------------]-]Success  
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"26--------------------------]-]Success  
of (forall_app (forall_app (forall_app x9 x10) x11) x12)
 (propId singleton star star) int
"
"26__________________________[+[Begin 
conv (propId singleton star star) (X2060^12 x12)
"
"26--------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"25-------------------------]-]Success  
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X2061^11 x11)
"
"25-------------------------]-]Success  
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"24------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X2062^10 x10)
"
"24------------------------]-]Success  
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"21---------------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     int
"
"20--------------------]-]Success  
of
 (elim_colSigma x5 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"19-------------------]-]Success  
hnf
 (app x3
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (app x3
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
"
"19___________________[+[Begin 
hnf
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
 X2063^8
"
"20____________________[+[Begin 
isType
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) _
 X2064^8
"
"21_____________________[+[Begin 
isType (setPi singleton x8 \ propId singleton star x0) X2065^8 X2064^8
"
"22______________________[+[Begin 
of star X2066^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x0 X2067^9 int
"
"22----------------------]-]Success  
of x0 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X2068^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22______________________[+[Begin 
pts_fun set props X2065^8
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
pts_fun set props set
"
"21---------------------]-]Success  
isType (setPi singleton x8 \ propId singleton star x0) set X2064^8
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X2069^8 X2064^8
"
"22______________________[+[Begin 
isType singleton X2070^9 X2064^8
"
"22----------------------]-]Success  
isType singleton set X2064^8
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2071^9 X2064^8)
"
"23_______________________[+[Begin 
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X2071^9
 X2064^8
"
"24________________________[+[Begin 
isType singleton X2072^10 X2064^8
"
"24------------------------]-]Success  
isType singleton set X2064^8
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2073^10 X2064^8)
"
"25_________________________[+[Begin 
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X2073^10 X2064^8
"
"26__________________________[+[Begin 
isType (propId singleton x9 x10) X2074^11 X2064^8
"
"27___________________________[+[Begin 
of x9 X2075^11 int
"
"27---------------------------]-]Success  
of x9 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of x10 X2076^11 int
"
"27---------------------------]-]Success  
of x10 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X2074^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton x9 x10) props X2064^8
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) X2077^11 X2064^8)
"
"27___________________________[+[Begin 
isType (propId singleton star star) X2077^11 X2064^8
"
"28____________________________[+[Begin 
of star X2078^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X2079^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2077^11 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton star star) props X2064^8
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) props X2064^8)
"
"26__________________________[+[Begin 
pts_for props props X2073^10
"
"26--------------------------]-]Success  
pts_for props props props
"
"25-------------------------]-]Success  
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props X2064^8
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X2064^8)
"
"24________________________[+[Begin 
pts_for set props X2071^9
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 X2064^8
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X2064^8)
"
"22______________________[+[Begin 
pts_for set props X2069^8
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props X2064^8
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
isType
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) _
 X2064^8
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isa
   (app x3
     (elim_colSigma x8 (x9 \
       colSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (X2080^8 x8) X2064^8
"
"21_____________________[+[Begin 
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) X2081^9
 X2064^8
"
"22______________________[+[Begin 
of x3 (setPi X2082^9 X2083^9) X2064^8
"
"22----------------------]-]Success  
of x3
 (setPi
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) X2064^8
"
"22______________________[+[Begin 
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2064^8
"
"23_______________________[+[Begin 
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X2084^9
 X2064^8
"
"24________________________[+[Begin 
of x8 (colSigma X2085^9 X2086^9) X2064^8
"
"24------------------------]-]Success  
of x8
 (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2064^8
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2064^8
"
"25_________________________[+[Begin 
isType (setPi singleton x10 \ propId singleton star star) X2087^10 X2064^8
"
"26__________________________[+[Begin 
of star X2088^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2089^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2090^10 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2087^10
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"25-------------------------]-]Success  
isType (setPi singleton x10 \ propId singleton star star) set X2064^8
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X2091^10 X2064^8
"
"26__________________________[+[Begin 
isType singleton X2092^11 X2064^8
"
"26--------------------------]-]Success  
isType singleton set X2064^8
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2093^11 X2064^8)
"
"27___________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2093^11 X2064^8
"
"28____________________________[+[Begin 
isType singleton X2094^12 X2064^8
"
"28----------------------------]-]Success  
isType singleton set X2064^8
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2095^12 X2064^8)
"
"29_____________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2095^12 X2064^8
"
"30______________________________[+[Begin 
isType (propId singleton x11 x12) X2096^13 X2064^8
"
"31_______________________________[+[Begin 
of x11 X2097^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2098^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2096^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
isType (propId singleton x11 x12) props X2064^8
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X2099^13 X2064^8)
"
"31_______________________________[+[Begin 
isType (propId singleton star star) X2099^13 X2064^8
"
"32________________________________[+[Begin 
of star X2100^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2101^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2099^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
isType (propId singleton star star) props X2064^8
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props X2064^8)
"
"30______________________________[+[Begin 
pts_for props props X2095^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2064^8
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2064^8)
"
"28____________________________[+[Begin 
pts_for set props X2093^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2064^8
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2064^8)
"
"26__________________________[+[Begin 
pts_for set props X2091^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props X2064^8
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2064^8
"
"24________________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2064^8
"
"25_________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X2102^11
 X2064^8
"
"26__________________________[+[Begin 
of star X2103^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2104^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2105^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2106^11
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"26__________________________[+[Begin 
isType singleton X2107^11 X2064^8
"
"26--------------------------]-]Success  
isType singleton set X2064^8
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2108^11 X2064^8)
"
"27___________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2108^11 X2064^8
"
"28____________________________[+[Begin 
isType singleton X2109^12 X2064^8
"
"28----------------------------]-]Success  
isType singleton set X2064^8
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2110^12 X2064^8)
"
"29_____________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2110^12 X2064^8
"
"30______________________________[+[Begin 
isType (propId singleton x11 x12) X2111^13 X2064^8
"
"31_______________________________[+[Begin 
of x11 X2112^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2113^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2111^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
isType (propId singleton x11 x12) props X2064^8
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X2114^13 X2064^8)
"
"31_______________________________[+[Begin 
isType (propId singleton star star) X2114^13 X2064^8
"
"32________________________________[+[Begin 
of star X2115^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2116^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2114^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
isType (propId singleton star star) props X2064^8
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props X2064^8)
"
"30______________________________[+[Begin 
pts_for props props X2110^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2064^8
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2064^8)
"
"28____________________________[+[Begin 
pts_for set props X2108^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2064^8
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2064^8)
"
"26__________________________[+[Begin 
pts_for set props X2117^11
"
"26--------------------------]-]Success  
pts_for set props props
"
"26__________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) X2118^11 X2064^8
"
"27___________________________[+[Begin 
isType singleton _ X2064^8
"
"27---------------------------]-]Success  
isType singleton _ X2064^8
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (X2119^11 x11) X2064^8
"
"28____________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) X2120^12 X2064^8
"
"29_____________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X2121^12 X2120^12) X2064^8
"
"30______________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X2122^12 X2064^8
"
"31_______________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X2123^12 X2122^12) X2064^8
"
"32________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X2124^12 X2064^8
"
"33_________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X2125^12 X2064^8
"
"34__________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X2126^12 X2064^8
"
"35___________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2127^12 X2126^12) X2064^8
"
"36____________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2128^12 X2064^8
"
"37_____________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2129^12 X2064^8
"
"38______________________________________[+[Begin 
of (k_propId singleton) X2130^12 X2064^8
"
"38--------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 X2064^8
"
"38______________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X2131^12 X2132^12)
"
"38--------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"38______________________________________[+[Begin 
of star X2133^12 X2064^8
"
"38--------------------------------------]-]Success  
of star singleton X2064^8
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 X2064^8
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X2134^12 X2135^12)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"37_____________________________________[+[Begin 
of star X2136^12 X2064^8
"
"37-------------------------------------]-]Success  
of star singleton X2064^8
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2064^8
"
"36____________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X2127^12 X2126^12)
"
"36------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"35-----------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2064^8
"
"35___________________________________[+[Begin 
isa (id singleton star) (propId singleton star star) X2064^8
"
"36____________________________________[+[Begin 
of (id singleton star) X2137^12 X2064^8
"
"37_____________________________________[+[Begin 
of star X2138^12 int
"
"37-------------------------------------]-]Success  
of star singleton int
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"36____________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"36------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"35-----------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"34----------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X2139^12 X2140^12)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"34__________________________________[+[Begin 
of x0 X2141^12 int
"
"34----------------------------------]-]Success  
of x0 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X2142^12 X2143^12)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"33_________________________________[+[Begin 
of star X2144^12 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"32________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2123^12 X2122^12)
"
"32--------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"31-------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"31_______________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"31-------------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"30------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"30______________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2121^12 X2120^12)
"
"30------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"29-----------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"29_____________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
of (app x9 x11) X2145^12 int
"
"31_______________________________[+[Begin 
of x9 (setPi X2146^12 X2147^12) int
"
"31-------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"31_______________________________[+[Begin 
isa x11 singleton int
"
"32________________________________[+[Begin 
of x11 X2148^12 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
isa x11 singleton int
"
"30------------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"30------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"29-----------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"28----------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) (propId singleton star star) int
"
"28____________________________[+[Begin 
conv (propId singleton star star) (X2119^11 x11)
"
"28----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (propId singleton star star) int
"
"26--------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) (setPi singleton x11 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26__________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X2149^11 int
"
"27___________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X2150^12 int
"
"28____________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X2151^13 int
"
"29_____________________________[+[Begin 
of x11 X2152^13 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x12 X2153^13 int
"
"29-----------------------------]-]Success  
of x12 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2154^13 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29_____________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X2155^14 int
"
"30______________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X2156^14 int
"
"31_______________________________[+[Begin 
of (forall_app x10 x11) X2157^14 int
"
"32________________________________[+[Begin 
of x10 X2158^14 int
"
"32--------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X2159^14 X2160^14)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"32________________________________[+[Begin 
of x11 X2161^14 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X2162^14 X2163^14)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x12 X2164^14 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X2165^14 X2166^14)
"
"30------------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"30______________________________[+[Begin 
of x13 X2167^14 int
"
"30------------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"30______________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"30------------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"29-----------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (propId singleton star star) (X2168^13 x13)
"
"29-----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"28----------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2169^12 x12)
"
"28----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2170^11 x11)
"
"27---------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"24------------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"23-----------------------]-]Success  
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"21---------------------]-]Success  
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) singleton
 int
"
"21_____________________[+[Begin 
conv singleton (X2080^8 x8)
"
"21---------------------]-]Success  
conv singleton singleton
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isa
   (app x3
     (elim_colSigma x8 (x9 \
       colSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))) singleton
   int
"
"20____________________[+[Begin 
isType (setPi singleton x8 \ propId singleton star x0) X2171^8 int
"
"21_____________________[+[Begin 
of star X2172^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x0 X2173^9 int
"
"21---------------------]-]Success  
of x0 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X2174^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21_____________________[+[Begin 
pts_fun set props X2171^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pts_fun set props set
"
"20--------------------]-]Success  
isType (setPi singleton x8 \ propId singleton star x0) set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X2175^8 int
"
"21_____________________[+[Begin 
isType singleton X2176^9 int
"
"21---------------------]-]Success  
isType singleton set int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2177^9 int)
"
"22______________________[+[Begin 
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X2177^9
 int
"
"23_______________________[+[Begin 
isType singleton X2178^10 int
"
"23-----------------------]-]Success  
isType singleton set int
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2179^10 int)
"
"24________________________[+[Begin 
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X2179^10 int
"
"25_________________________[+[Begin 
isType (propId singleton x9 x10) X2180^11 int
"
"26__________________________[+[Begin 
of x9 X2181^11 int
"
"26--------------------------]-]Success  
of x9 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x10 X2182^11 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2180^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton x9 x10) props int
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) X2183^11 int)
"
"26__________________________[+[Begin 
isType (propId singleton star star) X2183^11 int
"
"27___________________________[+[Begin 
of star X2184^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X2185^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X2183^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton star star) props int
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) props int)
"
"25_________________________[+[Begin 
pts_for props props X2179^10
"
"25-------------------------]-]Success  
pts_for props props props
"
"24------------------------]-]Success  
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props int
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"23_______________________[+[Begin 
pts_for set props X2177^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X2175^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props int
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"20____________________[+[Begin 
of x5 X2186^8 int
"
"20--------------------]-]Success  
of x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20____________________[+[Begin 
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) X2187^9 int
"
"21_____________________[+[Begin 
of x3 (setPi X2188^9 X2189^9) int
"
"21---------------------]-]Success  
of x3
 (setPi
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"21_____________________[+[Begin 
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22______________________[+[Begin 
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X2190^9 int
"
"23_______________________[+[Begin 
of x8 (colSigma X2191^9 X2192^9) int
"
"23-----------------------]-]Success  
of x8
 (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"24________________________[+[Begin 
isType (setPi singleton x10 \ propId singleton star star) X2193^10 int
"
"25_________________________[+[Begin 
of star X2194^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X2195^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X2196^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
pts_fun set props X2193^10
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pts_fun set props set
"
"24------------------------]-]Success  
isType (setPi singleton x10 \ propId singleton star star) set int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X2197^10 int
"
"25_________________________[+[Begin 
isType singleton X2198^11 int
"
"25-------------------------]-]Success  
isType singleton set int
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2199^11 int)
"
"26__________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2199^11 int
"
"27___________________________[+[Begin 
isType singleton X2200^12 int
"
"27---------------------------]-]Success  
isType singleton set int
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2201^12 int)
"
"28____________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2201^12 int
"
"29_____________________________[+[Begin 
isType (propId singleton x11 x12) X2202^13 int
"
"30______________________________[+[Begin 
of x11 X2203^13 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x12 X2204^13 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2202^13 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
isType (propId singleton x11 x12) props int
"
"29_____________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X2205^13 int)
"
"30______________________________[+[Begin 
isType (propId singleton star star) X2205^13 int
"
"31_______________________________[+[Begin 
of star X2206^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of star X2207^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2205^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
isType (propId singleton star star) props int
"
"29-----------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props int)
"
"29_____________________________[+[Begin 
pts_for props props X2201^12
"
"29-----------------------------]-]Success  
pts_for props props props
"
"28----------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X2199^11
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X2197^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props int
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"23_______________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"24________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X2208^11 int
"
"25_________________________[+[Begin 
of star X2209^12 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X2210^12 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X2211^11 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
pts_fun set props X2212^11
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pts_fun set props set
"
"25_________________________[+[Begin 
isType singleton X2213^11 int
"
"25-------------------------]-]Success  
isType singleton set int
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2214^11 int)
"
"26__________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2214^11 int
"
"27___________________________[+[Begin 
isType singleton X2215^12 int
"
"27---------------------------]-]Success  
isType singleton set int
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2216^12 int)
"
"28____________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2216^12 int
"
"29_____________________________[+[Begin 
isType (propId singleton x11 x12) X2217^13 int
"
"30______________________________[+[Begin 
of x11 X2218^13 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x12 X2219^13 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2217^13 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
isType (propId singleton x11 x12) props int
"
"29_____________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X2220^13 int)
"
"30______________________________[+[Begin 
isType (propId singleton star star) X2220^13 int
"
"31_______________________________[+[Begin 
of star X2221^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of star X2222^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2220^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
isType (propId singleton star star) props int
"
"29-----------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props int)
"
"29_____________________________[+[Begin 
pts_for props props X2216^12
"
"29-----------------------------]-]Success  
pts_for props props props
"
"28----------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X2214^11
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X2223^11
"
"25-------------------------]-]Success  
pts_for set props props
"
"25_________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) X2224^11 int
"
"26__________________________[+[Begin 
isType singleton _ int
"
"26--------------------------]-]Success  
isType singleton _ int
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (X2225^11 x11) int
"
"27___________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) X2226^12 int
"
"28____________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X2227^12 X2226^12) int
"
"29_____________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X2228^12 int
"
"30______________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X2229^12 X2228^12) int
"
"31_______________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X2230^12 int
"
"32________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X2231^12 int
"
"33_________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X2232^12 int
"
"34__________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2233^12 X2232^12) int
"
"35___________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2234^12 int
"
"36____________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2235^12 int
"
"37_____________________________________[+[Begin 
of (k_propId singleton) X2236^12 int
"
"37-------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 int
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X2237^12 X2238^12)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"37_____________________________________[+[Begin 
of star X2239^12 int
"
"37-------------------------------------]-]Success  
of star singleton int
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 int
"
"36____________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X2240^12 X2241^12)
"
"36------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"36____________________________________[+[Begin 
of star X2242^12 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"35___________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X2233^12 X2232^12)
"
"35-----------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"34----------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"34__________________________________[+[Begin 
isa (id singleton star) (propId singleton star star) int
"
"35___________________________________[+[Begin 
of (id singleton star) X2243^12 int
"
"36____________________________________[+[Begin 
of star X2244^12 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"35___________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"35-----------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"34----------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"33---------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X2245^12 X2246^12)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"33_________________________________[+[Begin 
of x0 X2247^12 int
"
"33---------------------------------]-]Success  
of x0 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X2248^12 X2249^12)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"32________________________________[+[Begin 
of star X2250^12 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"31_______________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2229^12 X2228^12)
"
"31-------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"30------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"30______________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"30------------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"29-----------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"29_____________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2227^12 X2226^12)
"
"29-----------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"28----------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"28____________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"29_____________________________[+[Begin 
of (app x9 x11) X2251^12 int
"
"30______________________________[+[Begin 
of x9 (setPi X2252^12 X2253^12) int
"
"30------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"30______________________________[+[Begin 
isa x11 singleton int
"
"31_______________________________[+[Begin 
of x11 X2254^12 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
isa x11 singleton int
"
"29-----------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"29_____________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"29-----------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"28----------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"27---------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) (propId singleton star star) int
"
"27___________________________[+[Begin 
conv (propId singleton star star) (X2225^11 x11)
"
"27---------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (propId singleton star star) int
"
"25-------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) (setPi singleton x11 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"25_________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X2255^11 int
"
"26__________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X2256^12 int
"
"27___________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X2257^13 int
"
"28____________________________[+[Begin 
of x11 X2258^13 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x12 X2259^13 int
"
"28----------------------------]-]Success  
of x12 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2260^13 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28____________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X2261^14 int
"
"29_____________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X2262^14 int
"
"30______________________________[+[Begin 
of (forall_app x10 x11) X2263^14 int
"
"31_______________________________[+[Begin 
of x10 X2264^14 int
"
"31-------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X2265^14 X2266^14)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x11 X2267^14 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X2268^14 X2269^14)
"
"30------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"30______________________________[+[Begin 
of x12 X2270^14 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X2271^14 X2272^14)
"
"29-----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of x13 X2273^14 int
"
"29-----------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"29_____________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"29-----------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"28----------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"28____________________________[+[Begin 
conv (propId singleton star star) (X2274^13 x13)
"
"28----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2275^12 x12)
"
"27---------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2276^11 x11)
"
"26--------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"24------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"24------------------------]-]Success  
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"23-----------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"22----------------------]-]Success  
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"21---------------------]-]Success  
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"20--------------------]-]Success  
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) singleton
 int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
isType (setPi singleton x8 \ propId singleton star star) X2277^8 X2278^8
"
"21_____________________[+[Begin 
of star X2279^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X2280^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X2281^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21_____________________[+[Begin 
pts_fun set props X2277^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pts_fun set props set
"
"20--------------------]-]Success  
isType (setPi singleton x8 \ propId singleton star star) set X2278^8
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star star) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X2282^8 X2278^8
"
"21_____________________[+[Begin 
isType singleton X2283^9 X2278^8
"
"21---------------------]-]Success  
isType singleton set X2278^8
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2284^9 X2278^8)
"
"22______________________[+[Begin 
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X2284^9
 X2278^8
"
"23_______________________[+[Begin 
isType singleton X2285^10 X2278^8
"
"23-----------------------]-]Success  
isType singleton set X2278^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2286^10 X2278^8)
"
"24________________________[+[Begin 
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X2286^10 X2278^8
"
"25_________________________[+[Begin 
isType (propId singleton x9 x10) X2287^11 X2278^8
"
"26__________________________[+[Begin 
of x9 X2288^11 int
"
"26--------------------------]-]Success  
of x9 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x10 X2289^11 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2287^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton x9 x10) props X2278^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) X2290^11 X2278^8)
"
"26__________________________[+[Begin 
isType (propId singleton star star) X2290^11 X2278^8
"
"27___________________________[+[Begin 
of star X2291^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X2292^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X2290^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton star star) props X2278^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) props X2278^8)
"
"25_________________________[+[Begin 
pts_for props props X2286^10
"
"25-------------------------]-]Success  
pts_for props props props
"
"24------------------------]-]Success  
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props X2278^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X2278^8)
"
"23_______________________[+[Begin 
pts_for set props X2284^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 X2278^8
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X2278^8)
"
"21_____________________[+[Begin 
pts_for set props X2282^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star star) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props X2278^8
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"20____________________[+[Begin 
of
 (elim_colSigma x5 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12)) X2293^8 X2278^8
"
"21_____________________[+[Begin 
of x5 (colSigma X2294^8 X2295^8) X2278^8
"
"21---------------------]-]Success  
of x5
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X2278^8
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   X2278^8
"
"22______________________[+[Begin 
isType (setPi singleton x9 \ propId singleton star star) X2296^9 X2278^8
"
"23_______________________[+[Begin 
of star X2297^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X2298^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X2299^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X2296^9
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"22----------------------]-]Success  
isType (setPi singleton x9 \ propId singleton star star) set X2278^8
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2300^9 X2278^8
"
"23_______________________[+[Begin 
isType singleton X2301^10 X2278^8
"
"23-----------------------]-]Success  
isType singleton set X2278^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2302^10 X2278^8)
"
"24________________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2302^10 X2278^8
"
"25_________________________[+[Begin 
isType singleton X2303^11 X2278^8
"
"25-------------------------]-]Success  
isType singleton set X2278^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2304^11 X2278^8)
"
"26__________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2304^11 X2278^8
"
"27___________________________[+[Begin 
isType (propId singleton x10 x11) X2305^12 X2278^8
"
"28____________________________[+[Begin 
of x10 X2306^12 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x11 X2307^12 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2305^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton x10 x11) props X2278^8
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X2308^12 X2278^8)
"
"28____________________________[+[Begin 
isType (propId singleton star star) X2308^12 X2278^8
"
"29_____________________________[+[Begin 
of star X2309^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2310^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2308^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
isType (propId singleton star star) props X2278^8
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props X2278^8)
"
"27___________________________[+[Begin 
pts_for props props X2304^11
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2278^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2278^8)
"
"25_________________________[+[Begin 
pts_for set props X2302^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2278^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2278^8)
"
"23_______________________[+[Begin 
pts_for set props X2300^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props X2278^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   X2278^8
"
"21_____________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2278^8
"
"22______________________[+[Begin 
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12)) X2311^10 X2278^8
"
"23_______________________[+[Begin 
of star X2312^11 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X2313^11 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X2314^10 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X2315^10
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"23_______________________[+[Begin 
isType singleton X2316^10 X2278^8
"
"23-----------------------]-]Success  
isType singleton set X2278^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2317^10 X2278^8)
"
"24________________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2317^10 X2278^8
"
"25_________________________[+[Begin 
isType singleton X2318^11 X2278^8
"
"25-------------------------]-]Success  
isType singleton set X2278^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2319^11 X2278^8)
"
"26__________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2319^11 X2278^8
"
"27___________________________[+[Begin 
isType (propId singleton x10 x11) X2320^12 X2278^8
"
"28____________________________[+[Begin 
of x10 X2321^12 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x11 X2322^12 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2320^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton x10 x11) props X2278^8
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X2323^12 X2278^8)
"
"28____________________________[+[Begin 
isType (propId singleton star star) X2323^12 X2278^8
"
"29_____________________________[+[Begin 
of star X2324^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2325^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2323^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
isType (propId singleton star star) props X2278^8
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props X2278^8)
"
"27___________________________[+[Begin 
pts_for props props X2319^11
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2278^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2278^8)
"
"25_________________________[+[Begin 
pts_for set props X2317^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2278^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2278^8)
"
"23_______________________[+[Begin 
pts_for set props X2326^10
"
"23-----------------------]-]Success  
pts_for set props props
"
"23_______________________[+[Begin 
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) X2327^10 X2278^8
"
"24________________________[+[Begin 
isType singleton _ X2278^8
"
"24------------------------]-]Success  
isType singleton _ X2278^8
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (X2328^10 x10) X2278^8
"
"25_________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) X2329^11 X2278^8
"
"26__________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X2330^11 X2329^11) X2278^8
"
"27___________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X2331^11 X2278^8
"
"28____________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X2332^11 X2331^11) X2278^8
"
"29_____________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X2333^11 X2278^8
"
"30______________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X2334^11 X2278^8
"
"31_______________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X2335^11 X2278^8
"
"32________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2336^11 X2335^11) X2278^8
"
"33_________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2337^11 X2278^8
"
"34__________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2338^11 X2278^8
"
"35___________________________________[+[Begin 
of (k_propId singleton) X2339^11 X2278^8
"
"35-----------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 X2278^8
"
"35___________________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall X2340^11 X2341^11)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
"
"35___________________________________[+[Begin 
of star X2342^11 X2278^8
"
"35-----------------------------------]-]Success  
of star singleton X2278^8
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 X2278^8
"
"34__________________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall X2343^11 X2344^11)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
"
"34__________________________________[+[Begin 
of star X2345^11 X2278^8
"
"34----------------------------------]-]Success  
of star singleton X2278^8
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 X2278^8
"
"33_________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies X2336^11 X2335^11)
"
"33---------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
"
"32--------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 X2278^8
"
"32________________________________[+[Begin 
isa (id singleton star) (propId singleton star star) X2278^8
"
"33_________________________________[+[Begin 
of (id singleton star) X2346^11 X2278^8
"
"34__________________________________[+[Begin 
of star X2347^11 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"33_________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"33---------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"32--------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"31-------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12))) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall X2348^11 X2349^11)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
"
"31_______________________________[+[Begin 
of x0 X2350^11 int
"
"31-------------------------------]-]Success  
of x0 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11))) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall X2351^11 X2352^11)
"
"30------------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
"
"30______________________________[+[Begin 
of star X2353^11 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"29_____________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2332^11 X2331^11)
"
"29-----------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"28----------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"28____________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"28----------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"27---------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"27___________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2330^11 X2329^11)
"
"27---------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"26--------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"26__________________________[+[Begin 
isa (app x8 x10) (propId singleton star x0) int
"
"27___________________________[+[Begin 
of (app x8 x10) X2354^11 int
"
"28____________________________[+[Begin 
of x8 (setPi X2355^11 X2356^11) int
"
"28----------------------------]-]Success  
of x8 (setPi singleton x11 \ propId singleton star x0) int
"
"28____________________________[+[Begin 
isa x10 singleton int
"
"29_____________________________[+[Begin 
of x10 X2357^11 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
isa x10 singleton int
"
"27---------------------------]-]Success  
of (app x8 x10) (propId singleton star x0) int
"
"27___________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"27---------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"26--------------------------]-]Success  
isa (app x8 x10) (propId singleton star x0) int
"
"25-------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) (propId singleton star star) int
"
"25_________________________[+[Begin 
conv (propId singleton star star) (X2328^10 x10)
"
"25-------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (propId singleton star star) int
"
"23-----------------------]-]Success  
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) (setPi singleton x10 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"23_______________________[+[Begin 
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12) X2358^10 int
"
"24________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12) X2359^11 int
"
"25_________________________[+[Begin 
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12) X2360^12 int
"
"26__________________________[+[Begin 
of x10 X2361^12 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x11 X2362^12 int
"
"26--------------------------]-]Success  
of x11 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2363^12 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
of (forall_app (forall_app (forall_app x9 x10) x11) x12) X2364^13 int
"
"27___________________________[+[Begin 
of (forall_app (forall_app x9 x10) x11) X2365^13 int
"
"28____________________________[+[Begin 
of (forall_app x9 x10) X2366^13 int
"
"29_____________________________[+[Begin 
of x9 X2367^13 int
"
"29-----------------------------]-]Success  
of x9
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall X2368^13 X2369^13)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of x10 X2370^13 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
of (forall_app x9 x10)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall X2371^13 X2372^13)
"
"28----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
"
"28____________________________[+[Begin 
of x11 X2373^13 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"27---------------------------]-]Success  
of (forall_app (forall_app x9 x10) x11)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall X2374^13 X2375^13)
"
"27---------------------------]-]Success  
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star)
"
"27___________________________[+[Begin 
of x12 X2376^13 int
"
"27---------------------------]-]Success  
of x12 (propId singleton x10 x11) int
"
"27___________________________[+[Begin 
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"27---------------------------]-]Success  
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"26--------------------------]-]Success  
of (forall_app (forall_app (forall_app x9 x10) x11) x12)
 (propId singleton star star) int
"
"26__________________________[+[Begin 
conv (propId singleton star star) (X2377^12 x12)
"
"26--------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"25-------------------------]-]Success  
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X2378^11 x11)
"
"25-------------------------]-]Success  
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"24------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X2379^10 x10)
"
"24------------------------]-]Success  
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"21---------------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     int
"
"20--------------------]-]Success  
of
 (elim_colSigma x5 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"19-------------------]-]Success  
hnf
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
 (app x3
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
"
"19___________________[+[Begin 
dconv
 (app x3
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (app x3
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
"
"19-------------------]-]Success  
dconv
 (app x3
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (app x3
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
"
"18------------------]-]Success  
conv
 (app x3
   (elim_colSigma x5 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
"
"18__________________[+[Begin 
conv
 (app x3
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x6)
"
"19___________________[+[Begin 
hnf
 (app x3
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12))) X2380^8
"
"20____________________[+[Begin 
isType (setPi singleton x8 \ propId singleton star star) X2381^8 X2382^8
"
"21_____________________[+[Begin 
of star X2383^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X2384^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X2385^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21_____________________[+[Begin 
pts_fun set props X2381^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pts_fun set props set
"
"20--------------------]-]Success  
isType (setPi singleton x8 \ propId singleton star star) set X2382^8
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star star) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X2386^8 X2382^8
"
"21_____________________[+[Begin 
isType singleton X2387^9 X2382^8
"
"21---------------------]-]Success  
isType singleton set X2382^8
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2388^9 X2382^8)
"
"22______________________[+[Begin 
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X2388^9
 X2382^8
"
"23_______________________[+[Begin 
isType singleton X2389^10 X2382^8
"
"23-----------------------]-]Success  
isType singleton set X2382^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2390^10 X2382^8)
"
"24________________________[+[Begin 
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X2390^10 X2382^8
"
"25_________________________[+[Begin 
isType (propId singleton x9 x10) X2391^11 X2382^8
"
"26__________________________[+[Begin 
of x9 X2392^11 int
"
"26--------------------------]-]Success  
of x9 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x10 X2393^11 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2391^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton x9 x10) props X2382^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) X2394^11 X2382^8)
"
"26__________________________[+[Begin 
isType (propId singleton star star) X2394^11 X2382^8
"
"27___________________________[+[Begin 
of star X2395^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X2396^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X2394^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton star star) props X2382^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) props X2382^8)
"
"25_________________________[+[Begin 
pts_for props props X2390^10
"
"25-------------------------]-]Success  
pts_for props props props
"
"24------------------------]-]Success  
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props X2382^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X2382^8)
"
"23_______________________[+[Begin 
pts_for set props X2388^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 X2382^8
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X2382^8)
"
"21_____________________[+[Begin 
pts_for set props X2386^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star star) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props X2382^8
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"20____________________[+[Begin 
of
 (elim_colSigma x6 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12)) X2397^8 X2382^8
"
"21_____________________[+[Begin 
of x6 (colSigma X2398^8 X2399^8) X2382^8
"
"21---------------------]-]Success  
of x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X2382^8
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   X2382^8
"
"22______________________[+[Begin 
isType (setPi singleton x9 \ propId singleton star star) X2400^9 X2382^8
"
"23_______________________[+[Begin 
of star X2401^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X2402^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X2403^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X2400^9
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"22----------------------]-]Success  
isType (setPi singleton x9 \ propId singleton star star) set X2382^8
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2404^9 X2382^8
"
"23_______________________[+[Begin 
isType singleton X2405^10 X2382^8
"
"23-----------------------]-]Success  
isType singleton set X2382^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2406^10 X2382^8)
"
"24________________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2406^10 X2382^8
"
"25_________________________[+[Begin 
isType singleton X2407^11 X2382^8
"
"25-------------------------]-]Success  
isType singleton set X2382^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2408^11 X2382^8)
"
"26__________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2408^11 X2382^8
"
"27___________________________[+[Begin 
isType (propId singleton x10 x11) X2409^12 X2382^8
"
"28____________________________[+[Begin 
of x10 X2410^12 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x11 X2411^12 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2409^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton x10 x11) props X2382^8
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X2412^12 X2382^8)
"
"28____________________________[+[Begin 
isType (propId singleton star star) X2412^12 X2382^8
"
"29_____________________________[+[Begin 
of star X2413^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2414^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2412^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
isType (propId singleton star star) props X2382^8
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props X2382^8)
"
"27___________________________[+[Begin 
pts_for props props X2408^11
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2382^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2382^8)
"
"25_________________________[+[Begin 
pts_for set props X2406^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2382^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2382^8)
"
"23_______________________[+[Begin 
pts_for set props X2404^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props X2382^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   X2382^8
"
"21_____________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2382^8
"
"22______________________[+[Begin 
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12)) X2415^10 X2382^8
"
"23_______________________[+[Begin 
of star X2416^11 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X2417^11 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X2418^10 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X2419^10
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"23_______________________[+[Begin 
isType singleton X2420^10 X2382^8
"
"23-----------------------]-]Success  
isType singleton set X2382^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2421^10 X2382^8)
"
"24________________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2421^10 X2382^8
"
"25_________________________[+[Begin 
isType singleton X2422^11 X2382^8
"
"25-------------------------]-]Success  
isType singleton set X2382^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2423^11 X2382^8)
"
"26__________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2423^11 X2382^8
"
"27___________________________[+[Begin 
isType (propId singleton x10 x11) X2424^12 X2382^8
"
"28____________________________[+[Begin 
of x10 X2425^12 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x11 X2426^12 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2424^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton x10 x11) props X2382^8
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X2427^12 X2382^8)
"
"28____________________________[+[Begin 
isType (propId singleton star star) X2427^12 X2382^8
"
"29_____________________________[+[Begin 
of star X2428^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2429^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2427^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
isType (propId singleton star star) props X2382^8
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props X2382^8)
"
"27___________________________[+[Begin 
pts_for props props X2423^11
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2382^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2382^8)
"
"25_________________________[+[Begin 
pts_for set props X2421^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2382^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2382^8)
"
"23_______________________[+[Begin 
pts_for set props X2430^10
"
"23-----------------------]-]Success  
pts_for set props props
"
"23_______________________[+[Begin 
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) X2431^10 X2382^8
"
"24________________________[+[Begin 
isType singleton _ X2382^8
"
"24------------------------]-]Success  
isType singleton _ X2382^8
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (X2432^10 x10) X2382^8
"
"25_________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) X2433^11 X2382^8
"
"26__________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X2434^11 X2433^11) X2382^8
"
"27___________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X2435^11 X2382^8
"
"28____________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X2436^11 X2435^11) X2382^8
"
"29_____________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X2437^11 X2382^8
"
"30______________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X2438^11 X2382^8
"
"31_______________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X2439^11 X2382^8
"
"32________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2440^11 X2439^11) X2382^8
"
"33_________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2441^11 X2382^8
"
"34__________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2442^11 X2382^8
"
"35___________________________________[+[Begin 
of (k_propId singleton) X2443^11 X2382^8
"
"35-----------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 X2382^8
"
"35___________________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall X2444^11 X2445^11)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
"
"35___________________________________[+[Begin 
of star X2446^11 X2382^8
"
"35-----------------------------------]-]Success  
of star singleton X2382^8
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 X2382^8
"
"34__________________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall X2447^11 X2448^11)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
"
"34__________________________________[+[Begin 
of star X2449^11 X2382^8
"
"34----------------------------------]-]Success  
of star singleton X2382^8
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 X2382^8
"
"33_________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies X2440^11 X2439^11)
"
"33---------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
"
"32--------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 X2382^8
"
"32________________________________[+[Begin 
isa (id singleton star) (propId singleton star star) X2382^8
"
"33_________________________________[+[Begin 
of (id singleton star) X2450^11 X2382^8
"
"34__________________________________[+[Begin 
of star X2451^11 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"33_________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"33---------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"32--------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"31-------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12))) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall X2452^11 X2453^11)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
"
"31_______________________________[+[Begin 
of x0 X2454^11 int
"
"31-------------------------------]-]Success  
of x0 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11))) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall X2455^11 X2456^11)
"
"30------------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
"
"30______________________________[+[Begin 
of star X2457^11 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"29_____________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2436^11 X2435^11)
"
"29-----------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"28----------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"28____________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"28----------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"27---------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"27___________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2434^11 X2433^11)
"
"27---------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"26--------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"26__________________________[+[Begin 
isa (app x8 x10) (propId singleton star x0) int
"
"27___________________________[+[Begin 
of (app x8 x10) X2458^11 int
"
"28____________________________[+[Begin 
of x8 (setPi X2459^11 X2460^11) int
"
"28----------------------------]-]Success  
of x8 (setPi singleton x11 \ propId singleton star x0) int
"
"28____________________________[+[Begin 
isa x10 singleton int
"
"29_____________________________[+[Begin 
of x10 X2461^11 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
isa x10 singleton int
"
"27---------------------------]-]Success  
of (app x8 x10) (propId singleton star x0) int
"
"27___________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"27---------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"26--------------------------]-]Success  
isa (app x8 x10) (propId singleton star x0) int
"
"25-------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) (propId singleton star star) int
"
"25_________________________[+[Begin 
conv (propId singleton star star) (X2432^10 x10)
"
"25-------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (propId singleton star star) int
"
"23-----------------------]-]Success  
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) (setPi singleton x10 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"23_______________________[+[Begin 
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12) X2462^10 int
"
"24________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12) X2463^11 int
"
"25_________________________[+[Begin 
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12) X2464^12 int
"
"26__________________________[+[Begin 
of x10 X2465^12 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x11 X2466^12 int
"
"26--------------------------]-]Success  
of x11 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2467^12 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
of (forall_app (forall_app (forall_app x9 x10) x11) x12) X2468^13 int
"
"27___________________________[+[Begin 
of (forall_app (forall_app x9 x10) x11) X2469^13 int
"
"28____________________________[+[Begin 
of (forall_app x9 x10) X2470^13 int
"
"29_____________________________[+[Begin 
of x9 X2471^13 int
"
"29-----------------------------]-]Success  
of x9
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall X2472^13 X2473^13)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of x10 X2474^13 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
of (forall_app x9 x10)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall X2475^13 X2476^13)
"
"28----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
"
"28____________________________[+[Begin 
of x11 X2477^13 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"27---------------------------]-]Success  
of (forall_app (forall_app x9 x10) x11)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall X2478^13 X2479^13)
"
"27---------------------------]-]Success  
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star)
"
"27___________________________[+[Begin 
of x12 X2480^13 int
"
"27---------------------------]-]Success  
of x12 (propId singleton x10 x11) int
"
"27___________________________[+[Begin 
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"27---------------------------]-]Success  
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"26--------------------------]-]Success  
of (forall_app (forall_app (forall_app x9 x10) x11) x12)
 (propId singleton star star) int
"
"26__________________________[+[Begin 
conv (propId singleton star star) (X2481^12 x12)
"
"26--------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"25-------------------------]-]Success  
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X2482^11 x11)
"
"25-------------------------]-]Success  
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"24------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X2483^10 x10)
"
"24------------------------]-]Success  
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"21---------------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     int
"
"20--------------------]-]Success  
of
 (elim_colSigma x6 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"19-------------------]-]Success  
hnf
 (app x3
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (app x3
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
"
"19___________________[+[Begin 
hnf
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x6)
 X2484^8
"
"20____________________[+[Begin 
isType
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) _
 X2485^8
"
"21_____________________[+[Begin 
isType (setPi singleton x8 \ propId singleton star x0) X2486^8 X2485^8
"
"22______________________[+[Begin 
of star X2487^9 int
"
"22----------------------]-]Success  
of star singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
of x0 X2488^9 int
"
"22----------------------]-]Success  
of x0 singleton int
"
"22______________________[+[Begin 
conv singleton singleton
"
"22----------------------]-]Success  
conv singleton singleton
"
"22______________________[+[Begin 
(pts_leq set set),
(X2489^8 = props)
"
"22----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"22______________________[+[Begin 
pts_fun set props X2486^8
"
"23_______________________[+[Begin 
pts_leq set set
"
"23-----------------------]-]Success  
pts_leq set set
"
"23_______________________[+[Begin 
pts_leq props set
"
"23-----------------------]-]Success  
pts_leq props set
"
"22----------------------]-]Success  
pts_fun set props set
"
"21---------------------]-]Success  
isType (setPi singleton x8 \ propId singleton star x0) set X2485^8
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X2490^8 X2485^8
"
"22______________________[+[Begin 
isType singleton X2491^9 X2485^8
"
"22----------------------]-]Success  
isType singleton set X2485^8
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2492^9 X2485^8)
"
"23_______________________[+[Begin 
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X2492^9
 X2485^8
"
"24________________________[+[Begin 
isType singleton X2493^10 X2485^8
"
"24------------------------]-]Success  
isType singleton set X2485^8
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2494^10 X2485^8)
"
"25_________________________[+[Begin 
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X2494^10 X2485^8
"
"26__________________________[+[Begin 
isType (propId singleton x9 x10) X2495^11 X2485^8
"
"27___________________________[+[Begin 
of x9 X2496^11 int
"
"27---------------------------]-]Success  
of x9 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of x10 X2497^11 int
"
"27---------------------------]-]Success  
of x10 singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X2495^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton x9 x10) props X2485^8
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) X2498^11 X2485^8)
"
"27___________________________[+[Begin 
isType (propId singleton star star) X2498^11 X2485^8
"
"28____________________________[+[Begin 
of star X2499^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of star X2500^12 int
"
"28----------------------------]-]Success  
of star singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2498^11 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton star star) props X2485^8
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) props X2485^8)
"
"26__________________________[+[Begin 
pts_for props props X2494^10
"
"26--------------------------]-]Success  
pts_for props props props
"
"25-------------------------]-]Success  
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props X2485^8
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X2485^8)
"
"24________________________[+[Begin 
pts_for set props X2492^9
"
"24------------------------]-]Success  
pts_for set props props
"
"23-----------------------]-]Success  
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 X2485^8
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X2485^8)
"
"22______________________[+[Begin 
pts_for set props X2490^8
"
"22----------------------]-]Success  
pts_for set props props
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props X2485^8
"
"21_____________________[+[Begin 
pts_leq set set
"
"21---------------------]-]Success  
pts_leq set set
"
"21_____________________[+[Begin 
pts_leq props set
"
"21---------------------]-]Success  
pts_leq props set
"
"20--------------------]-]Success  
isType
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) _
 X2485^8
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isa
   (app x3
     (elim_colSigma x8 (x9 \
       colSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13)))
   (X2501^8 x8) X2485^8
"
"21_____________________[+[Begin 
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) X2502^9
 X2485^8
"
"22______________________[+[Begin 
of x3 (setPi X2503^9 X2504^9) X2485^8
"
"22----------------------]-]Success  
of x3
 (setPi
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) X2485^8
"
"22______________________[+[Begin 
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2485^8
"
"23_______________________[+[Begin 
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X2505^9
 X2485^8
"
"24________________________[+[Begin 
of x8 (colSigma X2506^9 X2507^9) X2485^8
"
"24------------------------]-]Success  
of x8
 (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2485^8
"
"24________________________[+[Begin 
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2485^8
"
"25_________________________[+[Begin 
isType (setPi singleton x10 \ propId singleton star star) X2508^10 X2485^8
"
"26__________________________[+[Begin 
of star X2509^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2510^11 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2511^10 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2508^10
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"25-------------------------]-]Success  
isType (setPi singleton x10 \ propId singleton star star) set X2485^8
"
"25_________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X2512^10 X2485^8
"
"26__________________________[+[Begin 
isType singleton X2513^11 X2485^8
"
"26--------------------------]-]Success  
isType singleton set X2485^8
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2514^11 X2485^8)
"
"27___________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2514^11 X2485^8
"
"28____________________________[+[Begin 
isType singleton X2515^12 X2485^8
"
"28----------------------------]-]Success  
isType singleton set X2485^8
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2516^12 X2485^8)
"
"29_____________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2516^12 X2485^8
"
"30______________________________[+[Begin 
isType (propId singleton x11 x12) X2517^13 X2485^8
"
"31_______________________________[+[Begin 
of x11 X2518^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2519^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2517^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
isType (propId singleton x11 x12) props X2485^8
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X2520^13 X2485^8)
"
"31_______________________________[+[Begin 
isType (propId singleton star star) X2520^13 X2485^8
"
"32________________________________[+[Begin 
of star X2521^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2522^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2520^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
isType (propId singleton star star) props X2485^8
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props X2485^8)
"
"30______________________________[+[Begin 
pts_for props props X2516^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2485^8
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2485^8)
"
"28____________________________[+[Begin 
pts_for set props X2514^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2485^8
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2485^8)
"
"26__________________________[+[Begin 
pts_for set props X2512^10
"
"26--------------------------]-]Success  
pts_for set props props
"
"25-------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props X2485^8
"
"25_________________________[+[Begin 
pts_leq set set
"
"25-------------------------]-]Success  
pts_leq set set
"
"25_________________________[+[Begin 
pts_leq props set
"
"25-------------------------]-]Success  
pts_leq props set
"
"24------------------------]-]Success  
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   X2485^8
"
"24________________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     X2485^8
"
"25_________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X2523^11
 X2485^8
"
"26__________________________[+[Begin 
of star X2524^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of star X2525^12 int
"
"26--------------------------]-]Success  
of star singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2526^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
pts_fun set props X2527^11
"
"27___________________________[+[Begin 
pts_leq set set
"
"27---------------------------]-]Success  
pts_leq set set
"
"27___________________________[+[Begin 
pts_leq props set
"
"27---------------------------]-]Success  
pts_leq props set
"
"26--------------------------]-]Success  
pts_fun set props set
"
"26__________________________[+[Begin 
isType singleton X2528^11 X2485^8
"
"26--------------------------]-]Success  
isType singleton set X2485^8
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2529^11 X2485^8)
"
"27___________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2529^11 X2485^8
"
"28____________________________[+[Begin 
isType singleton X2530^12 X2485^8
"
"28----------------------------]-]Success  
isType singleton set X2485^8
"
"28____________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2531^12 X2485^8)
"
"29_____________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2531^12 X2485^8
"
"30______________________________[+[Begin 
isType (propId singleton x11 x12) X2532^13 X2485^8
"
"31_______________________________[+[Begin 
of x11 X2533^13 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of x12 X2534^13 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2532^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
isType (propId singleton x11 x12) props X2485^8
"
"30______________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X2535^13 X2485^8)
"
"31_______________________________[+[Begin 
isType (propId singleton star star) X2535^13 X2485^8
"
"32________________________________[+[Begin 
of star X2536^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
of star X2537^14 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"32________________________________[+[Begin 
(pts_leq set set),
(X2535^13 = props)
"
"32--------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"31-------------------------------]-]Success  
isType (propId singleton star star) props X2485^8
"
"30------------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props X2485^8)
"
"30______________________________[+[Begin 
pts_for props props X2531^12
"
"30------------------------------]-]Success  
pts_for props props props
"
"29-----------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props X2485^8
"
"28----------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2485^8)
"
"28____________________________[+[Begin 
pts_for set props X2529^11
"
"28----------------------------]-]Success  
pts_for set props props
"
"27---------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 X2485^8
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props X2485^8)
"
"26__________________________[+[Begin 
pts_for set props X2538^11
"
"26--------------------------]-]Success  
pts_for set props props
"
"26__________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) X2539^11 X2485^8
"
"27___________________________[+[Begin 
isType singleton _ X2485^8
"
"27---------------------------]-]Success  
isType singleton _ X2485^8
"
"27___________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (X2540^11 x11) X2485^8
"
"28____________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) X2541^12 X2485^8
"
"29_____________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X2542^12 X2541^12) X2485^8
"
"30______________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X2543^12 X2485^8
"
"31_______________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X2544^12 X2543^12) X2485^8
"
"32________________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X2545^12 X2485^8
"
"33_________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X2546^12 X2485^8
"
"34__________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X2547^12 X2485^8
"
"35___________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2548^12 X2547^12) X2485^8
"
"36____________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2549^12 X2485^8
"
"37_____________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2550^12 X2485^8
"
"38______________________________________[+[Begin 
of (k_propId singleton) X2551^12 X2485^8
"
"38--------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 X2485^8
"
"38______________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X2552^12 X2553^12)
"
"38--------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"38______________________________________[+[Begin 
of star X2554^12 X2485^8
"
"38--------------------------------------]-]Success  
of star singleton X2485^8
"
"38______________________________________[+[Begin 
conv singleton singleton
"
"38--------------------------------------]-]Success  
conv singleton singleton
"
"37-------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 X2485^8
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X2555^12 X2556^12)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"37_____________________________________[+[Begin 
of star X2557^12 X2485^8
"
"37-------------------------------------]-]Success  
of star singleton X2485^8
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2485^8
"
"36____________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X2548^12 X2547^12)
"
"36------------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"35-----------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 X2485^8
"
"35___________________________________[+[Begin 
isa (id singleton star) (propId singleton star star) X2485^8
"
"36____________________________________[+[Begin 
of (id singleton star) X2558^12 X2485^8
"
"37_____________________________________[+[Begin 
of star X2559^12 int
"
"37-------------------------------------]-]Success  
of star singleton int
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"36____________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"36------------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"35-----------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"34----------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"34__________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X2560^12 X2561^12)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"34__________________________________[+[Begin 
of x0 X2562^12 int
"
"34----------------------------------]-]Success  
of x0 singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X2563^12 X2564^12)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"33_________________________________[+[Begin 
of star X2565^12 int
"
"33---------------------------------]-]Success  
of star singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"32________________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2544^12 X2543^12)
"
"32--------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"31-------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"31_______________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"31-------------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"30------------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"30______________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2542^12 X2541^12)
"
"30------------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"29-----------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"29_____________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
of (app x9 x11) X2566^12 int
"
"31_______________________________[+[Begin 
of x9 (setPi X2567^12 X2568^12) int
"
"31-------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"31_______________________________[+[Begin 
isa x11 singleton int
"
"32________________________________[+[Begin 
of x11 X2569^12 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
isa x11 singleton int
"
"30------------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"30______________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"30------------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"29-----------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"28----------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) (propId singleton star star) int
"
"28____________________________[+[Begin 
conv (propId singleton star star) (X2540^11 x11)
"
"28----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"27---------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (propId singleton star star) int
"
"26--------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) (setPi singleton x11 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"26__________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X2570^11 int
"
"27___________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X2571^12 int
"
"28____________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X2572^13 int
"
"29_____________________________[+[Begin 
of x11 X2573^13 int
"
"29-----------------------------]-]Success  
of x11 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of x12 X2574^13 int
"
"29-----------------------------]-]Success  
of x12 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2575^13 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29_____________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X2576^14 int
"
"30______________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X2577^14 int
"
"31_______________________________[+[Begin 
of (forall_app x10 x11) X2578^14 int
"
"32________________________________[+[Begin 
of x10 X2579^14 int
"
"32--------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X2580^14 X2581^14)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"32________________________________[+[Begin 
of x11 X2582^14 int
"
"32--------------------------------]-]Success  
of x11 singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X2583^14 X2584^14)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x12 X2585^14 int
"
"31-------------------------------]-]Success  
of x12 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X2586^14 X2587^14)
"
"30------------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"30______________________________[+[Begin 
of x13 X2588^14 int
"
"30------------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"30______________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"30------------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"29-----------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (propId singleton star star) (X2589^13 x13)
"
"29-----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"28----------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2590^12 x12)
"
"28----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2591^11 x11)
"
"27---------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"24------------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"23-----------------------]-]Success  
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"21---------------------]-]Success  
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) singleton
 int
"
"21_____________________[+[Begin 
conv singleton (X2501^8 x8)
"
"21---------------------]-]Success  
conv singleton singleton
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isa
   (app x3
     (elim_colSigma x8 (x9 \
       colSigma (setPi singleton x10 \ propId singleton star star) x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
       x9 \ x10 \
       pair (setPi singleton x11 \ propId singleton star star) (x11 \
        forall singleton x12 \
         forall singleton x13 \
          forall (propId singleton x12 x13) x14 \ propId singleton star star)
        (lambda singleton x11 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x9 x11))
        (forall_lam singleton x11 \
          forall_lam singleton x12 \
           forall_lam (propId singleton x11 x12) x13 \
            forall_app (forall_app (forall_app x10 x11) x12) x13))) singleton
   int
"
"20____________________[+[Begin 
isType (setPi singleton x8 \ propId singleton star x0) X2592^8 int
"
"21_____________________[+[Begin 
of star X2593^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of x0 X2594^9 int
"
"21---------------------]-]Success  
of x0 singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X2595^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21_____________________[+[Begin 
pts_fun set props X2592^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pts_fun set props set
"
"20--------------------]-]Success  
isType (setPi singleton x8 \ propId singleton star x0) set int
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X2596^8 int
"
"21_____________________[+[Begin 
isType singleton X2597^9 int
"
"21---------------------]-]Success  
isType singleton set int
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2598^9 int)
"
"22______________________[+[Begin 
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X2598^9
 int
"
"23_______________________[+[Begin 
isType singleton X2599^10 int
"
"23-----------------------]-]Success  
isType singleton set int
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2600^10 int)
"
"24________________________[+[Begin 
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X2600^10 int
"
"25_________________________[+[Begin 
isType (propId singleton x9 x10) X2601^11 int
"
"26__________________________[+[Begin 
of x9 X2602^11 int
"
"26--------------------------]-]Success  
of x9 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x10 X2603^11 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2601^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton x9 x10) props int
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) X2604^11 int)
"
"26__________________________[+[Begin 
isType (propId singleton star star) X2604^11 int
"
"27___________________________[+[Begin 
of star X2605^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X2606^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X2604^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton star star) props int
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) props int)
"
"25_________________________[+[Begin 
pts_for props props X2600^10
"
"25-------------------------]-]Success  
pts_for props props props
"
"24------------------------]-]Success  
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props int
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"23_______________________[+[Begin 
pts_for set props X2598^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 int
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props int)
"
"21_____________________[+[Begin 
pts_for set props X2596^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star x0) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props int
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"20____________________[+[Begin 
of x6 X2607^8 int
"
"20--------------------]-]Success  
of x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20____________________[+[Begin 
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) X2608^9 int
"
"21_____________________[+[Begin 
of x3 (setPi X2609^9 X2610^9) int
"
"21---------------------]-]Success  
of x3
 (setPi
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x9 \ singleton) int
"
"21_____________________[+[Begin 
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22______________________[+[Begin 
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13)) X2611^9 int
"
"23_______________________[+[Begin 
of x8 (colSigma X2612^9 X2613^9) int
"
"23-----------------------]-]Success  
of x8
 (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"24________________________[+[Begin 
isType (setPi singleton x10 \ propId singleton star star) X2614^10 int
"
"25_________________________[+[Begin 
of star X2615^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X2616^11 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X2617^10 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
pts_fun set props X2614^10
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pts_fun set props set
"
"24------------------------]-]Success  
isType (setPi singleton x10 \ propId singleton star star) set int
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   X2618^10 int
"
"25_________________________[+[Begin 
isType singleton X2619^11 int
"
"25-------------------------]-]Success  
isType singleton set int
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2620^11 int)
"
"26__________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2620^11 int
"
"27___________________________[+[Begin 
isType singleton X2621^12 int
"
"27---------------------------]-]Success  
isType singleton set int
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2622^12 int)
"
"28____________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2622^12 int
"
"29_____________________________[+[Begin 
isType (propId singleton x11 x12) X2623^13 int
"
"30______________________________[+[Begin 
of x11 X2624^13 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x12 X2625^13 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2623^13 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
isType (propId singleton x11 x12) props int
"
"29_____________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X2626^13 int)
"
"30______________________________[+[Begin 
isType (propId singleton star star) X2626^13 int
"
"31_______________________________[+[Begin 
of star X2627^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of star X2628^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2626^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
isType (propId singleton star star) props int
"
"29-----------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props int)
"
"29_____________________________[+[Begin 
pts_for props props X2622^12
"
"29-----------------------------]-]Success  
pts_for props props props
"
"28----------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X2620^11
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X2618^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 (setPi singleton x11 \ propId singleton star star) =>
  isType
   (forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   props int
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pi x9 \
 locDecl x9
  (colSigma (setPi singleton x10 \ propId singleton star x0) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
     forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) _
   int
"
"23_______________________[+[Begin 
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"24________________________[+[Begin 
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13)) X2629^11 int
"
"25_________________________[+[Begin 
of star X2630^12 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
of star X2631^12 int
"
"25-------------------------]-]Success  
of star singleton int
"
"25_________________________[+[Begin 
conv singleton singleton
"
"25-------------------------]-]Success  
conv singleton singleton
"
"25_________________________[+[Begin 
(pts_leq set set),
(X2632^11 = props)
"
"25-------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25_________________________[+[Begin 
pts_fun set props X2633^11
"
"26__________________________[+[Begin 
pts_leq set set
"
"26--------------------------]-]Success  
pts_leq set set
"
"26__________________________[+[Begin 
pts_leq props set
"
"26--------------------------]-]Success  
pts_leq props set
"
"25-------------------------]-]Success  
pts_fun set props set
"
"25_________________________[+[Begin 
isType singleton X2634^11 int
"
"25-------------------------]-]Success  
isType singleton set int
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2635^11 int)
"
"26__________________________[+[Begin 
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2635^11 int
"
"27___________________________[+[Begin 
isType singleton X2636^12 int
"
"27---------------------------]-]Success  
isType singleton set int
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2637^12 int)
"
"28____________________________[+[Begin 
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 X2637^12 int
"
"29_____________________________[+[Begin 
isType (propId singleton x11 x12) X2638^13 int
"
"30______________________________[+[Begin 
of x11 X2639^13 int
"
"30------------------------------]-]Success  
of x11 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
of x12 X2640^13 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"30______________________________[+[Begin 
(pts_leq set set),
(X2638^13 = props)
"
"30------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"29-----------------------------]-]Success  
isType (propId singleton x11 x12) props int
"
"29_____________________________[+[Begin 
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) X2641^13 int)
"
"30______________________________[+[Begin 
isType (propId singleton star star) X2641^13 int
"
"31_______________________________[+[Begin 
of star X2642^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
of star X2643^14 int
"
"31-------------------------------]-]Success  
of star singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"31_______________________________[+[Begin 
(pts_leq set set),
(X2641^13 = props)
"
"31-------------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"30------------------------------]-]Success  
isType (propId singleton star star) props int
"
"29-----------------------------]-]Success  
pi x13 \
 locDecl x13 (propId singleton x11 x12) =>
  spy (isType (propId singleton star star) props int)
"
"29_____________________________[+[Begin 
pts_for props props X2637^12
"
"29-----------------------------]-]Success  
pts_for props props props
"
"28----------------------------]-]Success  
isType (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 props int
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 singleton =>
  spy
   (isType
     (forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"27___________________________[+[Begin 
pts_for set props X2635^11
"
"27---------------------------]-]Success  
pts_for set props props
"
"26--------------------------]-]Success  
isType
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) props
 int
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star)
     props int)
"
"25_________________________[+[Begin 
pts_for set props X2644^11
"
"25-------------------------]-]Success  
pts_for set props props
"
"25_________________________[+[Begin 
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) X2645^11 int
"
"26__________________________[+[Begin 
isType singleton _ int
"
"26--------------------------]-]Success  
isType singleton _ int
"
"26__________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (X2646^11 x11) int
"
"27___________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) X2647^12 int
"
"28____________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X2648^12 X2647^12) int
"
"29_____________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X2649^12 int
"
"30______________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X2650^12 X2649^12) int
"
"31_______________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X2651^12 int
"
"32________________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X2652^12 int
"
"33_________________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X2653^12 int
"
"34__________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2654^12 X2653^12) int
"
"35___________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2655^12 int
"
"36____________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2656^12 int
"
"37_____________________________________[+[Begin 
of (k_propId singleton) X2657^12 int
"
"37-------------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 int
"
"37_____________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall X2658^12 X2659^12)
"
"37-------------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (forall singleton x14 \
       forall singleton x15 \
        implies (propId singleton x14 x15)
         (implies (propId singleton x12 x14) (propId singleton x13 x15))))
"
"37_____________________________________[+[Begin 
of star X2660^12 int
"
"37-------------------------------------]-]Success  
of star singleton int
"
"37_____________________________________[+[Begin 
conv singleton singleton
"
"37-------------------------------------]-]Success  
conv singleton singleton
"
"36------------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 int
"
"36____________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall X2661^12 X2662^12)
"
"36------------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
 (forall singleton x12 \
   implies (propId singleton star x12)
    (forall singleton x13 \
      forall singleton x14 \
       implies (propId singleton x13 x14)
        (implies (propId singleton star x13) (propId singleton x12 x14))))
"
"36____________________________________[+[Begin 
of star X2663^12 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"35___________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies X2654^12 X2653^12)
"
"35-----------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
"
"34----------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x12 \
     forall singleton x13 \
      implies (propId singleton x12 x13)
       (implies (propId singleton star x12) (propId singleton star x13))))
 int
"
"34__________________________________[+[Begin 
isa (id singleton star) (propId singleton star star) int
"
"35___________________________________[+[Begin 
of (id singleton star) X2664^12 int
"
"36____________________________________[+[Begin 
of star X2665^12 int
"
"36------------------------------------]-]Success  
of star singleton int
"
"36____________________________________[+[Begin 
conv singleton singleton
"
"36------------------------------------]-]Success  
conv singleton singleton
"
"35-----------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"35___________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"35-----------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"34----------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"33---------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13))) int
"
"33_________________________________[+[Begin 
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall X2666^12 X2667^12)
"
"33---------------------------------]-]Success  
conv
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
 (forall singleton x12 \
   forall singleton x13 \
    implies (propId singleton x12 x13)
     (implies (propId singleton star x12) (propId singleton star x13)))
"
"33_________________________________[+[Begin 
of x0 X2668^12 int
"
"33---------------------------------]-]Success  
of x0 singleton int
"
"33_________________________________[+[Begin 
conv singleton singleton
"
"33---------------------------------]-]Success  
conv singleton singleton
"
"32--------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12))) int
"
"32________________________________[+[Begin 
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall X2669^12 X2670^12)
"
"32--------------------------------]-]Success  
conv
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
 (forall singleton x12 \
   implies (propId singleton x0 x12)
    (implies (propId singleton star x0) (propId singleton star x12)))
"
"32________________________________[+[Begin 
of star X2671^12 int
"
"32--------------------------------]-]Success  
of star singleton int
"
"32________________________________[+[Begin 
conv singleton singleton
"
"32--------------------------------]-]Success  
conv singleton singleton
"
"31-------------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"31_______________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2650^12 X2649^12)
"
"31-------------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"30------------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"30______________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"30------------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"29-----------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"29_____________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2648^12 X2647^12)
"
"29-----------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"28----------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"28____________________________[+[Begin 
isa (app x9 x11) (propId singleton star x0) int
"
"29_____________________________[+[Begin 
of (app x9 x11) X2672^12 int
"
"30______________________________[+[Begin 
of x9 (setPi X2673^12 X2674^12) int
"
"30------------------------------]-]Success  
of x9 (setPi singleton x12 \ propId singleton star x0) int
"
"30______________________________[+[Begin 
isa x11 singleton int
"
"31_______________________________[+[Begin 
of x11 X2675^12 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
isa x11 singleton int
"
"29-----------------------------]-]Success  
of (app x9 x11) (propId singleton star x0) int
"
"29_____________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"29-----------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"28----------------------------]-]Success  
isa (app x9 x11) (propId singleton star x0) int
"
"27---------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x9 x11)) (propId singleton star star) int
"
"27___________________________[+[Begin 
conv (propId singleton star star) (X2646^11 x11)
"
"27---------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"26--------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x9 x11)) (propId singleton star star) int
"
"25-------------------------]-]Success  
of
 (lambda singleton x11 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x9 x11)) (setPi singleton x11 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv (setPi singleton x11 \ propId singleton star star)
 (setPi singleton x11 \ propId singleton star star)
"
"25_________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13) X2676^11 int
"
"26__________________________[+[Begin 
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13) X2677^12 int
"
"27___________________________[+[Begin 
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13) X2678^13 int
"
"28____________________________[+[Begin 
of x11 X2679^13 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x12 X2680^13 int
"
"28----------------------------]-]Success  
of x12 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2681^13 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28____________________________[+[Begin 
of (forall_app (forall_app (forall_app x10 x11) x12) x13) X2682^14 int
"
"29_____________________________[+[Begin 
of (forall_app (forall_app x10 x11) x12) X2683^14 int
"
"30______________________________[+[Begin 
of (forall_app x10 x11) X2684^14 int
"
"31_______________________________[+[Begin 
of x10 X2685^14 int
"
"31-------------------------------]-]Success  
of x10
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall X2686^14 X2687^14)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
 (forall singleton x14 \
   forall singleton x15 \
    forall (propId singleton x14 x15) x16 \ propId singleton star star)
"
"31_______________________________[+[Begin 
of x11 X2688^14 int
"
"31-------------------------------]-]Success  
of x11 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of (forall_app x10 x11)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall X2689^14 X2690^14)
"
"30------------------------------]-]Success  
conv
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
 (forall singleton x14 \
   forall (propId singleton x11 x14) x15 \ propId singleton star star)
"
"30______________________________[+[Begin 
of x12 X2691^14 int
"
"30------------------------------]-]Success  
of x12 singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
of (forall_app (forall_app x10 x11) x12)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall X2692^14 X2693^14)
"
"29-----------------------------]-]Success  
conv (forall (propId singleton x11 x12) x14 \ propId singleton star star)
 (forall (propId singleton x11 x12) x14 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of x13 X2694^14 int
"
"29-----------------------------]-]Success  
of x13 (propId singleton x11 x12) int
"
"29_____________________________[+[Begin 
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"29-----------------------------]-]Success  
conv (propId singleton x11 x12) (propId singleton x11 x12)
"
"28----------------------------]-]Success  
of (forall_app (forall_app (forall_app x10 x11) x12) x13)
 (propId singleton star star) int
"
"28____________________________[+[Begin 
conv (propId singleton star star) (X2695^13 x13)
"
"28----------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"27---------------------------]-]Success  
of
 (forall_lam (propId singleton x11 x12) x13 \
   forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2696^12 x12)
"
"27---------------------------]-]Success  
conv (forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"26--------------------------]-]Success  
of
 (forall_lam singleton x12 \
   forall_lam (propId singleton x11 x12) x13 \
    forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"26__________________________[+[Begin 
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (X2697^11 x11)
"
"26--------------------------]-]Success  
conv
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x12 \
   forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam singleton x12 \
    forall_lam (propId singleton x11 x12) x13 \
     forall_app (forall_app (forall_app x10 x11) x12) x13)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"25-------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (forall singleton x11 \
   forall singleton x12 \
    forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"24------------------------]-]Success  
of
 (pair (setPi singleton x11 \ propId singleton star star) (x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
   (lambda singleton x11 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x9 x11))
   (forall_lam singleton x11 \
     forall_lam singleton x12 \
      forall_lam (propId singleton x11 x12) x13 \
       forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"24------------------------]-]Success  
conv
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
 (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
   forall singleton x12 \
    forall singleton x13 \
     forall (propId singleton x12 x13) x14 \ propId singleton star star)
"
"23-----------------------]-]Success  
pi x9 \
 pi x10 \
  locDecl x9 (setPi singleton x11 \ propId singleton star x0) =>
   locDecl x10
    (forall singleton x11 \
      forall singleton x12 \
       forall (propId singleton x11 x12) x13 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x11 \ propId singleton star star) (x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
       (lambda singleton x11 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x9 x11))
       (forall_lam singleton x11 \
         forall_lam singleton x12 \
          forall_lam (propId singleton x11 x12) x13 \
           forall_app (forall_app (forall_app x10 x11) x12) x13))
     (colSigma (setPi singleton x11 \ propId singleton star star) x11 \
       forall singleton x12 \
        forall singleton x13 \
         forall (propId singleton x12 x13) x14 \ propId singleton star star)
     int
"
"22----------------------]-]Success  
of
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"21---------------------]-]Success  
isa
 (elim_colSigma x8 (x9 \
   colSigma (setPi singleton x10 \ propId singleton star star) x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
   x9 \ x10 \
   pair (setPi singleton x11 \ propId singleton star star) (x11 \
    forall singleton x12 \
     forall singleton x13 \
      forall (propId singleton x12 x13) x14 \ propId singleton star star)
    (lambda singleton x11 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x9 x11))
    (forall_lam singleton x11 \
      forall_lam singleton x12 \
       forall_lam (propId singleton x11 x12) x13 \
        forall_app (forall_app (forall_app x10 x11) x12) x13))
 (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
   forall singleton x10 \
    forall singleton x11 \
     forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"20--------------------]-]Success  
of
 (app x3
   (elim_colSigma x8 (x9 \
     colSigma (setPi singleton x10 \ propId singleton star star) x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
     x9 \ x10 \
     pair (setPi singleton x11 \ propId singleton star star) (x11 \
      forall singleton x12 \
       forall singleton x13 \
        forall (propId singleton x12 x13) x14 \ propId singleton star star)
      (lambda singleton x11 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x9 x11))
      (forall_lam singleton x11 \
        forall_lam singleton x12 \
         forall_lam (propId singleton x11 x12) x13 \
          forall_app (forall_app (forall_app x10 x11) x12) x13))) singleton
 int
"
"20____________________[+[Begin 
conv singleton singleton
"
"20--------------------]-]Success  
conv singleton singleton
"
"20____________________[+[Begin 
isType (setPi singleton x8 \ propId singleton star star) X2698^8 X2699^8
"
"21_____________________[+[Begin 
of star X2700^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
of star X2701^9 int
"
"21---------------------]-]Success  
of star singleton int
"
"21_____________________[+[Begin 
conv singleton singleton
"
"21---------------------]-]Success  
conv singleton singleton
"
"21_____________________[+[Begin 
(pts_leq set set),
(X2702^8 = props)
"
"21---------------------]-]Success  
(pts_leq set set),
(props = props)
"
"21_____________________[+[Begin 
pts_fun set props X2698^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pts_fun set props set
"
"20--------------------]-]Success  
isType (setPi singleton x8 \ propId singleton star star) set X2699^8
"
"20____________________[+[Begin 
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star star) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   X2703^8 X2699^8
"
"21_____________________[+[Begin 
isType singleton X2704^9 X2699^8
"
"21---------------------]-]Success  
isType singleton set X2699^8
"
"21_____________________[+[Begin 
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2705^9 X2699^8)
"
"22______________________[+[Begin 
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) X2705^9
 X2699^8
"
"23_______________________[+[Begin 
isType singleton X2706^10 X2699^8
"
"23-----------------------]-]Success  
isType singleton set X2699^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     X2707^10 X2699^8)
"
"24________________________[+[Begin 
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X2707^10 X2699^8
"
"25_________________________[+[Begin 
isType (propId singleton x9 x10) X2708^11 X2699^8
"
"26__________________________[+[Begin 
of x9 X2709^11 int
"
"26--------------------------]-]Success  
of x9 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x10 X2710^11 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2708^11 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"25-------------------------]-]Success  
isType (propId singleton x9 x10) props X2699^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) X2711^11 X2699^8)
"
"26__________________________[+[Begin 
isType (propId singleton star star) X2711^11 X2699^8
"
"27___________________________[+[Begin 
of star X2712^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
of star X2713^12 int
"
"27---------------------------]-]Success  
of star singleton int
"
"27___________________________[+[Begin 
conv singleton singleton
"
"27---------------------------]-]Success  
conv singleton singleton
"
"27___________________________[+[Begin 
(pts_leq set set),
(X2711^11 = props)
"
"27---------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26--------------------------]-]Success  
isType (propId singleton star star) props X2699^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 (propId singleton x9 x10) =>
  spy (isType (propId singleton star star) props X2699^8)
"
"25_________________________[+[Begin 
pts_for props props X2707^10
"
"25-------------------------]-]Success  
pts_for props props props
"
"24------------------------]-]Success  
isType (forall (propId singleton x9 x10) x11 \ propId singleton star star)
 props X2699^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X2699^8)
"
"23_______________________[+[Begin 
pts_for set props X2705^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
isType
 (forall singleton x10 \
   forall (propId singleton x9 x10) x11 \ propId singleton star star) props
 X2699^8
"
"21---------------------]-]Success  
pi x9 \
 locDecl x9 singleton =>
  spy
   (isType
     (forall singleton x10 \
       forall (propId singleton x9 x10) x11 \ propId singleton star star)
     props X2699^8)
"
"21_____________________[+[Begin 
pts_for set props X2703^8
"
"21---------------------]-]Success  
pts_for set props props
"
"20--------------------]-]Success  
pi x8 \
 locDecl x8 (setPi singleton x9 \ propId singleton star star) =>
  isType
   (forall singleton x9 \
     forall singleton x10 \
      forall (propId singleton x9 x10) x11 \ propId singleton star star)
   props X2699^8
"
"20____________________[+[Begin 
pts_leq set set
"
"20--------------------]-]Success  
pts_leq set set
"
"20____________________[+[Begin 
pts_leq props set
"
"20--------------------]-]Success  
pts_leq props set
"
"20____________________[+[Begin 
of
 (elim_colSigma x6 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12)) X2714^8 X2699^8
"
"21_____________________[+[Begin 
of x6 (colSigma X2715^8 X2716^8) X2699^8
"
"21---------------------]-]Success  
of x6
 (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 X2699^8
"
"21_____________________[+[Begin 
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   X2699^8
"
"22______________________[+[Begin 
isType (setPi singleton x9 \ propId singleton star star) X2717^9 X2699^8
"
"23_______________________[+[Begin 
of star X2718^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X2719^10 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X2720^9 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X2717^9
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"22----------------------]-]Success  
isType (setPi singleton x9 \ propId singleton star star) set X2699^8
"
"22______________________[+[Begin 
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   X2721^9 X2699^8
"
"23_______________________[+[Begin 
isType singleton X2722^10 X2699^8
"
"23-----------------------]-]Success  
isType singleton set X2699^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2723^10 X2699^8)
"
"24________________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2723^10 X2699^8
"
"25_________________________[+[Begin 
isType singleton X2724^11 X2699^8
"
"25-------------------------]-]Success  
isType singleton set X2699^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2725^11 X2699^8)
"
"26__________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2725^11 X2699^8
"
"27___________________________[+[Begin 
isType (propId singleton x10 x11) X2726^12 X2699^8
"
"28____________________________[+[Begin 
of x10 X2727^12 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x11 X2728^12 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2726^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton x10 x11) props X2699^8
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X2729^12 X2699^8)
"
"28____________________________[+[Begin 
isType (propId singleton star star) X2729^12 X2699^8
"
"29_____________________________[+[Begin 
of star X2730^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2731^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2729^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
isType (propId singleton star star) props X2699^8
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props X2699^8)
"
"27___________________________[+[Begin 
pts_for props props X2725^11
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2699^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2699^8)
"
"25_________________________[+[Begin 
pts_for set props X2723^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2699^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2699^8)
"
"23_______________________[+[Begin 
pts_for set props X2721^9
"
"23-----------------------]-]Success  
pts_for set props props
"
"22----------------------]-]Success  
pi x9 \
 locDecl x9 (setPi singleton x10 \ propId singleton star star) =>
  isType
   (forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   props X2699^8
"
"22______________________[+[Begin 
pts_leq set set
"
"22----------------------]-]Success  
pts_leq set set
"
"22______________________[+[Begin 
pts_leq props set
"
"22----------------------]-]Success  
pts_leq props set
"
"21---------------------]-]Success  
pi x8 \
 locDecl x8
  (colSigma (setPi singleton x9 \ propId singleton star x0) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
  isType
   (colSigma (setPi singleton x9 \ propId singleton star star) x9 \
     forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) _
   X2699^8
"
"21_____________________[+[Begin 
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     X2699^8
"
"22______________________[+[Begin 
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12)) X2732^10 X2699^8
"
"23_______________________[+[Begin 
of star X2733^11 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
of star X2734^11 int
"
"23-----------------------]-]Success  
of star singleton int
"
"23_______________________[+[Begin 
conv singleton singleton
"
"23-----------------------]-]Success  
conv singleton singleton
"
"23_______________________[+[Begin 
(pts_leq set set),
(X2735^10 = props)
"
"23-----------------------]-]Success  
(pts_leq set set),
(props = props)
"
"23_______________________[+[Begin 
pts_fun set props X2736^10
"
"24________________________[+[Begin 
pts_leq set set
"
"24------------------------]-]Success  
pts_leq set set
"
"24________________________[+[Begin 
pts_leq props set
"
"24------------------------]-]Success  
pts_leq props set
"
"23-----------------------]-]Success  
pts_fun set props set
"
"23_______________________[+[Begin 
isType singleton X2737^10 X2699^8
"
"23-----------------------]-]Success  
isType singleton set X2699^8
"
"23_______________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2738^10 X2699^8)
"
"24________________________[+[Begin 
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2738^10 X2699^8
"
"25_________________________[+[Begin 
isType singleton X2739^11 X2699^8
"
"25-------------------------]-]Success  
isType singleton set X2699^8
"
"25_________________________[+[Begin 
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     X2740^11 X2699^8)
"
"26__________________________[+[Begin 
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 X2740^11 X2699^8
"
"27___________________________[+[Begin 
isType (propId singleton x10 x11) X2741^12 X2699^8
"
"28____________________________[+[Begin 
of x10 X2742^12 int
"
"28----------------------------]-]Success  
of x10 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
of x11 X2743^12 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"28____________________________[+[Begin 
(pts_leq set set),
(X2741^12 = props)
"
"28----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"27---------------------------]-]Success  
isType (propId singleton x10 x11) props X2699^8
"
"27___________________________[+[Begin 
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) X2744^12 X2699^8)
"
"28____________________________[+[Begin 
isType (propId singleton star star) X2744^12 X2699^8
"
"29_____________________________[+[Begin 
of star X2745^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
of star X2746^13 int
"
"29-----------------------------]-]Success  
of star singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"29_____________________________[+[Begin 
(pts_leq set set),
(X2744^12 = props)
"
"29-----------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"28----------------------------]-]Success  
isType (propId singleton star star) props X2699^8
"
"27---------------------------]-]Success  
pi x12 \
 locDecl x12 (propId singleton x10 x11) =>
  spy (isType (propId singleton star star) props X2699^8)
"
"27___________________________[+[Begin 
pts_for props props X2740^11
"
"27---------------------------]-]Success  
pts_for props props props
"
"26--------------------------]-]Success  
isType (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 props X2699^8
"
"25-------------------------]-]Success  
pi x11 \
 locDecl x11 singleton =>
  spy
   (isType
     (forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2699^8)
"
"25_________________________[+[Begin 
pts_for set props X2738^10
"
"25-------------------------]-]Success  
pts_for set props props
"
"24------------------------]-]Success  
isType
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) props
 X2699^8
"
"23-----------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  spy
   (isType
     (forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star)
     props X2699^8)
"
"23_______________________[+[Begin 
pts_for set props X2747^10
"
"23-----------------------]-]Success  
pts_for set props props
"
"23_______________________[+[Begin 
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) X2748^10 X2699^8
"
"24________________________[+[Begin 
isType singleton _ X2699^8
"
"24------------------------]-]Success  
isType singleton _ X2699^8
"
"24________________________[+[Begin 
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (X2749^10 x10) X2699^8
"
"25_________________________[+[Begin 
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) X2750^11 X2699^8
"
"26__________________________[+[Begin 
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies X2751^11 X2750^11) X2699^8
"
"27___________________________[+[Begin 
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 X2752^11 X2699^8
"
"28____________________________[+[Begin 
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) (implies X2753^11 X2752^11) X2699^8
"
"29_____________________________[+[Begin 
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star) X2754^11 X2699^8
"
"30______________________________[+[Begin 
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0) X2755^11 X2699^8
"
"31_______________________________[+[Begin 
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X2756^11 X2699^8
"
"32________________________________[+[Begin 
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X2757^11 X2756^11) X2699^8
"
"33_________________________________[+[Begin 
of (forall_app (forall_app (k_propId singleton) star) star) X2758^11 X2699^8
"
"34__________________________________[+[Begin 
of (forall_app (k_propId singleton) star) X2759^11 X2699^8
"
"35___________________________________[+[Begin 
of (k_propId singleton) X2760^11 X2699^8
"
"35-----------------------------------]-]Success  
of (k_propId singleton)
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 X2699^8
"
"35___________________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall X2761^11 X2762^11)
"
"35-----------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (forall singleton x13 \
       forall singleton x14 \
        implies (propId singleton x13 x14)
         (implies (propId singleton x11 x13) (propId singleton x12 x14))))
"
"35___________________________________[+[Begin 
of star X2763^11 X2699^8
"
"35-----------------------------------]-]Success  
of star singleton X2699^8
"
"35___________________________________[+[Begin 
conv singleton singleton
"
"35-----------------------------------]-]Success  
conv singleton singleton
"
"34----------------------------------]-]Success  
of (forall_app (k_propId singleton) star)
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 X2699^8
"
"34__________________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall X2764^11 X2765^11)
"
"34----------------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
 (forall singleton x11 \
   implies (propId singleton star x11)
    (forall singleton x12 \
      forall singleton x13 \
       implies (propId singleton x12 x13)
        (implies (propId singleton star x12) (propId singleton x11 x13))))
"
"34__________________________________[+[Begin 
of star X2766^11 X2699^8
"
"34----------------------------------]-]Success  
of star singleton X2699^8
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 X2699^8
"
"33_________________________________[+[Begin 
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies X2757^11 X2756^11)
"
"33---------------------------------]-]Success  
conv
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
"
"32--------------------------------]-]Success  
isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x11 \
     forall singleton x12 \
      implies (propId singleton x11 x12)
       (implies (propId singleton star x11) (propId singleton star x12))))
 X2699^8
"
"32________________________________[+[Begin 
isa (id singleton star) (propId singleton star star) X2699^8
"
"33_________________________________[+[Begin 
of (id singleton star) X2767^11 X2699^8
"
"34__________________________________[+[Begin 
of star X2768^11 int
"
"34----------------------------------]-]Success  
of star singleton int
"
"34__________________________________[+[Begin 
conv singleton singleton
"
"34----------------------------------]-]Success  
conv singleton singleton
"
"33---------------------------------]-]Success  
of (id singleton star) (propId singleton star star) int
"
"33_________________________________[+[Begin 
conv (propId singleton star star) (propId singleton star star)
"
"33---------------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"32--------------------------------]-]Success  
isa (id singleton star) (propId singleton star star) int
"
"31-------------------------------]-]Success  
of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12))) int
"
"31_______________________________[+[Begin 
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall X2769^11 X2770^11)
"
"31-------------------------------]-]Success  
conv
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
 (forall singleton x11 \
   forall singleton x12 \
    implies (propId singleton x11 x12)
     (implies (propId singleton star x11) (propId singleton star x12)))
"
"31_______________________________[+[Begin 
of x0 X2771^11 int
"
"31-------------------------------]-]Success  
of x0 singleton int
"
"31_______________________________[+[Begin 
conv singleton singleton
"
"31-------------------------------]-]Success  
conv singleton singleton
"
"30------------------------------]-]Success  
of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) x0)
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11))) int
"
"30______________________________[+[Begin 
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall X2772^11 X2773^11)
"
"30------------------------------]-]Success  
conv
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
 (forall singleton x11 \
   implies (propId singleton x0 x11)
    (implies (propId singleton star x0) (propId singleton star x11)))
"
"30______________________________[+[Begin 
of star X2774^11 int
"
"30------------------------------]-]Success  
of star singleton int
"
"30______________________________[+[Begin 
conv singleton singleton
"
"30------------------------------]-]Success  
conv singleton singleton
"
"29-----------------------------]-]Success  
of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"29_____________________________[+[Begin 
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies X2753^11 X2752^11)
"
"29-----------------------------]-]Success  
conv
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star)))
"
"28----------------------------]-]Success  
isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) x0) star)
 (implies (propId singleton x0 star)
   (implies (propId singleton star x0) (propId singleton star star))) int
"
"28____________________________[+[Begin 
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"prova di symmetria"
"propId singleton x0 star"
"|||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||||||||||||
"
"28----------------------------]-]Success  
isa (fixMe "prova di symmetria") (propId singleton x0 star) int
"
"27---------------------------]-]Success  
of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"27___________________________[+[Begin 
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies X2751^11 X2750^11)
"
"27---------------------------]-]Success  
conv (implies (propId singleton star x0) (propId singleton star star))
 (implies (propId singleton star x0) (propId singleton star star))
"
"26--------------------------]-]Success  
isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) x0) star) (fixMe "prova di symmetria"))
 (implies (propId singleton star x0) (propId singleton star star)) int
"
"26__________________________[+[Begin 
isa (app x8 x10) (propId singleton star x0) int
"
"27___________________________[+[Begin 
of (app x8 x10) X2775^11 int
"
"28____________________________[+[Begin 
of x8 (setPi X2776^11 X2777^11) int
"
"28----------------------------]-]Success  
of x8 (setPi singleton x11 \ propId singleton star x0) int
"
"28____________________________[+[Begin 
isa x10 singleton int
"
"29_____________________________[+[Begin 
of x10 X2778^11 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
isa x10 singleton int
"
"27---------------------------]-]Success  
of (app x8 x10) (propId singleton star x0) int
"
"27___________________________[+[Begin 
conv (propId singleton star x0) (propId singleton star x0)
"
"27---------------------------]-]Success  
conv (propId singleton star x0) (propId singleton star x0)
"
"26--------------------------]-]Success  
isa (app x8 x10) (propId singleton star x0) int
"
"25-------------------------]-]Success  
of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) x0) star) (fixMe "prova di symmetria"))
   (app x8 x10)) (propId singleton star star) int
"
"25_________________________[+[Begin 
conv (propId singleton star star) (X2749^10 x10)
"
"25-------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"24------------------------]-]Success  
pi x10 \
 locDecl x10 singleton =>
  isa
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) x0) star) (fixMe "prova di symmetria"))
     (app x8 x10)) (propId singleton star star) int
"
"23-----------------------]-]Success  
of
 (lambda singleton x10 \
   impl_app
    (impl_app
      (forall_app
        (forall_app
          (impl_app (forall_app (forall_app (k_propId singleton) star) star)
            (id singleton star)) x0) star) (fixMe "prova di symmetria"))
    (app x8 x10)) (setPi singleton x10 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv (setPi singleton x10 \ propId singleton star star)
 (setPi singleton x10 \ propId singleton star star)
"
"23_______________________[+[Begin 
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12) X2779^10 int
"
"24________________________[+[Begin 
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12) X2780^11 int
"
"25_________________________[+[Begin 
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12) X2781^12 int
"
"26__________________________[+[Begin 
of x10 X2782^12 int
"
"26--------------------------]-]Success  
of x10 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
of x11 X2783^12 int
"
"26--------------------------]-]Success  
of x11 singleton int
"
"26__________________________[+[Begin 
conv singleton singleton
"
"26--------------------------]-]Success  
conv singleton singleton
"
"26__________________________[+[Begin 
(pts_leq set set),
(X2784^12 = props)
"
"26--------------------------]-]Success  
(pts_leq set set),
(props = props)
"
"26__________________________[+[Begin 
of (forall_app (forall_app (forall_app x9 x10) x11) x12) X2785^13 int
"
"27___________________________[+[Begin 
of (forall_app (forall_app x9 x10) x11) X2786^13 int
"
"28____________________________[+[Begin 
of (forall_app x9 x10) X2787^13 int
"
"29_____________________________[+[Begin 
of x9 X2788^13 int
"
"29-----------------------------]-]Success  
of x9
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star) int
"
"29_____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall X2789^13 X2790^13)
"
"29-----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
 (forall singleton x13 \
   forall singleton x14 \
    forall (propId singleton x13 x14) x15 \ propId singleton star star)
"
"29_____________________________[+[Begin 
of x10 X2791^13 int
"
"29-----------------------------]-]Success  
of x10 singleton int
"
"29_____________________________[+[Begin 
conv singleton singleton
"
"29-----------------------------]-]Success  
conv singleton singleton
"
"28----------------------------]-]Success  
of (forall_app x9 x10)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star) int
"
"28____________________________[+[Begin 
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall X2792^13 X2793^13)
"
"28----------------------------]-]Success  
conv
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
 (forall singleton x13 \
   forall (propId singleton x10 x13) x14 \ propId singleton star star)
"
"28____________________________[+[Begin 
of x11 X2794^13 int
"
"28----------------------------]-]Success  
of x11 singleton int
"
"28____________________________[+[Begin 
conv singleton singleton
"
"28----------------------------]-]Success  
conv singleton singleton
"
"27---------------------------]-]Success  
of (forall_app (forall_app x9 x10) x11)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star) int
"
"27___________________________[+[Begin 
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall X2795^13 X2796^13)
"
"27---------------------------]-]Success  
conv (forall (propId singleton x10 x11) x13 \ propId singleton star star)
 (forall (propId singleton x10 x11) x13 \ propId singleton star star)
"
"27___________________________[+[Begin 
of x12 X2797^13 int
"
"27---------------------------]-]Success  
of x12 (propId singleton x10 x11) int
"
"27___________________________[+[Begin 
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"27---------------------------]-]Success  
conv (propId singleton x10 x11) (propId singleton x10 x11)
"
"26--------------------------]-]Success  
of (forall_app (forall_app (forall_app x9 x10) x11) x12)
 (propId singleton star star) int
"
"26__________________________[+[Begin 
conv (propId singleton star star) (X2798^12 x12)
"
"26--------------------------]-]Success  
conv (propId singleton star star) (propId singleton star star)
"
"25-------------------------]-]Success  
of
 (forall_lam (propId singleton x10 x11) x12 \
   forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"25_________________________[+[Begin 
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X2799^11 x11)
"
"25-------------------------]-]Success  
conv (forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"24------------------------]-]Success  
of
 (forall_lam singleton x11 \
   forall_lam (propId singleton x10 x11) x12 \
    forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"24________________________[+[Begin 
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (X2800^10 x10)
"
"24------------------------]-]Success  
conv
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x11 \
   forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
of
 (forall_lam singleton x10 \
   forall_lam singleton x11 \
    forall_lam (propId singleton x10 x11) x12 \
     forall_app (forall_app (forall_app x9 x10) x11) x12)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star) int
"
"23_______________________[+[Begin 
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"23-----------------------]-]Success  
conv
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
 (forall singleton x10 \
   forall singleton x11 \
    forall (propId singleton x10 x11) x12 \ propId singleton star star)
"
"22----------------------]-]Success  
of
 (pair (setPi singleton x10 \ propId singleton star star) (x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
   (lambda singleton x10 \
     impl_app
      (impl_app
        (forall_app
          (forall_app
            (impl_app
              (forall_app (forall_app (k_propId singleton) star) star)
              (id singleton star)) x0) star) (fixMe "prova di symmetria"))
      (app x8 x10))
   (forall_lam singleton x10 \
     forall_lam singleton x11 \
      forall_lam (propId singleton x10 x11) x12 \
       forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star) int
"
"22______________________[+[Begin 
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"22----------------------]-]Success  
conv
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
 (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
   forall singleton x11 \
    forall singleton x12 \
     forall (propId singleton x11 x12) x13 \ propId singleton star star)
"
"21---------------------]-]Success  
pi x8 \
 pi x9 \
  locDecl x8 (setPi singleton x10 \ propId singleton star x0) =>
   locDecl x9
    (forall singleton x10 \
      forall singleton x11 \
       forall (propId singleton x10 x11) x12 \ propId singleton star star) =>
    isa
     (pair (setPi singleton x10 \ propId singleton star star) (x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
       (lambda singleton x10 \
         impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) x0) star) (fixMe "prova di symmetria"))
          (app x8 x10))
       (forall_lam singleton x10 \
         forall_lam singleton x11 \
          forall_lam (propId singleton x10 x11) x12 \
           forall_app (forall_app (forall_app x9 x10) x11) x12))
     (colSigma (setPi singleton x10 \ propId singleton star star) x10 \
       forall singleton x11 \
        forall singleton x12 \
         forall (propId singleton x11 x12) x13 \ propId singleton star star)
     int
"
"20--------------------]-]Success  
of
 (elim_colSigma x6 (x8 \
   colSigma (setPi singleton x9 \ propId singleton star star) x9 \
    forall singleton x10 \
     forall singleton x11 \
      forall (propId singleton x10 x11) x12 \ propId singleton star star)
   x8 \ x9 \
   pair (setPi singleton x10 \ propId singleton star star) (x10 \
    forall singleton x11 \
     forall singleton x12 \
      forall (propId singleton x11 x12) x13 \ propId singleton star star)
    (lambda singleton x10 \
      impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app (forall_app (k_propId singleton) star) star)
               (id singleton star)) x0) star) (fixMe "prova di symmetria"))
       (app x8 x10))
    (forall_lam singleton x10 \
      forall_lam singleton x11 \
       forall_lam (propId singleton x10 x11) x12 \
        forall_app (forall_app (forall_app x9 x10) x11) x12))
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star) int
"
"20____________________[+[Begin 
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"20--------------------]-]Success  
conv
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
 (colSigma (setPi singleton x8 \ propId singleton star star) x8 \
   forall singleton x9 \
    forall singleton x10 \
     forall (propId singleton x9 x10) x11 \ propId singleton star star)
"
"19-------------------]-]Success  
hnf
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x6)
 (app x3
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
"
"19___________________[+[Begin 
dconv
 (app x3
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (app x3
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
"
"19-------------------]-]Success  
dconv
 (app x3
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (app x3
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
"
"18------------------]-]Success  
conv
 (app x3
   (elim_colSigma x6 (x8 \
     colSigma (setPi singleton x9 \ propId singleton star star) x9 \
      forall singleton x10 \
       forall singleton x11 \
        forall (propId singleton x10 x11) x12 \ propId singleton star star)
     x8 \ x9 \
     pair (setPi singleton x10 \ propId singleton star star) (x10 \
      forall singleton x11 \
       forall singleton x12 \
        forall (propId singleton x11 x12) x13 \ propId singleton star star)
      (lambda singleton x10 \
        impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) x0) star) (fixMe "prova di symmetria"))
         (app x8 x10))
      (forall_lam singleton x10 \
        forall_lam singleton x11 \
         forall_lam (propId singleton x10 x11) x12 \
          forall_app (forall_app (forall_app x9 x10) x11) x12)))
 (app
   (lambda
     (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
       forall singleton x9 \
        forall singleton x10 \
         forall (propId singleton x9 x10) x11 \ propId singleton star star)
     x8 \
     app x3
      (elim_colSigma x8 (x9 \
        colSigma (setPi singleton x10 \ propId singleton star star) x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
        x9 \ x10 \
        pair (setPi singleton x11 \ propId singleton star star) (x11 \
         forall singleton x12 \
          forall singleton x13 \
           forall (propId singleton x12 x13) x14 \ propId singleton star star)
         (lambda singleton x11 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x9 x11))
         (forall_lam singleton x11 \
           forall_lam singleton x12 \
            forall_lam (propId singleton x11 x12) x13 \
             forall_app (forall_app (forall_app x10 x11) x12) x13))) x6)
"
"17-----------------]-]Success  
dconv
 (propId singleton
   (app x3
     (elim_colSigma x5 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12)))
   (app x3
     (elim_colSigma x6 (x8 \
       colSigma (setPi singleton x9 \ propId singleton star star) x9 \
        forall singleton x10 \
         forall singleton x11 \
          forall (propId singleton x10 x11) x12 \ propId singleton star star)
       x8 \ x9 \
       pair (setPi singleton x10 \ propId singleton star star) (x10 \
        forall singleton x11 \
         forall singleton x12 \
          forall (propId singleton x11 x12) x13 \ propId singleton star star)
        (lambda singleton x10 \
          impl_app
           (impl_app
             (forall_app
               (forall_app
                 (impl_app
                   (forall_app (forall_app (k_propId singleton) star) star)
                   (id singleton star)) x0) star)
             (fixMe "prova di symmetria")) (app x8 x10))
        (forall_lam singleton x10 \
          forall_lam singleton x11 \
           forall_lam (propId singleton x10 x11) x12 \
            forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (propId singleton
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
   (app
     (lambda
       (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
       x8 \
       app x3
        (elim_colSigma x8 (x9 \
          colSigma (setPi singleton x10 \ propId singleton star star) x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star) x9 \ x10 \
          pair (setPi singleton x11 \ propId singleton star star) (x11 \
           forall singleton x12 \
            forall singleton x13 \
             forall (propId singleton x12 x13) x14 \
              propId singleton star star)
           (lambda singleton x11 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x9 x11))
           (forall_lam singleton x11 \
             forall_lam singleton x12 \
              forall_lam (propId singleton x11 x12) x13 \
               forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"16----------------]-]Success  
dconv
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app x3
      (elim_colSigma x5 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12)))
    (app x3
      (elim_colSigma x6 (x8 \
        colSigma (setPi singleton x9 \ propId singleton star star) x9 \
         forall singleton x10 \
          forall singleton x11 \
           forall (propId singleton x10 x11) x12 \ propId singleton star star)
        x8 \ x9 \
        pair (setPi singleton x10 \ propId singleton star star) (x10 \
         forall singleton x11 \
          forall singleton x12 \
           forall (propId singleton x11 x12) x13 \ propId singleton star star)
         (lambda singleton x10 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x8 x10))
         (forall_lam singleton x10 \
           forall_lam singleton x11 \
            forall_lam (propId singleton x10 x11) x12 \
             forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall (forall singleton x7 \ propId singleton star star) x7 \
   propId singleton
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
    (app
      (lambda
        (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
        x8 \
        app x3
         (elim_colSigma x8 (x9 \
           colSigma (setPi singleton x10 \ propId singleton star star) x10 \
            forall singleton x11 \
             forall singleton x12 \
              forall (propId singleton x11 x12) x13 \
               propId singleton star star) x9 \ x10 \
           pair (setPi singleton x11 \ propId singleton star star) (x11 \
            forall singleton x12 \
             forall singleton x13 \
              forall (propId singleton x12 x13) x14 \
               propId singleton star star)
            (lambda singleton x11 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x9 x11))
            (forall_lam singleton x11 \
              forall_lam singleton x12 \
               forall_lam (propId singleton x11 x12) x13 \
                forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"15---------------]-]Success  
dconv
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app x3
       (elim_colSigma x5 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12)))
     (app x3
       (elim_colSigma x6 (x8 \
         colSigma (setPi singleton x9 \ propId singleton star star) x9 \
          forall singleton x10 \
           forall singleton x11 \
            forall (propId singleton x10 x11) x12 \
             propId singleton star star) x8 \ x9 \
         pair (setPi singleton x10 \ propId singleton star star) (x10 \
          forall singleton x11 \
           forall singleton x12 \
            forall (propId singleton x11 x12) x13 \
             propId singleton star star)
          (lambda singleton x10 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x8 x10))
          (forall_lam singleton x10 \
            forall_lam singleton x11 \
             forall_lam (propId singleton x10 x11) x12 \
              forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall
   (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
     forall singleton x7 \
      forall singleton x8 \
       forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
   forall (forall singleton x7 \ propId singleton star star) x7 \
    propId singleton
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
     (app
       (lambda
         (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
           forall singleton x9 \
            forall singleton x10 \
             forall (propId singleton x9 x10) x11 \
              propId singleton star star) x8 \
         app x3
          (elim_colSigma x8 (x9 \
            colSigma (setPi singleton x10 \ propId singleton star star) x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star) x9 \ x10 \
            pair (setPi singleton x11 \ propId singleton star star) (x11 \
             forall singleton x12 \
              forall singleton x13 \
               forall (propId singleton x12 x13) x14 \
                propId singleton star star)
             (lambda singleton x11 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x9 x11))
             (forall_lam singleton x11 \
               forall_lam singleton x12 \
                forall_lam (propId singleton x11 x12) x13 \
                 forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"14--------------]-]Success  
dconv
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app x3
        (elim_colSigma x5 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (app x3
        (elim_colSigma x6 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"13-------------]-]Success  
conv
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app x3
        (elim_colSigma x5 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12)))
      (app x3
        (elim_colSigma x6 (x8 \
          colSigma (setPi singleton x9 \ propId singleton star star) x9 \
           forall singleton x10 \
            forall singleton x11 \
             forall (propId singleton x10 x11) x12 \
              propId singleton star star) x8 \ x9 \
          pair (setPi singleton x10 \ propId singleton star star) (x10 \
           forall singleton x11 \
            forall singleton x12 \
             forall (propId singleton x11 x12) x13 \
              propId singleton star star)
           (lambda singleton x10 \
             impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) x0) star)
                (fixMe "prova di symmetria")) (app x8 x10))
           (forall_lam singleton x10 \
             forall_lam singleton x11 \
              forall_lam (propId singleton x10 x11) x12 \
               forall_app (forall_app (forall_app x9 x10) x11) x12))))
 (forall
   (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
     forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \ propId singleton star star) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall (forall singleton x7 \ propId singleton star star) x7 \
     propId singleton
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x5)
      (app
        (lambda
          (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star) x8 \
          app x3
           (elim_colSigma x8 (x9 \
             colSigma (setPi singleton x10 \ propId singleton star star)
              x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star) x9 \ x10 \
             pair (setPi singleton x11 \ propId singleton star star) (x11 \
              forall singleton x12 \
               forall singleton x13 \
                forall (propId singleton x12 x13) x14 \
                 propId singleton star star)
              (lambda singleton x11 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x9 x11))
              (forall_lam singleton x11 \
                forall_lam singleton x12 \
                 forall_lam (propId singleton x11 x12) x13 \
                  forall_app (forall_app (forall_app x10 x11) x12) x13))) x6))
"
"12------------]-]Success  
of
 (pair
   (setPi
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) (x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall (forall singleton x8 \ propId singleton star star) x8 \
      propId singleton (app x5 x6) (app x5 x7))
   (lambda
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     app x3
      (elim_colSigma x5 (x6 \
        colSigma (setPi singleton x7 \ propId singleton star star) x7 \
         forall singleton x8 \
          forall singleton x9 \
           forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x6 \ x7 \
        pair (setPi singleton x8 \ propId singleton star star) (x8 \
         forall singleton x9 \
          forall singleton x10 \
           forall (propId singleton x9 x10) x11 \ propId singleton star star)
         (lambda singleton x8 \
           impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) x0) star)
              (fixMe "prova di symmetria")) (app x6 x8))
         (forall_lam singleton x8 \
           forall_lam singleton x9 \
            forall_lam (propId singleton x8 x9) x10 \
             forall_app (forall_app (forall_app x7 x8) x9) x10)))
   (forall_lam
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall_lam
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall_lam (forall singleton x7 \ propId singleton star star) x7 \
       forall_app
        (forall_app
          (forall_app x4
            (elim_colSigma x5 (x8 \
              colSigma (setPi singleton x9 \ propId singleton star star) x9 \
               forall singleton x10 \
                forall singleton x11 \
                 forall (propId singleton x10 x11) x12 \
                  propId singleton star star) x8 \ x9 \
              pair (setPi singleton x10 \ propId singleton star star) (x10 \
               forall singleton x11 \
                forall singleton x12 \
                 forall (propId singleton x11 x12) x13 \
                  propId singleton star star)
               (lambda singleton x10 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x0) star)
                    (fixMe "prova di symmetria")) (app x8 x10))
               (forall_lam singleton x10 \
                 forall_lam singleton x11 \
                  forall_lam (propId singleton x10 x11) x12 \
                   forall_app (forall_app (forall_app x9 x10) x11) x12)))
          (elim_colSigma x6 (x8 \
            colSigma (setPi singleton x9 \ propId singleton star star) x9 \
             forall singleton x10 \
              forall singleton x11 \
               forall (propId singleton x10 x11) x12 \
                propId singleton star star) x8 \ x9 \
            pair (setPi singleton x10 \ propId singleton star star) (x10 \
             forall singleton x11 \
              forall singleton x12 \
               forall (propId singleton x11 x12) x13 \
                propId singleton star star)
             (lambda singleton x10 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x8 x10))
             (forall_lam singleton x10 \
               forall_lam singleton x11 \
                forall_lam (propId singleton x10 x11) x12 \
                 forall_app (forall_app (forall_app x9 x10) x11) x12)))
        (forall_lam singleton x8 \ forall_app x7 x8)))
 (colSigma
   (setPi
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall (forall singleton x8 \ propId singleton star star) x8 \
      propId singleton (app x5 x6) (app x5 x7)) int
"
"12____________[+[Begin 
conv
 (colSigma
   (setPi
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall (forall singleton x8 \ propId singleton star star) x8 \
      propId singleton (app x5 x6) (app x5 x7))
 (colSigma
   (setPi
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall (forall singleton x8 \ propId singleton star star) x8 \
      propId singleton (app x5 x6) (app x5 x7))
"
"12------------]-]Success  
conv
 (colSigma
   (setPi
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall (forall singleton x8 \ propId singleton star star) x8 \
      propId singleton (app x5 x6) (app x5 x7))
 (colSigma
   (setPi
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) x5 \
   forall
    (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
      forall singleton x7 \
       forall singleton x8 \
        forall (propId singleton x7 x8) x9 \ propId singleton star star) x6 \
    forall
     (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
       forall singleton x8 \
        forall singleton x9 \
         forall (propId singleton x8 x9) x10 \ propId singleton star star)
     x7 \
     forall (forall singleton x8 \ propId singleton star star) x8 \
      propId singleton (app x5 x6) (app x5 x7))
"
"11-----------]-]Success  
pi x3 \
 pi x4 \
  locDecl x3
   (setPi
     (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \ singleton) =>
   locDecl x4
    (forall
      (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall
       (colSigma (setPi singleton x6 \ propId singleton star star) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall (forall singleton x7 \ propId singleton star star) x7 \
        propId singleton (app x3 x5) (app x3 x6)) =>
    isa
     (pair
       (setPi
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) (x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7))
       (lambda
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         app x3
          (elim_colSigma x5 (x6 \
            colSigma (setPi singleton x7 \ propId singleton star star) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x6 \ x7 \
            pair (setPi singleton x8 \ propId singleton star star) (x8 \
             forall singleton x9 \
              forall singleton x10 \
               forall (propId singleton x9 x10) x11 \
                propId singleton star star)
             (lambda singleton x8 \
               impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) x0) star)
                  (fixMe "prova di symmetria")) (app x6 x8))
             (forall_lam singleton x8 \
               forall_lam singleton x9 \
                forall_lam (propId singleton x8 x9) x10 \
                 forall_app (forall_app (forall_app x7 x8) x9) x10)))
       (forall_lam
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall_lam
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall_lam (forall singleton x7 \ propId singleton star star) x7 \
           forall_app
            (forall_app
              (forall_app x4
                (elim_colSigma x5 (x8 \
                  colSigma (setPi singleton x9 \ propId singleton star star)
                   x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton star star) x8 \ x9 \
                  pair (setPi singleton x10 \ propId singleton star star)
                   (x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star)
                   (lambda singleton x10 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (id singleton star)) x0) star)
                        (fixMe "prova di symmetria")) (app x8 x10))
                   (forall_lam singleton x10 \
                     forall_lam singleton x11 \
                      forall_lam (propId singleton x10 x11) x12 \
                       forall_app (forall_app (forall_app x9 x10) x11) x12)))
              (elim_colSigma x6 (x8 \
                colSigma (setPi singleton x9 \ propId singleton star star)
                 x9 \
                 forall singleton x10 \
                  forall singleton x11 \
                   forall (propId singleton x10 x11) x12 \
                    propId singleton star star) x8 \ x9 \
                pair (setPi singleton x10 \ propId singleton star star)
                 (x10 \
                 forall singleton x11 \
                  forall singleton x12 \
                   forall (propId singleton x11 x12) x13 \
                    propId singleton star star)
                 (lambda singleton x10 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x0) star)
                      (fixMe "prova di symmetria")) (app x8 x10))
                 (forall_lam singleton x10 \
                   forall_lam singleton x11 \
                    forall_lam (propId singleton x10 x11) x12 \
                     forall_app (forall_app (forall_app x9 x10) x11) x12)))
            (forall_lam singleton x8 \ forall_app x7 x8)))
     (colSigma
       (setPi
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \ singleton) x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall
         (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
           forall singleton x8 \
            forall singleton x9 \
             forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x7 \
         forall (forall singleton x8 \ propId singleton star star) x8 \
          propId singleton (app x5 x6) (app x5 x7)) int
"
"10----------]-]Success  
of
 (elim_colSigma
   (pair
     (setPi
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ singleton) (x3 \
     forall
      (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall
       (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5))
     (lambda
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ star)
     (forall_lam
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \
       forall_lam
        (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall_lam (forall singleton x5 \ propId singleton star star) x5 \
         id singleton star)) (x3 \
   colSigma
    (setPi
      (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \ singleton) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
   pair
    (setPi
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) (x5 \
    forall
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7))
    (lambda
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      app x3
       (elim_colSigma x5 (x6 \
         colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x6 \ x7 \
         pair (setPi singleton x8 \ propId singleton star star) (x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
          (lambda singleton x8 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x6 x8))
          (forall_lam singleton x8 \
            forall_lam singleton x9 \
             forall_lam (propId singleton x8 x9) x10 \
              forall_app (forall_app (forall_app x7 x8) x9) x10)))
    (forall_lam
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall_lam
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall_lam (forall singleton x7 \ propId singleton star star) x7 \
        forall_app
         (forall_app
           (forall_app x4
             (elim_colSigma x5 (x8 \
               colSigma (setPi singleton x9 \ propId singleton star star)
                x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x8 \ x9 \
               pair (setPi singleton x10 \ propId singleton star star) (x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star)
                (lambda singleton x10 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x8 x10))
                (forall_lam singleton x10 \
                  forall_lam singleton x11 \
                   forall_lam (propId singleton x10 x11) x12 \
                    forall_app (forall_app (forall_app x9 x10) x11) x12)))
           (elim_colSigma x6 (x8 \
             colSigma (setPi singleton x9 \ propId singleton star star) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x8 \ x9 \
             pair (setPi singleton x10 \ propId singleton star star) (x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star)
              (lambda singleton x10 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x8 x10))
              (forall_lam singleton x10 \
                forall_lam singleton x11 \
                 forall_lam (propId singleton x10 x11) x12 \
                  forall_app (forall_app (forall_app x9 x10) x11) x12)))
         (forall_lam singleton x8 \ forall_app x7 x8)))
 (colSigma
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5)) int
"
"10__________[+[Begin 
conv
 (colSigma
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5))
 (colSigma
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5))
"
"10----------]-]Success  
conv
 (colSigma
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5))
 (colSigma
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5))
"
"9---------]-]Success  
isa
 (elim_colSigma
   (pair
     (setPi
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ singleton) (x3 \
     forall
      (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \
      forall
       (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall (forall singleton x6 \ propId singleton star star) x6 \
        propId singleton (app x3 x4) (app x3 x5))
     (lambda
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \ star)
     (forall_lam
       (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \ propId singleton star star)
       x3 \
       forall_lam
        (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall_lam (forall singleton x5 \ propId singleton star star) x5 \
         id singleton star)) (x3 \
   colSigma
    (setPi
      (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \ propId singleton star star)
      x4 \ singleton) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall
      (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
        forall singleton x7 \
         forall singleton x8 \
          forall (propId singleton x7 x8) x9 \ propId singleton star star)
      x6 \
      forall (forall singleton x7 \ propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
   pair
    (setPi
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \ singleton) (x5 \
    forall
     (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
       forall singleton x7 \
        forall singleton x8 \
         forall (propId singleton x7 x8) x9 \ propId singleton star star)
     x6 \
     forall
      (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
        forall singleton x8 \
         forall singleton x9 \
          forall (propId singleton x8 x9) x10 \ propId singleton star star)
      x7 \
      forall (forall singleton x8 \ propId singleton star star) x8 \
       propId singleton (app x5 x6) (app x5 x7))
    (lambda
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      app x3
       (elim_colSigma x5 (x6 \
         colSigma (setPi singleton x7 \ propId singleton star star) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
         x6 \ x7 \
         pair (setPi singleton x8 \ propId singleton star star) (x8 \
          forall singleton x9 \
           forall singleton x10 \
            forall (propId singleton x9 x10) x11 \ propId singleton star star)
          (lambda singleton x8 \
            impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) x0) star)
               (fixMe "prova di symmetria")) (app x6 x8))
          (forall_lam singleton x8 \
            forall_lam singleton x9 \
             forall_lam (propId singleton x8 x9) x10 \
              forall_app (forall_app (forall_app x7 x8) x9) x10)))
    (forall_lam
      (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
        forall singleton x6 \
         forall singleton x7 \
          forall (propId singleton x6 x7) x8 \ propId singleton star star)
      x5 \
      forall_lam
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall_lam (forall singleton x7 \ propId singleton star star) x7 \
        forall_app
         (forall_app
           (forall_app x4
             (elim_colSigma x5 (x8 \
               colSigma (setPi singleton x9 \ propId singleton star star)
                x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x8 \ x9 \
               pair (setPi singleton x10 \ propId singleton star star) (x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star)
                (lambda singleton x10 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x8 x10))
                (forall_lam singleton x10 \
                  forall_lam singleton x11 \
                   forall_lam (propId singleton x10 x11) x12 \
                    forall_app (forall_app (forall_app x9 x10) x11) x12)))
           (elim_colSigma x6 (x8 \
             colSigma (setPi singleton x9 \ propId singleton star star) x9 \
              forall singleton x10 \
               forall singleton x11 \
                forall (propId singleton x10 x11) x12 \
                 propId singleton star star) x8 \ x9 \
             pair (setPi singleton x10 \ propId singleton star star) (x10 \
              forall singleton x11 \
               forall singleton x12 \
                forall (propId singleton x11 x12) x13 \
                 propId singleton star star)
              (lambda singleton x10 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x8 x10))
              (forall_lam singleton x10 \
                forall_lam singleton x11 \
                 forall_lam (propId singleton x10 x11) x12 \
                  forall_app (forall_app (forall_app x9 x10) x11) x12)))
         (forall_lam singleton x8 \ forall_app x7 x8)))
 (colSigma
   (setPi
     (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \ propId singleton star star)
     x3 \ singleton) x3 \
   forall
    (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \ propId singleton star star) x4 \
    forall
     (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
       forall singleton x6 \
        forall singleton x7 \
         forall (propId singleton x6 x7) x8 \ propId singleton star star)
     x5 \
     forall (forall singleton x6 \ propId singleton star star) x6 \
      propId singleton (app x3 x4) (app x3 x5)) int
"
"8--------]-]Success  
of
 (app
   (elim_colSigma x2 (x3 \
     setPi
      (colSigma
        (setPi
          (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
     x4 \ x3)
   (elim_colSigma
     (pair
       (setPi
         (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \ singleton) (x3 \
       forall
        (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall (forall singleton x6 \ propId singleton star star) x6 \
          propId singleton (app x3 x4) (app x3 x5))
       (lambda
         (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \ star)
       (forall_lam
         (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
           forall singleton x4 \
            forall singleton x5 \
             forall (propId singleton x4 x5) x6 \ propId singleton star star)
         x3 \
         forall_lam
          (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \
          forall_lam (forall singleton x5 \ propId singleton star star) x5 \
           id singleton star)) (x3 \
     colSigma
      (setPi
        (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
          forall singleton x5 \
           forall singleton x6 \
            forall (propId singleton x5 x6) x7 \ propId singleton star star)
        x4 \ singleton) x4 \
      forall
       (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
         forall singleton x6 \
          forall singleton x7 \
           forall (propId singleton x6 x7) x8 \ propId singleton star star)
       x5 \
       forall
        (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
          forall singleton x7 \
           forall singleton x8 \
            forall (propId singleton x7 x8) x9 \ propId singleton star star)
        x6 \
        forall (forall singleton x7 \ propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
     pair
      (setPi
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \ singleton) (x5 \
      forall
       (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
         forall singleton x7 \
          forall singleton x8 \
           forall (propId singleton x7 x8) x9 \ propId singleton star star)
       x6 \
       forall
        (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
          forall singleton x8 \
           forall singleton x9 \
            forall (propId singleton x8 x9) x10 \ propId singleton star star)
        x7 \
        forall (forall singleton x8 \ propId singleton star star) x8 \
         propId singleton (app x5 x6) (app x5 x7))
      (lambda
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        app x3
         (elim_colSigma x5 (x6 \
           colSigma (setPi singleton x7 \ propId singleton star star) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x6 \ x7 \
           pair (setPi singleton x8 \ propId singleton star star) (x8 \
            forall singleton x9 \
             forall singleton x10 \
              forall (propId singleton x9 x10) x11 \
               propId singleton star star)
            (lambda singleton x8 \
              impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) x0) star)
                 (fixMe "prova di symmetria")) (app x6 x8))
            (forall_lam singleton x8 \
              forall_lam singleton x9 \
               forall_lam (propId singleton x8 x9) x10 \
                forall_app (forall_app (forall_app x7 x8) x9) x10)))
      (forall_lam
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall_lam
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall_lam (forall singleton x7 \ propId singleton star star) x7 \
          forall_app
           (forall_app
             (forall_app x4
               (elim_colSigma x5 (x8 \
                 colSigma (setPi singleton x9 \ propId singleton star star)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x8 \ x9 \
                 pair (setPi singleton x10 \ propId singleton star star)
                  (x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star)
                  (lambda singleton x10 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (id singleton star)) x0) star)
                       (fixMe "prova di symmetria")) (app x8 x10))
                  (forall_lam singleton x10 \
                    forall_lam singleton x11 \
                     forall_lam (propId singleton x10 x11) x12 \
                      forall_app (forall_app (forall_app x9 x10) x11) x12)))
             (elim_colSigma x6 (x8 \
               colSigma (setPi singleton x9 \ propId singleton star star)
                x9 \
                forall singleton x10 \
                 forall singleton x11 \
                  forall (propId singleton x10 x11) x12 \
                   propId singleton star star) x8 \ x9 \
               pair (setPi singleton x10 \ propId singleton star star) (x10 \
                forall singleton x11 \
                 forall singleton x12 \
                  forall (propId singleton x11 x12) x13 \
                   propId singleton star star)
                (lambda singleton x10 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x8 x10))
                (forall_lam singleton x10 \
                  forall_lam singleton x11 \
                   forall_lam (propId singleton x10 x11) x12 \
                    forall_app (forall_app (forall_app x9 x10) x11) x12)))
           (forall_lam singleton x8 \ forall_app x7 x8)))) singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
of star X2801^3 int
"
"8--------]-]Success  
of star singleton int
"
"8________[+[Begin 
conv singleton singleton
"
"8--------]-]Success  
conv singleton singleton
"
"8________[+[Begin 
(pts_leq set set),
(X955^2 = props)
"
"8--------]-]Success  
(pts_leq set set),
(props = props)
"
"7-------]-]Success  
isType
 (propId singleton
   (app
     (elim_colSigma x2 (x3 \
       setPi
        (colSigma
          (setPi
            (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ singleton) x4 \
          forall
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall (forall singleton x7 \ propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
       x4 \ x3)
     (elim_colSigma
       (pair
         (setPi
           (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \ singleton) (x3 \
         forall
          (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \
          forall
           (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall (forall singleton x6 \ propId singleton star star) x6 \
            propId singleton (app x3 x4) (app x3 x5))
         (lambda
           (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \ star)
         (forall_lam
           (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \
           forall_lam
            (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \
            forall_lam (forall singleton x5 \ propId singleton star star)
             x5 \ id singleton star)) (x3 \
       colSigma
        (setPi
          (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \ singleton) x4 \
        forall
         (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
           forall singleton x6 \
            forall singleton x7 \
             forall (propId singleton x6 x7) x8 \ propId singleton star star)
         x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall (forall singleton x7 \ propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
       pair
        (setPi
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) (x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7))
        (lambda
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          app x3
           (elim_colSigma x5 (x6 \
             colSigma (setPi singleton x7 \ propId singleton star star) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x6 \ x7 \
             pair (setPi singleton x8 \ propId singleton star star) (x8 \
              forall singleton x9 \
               forall singleton x10 \
                forall (propId singleton x9 x10) x11 \
                 propId singleton star star)
              (lambda singleton x8 \
                impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) x0) star)
                   (fixMe "prova di symmetria")) (app x6 x8))
              (forall_lam singleton x8 \
                forall_lam singleton x9 \
                 forall_lam (propId singleton x8 x9) x10 \
                  forall_app (forall_app (forall_app x7 x8) x9) x10)))
        (forall_lam
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall_lam
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall_lam (forall singleton x7 \ propId singleton star star) x7 \
            forall_app
             (forall_app
               (forall_app x4
                 (elim_colSigma x5 (x8 \
                   colSigma (setPi singleton x9 \ propId singleton star star)
                    x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton star star) x8 \ x9 \
                   pair (setPi singleton x10 \ propId singleton star star)
                    (x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton star star)
                    (lambda singleton x10 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (id singleton star)) x0) star)
                         (fixMe "prova di symmetria")) (app x8 x10))
                    (forall_lam singleton x10 \
                      forall_lam singleton x11 \
                       forall_lam (propId singleton x10 x11) x12 \
                        forall_app (forall_app (forall_app x9 x10) x11) x12)))
               (elim_colSigma x6 (x8 \
                 colSigma (setPi singleton x9 \ propId singleton star star)
                  x9 \
                  forall singleton x10 \
                   forall singleton x11 \
                    forall (propId singleton x10 x11) x12 \
                     propId singleton star star) x8 \ x9 \
                 pair (setPi singleton x10 \ propId singleton star star)
                  (x10 \
                  forall singleton x11 \
                   forall singleton x12 \
                    forall (propId singleton x11 x12) x13 \
                     propId singleton star star)
                  (lambda singleton x10 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (id singleton star)) x0) star)
                       (fixMe "prova di symmetria")) (app x8 x10))
                  (forall_lam singleton x10 \
                    forall_lam singleton x11 \
                     forall_lam (propId singleton x10 x11) x12 \
                      forall_app (forall_app (forall_app x9 x10) x11) x12)))
             (forall_lam singleton x8 \ forall_app x7 x8)))) star) props int
"
"6------]-]Success  
pi x2 \
 locDecl x2
  (colSigma
    (setPi
      (colSigma
        (setPi
          (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \ propId singleton star star)
          x3 \ singleton) x3 \
        forall
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \
         forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall (forall singleton x6 \ propId singleton star star) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x3 \
    forall
     (colSigma
       (setPi
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \ singleton) x4 \
       forall
        (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
          forall singleton x6 \
           forall singleton x7 \
            forall (propId singleton x6 x7) x8 \ propId singleton star star)
        x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall (forall singleton x7 \ propId singleton star star) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (colSigma
        (setPi
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \ singleton) x5 \
        forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         forall
          (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
            forall singleton x8 \
             forall singleton x9 \
              forall (propId singleton x8 x9) x10 \
               propId singleton star star) x7 \
          forall (forall singleton x8 \ propId singleton star star) x8 \
           propId singleton (app x5 x6) (app x5 x7)) x5 \
      forall
       (forall
         (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \ propId singleton star star)
         x6 \
         propId singleton
          (app
            (elim_colSigma x4 (x7 \
              setPi
               (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)
          (app
            (elim_colSigma x5 (x7 \
              setPi
               (colSigma (setPi singleton x8 \ propId singleton star x0) x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
            x6)) x6 \ propId singleton (app x3 x4) (app x3 x5)) =>
  spy
   (isType
     (propId singleton
       (app
         (elim_colSigma x2 (x3 \
           setPi
            (colSigma
              (setPi
                (colSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (colSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
            singleton) x3 \ x4 \ x3)
         (elim_colSigma
           (pair
             (setPi
               (colSigma (setPi singleton x3 \ propId singleton star star)
                 x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \ singleton) (x3 \
             forall
              (colSigma (setPi singleton x4 \ propId singleton star star)
                x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star star)
                 x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall (forall singleton x6 \ propId singleton star star) x6 \
                propId singleton (app x3 x4) (app x3 x5))
             (lambda
               (colSigma (setPi singleton x3 \ propId singleton star star)
                 x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \ star)
             (forall_lam
               (colSigma (setPi singleton x3 \ propId singleton star star)
                 x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \
               forall_lam
                (colSigma (setPi singleton x4 \ propId singleton star star)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall_lam (forall singleton x5 \ propId singleton star star)
                 x5 \ id singleton star)) (x3 \
           colSigma
            (setPi
              (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ singleton) x4 \
            forall
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall
              (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall (forall singleton x7 \ propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
           pair
            (setPi
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \ singleton) (x5 \
            forall
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall
              (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x7 \
              forall (forall singleton x8 \ propId singleton star star) x8 \
               propId singleton (app x5 x6) (app x5 x7))
            (lambda
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              app x3
               (elim_colSigma x5 (x6 \
                 colSigma (setPi singleton x7 \ propId singleton star star)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x6 \ x7 \
                 pair (setPi singleton x8 \ propId singleton star star) (x8 \
                  forall singleton x9 \
                   forall singleton x10 \
                    forall (propId singleton x9 x10) x11 \
                     propId singleton star star)
                  (lambda singleton x8 \
                    impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app (k_propId singleton) star) star)
                             (id singleton star)) x0) star)
                       (fixMe "prova di symmetria")) (app x6 x8))
                  (forall_lam singleton x8 \
                    forall_lam singleton x9 \
                     forall_lam (propId singleton x8 x9) x10 \
                      forall_app (forall_app (forall_app x7 x8) x9) x10)))
            (forall_lam
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall_lam
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall_lam (forall singleton x7 \ propId singleton star star)
                x7 \
                forall_app
                 (forall_app
                   (forall_app x4
                     (elim_colSigma x5 (x8 \
                       colSigma
                        (setPi singleton x9 \ propId singleton star star)
                        x9 \
                        forall singleton x10 \
                         forall singleton x11 \
                          forall (propId singleton x10 x11) x12 \
                           propId singleton star star) x8 \ x9 \
                       pair
                        (setPi singleton x10 \ propId singleton star star)
                        (x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star)
                        (lambda singleton x10 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star) (id singleton star)) x0) star)
                             (fixMe "prova di symmetria")) (app x8 x10))
                        (forall_lam singleton x10 \
                          forall_lam singleton x11 \
                           forall_lam (propId singleton x10 x11) x12 \
                            forall_app (forall_app (forall_app x9 x10) x11)
                             x12)))
                   (elim_colSigma x6 (x8 \
                     colSigma
                      (setPi singleton x9 \ propId singleton star star) x9 \
                      forall singleton x10 \
                       forall singleton x11 \
                        forall (propId singleton x10 x11) x12 \
                         propId singleton star star) x8 \ x9 \
                     pair (setPi singleton x10 \ propId singleton star star)
                      (x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star)
                      (lambda singleton x10 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star) (id singleton star)) x0) star)
                           (fixMe "prova di symmetria")) (app x8 x10))
                      (forall_lam singleton x10 \
                        forall_lam singleton x11 \
                         forall_lam (propId singleton x10 x11) x12 \
                          forall_app (forall_app (forall_app x9 x10) x11) x12)))
                 (forall_lam singleton x8 \ forall_app x7 x8)))) star) props
     int)
"
"6______[+[Begin 
pts_for set props X679^1
"
"6------]-]Success  
pts_for set props props
"
"5-----]-]Success  
isType
 (forall
   (colSigma
     (setPi
       (colSigma
         (setPi
           (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
             forall singleton x3 \
              forall singleton x4 \
               forall (propId singleton x3 x4) x5 \
                propId singleton star star) x2 \ singleton) x2 \
         forall
          (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \ propId singleton star star)
          x3 \
          forall
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall (forall singleton x5 \ propId singleton star star) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
     forall
      (colSigma
        (setPi
          (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
            forall singleton x4 \
             forall singleton x5 \
              forall (propId singleton x4 x5) x6 \ propId singleton star star)
          x3 \ singleton) x3 \
        forall
         (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \ propId singleton star star)
         x4 \
         forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall (forall singleton x6 \ propId singleton star star) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (colSigma
         (setPi
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ singleton) x4 \
         forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall (forall singleton x7 \ propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall
        (forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          propId singleton
           (app
             (elim_colSigma x3 (x6 \
               setPi
                (colSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
             x5)
           (app
             (elim_colSigma x4 (x6 \
               setPi
                (colSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
             x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) x2 \
   propId singleton
    (app
      (elim_colSigma x2 (x3 \
        setPi
         (colSigma
           (setPi
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
        x4 \ x3)
      (elim_colSigma
        (pair
          (setPi
            (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \ singleton) (x3 \
          forall
           (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall (forall singleton x6 \ propId singleton star star) x6 \
             propId singleton (app x3 x4) (app x3 x5))
          (lambda
            (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \ star)
          (forall_lam
            (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \
            forall_lam
             (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall_lam (forall singleton x5 \ propId singleton star star)
              x5 \ id singleton star)) (x3 \
        colSigma
         (setPi
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \ singleton) x4 \
         forall
          (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
            forall singleton x6 \
             forall singleton x7 \
              forall (propId singleton x6 x7) x8 \ propId singleton star star)
          x5 \
          forall
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall (forall singleton x7 \ propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
        pair
         (setPi
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \ singleton) (x5 \
         forall
          (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \ propId singleton star star)
          x6 \
          forall
           (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
             forall singleton x8 \
              forall singleton x9 \
               forall (propId singleton x8 x9) x10 \
                propId singleton star star) x7 \
           forall (forall singleton x8 \ propId singleton star star) x8 \
            propId singleton (app x5 x6) (app x5 x7))
         (lambda
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           app x3
            (elim_colSigma x5 (x6 \
              colSigma (setPi singleton x7 \ propId singleton star star) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x6 \ x7 \
              pair (setPi singleton x8 \ propId singleton star star) (x8 \
               forall singleton x9 \
                forall singleton x10 \
                 forall (propId singleton x9 x10) x11 \
                  propId singleton star star)
               (lambda singleton x8 \
                 impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) x0) star)
                    (fixMe "prova di symmetria")) (app x6 x8))
               (forall_lam singleton x8 \
                 forall_lam singleton x9 \
                  forall_lam (propId singleton x8 x9) x10 \
                   forall_app (forall_app (forall_app x7 x8) x9) x10)))
         (forall_lam
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall_lam
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall_lam (forall singleton x7 \ propId singleton star star)
             x7 \
             forall_app
              (forall_app
                (forall_app x4
                  (elim_colSigma x5 (x8 \
                    colSigma
                     (setPi singleton x9 \ propId singleton star star) x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star) x8 \ x9 \
                    pair (setPi singleton x10 \ propId singleton star star)
                     (x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton star star)
                     (lambda singleton x10 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (id singleton star)) x0) star)
                          (fixMe "prova di symmetria")) (app x8 x10))
                     (forall_lam singleton x10 \
                       forall_lam singleton x11 \
                        forall_lam (propId singleton x10 x11) x12 \
                         forall_app (forall_app (forall_app x9 x10) x11) x12)))
                (elim_colSigma x6 (x8 \
                  colSigma (setPi singleton x9 \ propId singleton star star)
                   x9 \
                   forall singleton x10 \
                    forall singleton x11 \
                     forall (propId singleton x10 x11) x12 \
                      propId singleton star star) x8 \ x9 \
                  pair (setPi singleton x10 \ propId singleton star star)
                   (x10 \
                   forall singleton x11 \
                    forall singleton x12 \
                     forall (propId singleton x11 x12) x13 \
                      propId singleton star star)
                   (lambda singleton x10 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (id singleton star)) x0) star)
                        (fixMe "prova di symmetria")) (app x8 x10))
                   (forall_lam singleton x10 \
                     forall_lam singleton x11 \
                      forall_lam (propId singleton x10 x11) x12 \
                       forall_app (forall_app (forall_app x9 x10) x11) x12)))
              (forall_lam singleton x8 \ forall_app x7 x8)))) star) props int
"
"4----]-]Success  
pi x1 \
 locDecl x1 (propId singleton star x0) =>
  spy
   (isType
     (forall
       (colSigma
         (setPi
           (colSigma
             (setPi
               (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
                 forall singleton x3 \
                  forall singleton x4 \
                   forall (propId singleton x3 x4) x5 \
                    propId singleton star star) x2 \ singleton) x2 \
             forall
              (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \
              forall
               (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall (forall singleton x5 \ propId singleton star star) x5 \
                propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton)
         x2 \
         forall
          (colSigma
            (setPi
              (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ singleton) x3 \
            forall
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall (forall singleton x6 \ propId singleton star star) x6 \
               propId singleton (app x3 x4) (app x3 x5)) x3 \
          forall
           (colSigma
             (setPi
               (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \
           forall
            (forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              propId singleton
               (app
                 (elim_colSigma x3 (x6 \
                   setPi
                    (colSigma (setPi singleton x7 \ propId singleton star x0)
                      x7 \
                      forall singleton x8 \
                       forall singleton x9 \
                        forall (propId singleton x8 x9) x10 \
                         propId singleton star star) x7 \ singleton) x6 \
                   x7 \ x6) x5)
               (app
                 (elim_colSigma x4 (x6 \
                   setPi
                    (colSigma (setPi singleton x7 \ propId singleton star x0)
                      x7 \
                      forall singleton x8 \
                       forall singleton x9 \
                        forall (propId singleton x8 x9) x10 \
                         propId singleton star star) x7 \ singleton) x6 \
                   x7 \ x6) x5)) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \
       propId singleton
        (app
          (elim_colSigma x2 (x3 \
            setPi
             (colSigma
               (setPi
                 (colSigma (setPi singleton x4 \ propId singleton star x0)
                   x4 \
                   forall singleton x5 \
                    forall singleton x6 \
                     forall (propId singleton x5 x6) x7 \
                      propId singleton star star) x4 \ singleton) x4 \
               forall
                (colSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall
                 (colSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall (forall singleton x7 \ propId singleton star star)
                  x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
             singleton) x3 \ x4 \ x3)
          (elim_colSigma
            (pair
              (setPi
                (colSigma (setPi singleton x3 \ propId singleton star star)
                  x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton star star) x3 \ singleton) (x3 \
              forall
               (colSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall
                (colSigma (setPi singleton x5 \ propId singleton star star)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall (forall singleton x6 \ propId singleton star star)
                 x6 \ propId singleton (app x3 x4) (app x3 x5))
              (lambda
                (colSigma (setPi singleton x3 \ propId singleton star star)
                  x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton star star) x3 \ star)
              (forall_lam
                (colSigma (setPi singleton x3 \ propId singleton star star)
                  x3 \
                  forall singleton x4 \
                   forall singleton x5 \
                    forall (propId singleton x4 x5) x6 \
                     propId singleton star star) x3 \
                forall_lam
                 (colSigma (setPi singleton x4 \ propId singleton star star)
                   x4 \
                   forall singleton x5 \
                    forall singleton x6 \
                     forall (propId singleton x5 x6) x7 \
                      propId singleton star star) x4 \
                 forall_lam
                  (forall singleton x5 \ propId singleton star star) x5 \
                  id singleton star)) (x3 \
            colSigma
             (setPi
               (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
            pair
             (setPi
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \ singleton) (x5 \
             forall
              (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall
               (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x7 \
               forall (forall singleton x8 \ propId singleton star star) x8 \
                propId singleton (app x5 x6) (app x5 x7))
             (lambda
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               app x3
                (elim_colSigma x5 (x6 \
                  colSigma (setPi singleton x7 \ propId singleton star star)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x6 \ x7 \
                  pair (setPi singleton x8 \ propId singleton star star)
                   (x8 \
                   forall singleton x9 \
                    forall singleton x10 \
                     forall (propId singleton x9 x10) x11 \
                      propId singleton star star)
                   (lambda singleton x8 \
                     impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app (k_propId singleton) star) star)
                              (id singleton star)) x0) star)
                        (fixMe "prova di symmetria")) (app x6 x8))
                   (forall_lam singleton x8 \
                     forall_lam singleton x9 \
                      forall_lam (propId singleton x8 x9) x10 \
                       forall_app (forall_app (forall_app x7 x8) x9) x10)))
             (forall_lam
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall_lam
                (colSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall_lam (forall singleton x7 \ propId singleton star star)
                 x7 \
                 forall_app
                  (forall_app
                    (forall_app x4
                      (elim_colSigma x5 (x8 \
                        colSigma
                         (setPi singleton x9 \ propId singleton star star)
                         x9 \
                         forall singleton x10 \
                          forall singleton x11 \
                           forall (propId singleton x10 x11) x12 \
                            propId singleton star star) x8 \ x9 \
                        pair
                         (setPi singleton x10 \ propId singleton star star)
                         (x10 \
                         forall singleton x11 \
                          forall singleton x12 \
                           forall (propId singleton x11 x12) x13 \
                            propId singleton star star)
                         (lambda singleton x10 \
                           impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app (k_propId singleton) star)
                                      star) (id singleton star)) x0) star)
                              (fixMe "prova di symmetria")) (app x8 x10))
                         (forall_lam singleton x10 \
                           forall_lam singleton x11 \
                            forall_lam (propId singleton x10 x11) x12 \
                             forall_app (forall_app (forall_app x9 x10) x11)
                              x12)))
                    (elim_colSigma x6 (x8 \
                      colSigma
                       (setPi singleton x9 \ propId singleton star star) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton star star) x8 \ x9 \
                      pair (setPi singleton x10 \ propId singleton star star)
                       (x10 \
                       forall singleton x11 \
                        forall singleton x12 \
                         forall (propId singleton x11 x12) x13 \
                          propId singleton star star)
                       (lambda singleton x10 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star) (id singleton star)) x0) star)
                            (fixMe "prova di symmetria")) (app x8 x10))
                       (forall_lam singleton x10 \
                         forall_lam singleton x11 \
                          forall_lam (propId singleton x10 x11) x12 \
                           forall_app (forall_app (forall_app x9 x10) x11)
                            x12)))
                  (forall_lam singleton x8 \ forall_app x7 x8)))) star) props
     int)
"
"4____[+[Begin 
pts_for props props X675
"
"4----]-]Success  
pts_for props props props
"
"3---]-]Success  
isType
 (forall (propId singleton star x0) x1 \
   forall
    (colSigma
      (setPi
        (colSigma
          (setPi
            (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
              forall singleton x3 \
               forall singleton x4 \
                forall (propId singleton x3 x4) x5 \
                 propId singleton star star) x2 \ singleton) x2 \
          forall
           (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \
           forall
            (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \
            forall (forall singleton x5 \ propId singleton star star) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
      forall
       (colSigma
         (setPi
           (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
             forall singleton x4 \
              forall singleton x5 \
               forall (propId singleton x4 x5) x6 \
                propId singleton star star) x3 \ singleton) x3 \
         forall
          (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
            forall singleton x5 \
             forall singleton x6 \
              forall (propId singleton x5 x6) x7 \ propId singleton star star)
          x4 \
          forall
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall (forall singleton x6 \ propId singleton star star) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \
       forall
        (colSigma
          (setPi
            (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ singleton) x4 \
          forall
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall (forall singleton x7 \ propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x4 \
        forall
         (forall
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           propId singleton
            (app
              (elim_colSigma x3 (x6 \
                setPi
                 (colSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \ singleton) x6 \ x7 \
                x6) x5)
            (app
              (elim_colSigma x4 (x6 \
                setPi
                 (colSigma (setPi singleton x7 \ propId singleton star x0)
                   x7 \
                   forall singleton x8 \
                    forall singleton x9 \
                     forall (propId singleton x8 x9) x10 \
                      propId singleton star star) x7 \ singleton) x6 \ x7 \
                x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) x2 \
    propId singleton
     (app
       (elim_colSigma x2 (x3 \
         setPi
          (colSigma
            (setPi
              (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \ singleton) x4 \
            forall
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall
              (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall (forall singleton x7 \ propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) x3 \
         x4 \ x3)
       (elim_colSigma
         (pair
           (setPi
             (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton star star) x3 \ singleton) (x3 \
           forall
            (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \
            forall
             (colSigma (setPi singleton x5 \ propId singleton star star) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall (forall singleton x6 \ propId singleton star star) x6 \
              propId singleton (app x3 x4) (app x3 x5))
           (lambda
             (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton star star) x3 \ star)
           (forall_lam
             (colSigma (setPi singleton x3 \ propId singleton star star) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton star star) x3 \
             forall_lam
              (colSigma (setPi singleton x4 \ propId singleton star star)
                x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \
              forall_lam (forall singleton x5 \ propId singleton star star)
               x5 \ id singleton star)) (x3 \
         colSigma
          (setPi
            (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
              forall singleton x5 \
               forall singleton x6 \
                forall (propId singleton x5 x6) x7 \
                 propId singleton star star) x4 \ singleton) x4 \
          forall
           (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
             forall singleton x6 \
              forall singleton x7 \
               forall (propId singleton x6 x7) x8 \
                propId singleton star star) x5 \
           forall
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall (forall singleton x7 \ propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
         pair
          (setPi
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \ singleton) (x5 \
          forall
           (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
             forall singleton x7 \
              forall singleton x8 \
               forall (propId singleton x7 x8) x9 \
                propId singleton star star) x6 \
           forall
            (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
              forall singleton x8 \
               forall singleton x9 \
                forall (propId singleton x8 x9) x10 \
                 propId singleton star star) x7 \
            forall (forall singleton x8 \ propId singleton star star) x8 \
             propId singleton (app x5 x6) (app x5 x7))
          (lambda
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            app x3
             (elim_colSigma x5 (x6 \
               colSigma (setPi singleton x7 \ propId singleton star star)
                x7 \
                forall singleton x8 \
                 forall singleton x9 \
                  forall (propId singleton x8 x9) x10 \
                   propId singleton star star) x6 \ x7 \
               pair (setPi singleton x8 \ propId singleton star star) (x8 \
                forall singleton x9 \
                 forall singleton x10 \
                  forall (propId singleton x9 x10) x11 \
                   propId singleton star star)
                (lambda singleton x8 \
                  impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) x0) star)
                     (fixMe "prova di symmetria")) (app x6 x8))
                (forall_lam singleton x8 \
                  forall_lam singleton x9 \
                   forall_lam (propId singleton x8 x9) x10 \
                    forall_app (forall_app (forall_app x7 x8) x9) x10)))
          (forall_lam
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall_lam
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall_lam (forall singleton x7 \ propId singleton star star)
              x7 \
              forall_app
               (forall_app
                 (forall_app x4
                   (elim_colSigma x5 (x8 \
                     colSigma
                      (setPi singleton x9 \ propId singleton star star) x9 \
                      forall singleton x10 \
                       forall singleton x11 \
                        forall (propId singleton x10 x11) x12 \
                         propId singleton star star) x8 \ x9 \
                     pair (setPi singleton x10 \ propId singleton star star)
                      (x10 \
                      forall singleton x11 \
                       forall singleton x12 \
                        forall (propId singleton x11 x12) x13 \
                         propId singleton star star)
                      (lambda singleton x10 \
                        impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app (k_propId singleton) star)
                                   star) (id singleton star)) x0) star)
                           (fixMe "prova di symmetria")) (app x8 x10))
                      (forall_lam singleton x10 \
                        forall_lam singleton x11 \
                         forall_lam (propId singleton x10 x11) x12 \
                          forall_app (forall_app (forall_app x9 x10) x11) x12)))
                 (elim_colSigma x6 (x8 \
                   colSigma (setPi singleton x9 \ propId singleton star star)
                    x9 \
                    forall singleton x10 \
                     forall singleton x11 \
                      forall (propId singleton x10 x11) x12 \
                       propId singleton star star) x8 \ x9 \
                   pair (setPi singleton x10 \ propId singleton star star)
                    (x10 \
                    forall singleton x11 \
                     forall singleton x12 \
                      forall (propId singleton x11 x12) x13 \
                       propId singleton star star)
                    (lambda singleton x10 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (id singleton star)) x0) star)
                         (fixMe "prova di symmetria")) (app x8 x10))
                    (forall_lam singleton x10 \
                      forall_lam singleton x11 \
                       forall_lam (propId singleton x10 x11) x12 \
                        forall_app (forall_app (forall_app x9 x10) x11) x12)))
               (forall_lam singleton x8 \ forall_app x7 x8)))) star) props
 int
"
"2--]-]Success  
pi x0 \
 locDecl x0 singleton =>
  spy
   (isType
     (forall (propId singleton star x0) x1 \
       forall
        (colSigma
          (setPi
            (colSigma
              (setPi
                (colSigma (setPi singleton x2 \ propId singleton star x0)
                  x2 \
                  forall singleton x3 \
                   forall singleton x4 \
                    forall (propId singleton x3 x4) x5 \
                     propId singleton star star) x2 \ singleton) x2 \
              forall
               (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \
               forall
                (colSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall (forall singleton x5 \ propId singleton star star)
                 x5 \ propId singleton (app x2 x3) (app x2 x4)) x2 \
            singleton) x2 \
          forall
           (colSigma
             (setPi
               (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
                 forall singleton x4 \
                  forall singleton x5 \
                   forall (propId singleton x4 x5) x6 \
                    propId singleton star star) x3 \ singleton) x3 \
             forall
              (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                forall singleton x5 \
                 forall singleton x6 \
                  forall (propId singleton x5 x6) x7 \
                   propId singleton star star) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall (forall singleton x6 \ propId singleton star star) x6 \
                propId singleton (app x3 x4) (app x3 x5)) x3 \
           forall
            (colSigma
              (setPi
                (colSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (colSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
            forall
             (forall
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               propId singleton
                (app
                  (elim_colSigma x3 (x6 \
                    setPi
                     (colSigma
                       (setPi singleton x7 \ propId singleton star x0) x7 \
                       forall singleton x8 \
                        forall singleton x9 \
                         forall (propId singleton x8 x9) x10 \
                          propId singleton star star) x7 \ singleton) x6 \
                    x7 \ x6) x5)
                (app
                  (elim_colSigma x4 (x6 \
                    setPi
                     (colSigma
                       (setPi singleton x7 \ propId singleton star x0) x7 \
                       forall singleton x8 \
                        forall singleton x9 \
                         forall (propId singleton x8 x9) x10 \
                          propId singleton star star) x7 \ singleton) x6 \
                    x7 \ x6) x5)) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \
        propId singleton
         (app
           (elim_colSigma x2 (x3 \
             setPi
              (colSigma
                (setPi
                  (colSigma (setPi singleton x4 \ propId singleton star x0)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \ singleton) x4 \
                forall
                 (colSigma (setPi singleton x5 \ propId singleton star x0)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall
                  (colSigma (setPi singleton x6 \ propId singleton star x0)
                    x6 \
                    forall singleton x7 \
                     forall singleton x8 \
                      forall (propId singleton x7 x8) x9 \
                       propId singleton star star) x6 \
                  forall (forall singleton x7 \ propId singleton star star)
                   x7 \ propId singleton (app x4 x5) (app x4 x6)) x4 \
              singleton) x3 \ x4 \ x3)
           (elim_colSigma
             (pair
               (setPi
                 (colSigma (setPi singleton x3 \ propId singleton star star)
                   x3 \
                   forall singleton x4 \
                    forall singleton x5 \
                     forall (propId singleton x4 x5) x6 \
                      propId singleton star star) x3 \ singleton) (x3 \
               forall
                (colSigma (setPi singleton x4 \ propId singleton star star)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \
                forall
                 (colSigma (setPi singleton x5 \ propId singleton star star)
                   x5 \
                   forall singleton x6 \
                    forall singleton x7 \
                     forall (propId singleton x6 x7) x8 \
                      propId singleton star star) x5 \
                 forall (forall singleton x6 \ propId singleton star star)
                  x6 \ propId singleton (app x3 x4) (app x3 x5))
               (lambda
                 (colSigma (setPi singleton x3 \ propId singleton star star)
                   x3 \
                   forall singleton x4 \
                    forall singleton x5 \
                     forall (propId singleton x4 x5) x6 \
                      propId singleton star star) x3 \ star)
               (forall_lam
                 (colSigma (setPi singleton x3 \ propId singleton star star)
                   x3 \
                   forall singleton x4 \
                    forall singleton x5 \
                     forall (propId singleton x4 x5) x6 \
                      propId singleton star star) x3 \
                 forall_lam
                  (colSigma (setPi singleton x4 \ propId singleton star star)
                    x4 \
                    forall singleton x5 \
                     forall singleton x6 \
                      forall (propId singleton x5 x6) x7 \
                       propId singleton star star) x4 \
                  forall_lam
                   (forall singleton x5 \ propId singleton star star) x5 \
                   id singleton star)) (x3 \
             colSigma
              (setPi
                (colSigma (setPi singleton x4 \ propId singleton star x0)
                  x4 \
                  forall singleton x5 \
                   forall singleton x6 \
                    forall (propId singleton x5 x6) x7 \
                     propId singleton star star) x4 \ singleton) x4 \
              forall
               (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                 forall singleton x6 \
                  forall singleton x7 \
                   forall (propId singleton x6 x7) x8 \
                    propId singleton star star) x5 \
               forall
                (colSigma (setPi singleton x6 \ propId singleton star x0)
                  x6 \
                  forall singleton x7 \
                   forall singleton x8 \
                    forall (propId singleton x7 x8) x9 \
                     propId singleton star star) x6 \
                forall (forall singleton x7 \ propId singleton star star)
                 x7 \ propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
             pair
              (setPi
                (colSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \ singleton) (x5 \
              forall
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall
                (colSigma (setPi singleton x7 \ propId singleton star x0)
                  x7 \
                  forall singleton x8 \
                   forall singleton x9 \
                    forall (propId singleton x8 x9) x10 \
                     propId singleton star star) x7 \
                forall (forall singleton x8 \ propId singleton star star)
                 x8 \ propId singleton (app x5 x6) (app x5 x7))
              (lambda
                (colSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                app x3
                 (elim_colSigma x5 (x6 \
                   colSigma (setPi singleton x7 \ propId singleton star star)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x6 \ x7 \
                   pair (setPi singleton x8 \ propId singleton star star)
                    (x8 \
                    forall singleton x9 \
                     forall singleton x10 \
                      forall (propId singleton x9 x10) x11 \
                       propId singleton star star)
                    (lambda singleton x8 \
                      impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app (k_propId singleton) star) star)
                               (id singleton star)) x0) star)
                         (fixMe "prova di symmetria")) (app x6 x8))
                    (forall_lam singleton x8 \
                      forall_lam singleton x9 \
                       forall_lam (propId singleton x8 x9) x10 \
                        forall_app (forall_app (forall_app x7 x8) x9) x10)))
              (forall_lam
                (colSigma (setPi singleton x5 \ propId singleton star x0)
                  x5 \
                  forall singleton x6 \
                   forall singleton x7 \
                    forall (propId singleton x6 x7) x8 \
                     propId singleton star star) x5 \
                forall_lam
                 (colSigma (setPi singleton x6 \ propId singleton star x0)
                   x6 \
                   forall singleton x7 \
                    forall singleton x8 \
                     forall (propId singleton x7 x8) x9 \
                      propId singleton star star) x6 \
                 forall_lam
                  (forall singleton x7 \ propId singleton star star) x7 \
                  forall_app
                   (forall_app
                     (forall_app x4
                       (elim_colSigma x5 (x8 \
                         colSigma
                          (setPi singleton x9 \ propId singleton star star)
                          x9 \
                          forall singleton x10 \
                           forall singleton x11 \
                            forall (propId singleton x10 x11) x12 \
                             propId singleton star star) x8 \ x9 \
                         pair
                          (setPi singleton x10 \ propId singleton star star)
                          (x10 \
                          forall singleton x11 \
                           forall singleton x12 \
                            forall (propId singleton x11 x12) x13 \
                             propId singleton star star)
                          (lambda singleton x10 \
                            impl_app
                             (impl_app
                               (forall_app
                                 (forall_app
                                   (impl_app
                                     (forall_app
                                       (forall_app (k_propId singleton) star)
                                       star) (id singleton star)) x0) star)
                               (fixMe "prova di symmetria")) (app x8 x10))
                          (forall_lam singleton x10 \
                            forall_lam singleton x11 \
                             forall_lam (propId singleton x10 x11) x12 \
                              forall_app (forall_app (forall_app x9 x10) x11)
                               x12)))
                     (elim_colSigma x6 (x8 \
                       colSigma
                        (setPi singleton x9 \ propId singleton star star)
                        x9 \
                        forall singleton x10 \
                         forall singleton x11 \
                          forall (propId singleton x10 x11) x12 \
                           propId singleton star star) x8 \ x9 \
                       pair
                        (setPi singleton x10 \ propId singleton star star)
                        (x10 \
                        forall singleton x11 \
                         forall singleton x12 \
                          forall (propId singleton x11 x12) x13 \
                           propId singleton star star)
                        (lambda singleton x10 \
                          impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app (k_propId singleton) star)
                                     star) (id singleton star)) x0) star)
                             (fixMe "prova di symmetria")) (app x8 x10))
                        (forall_lam singleton x10 \
                          forall_lam singleton x11 \
                           forall_lam (propId singleton x10 x11) x12 \
                            forall_app (forall_app (forall_app x9 x10) x11)
                             x12)))
                   (forall_lam singleton x8 \ forall_app x7 x8)))) star)
     props int)
"
"2__[+[Begin 
pts_for set props X673
"
"2--]-]Success  
pts_for set props props
"
"1-]-]Success  
isType
 (forall singleton x0 \
   forall (propId singleton star x0) x1 \
    forall
     (colSigma
       (setPi
         (colSigma
           (setPi
             (colSigma (setPi singleton x2 \ propId singleton star x0) x2 \
               forall singleton x3 \
                forall singleton x4 \
                 forall (propId singleton x3 x4) x5 \
                  propId singleton star star) x2 \ singleton) x2 \
           forall
            (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \
            forall
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall (forall singleton x5 \ propId singleton star star) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
       forall
        (colSigma
          (setPi
            (colSigma (setPi singleton x3 \ propId singleton star x0) x3 \
              forall singleton x4 \
               forall singleton x5 \
                forall (propId singleton x4 x5) x6 \
                 propId singleton star star) x3 \ singleton) x3 \
          forall
           (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
             forall singleton x5 \
              forall singleton x6 \
               forall (propId singleton x5 x6) x7 \
                propId singleton star star) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall (forall singleton x6 \ propId singleton star star) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        forall
         (colSigma
           (setPi
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            propId singleton
             (app
               (elim_colSigma x3 (x6 \
                 setPi
                  (colSigma (setPi singleton x7 \ propId singleton star x0)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \ singleton) x6 \ x7 \
                 x6) x5)
             (app
               (elim_colSigma x4 (x6 \
                 setPi
                  (colSigma (setPi singleton x7 \ propId singleton star x0)
                    x7 \
                    forall singleton x8 \
                     forall singleton x9 \
                      forall (propId singleton x8 x9) x10 \
                       propId singleton star star) x7 \ singleton) x6 \ x7 \
                 x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) x2 \
     propId singleton
      (app
        (elim_colSigma x2 (x3 \
          setPi
           (colSigma
             (setPi
               (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \ singleton) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall
               (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                 forall singleton x7 \
                  forall singleton x8 \
                   forall (propId singleton x7 x8) x9 \
                    propId singleton star star) x6 \
               forall (forall singleton x7 \ propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton)
          x3 \ x4 \ x3)
        (elim_colSigma
          (pair
            (setPi
              (colSigma (setPi singleton x3 \ propId singleton star star)
                x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ singleton) (x3 \
            forall
             (colSigma (setPi singleton x4 \ propId singleton star star) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \
             forall
              (colSigma (setPi singleton x5 \ propId singleton star star)
                x5 \
                forall singleton x6 \
                 forall singleton x7 \
                  forall (propId singleton x6 x7) x8 \
                   propId singleton star star) x5 \
              forall (forall singleton x6 \ propId singleton star star) x6 \
               propId singleton (app x3 x4) (app x3 x5))
            (lambda
              (colSigma (setPi singleton x3 \ propId singleton star star)
                x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \ star)
            (forall_lam
              (colSigma (setPi singleton x3 \ propId singleton star star)
                x3 \
                forall singleton x4 \
                 forall singleton x5 \
                  forall (propId singleton x4 x5) x6 \
                   propId singleton star star) x3 \
              forall_lam
               (colSigma (setPi singleton x4 \ propId singleton star star)
                 x4 \
                 forall singleton x5 \
                  forall singleton x6 \
                   forall (propId singleton x5 x6) x7 \
                    propId singleton star star) x4 \
               forall_lam (forall singleton x5 \ propId singleton star star)
                x5 \ id singleton star)) (x3 \
          colSigma
           (setPi
             (colSigma (setPi singleton x4 \ propId singleton star x0) x4 \
               forall singleton x5 \
                forall singleton x6 \
                 forall (propId singleton x5 x6) x7 \
                  propId singleton star star) x4 \ singleton) x4 \
           forall
            (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
              forall singleton x6 \
               forall singleton x7 \
                forall (propId singleton x6 x7) x8 \
                 propId singleton star star) x5 \
            forall
             (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
               forall singleton x7 \
                forall singleton x8 \
                 forall (propId singleton x7 x8) x9 \
                  propId singleton star star) x6 \
             forall (forall singleton x7 \ propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x3 \ x4 \
          pair
           (setPi
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \ singleton) (x5 \
           forall
            (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
              forall singleton x7 \
               forall singleton x8 \
                forall (propId singleton x7 x8) x9 \
                 propId singleton star star) x6 \
            forall
             (colSigma (setPi singleton x7 \ propId singleton star x0) x7 \
               forall singleton x8 \
                forall singleton x9 \
                 forall (propId singleton x8 x9) x10 \
                  propId singleton star star) x7 \
             forall (forall singleton x8 \ propId singleton star star) x8 \
              propId singleton (app x5 x6) (app x5 x7))
           (lambda
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             app x3
              (elim_colSigma x5 (x6 \
                colSigma (setPi singleton x7 \ propId singleton star star)
                 x7 \
                 forall singleton x8 \
                  forall singleton x9 \
                   forall (propId singleton x8 x9) x10 \
                    propId singleton star star) x6 \ x7 \
                pair (setPi singleton x8 \ propId singleton star star) (x8 \
                 forall singleton x9 \
                  forall singleton x10 \
                   forall (propId singleton x9 x10) x11 \
                    propId singleton star star)
                 (lambda singleton x8 \
                   impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app (k_propId singleton) star) star)
                            (id singleton star)) x0) star)
                      (fixMe "prova di symmetria")) (app x6 x8))
                 (forall_lam singleton x8 \
                   forall_lam singleton x9 \
                    forall_lam (propId singleton x8 x9) x10 \
                     forall_app (forall_app (forall_app x7 x8) x9) x10)))
           (forall_lam
             (colSigma (setPi singleton x5 \ propId singleton star x0) x5 \
               forall singleton x6 \
                forall singleton x7 \
                 forall (propId singleton x6 x7) x8 \
                  propId singleton star star) x5 \
             forall_lam
              (colSigma (setPi singleton x6 \ propId singleton star x0) x6 \
                forall singleton x7 \
                 forall singleton x8 \
                  forall (propId singleton x7 x8) x9 \
                   propId singleton star star) x6 \
              forall_lam (forall singleton x7 \ propId singleton star star)
               x7 \
               forall_app
                (forall_app
                  (forall_app x4
                    (elim_colSigma x5 (x8 \
                      colSigma
                       (setPi singleton x9 \ propId singleton star star) x9 \
                       forall singleton x10 \
                        forall singleton x11 \
                         forall (propId singleton x10 x11) x12 \
                          propId singleton star star) x8 \ x9 \
                      pair (setPi singleton x10 \ propId singleton star star)
                       (x10 \
                       forall singleton x11 \
                        forall singleton x12 \
                         forall (propId singleton x11 x12) x13 \
                          propId singleton star star)
                       (lambda singleton x10 \
                         impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app (k_propId singleton) star)
                                    star) (id singleton star)) x0) star)
                            (fixMe "prova di symmetria")) (app x8 x10))
                       (forall_lam singleton x10 \
                         forall_lam singleton x11 \
                          forall_lam (propId singleton x10 x11) x12 \
                           forall_app (forall_app (forall_app x9 x10) x11)
                            x12)))
                  (elim_colSigma x6 (x8 \
                    colSigma
                     (setPi singleton x9 \ propId singleton star star) x9 \
                     forall singleton x10 \
                      forall singleton x11 \
                       forall (propId singleton x10 x11) x12 \
                        propId singleton star star) x8 \ x9 \
                    pair (setPi singleton x10 \ propId singleton star star)
                     (x10 \
                     forall singleton x11 \
                      forall singleton x12 \
                       forall (propId singleton x11 x12) x13 \
                        propId singleton star star)
                     (lambda singleton x10 \
                       impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app (k_propId singleton) star) star)
                                (id singleton star)) x0) star)
                          (fixMe "prova di symmetria")) (app x8 x10))
                     (forall_lam singleton x10 \
                       forall_lam singleton x11 \
                        forall_lam (propId singleton x10 x11) x12 \
                         forall_app (forall_app (forall_app x9 x10) x11) x12)))
                (forall_lam singleton x8 \ forall_app x7 x8)))) star) props
 int
"
