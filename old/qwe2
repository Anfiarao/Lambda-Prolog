"debug.elpi:   6: Warning: indent is undeclared"
"debug.elpi:  27: Error: (print_indent) has type prop but is applied to C S N"
"debug.elpi:  29: Error: (print_indent) has type prop but is applied to IC I N"
"debug.elpi:  34: Warning: indent is undeclared"
"debug.elpi:  34: Warning: indent is undeclared"
"trad.elpi:  58: Warning: k_propId is undeclared"
"trad.elpi:  78: Warning: k_propId is undeclared"
"trad.elpi: 109: Warning: fixMe is undeclared"
"main.elpi:  65: Warning: fixMe2 is undeclared"
"main.elpi:  73: Warning: fixMe is undeclared"
"letIn.elpi:  10: Error: (letIn KIND1 T S) has type mttTerm but is used with type mttType"
"test.elpi:  24: Warning: l is undeclared"
"test.elpi:  45: Warning: i is undeclared"
"test.elpi:  86: Warning: h is undeclared"
"test.elpi:  98: Warning: g is undeclared"
"test.elpi: 120: Warning: f is undeclared"
"dummy:   1:query: Warning: h is undeclared"
"1_[+[Begin 
isType
 (forall (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \
   propEq singleton (app x0 (lambda singleton x1 \ x1)) star) X0 ext
"
"1 >>isType
 (forall (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \
   propEq singleton (app x0 (lambda singleton x1 \ x1)) star) X0 ext
"
"2__[+[Begin 
isType (setPi (setPi singleton x0 \ singleton) x0 \ singleton) X1 ext
"
"2  >>isType (setPi (setPi singleton x0 \ singleton) x0 \ singleton) X1 ext
"
"2  >>isType (setPi singleton x0 \ singleton) X2 ext
"
"2  >>isType singleton X3 ext
"
"2  >>isType singleton X4 ext
"
"3___[+[Begin 
pts_fun set set X2
"
"4____[+[Begin 
pts_leq set set
"
"4----]-]Success  
pts_leq set set
"
"4____[+[Begin 
pts_leq set set
"
"4----]-]Success  
pts_leq set set
"
"3---]-]Success  
pts_fun set set set
"
"2  >>isType singleton X5 ext
"
"3___[+[Begin 
pts_fun set set X1
"
"4____[+[Begin 
pts_leq set set
"
"4----]-]Success  
pts_leq set set
"
"4____[+[Begin 
pts_leq set set
"
"4----]-]Success  
pts_leq set set
"
"3---]-]Success  
pts_fun set set set
"
"2--]-]Success  
isType (setPi (setPi singleton x0 \ singleton) x0 \ singleton) set ext
"
"2__[+[Begin 
pi x0 \
 locDecl x0 (setPi (setPi singleton x1 \ singleton) x1 \ singleton) =>
  spy
   (isType (propEq singleton (app x0 (lambda singleton x1 \ x1)) star) X6 ext)
"
"3___[+[Begin 
isType (propEq singleton (app x0 (lambda singleton x1 \ x1)) star) X6 ext
"
"3   >>isType (propEq singleton (app x0 (lambda singleton x1 \ x1)) star) X6 ext
"
"3   >>isType singleton X7^1 ext
"
"3   >>isa (app x0 (lambda singleton x1 \ x1)) singleton ext
"
"4____[+[Begin 
of (app x0 (lambda singleton x1 \ x1)) X8^1 ext
"
"4    >>of (app x0 (lambda singleton x1 \ x1)) X8^1 ext
"
"4    >>of (app x0 (lambda singleton x1 \ x1)) X8^1 ext
"
"4    >>locDecl (app x0 (lambda singleton x1 \ x1)) X8^1
"
"5_____[+[Begin 
of x0 (setPi X9^1 X10^1) ext
"
"5     >>of x0 (setPi X9^1 X10^1) ext
"
"5     >>of x0 (setPi X9^1 X10^1) ext
"
"5-----]-]Success  
of x0 (setPi (setPi singleton x1 \ singleton) x1 \ singleton) ext
"
"5_____[+[Begin 
isa (lambda singleton x1 \ x1) (setPi singleton x1 \ singleton) ext
"
"5     >>isa (lambda singleton x1 \ x1) (setPi singleton x1 \ singleton) ext
"
"6______[+[Begin 
of (lambda singleton x1 \ x1) X11^1 ext
"
"6      >>of (lambda singleton x1 \ x1) X11^1 ext
"
"6      >>of (lambda singleton x1 \ x1) X11^1 ext
"
"6      >>locDecl (lambda singleton x1 \ x1) X11^1
"
"7_______[+[Begin 
isType singleton _ ext
"
"7       >>isType singleton X12^1 ext
"
"7-------]-]Success  
isType singleton _ ext
"
"7_______[+[Begin 
pi x1 \ locDecl x1 singleton => isa x1 (X13^1 x1) ext
"
"7       >>isa x1 (X13^1 x1) ext
"
"8________[+[Begin 
of x1 X14^2 ext
"
"8        >>of x1 X14^2 ext
"
"8        >>of x1 X14^2 ext
"
"8--------]-]Success  
of x1 singleton ext
"
"8________[+[Begin 
conv singleton (X13^1 x1)
"
"8        >>conv singleton (X13^1 x1)
"
"8        >>conv singleton (X13^1 x1)
"
"8--------]-]Success  
conv singleton singleton
"
"7-------]-]Success  
pi x1 \ locDecl x1 singleton => isa x1 singleton ext
"
"6------]-]Success  
of (lambda singleton x1 \ x1) (setPi singleton x1 \ singleton) ext
"
"6______[+[Begin 
conv (setPi singleton x1 \ singleton) (setPi singleton x1 \ singleton)
"
"6      >>conv (setPi singleton x1 \ singleton) (setPi singleton x1 \ singleton)
"
"6      >>conv (setPi singleton x1 \ singleton) (setPi singleton x1 \ singleton)
"
"6------]-]Success  
conv (setPi singleton x1 \ singleton) (setPi singleton x1 \ singleton)
"
"5-----]-]Success  
isa (lambda singleton x1 \ x1) (setPi singleton x1 \ singleton) ext
"
"4----]-]Success  
of (app x0 (lambda singleton x1 \ x1)) singleton ext
"
"4____[+[Begin 
conv singleton singleton
"
"4    >>conv singleton singleton
"
"4    >>conv singleton singleton
"
"4----]-]Success  
conv singleton singleton
"
"3   >>isa star singleton ext
"
"4____[+[Begin 
of star X15^1 ext
"
"4    >>of star X15^1 ext
"
"4    >>of star X15^1 ext
"
"4    >>locDecl star X15^1
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
conv singleton singleton
"
"4    >>conv singleton singleton
"
"4    >>conv singleton singleton
"
"4----]-]Success  
conv singleton singleton
"
"3---]-]Success  
isType (propEq singleton (app x0 (lambda singleton x1 \ x1)) star) props ext
"
"2--]-]Success  
pi x0 \
 locDecl x0 (setPi (setPi singleton x1 \ singleton) x1 \ singleton) =>
  spy
   (isType (propEq singleton (app x0 (lambda singleton x1 \ x1)) star) props
     ext)
"
"2__[+[Begin 
pts_for set props X0
"
"2--]-]Success  
pts_for set props props
"
"1-]-]Success  
isType
 (forall (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \
   propEq singleton (app x0 (lambda singleton x1 \ x1)) star) props ext
"
"|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
"
"1_[+[Begin 
trad
 (forall (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \
   propEq singleton (app x0 (lambda singleton x1 \ x1)) star) X16
"
"1 >>trad
 (forall (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \
   propEq singleton (app x0 (lambda singleton x1 \ x1)) star) X16
"
"2__[+[Begin 
trad (setPi (setPi singleton x0 \ singleton) x0 \ singleton) X17
"
"2  >>trad (setPi (setPi singleton x0 \ singleton) x0 \ singleton) X17
"
"3___[+[Begin 
trad (setPi singleton x0 \ singleton) X18
"
"3   >>trad (setPi singleton x0 \ singleton) X18
"
"4____[+[Begin 
trad singleton X19
"
"4    >>trad singleton X19
"
"4----]-]Success  
trad singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => trad x0 x1 => trad singleton (X20 x1)
"
"4    >>trad singleton (X20 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => trad x0 x1 => trad singleton singleton
"
"4____[+[Begin 
equ singleton X21
"
"4    >>equ singleton X21
"
"4----]-]Success  
equ singleton x0 \ x1 \ propId singleton x0 x1
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => trad x0 x1 => equ singleton (X22 x1)
"
"4    >>equ singleton (X22 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 => (equ singleton x2 \ x3 \ propId singleton x2 x3)
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          trad x0 x3 =>
           trad x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              trad x2 x5 => spy (pippo singleton singleton (X23 x3 x4 x5))
"
"5_____[+[Begin 
pippo singleton singleton (X23 x3 x4 x5)
"
"5     >>pippo singleton singleton (X23 x3 x4 x5)
"
"5-----]-]Success  
pippo singleton singleton x6 \ x6
"
"4----]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 singleton =>
       locDecl x1 singleton =>
        locDecl x3 singleton =>
         locDecl x4 singleton =>
          trad x0 x3 =>
           trad x1 x4 =>
            locDecl x2 (propEq singleton x0 x1) =>
             locDecl x5 (propId singleton x3 x4) =>
              trad x2 x5 => spy (pippo singleton singleton x6 \ x6)
"
"3---]-]Success  
trad (setPi singleton x0 \ singleton)
 (colSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2))
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    trad x0 x1 => trad singleton (X24 x1)
"
"3   >>trad singleton (X24 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    trad x0 x1 => trad singleton singleton
"
"3___[+[Begin 
equ (setPi singleton x0 \ singleton) X25
"
"3   >>equ (setPi singleton x0 \ singleton) X25
"
"4____[+[Begin 
trad singleton X26
"
"4    >>trad singleton X26
"
"4----]-]Success  
trad singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => trad x0 x1 => trad singleton (X27 x1)
"
"4    >>trad singleton (X27 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton => trad x0 x1 => trad singleton singleton
"
"4____[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 => ((trad singleton singleton), (equ singleton (X28 x1)))
"
"4    >>trad singleton singleton
"
"4    >>equ singleton (X28 x1)
"
"4----]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 singleton =>
   locDecl x1 singleton =>
    trad x0 x1 => ((trad singleton singleton),
     (equ singleton x2 \ x3 \ propId singleton x2 x3))
"
"3---]-]Success  
equ (setPi singleton x0 \ singleton) x0 \ x1 \
 forall singleton x2 \
  propId singleton
   (app (elim_colSigma x0 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
   (app (elim_colSigma x1 (x3 \ setPi singleton x4 \ singleton) x3 \ x4 \ x3)
     x2)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    trad x0 x1 => equ singleton (X29 x1)
"
"3   >>equ singleton (X29 x1)
"
"3---]-]Success  
pi x0 \
 pi x1 \
  locDecl x0 (setPi singleton x2 \ singleton) =>
   locDecl x1
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) =>
    trad x0 x1 => (equ singleton x2 \ x3 \ propId singleton x2 x3)
"
"3___[+[Begin 
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (colSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (colSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          trad x0 x3 =>
           trad x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_colSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_colSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              trad x2 x5 => spy (pippo singleton singleton (X30 x3 x4 x5))
"
"4____[+[Begin 
pippo singleton singleton (X30 x3 x4 x5)
"
"4    >>pippo singleton singleton (X30 x3 x4 x5)
"
"4----]-]Success  
pippo singleton singleton x6 \ x6
"
"3---]-]Success  
pi x0 \
 pi x1 \
  pi x2 \
   pi x3 \
    pi x4 \
     pi x5 \
      locDecl x0 (setPi singleton x6 \ singleton) =>
       locDecl x1 (setPi singleton x6 \ singleton) =>
        locDecl x3
         (colSigma (setPi singleton x6 \ singleton) x6 \
           forall singleton x7 \
            forall singleton x8 \
             forall (propId singleton x7 x8) x9 \
              propId singleton (app x6 x7) (app x6 x8)) =>
         locDecl x4
          (colSigma (setPi singleton x6 \ singleton) x6 \
            forall singleton x7 \
             forall singleton x8 \
              forall (propId singleton x7 x8) x9 \
               propId singleton (app x6 x7) (app x6 x8)) =>
          trad x0 x3 =>
           trad x1 x4 =>
            locDecl x2 (propEq (setPi singleton x6 \ singleton) x0 x1) =>
             locDecl x5
              (forall singleton x6 \
                propId singleton
                 (app
                   (elim_colSigma x3 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)
                 (app
                   (elim_colSigma x4 (x7 \ setPi singleton x8 \ singleton)
                     x7 \ x8 \ x7) x6)) =>
              trad x2 x5 => spy (pippo singleton singleton x6 \ x6)
"
"2--]-]Success  
trad (setPi (setPi singleton x0 \ singleton) x0 \ singleton)
 (colSigma
   (setPi
     (colSigma (setPi singleton x0 \ singleton) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \
          propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) x0 \
   forall
    (colSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \
    forall
     (colSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (forall singleton x3 \
        propId singleton
         (app
           (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)
         (app
           (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2))
"
"2__[+[Begin 
pi x0 \
 pi x1 \
  trad x0 x1 =>
   locDecl x0 (setPi (setPi singleton x2 \ singleton) x2 \ singleton) =>
    locDecl x1
     (colSigma
       (setPi
         (colSigma (setPi singleton x2 \ singleton) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
       forall
        (colSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        forall
         (colSigma (setPi singleton x4 \ singleton) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (forall singleton x5 \
            propId singleton
             (app
               (elim_colSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                 x7 \ x6) x5)
             (app
               (elim_colSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                 x7 \ x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4))
     =>
     trad (propEq singleton (app x0 (lambda singleton x2 \ x2)) star)
      (X31 x1)
"
"2  >>trad (propEq singleton (app x0 (lambda singleton x2 \ x2)) star) (X31 x1)
"
"3___[+[Begin 
equ singleton X32^2
"
"3   >>equ singleton X32^2
"
"3---]-]Success  
equ singleton x2 \ x3 \ propId singleton x2 x3
"
"3___[+[Begin 
trad_isa (app x0 (lambda singleton x2 \ x2)) singleton X33^2
"
"4____[+[Begin 
of (app x0 (lambda singleton x2 \ x2)) X34^2 ext
"
"4    >>of (app x0 (lambda singleton x2 \ x2)) X34^2 ext
"
"4    >>of (app x0 (lambda singleton x2 \ x2)) X34^2 ext
"
"4    >>locDecl (app x0 (lambda singleton x2 \ x2)) X34^2
"
"5_____[+[Begin 
of x0 (setPi X35^2 X36^2) ext
"
"5     >>of x0 (setPi X35^2 X36^2) ext
"
"5     >>of x0 (setPi X35^2 X36^2) ext
"
"5-----]-]Success  
of x0 (setPi (setPi singleton x2 \ singleton) x2 \ singleton) ext
"
"5_____[+[Begin 
isa (lambda singleton x2 \ x2) (setPi singleton x2 \ singleton) ext
"
"5     >>isa (lambda singleton x2 \ x2) (setPi singleton x2 \ singleton) ext
"
"6______[+[Begin 
of (lambda singleton x2 \ x2) X37^2 ext
"
"6      >>of (lambda singleton x2 \ x2) X37^2 ext
"
"6      >>of (lambda singleton x2 \ x2) X37^2 ext
"
"6      >>locDecl (lambda singleton x2 \ x2) X37^2
"
"7_______[+[Begin 
isType singleton _ ext
"
"7       >>isType singleton X38^2 ext
"
"7-------]-]Success  
isType singleton _ ext
"
"7_______[+[Begin 
pi x2 \ locDecl x2 singleton => isa x2 (X39^2 x2) ext
"
"7       >>isa x2 (X39^2 x2) ext
"
"8________[+[Begin 
of x2 X40^3 ext
"
"8        >>of x2 X40^3 ext
"
"8        >>of x2 X40^3 ext
"
"8--------]-]Success  
of x2 singleton ext
"
"8________[+[Begin 
conv singleton (X39^2 x2)
"
"8        >>conv singleton (X39^2 x2)
"
"8        >>conv singleton (X39^2 x2)
"
"8--------]-]Success  
conv singleton singleton
"
"7-------]-]Success  
pi x2 \ locDecl x2 singleton => isa x2 singleton ext
"
"6------]-]Success  
of (lambda singleton x2 \ x2) (setPi singleton x2 \ singleton) ext
"
"6______[+[Begin 
conv (setPi singleton x2 \ singleton) (setPi singleton x2 \ singleton)
"
"6      >>conv (setPi singleton x2 \ singleton) (setPi singleton x2 \ singleton)
"
"6      >>conv (setPi singleton x2 \ singleton) (setPi singleton x2 \ singleton)
"
"6------]-]Success  
conv (setPi singleton x2 \ singleton) (setPi singleton x2 \ singleton)
"
"5-----]-]Success  
isa (lambda singleton x2 \ x2) (setPi singleton x2 \ singleton) ext
"
"4----]-]Success  
of (app x0 (lambda singleton x2 \ x2)) singleton ext
"
"4____[+[Begin 
trad (app x0 (lambda singleton x2 \ x2)) X41^2
"
"4    >>trad (app x0 (lambda singleton x2 \ x2)) X41^2
"
"5_____[+[Begin 
of x0 (setPi X42^2 X43^2) ext
"
"5     >>of x0 (setPi X42^2 X43^2) ext
"
"5     >>of x0 (setPi X42^2 X43^2) ext
"
"5-----]-]Success  
of x0 (setPi (setPi singleton x2 \ singleton) x2 \ singleton) ext
"
"5_____[+[Begin 
trad_isa (lambda singleton x2 \ x2) (setPi singleton x2 \ singleton) X44^2
"
"6______[+[Begin 
of (lambda singleton x2 \ x2) X45^2 ext
"
"6      >>of (lambda singleton x2 \ x2) X45^2 ext
"
"6      >>of (lambda singleton x2 \ x2) X45^2 ext
"
"6      >>locDecl (lambda singleton x2 \ x2) X45^2
"
"7_______[+[Begin 
isType singleton _ ext
"
"7       >>isType singleton X46^2 ext
"
"7-------]-]Success  
isType singleton _ ext
"
"7_______[+[Begin 
pi x2 \ locDecl x2 singleton => isa x2 (X47^2 x2) ext
"
"7       >>isa x2 (X47^2 x2) ext
"
"8________[+[Begin 
of x2 X48^3 ext
"
"8        >>of x2 X48^3 ext
"
"8        >>of x2 X48^3 ext
"
"8--------]-]Success  
of x2 singleton ext
"
"8________[+[Begin 
conv singleton (X47^2 x2)
"
"8        >>conv singleton (X47^2 x2)
"
"8        >>conv singleton (X47^2 x2)
"
"8--------]-]Success  
conv singleton singleton
"
"7-------]-]Success  
pi x2 \ locDecl x2 singleton => isa x2 singleton ext
"
"6------]-]Success  
of (lambda singleton x2 \ x2) (setPi singleton x2 \ singleton) ext
"
"6______[+[Begin 
trad (lambda singleton x2 \ x2) X49^2
"
"6      >>trad (lambda singleton x2 \ x2) X49^2
"
"7_______[+[Begin 
of (lambda singleton x2 \ x2) (setPi singleton X50^2) ext
"
"7       >>of (lambda singleton x2 \ x2) (setPi singleton X50^2) ext
"
"7       >>of (lambda singleton x2 \ x2) (setPi singleton X50^2) ext
"
"7       >>locDecl (lambda singleton x2 \ x2) (setPi singleton X50^2)
"
"8________[+[Begin 
isType singleton _ ext
"
"8        >>isType singleton X51^2 ext
"
"8--------]-]Success  
isType singleton _ ext
"
"8________[+[Begin 
pi x2 \ locDecl x2 singleton => isa x2 (X50^2 x2) ext
"
"8        >>isa x2 (X50^2 x2) ext
"
"9_________[+[Begin 
of x2 X52^3 ext
"
"9         >>of x2 X52^3 ext
"
"9         >>of x2 X52^3 ext
"
"9---------]-]Success  
of x2 singleton ext
"
"9_________[+[Begin 
conv singleton (X50^2 x2)
"
"9         >>conv singleton (X50^2 x2)
"
"9         >>conv singleton (X50^2 x2)
"
"9---------]-]Success  
conv singleton singleton
"
"8--------]-]Success  
pi x2 \ locDecl x2 singleton => isa x2 singleton ext
"
"7-------]-]Success  
of (lambda singleton x2 \ x2) (setPi singleton x2 \ singleton) ext
"
"7_______[+[Begin 
trad (setPi singleton x2 \ singleton) (colSigma (setPi X53^2 X54^2) X55^2)
"
"7       >>trad (setPi singleton x2 \ singleton) (colSigma (setPi X53^2 X54^2) X55^2)
"
"8________[+[Begin 
trad singleton X56^2
"
"8        >>trad singleton X56^2
"
"8--------]-]Success  
trad singleton singleton
"
"8________[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => trad x2 x3 => trad singleton (X57^2 x3)
"
"8        >>trad singleton (X57^2 x3)
"
"8--------]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => trad x2 x3 => trad singleton singleton
"
"8________[+[Begin 
equ singleton X58^2
"
"8        >>equ singleton X58^2
"
"8--------]-]Success  
equ singleton x2 \ x3 \ propId singleton x2 x3
"
"8________[+[Begin 
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton => trad x2 x3 => equ singleton (X59^2 x3)
"
"8        >>equ singleton (X59^2 x3)
"
"8--------]-]Success  
pi x2 \
 pi x3 \
  locDecl x2 singleton =>
   locDecl x3 singleton =>
    trad x2 x3 => (equ singleton x4 \ x5 \ propId singleton x4 x5)
"
"8________[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          trad x2 x5 =>
           trad x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              trad x4 x7 => spy (pippo singleton singleton (X60^2 x5 x6 x7))
"
"9_________[+[Begin 
pippo singleton singleton (X60^2 x5 x6 x7)
"
"9         >>pippo singleton singleton (X60^2 x5 x6 x7)
"
"9---------]-]Success  
pippo singleton singleton x8 \ x8
"
"8--------]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          trad x2 x5 =>
           trad x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              trad x4 x7 => spy (pippo singleton singleton x8 \ x8)
"
"7-------]-]Success  
trad (setPi singleton x2 \ singleton)
 (colSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4))
"
"6      >>macro_trad singleton x2 \ x3 \ x4 \ x5 \ x6 \ x7 \ trad x2 (X61^2 x5)
"
"7_______[+[Begin 
equ singleton X62^2
"
"7       >>equ singleton X62^2
"
"7-------]-]Success  
equ singleton x2 \ x3 \ propId singleton x2 x3
"
"7_______[+[Begin 
trad singleton X63^2
"
"7       >>trad singleton X63^2
"
"7-------]-]Success  
trad singleton singleton
"
"7_______[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          trad x2 x5 =>
           trad x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              trad x4 x7 => spy (trad x2 (X61^2 x5))
"
"8________[+[Begin 
trad x2 (X61^2 x5)
"
"8--------]-]Success  
trad x2 x5
"
"7-------]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          trad x2 x5 =>
           trad x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              trad x4 x7 => spy (trad x2 x5)
"
"6      >>equ singleton X64^2
"
"6      >>macro_trad singleton x2 \ x3 \ x4 \ x5 \ x6 \ x7 \
 pippoequ x2 x3 singleton (X65^2 x5 x6 x7)
"
"7_______[+[Begin 
equ singleton X66^2
"
"7       >>equ singleton X66^2
"
"7-------]-]Success  
equ singleton x2 \ x3 \ propId singleton x2 x3
"
"7_______[+[Begin 
trad singleton X67^2
"
"7       >>trad singleton X67^2
"
"7-------]-]Success  
trad singleton singleton
"
"7_______[+[Begin 
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          trad x2 x5 =>
           trad x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              trad x4 x7 => spy (pippoequ x2 x3 singleton (X65^2 x5 x6 x7))
"
"8________[+[Begin 
pippoequ x2 x3 singleton (X65^2 x5 x6 x7)
"
"8        >>pippoequ x2 x3 singleton (X65^2 x5 x6 x7)
"
"9_________[+[Begin 
locDecl X68^8 (propEq X69^8 x2 x3)
"
"9---------]-]Success  
locDecl x4 (propEq singleton x2 x3)
"
"9_________[+[Begin 
trad_isa x4 (propEq singleton x2 x3) (X65^2 x5 x6 x7)
"
"10__________[+[Begin 
of x4 X70^8 ext
"
"10          >>of x4 X70^8 ext
"
"10          >>of x4 X70^8 ext
"
"10----------]-]Success  
of x4 (propEq singleton x2 x3) ext
"
"10__________[+[Begin 
trad x4 X71^8
"
"10----------]-]Success  
trad x4 x7
"
"10__________[+[Begin 
pippo (propEq singleton x2 x3) (propEq singleton x2 x3) X72^8
"
"10          >>pippo (propEq singleton x2 x3) (propEq singleton x2 x3) X72^8
"
"10----------]-]Success  
pippo (propEq singleton x2 x3) (propEq singleton x2 x3) x8 \ x8
"
"10__________[+[Begin 
X65^2 x5 x6 x7 = x7
"
"10----------]-]Success  
x7 = x7
"
"9---------]-]Success  
trad_isa x4 (propEq singleton x2 x3) x7
"
"8--------]-]Success  
pippoequ x2 x3 singleton x7
"
"7-------]-]Success  
pi x2 \
 pi x3 \
  pi x4 \
   pi x5 \
    pi x6 \
     pi x7 \
      locDecl x2 singleton =>
       locDecl x3 singleton =>
        locDecl x5 singleton =>
         locDecl x6 singleton =>
          trad x2 x5 =>
           trad x3 x6 =>
            locDecl x4 (propEq singleton x2 x3) =>
             locDecl x7 (propId singleton x5 x6) =>
              trad x4 x7 => spy (pippoequ x2 x3 singleton x7)
"
"6------]-]Success  
trad (lambda singleton x2 \ x2)
 (pair (setPi singleton x2 \ singleton) (x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
   (forall_lam singleton x2 \
     forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4))
"
"6______[+[Begin 
pippo (setPi singleton x2 \ singleton) (setPi singleton x2 \ singleton) X73^2
"
"6      >>pippo (setPi singleton x2 \ singleton) (setPi singleton x2 \ singleton) X73^2
"
"6------]-]Success  
pippo (setPi singleton x2 \ singleton) (setPi singleton x2 \ singleton) x2 \
 x2
"
"6______[+[Begin 
X44^2 =
 pair (setPi singleton x2 \ singleton) (x2 \
  forall singleton x3 \
   forall singleton x4 \
    forall (propId singleton x3 x4) x5 \
     propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
  (forall_lam singleton x2 \
    forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4)
"
"6------]-]Success  
pair (setPi singleton x2 \ singleton) (x2 \
 forall singleton x3 \
  forall singleton x4 \
   forall (propId singleton x3 x4) x5 \
    propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
 (forall_lam singleton x2 \
   forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4) =
 pair (setPi singleton x2 \ singleton) (x2 \
  forall singleton x3 \
   forall singleton x4 \
    forall (propId singleton x3 x4) x5 \
     propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
  (forall_lam singleton x2 \
    forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4)
"
"5-----]-]Success  
trad_isa (lambda singleton x2 \ x2) (setPi singleton x2 \ singleton)
 (pair (setPi singleton x2 \ singleton) (x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
   (forall_lam singleton x2 \
     forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4))
"
"5_____[+[Begin 
trad x0 X74^2
"
"5-----]-]Success  
trad x0 x1
"
"5_____[+[Begin 
of x1 X75^2 int
"
"5     >>of x1 X75^2 int
"
"5     >>of x1 X75^2 int
"
"5-----]-]Success  
of x1
 (colSigma
   (setPi
     (colSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
   forall
    (colSigma (setPi singleton x3 \ singleton) x3 \
      forall singleton x4 \
       forall singleton x5 \
        forall (propId singleton x4 x5) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x3 \
    forall
     (colSigma (setPi singleton x4 \ singleton) x4 \
       forall singleton x5 \
        forall singleton x6 \
         forall (propId singleton x5 x6) x7 \
          propId singleton (app x4 x5) (app x4 x6)) x4 \
     forall
      (forall singleton x5 \
        propId singleton
         (app
           (elim_colSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
             x6) x5)
         (app
           (elim_colSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
             x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) int
"
"5_____[+[Begin 
(colSigma
  (setPi
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
  forall
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \
   forall
    (colSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    forall
     (forall singleton x5 \
       propId singleton
        (app
          (elim_colSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
            x6) x5)
        (app
          (elim_colSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
            x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) =
 colSigma X76^2 _
"
"5-----]-]Success  
(colSigma
  (setPi
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
  forall
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \
   forall
    (colSigma (setPi singleton x4 \ singleton) x4 \
      forall singleton x5 \
       forall singleton x6 \
        forall (propId singleton x5 x6) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x4 \
    forall
     (forall singleton x5 \
       propId singleton
        (app
          (elim_colSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
            x6) x5)
        (app
          (elim_colSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
            x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) =
 colSigma
  (setPi
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) _
"
"4----]-]Success  
trad (app x0 (lambda singleton x2 \ x2))
 (app
   (elim_colSigma x1 (x2 \
     setPi
      (colSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
     x3 \ x2)
   (pair (setPi singleton x2 \ singleton) (x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
     (forall_lam singleton x2 \
       forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4)))
"
"4____[+[Begin 
pippo singleton singleton X77^2
"
"4    >>pippo singleton singleton X77^2
"
"4----]-]Success  
pippo singleton singleton x2 \ x2
"
"4____[+[Begin 
X33^2 =
 app
  (elim_colSigma x1 (x2 \
    setPi
     (colSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \ x3 \
    x2)
  (pair (setPi singleton x2 \ singleton) (x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
    (forall_lam singleton x2 \
      forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4))
"
"4----]-]Success  
app
 (elim_colSigma x1 (x2 \
   setPi
    (colSigma (setPi singleton x3 \ singleton) x3 \
      forall singleton x4 \
       forall singleton x5 \
        forall (propId singleton x4 x5) x6 \
         propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \ x3 \
   x2)
 (pair (setPi singleton x2 \ singleton) (x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
   (forall_lam singleton x2 \
     forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4))
 =
 app
  (elim_colSigma x1 (x2 \
    setPi
     (colSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \ x3 \
    x2)
  (pair (setPi singleton x2 \ singleton) (x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
    (forall_lam singleton x2 \
      forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4))
"
"3---]-]Success  
trad_isa (app x0 (lambda singleton x2 \ x2)) singleton
 (app
   (elim_colSigma x1 (x2 \
     setPi
      (colSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
     x3 \ x2)
   (pair (setPi singleton x2 \ singleton) (x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
     (forall_lam singleton x2 \
       forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4)))
"
"3___[+[Begin 
trad_isa star singleton X78^2
"
"4____[+[Begin 
of star X79^2 ext
"
"4    >>of star X79^2 ext
"
"4    >>of star X79^2 ext
"
"4    >>locDecl star X79^2
"
"4----]-]Success  
of star singleton ext
"
"4____[+[Begin 
trad star X80^2
"
"4    >>trad star X80^2
"
"4----]-]Success  
trad star star
"
"4____[+[Begin 
pippo singleton singleton X81^2
"
"4    >>pippo singleton singleton X81^2
"
"4----]-]Success  
pippo singleton singleton x2 \ x2
"
"4____[+[Begin 
X78^2 = star
"
"4----]-]Success  
star = star
"
"3---]-]Success  
trad_isa star singleton star
"
"3___[+[Begin 
X31 x1 =
 propId singleton
  (app
    (elim_colSigma x1 (x2 \
      setPi
       (colSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
      x3 \ x2)
    (pair (setPi singleton x2 \ singleton) (x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
      (forall_lam singleton x2 \
        forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4)))
  star
"
"3---]-]Success  
propId singleton
 (app
   (elim_colSigma x1 (x2 \
     setPi
      (colSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
     x3 \ x2)
   (pair (setPi singleton x2 \ singleton) (x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
     (forall_lam singleton x2 \
       forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4)))
 star =
 propId singleton
  (app
    (elim_colSigma x1 (x2 \
      setPi
       (colSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) x2 \
      x3 \ x2)
    (pair (setPi singleton x2 \ singleton) (x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) (lambda singleton x2 \ x2)
      (forall_lam singleton x2 \
        forall_lam singleton x3 \ forall_lam (propId singleton x2 x3) x4 \ x4)))
  star
"
"2--]-]Success  
pi x0 \
 pi x1 \
  trad x0 x1 =>
   locDecl x0 (setPi (setPi singleton x2 \ singleton) x2 \ singleton) =>
    locDecl x1
     (colSigma
       (setPi
         (colSigma (setPi singleton x2 \ singleton) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
       forall
        (colSigma (setPi singleton x3 \ singleton) x3 \
          forall singleton x4 \
           forall singleton x5 \
            forall (propId singleton x4 x5) x6 \
             propId singleton (app x3 x4) (app x3 x5)) x3 \
        forall
         (colSigma (setPi singleton x4 \ singleton) x4 \
           forall singleton x5 \
            forall singleton x6 \
             forall (propId singleton x5 x6) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x4 \
         forall
          (forall singleton x5 \
            propId singleton
             (app
               (elim_colSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
                 x7 \ x6) x5)
             (app
               (elim_colSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
                 x7 \ x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4))
     =>
     trad (propEq singleton (app x0 (lambda singleton x2 \ x2)) star)
      (propId singleton
        (app
          (elim_colSigma x1 (x2 \
            setPi
             (colSigma (setPi singleton x3 \ singleton) x3 \
               forall singleton x4 \
                forall singleton x5 \
                 forall (propId singleton x4 x5) x6 \
                  propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
            x2 \ x3 \ x2)
          (pair (setPi singleton x2 \ singleton) (x2 \
            forall singleton x3 \
             forall singleton x4 \
              forall (propId singleton x3 x4) x5 \
               propId singleton (app x2 x3) (app x2 x4))
            (lambda singleton x2 \ x2)
            (forall_lam singleton x2 \
              forall_lam singleton x3 \
               forall_lam (propId singleton x2 x3) x4 \ x4))) star)
"
"1-]-]Success  
trad
 (forall (setPi (setPi singleton x0 \ singleton) x0 \ singleton) x0 \
   propEq singleton (app x0 (lambda singleton x1 \ x1)) star)
 (forall
   (colSigma
     (setPi
       (colSigma (setPi singleton x0 \ singleton) x0 \
         forall singleton x1 \
          forall singleton x2 \
           forall (propId singleton x1 x2) x3 \
            propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) x0 \
     forall
      (colSigma (setPi singleton x1 \ singleton) x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3)) x1 \
      forall
       (colSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \
       forall
        (forall singleton x3 \
          propId singleton
           (app
             (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)
           (app
             (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2))
   x0 \
   propId singleton
    (app
      (elim_colSigma x0 (x1 \
        setPi
         (colSigma (setPi singleton x2 \ singleton) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
        x2 \ x1)
      (pair (setPi singleton x1 \ singleton) (x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3))
        (lambda singleton x1 \ x1)
        (forall_lam singleton x1 \
          forall_lam singleton x2 \
           forall_lam (propId singleton x1 x2) x3 \ x3))) star)
"
"|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
"
"1_[+[Begin 
isType
 (forall
   (colSigma
     (setPi
       (colSigma (setPi singleton x0 \ singleton) x0 \
         forall singleton x1 \
          forall singleton x2 \
           forall (propId singleton x1 x2) x3 \
            propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) x0 \
     forall
      (colSigma (setPi singleton x1 \ singleton) x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3)) x1 \
      forall
       (colSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \
       forall
        (forall singleton x3 \
          propId singleton
           (app
             (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)
           (app
             (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2))
   x0 \
   propId singleton
    (app
      (elim_colSigma x0 (x1 \
        setPi
         (colSigma (setPi singleton x2 \ singleton) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
        x2 \ x1)
      (pair (setPi singleton x1 \ singleton) (x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3))
        (lambda singleton x1 \ x1)
        (forall_lam singleton x1 \
          forall_lam singleton x2 \
           forall_lam (propId singleton x1 x2) x3 \ x3))) star) X82 int
"
"1 >>isType
 (forall
   (colSigma
     (setPi
       (colSigma (setPi singleton x0 \ singleton) x0 \
         forall singleton x1 \
          forall singleton x2 \
           forall (propId singleton x1 x2) x3 \
            propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) x0 \
     forall
      (colSigma (setPi singleton x1 \ singleton) x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3)) x1 \
      forall
       (colSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \
       forall
        (forall singleton x3 \
          propId singleton
           (app
             (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)
           (app
             (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2))
   x0 \
   propId singleton
    (app
      (elim_colSigma x0 (x1 \
        setPi
         (colSigma (setPi singleton x2 \ singleton) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
        x2 \ x1)
      (pair (setPi singleton x1 \ singleton) (x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3))
        (lambda singleton x1 \ x1)
        (forall_lam singleton x1 \
          forall_lam singleton x2 \
           forall_lam (propId singleton x1 x2) x3 \ x3))) star) X82 int
"
"2__[+[Begin 
isType
 (colSigma
   (setPi
     (colSigma (setPi singleton x0 \ singleton) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \
          propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) x0 \
   forall
    (colSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \
    forall
     (colSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (forall singleton x3 \
        propId singleton
         (app
           (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)
         (app
           (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) X83 int
"
"2  >>isType
 (colSigma
   (setPi
     (colSigma (setPi singleton x0 \ singleton) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \
          propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) x0 \
   forall
    (colSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \
    forall
     (colSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (forall singleton x3 \
        propId singleton
         (app
           (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)
         (app
           (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) X83 int
"
"3___[+[Begin 
isType
 (setPi
   (colSigma (setPi singleton x0 \ singleton) x0 \
     forall singleton x1 \
      forall singleton x2 \
       forall (propId singleton x1 x2) x3 \
        propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) X84 int
"
"3   >>isType
 (setPi
   (colSigma (setPi singleton x0 \ singleton) x0 \
     forall singleton x1 \
      forall singleton x2 \
       forall (propId singleton x1 x2) x3 \
        propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) X84 int
"
"3   >>isType
 (colSigma (setPi singleton x0 \ singleton) x0 \
   forall singleton x1 \
    forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app x0 x1) (app x0 x2)) X85 int
"
"4____[+[Begin 
isType (setPi singleton x0 \ singleton) X86 int
"
"4    >>isType (setPi singleton x0 \ singleton) X86 int
"
"4    >>isType singleton X87 int
"
"4    >>isType singleton X88 int
"
"5_____[+[Begin 
pts_fun set set X86
"
"6______[+[Begin 
pts_leq set set
"
"6------]-]Success  
pts_leq set set
"
"6______[+[Begin 
pts_leq set set
"
"6------]-]Success  
pts_leq set set
"
"5-----]-]Success  
pts_fun set set set
"
"4----]-]Success  
isType (setPi singleton x0 \ singleton) set int
"
"4____[+[Begin 
pi x0 \
 locDecl x0 (setPi singleton x1 \ singleton) =>
  isType
   (forall singleton x1 \
     forall singleton x2 \
      forall (propId singleton x1 x2) x3 \
       propId singleton (app x0 x1) (app x0 x2)) X89 int
"
"4    >>isType
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app x0 x1) (app x0 x2)) X89 int
"
"5_____[+[Begin 
isType singleton X90^1 int
"
"5     >>isType singleton X90^1 int
"
"5-----]-]Success  
isType singleton set int
"
"5_____[+[Begin 
pi x1 \
 locDecl x1 singleton =>
  spy
   (isType
     (forall singleton x2 \
       forall (propId singleton x1 x2) x3 \
        propId singleton (app x0 x1) (app x0 x2)) X91^1 int)
"
"6______[+[Begin 
isType
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app x0 x1) (app x0 x2)) X91^1 int
"
"6      >>isType
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app x0 x1) (app x0 x2)) X91^1 int
"
"7_______[+[Begin 
isType singleton X92^2 int
"
"7       >>isType singleton X92^2 int
"
"7-------]-]Success  
isType singleton set int
"
"7_______[+[Begin 
pi x2 \
 locDecl x2 singleton =>
  spy
   (isType
     (forall (propId singleton x1 x2) x3 \
       propId singleton (app x0 x1) (app x0 x2)) X93^2 int)
"
"8________[+[Begin 
isType
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app x0 x1) (app x0 x2)) X93^2 int
"
"8        >>isType
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app x0 x1) (app x0 x2)) X93^2 int
"
"9_________[+[Begin 
isType (propId singleton x1 x2) X94^3 int
"
"9         >>isType (propId singleton x1 x2) X94^3 int
"
"9         >>isa x1 singleton int
"
"10__________[+[Begin 
of x1 X95^3 int
"
"10          >>of x1 X95^3 int
"
"10          >>of x1 X95^3 int
"
"10----------]-]Success  
of x1 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10          >>conv singleton singleton
"
"10          >>conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"9         >>isa x2 singleton int
"
"10__________[+[Begin 
of x2 X96^3 int
"
"10          >>of x2 X96^3 int
"
"10          >>of x2 X96^3 int
"
"10----------]-]Success  
of x2 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10          >>conv singleton singleton
"
"10          >>conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"9         >>isType singleton X97^3 int
"
"10__________[+[Begin 
(pts_leq set set),
(X94^3 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
isType (propId singleton x1 x2) props int
"
"9_________[+[Begin 
pi x3 \
 locDecl x3 (propId singleton x1 x2) =>
  spy (isType (propId singleton (app x0 x1) (app x0 x2)) X98^3 int)
"
"10__________[+[Begin 
isType (propId singleton (app x0 x1) (app x0 x2)) X98^3 int
"
"10          >>isType (propId singleton (app x0 x1) (app x0 x2)) X98^3 int
"
"10          >>isa (app x0 x1) singleton int
"
"11___________[+[Begin 
of (app x0 x1) X99^4 int
"
"11           >>of (app x0 x1) X99^4 int
"
"11           >>of (app x0 x1) X99^4 int
"
"11           >>locDecl (app x0 x1) X99^4
"
"12____________[+[Begin 
of x0 (setPi X100^4 X101^4) int
"
"12            >>of x0 (setPi X100^4 X101^4) int
"
"12            >>of x0 (setPi X100^4 X101^4) int
"
"12------------]-]Success  
of x0 (setPi singleton x4 \ singleton) int
"
"12____________[+[Begin 
isa x1 singleton int
"
"12            >>isa x1 singleton int
"
"13_____________[+[Begin 
of x1 X102^4 int
"
"13             >>of x1 X102^4 int
"
"13             >>of x1 X102^4 int
"
"13-------------]-]Success  
of x1 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"12------------]-]Success  
isa x1 singleton int
"
"11-----------]-]Success  
of (app x0 x1) singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11           >>conv singleton singleton
"
"11           >>conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"10          >>isa (app x0 x2) singleton int
"
"11___________[+[Begin 
of (app x0 x2) X103^4 int
"
"11           >>of (app x0 x2) X103^4 int
"
"11           >>of (app x0 x2) X103^4 int
"
"11           >>locDecl (app x0 x2) X103^4
"
"12____________[+[Begin 
of x0 (setPi X104^4 X105^4) int
"
"12            >>of x0 (setPi X104^4 X105^4) int
"
"12            >>of x0 (setPi X104^4 X105^4) int
"
"12------------]-]Success  
of x0 (setPi singleton x4 \ singleton) int
"
"12____________[+[Begin 
isa x2 singleton int
"
"12            >>isa x2 singleton int
"
"13_____________[+[Begin 
of x2 X106^4 int
"
"13             >>of x2 X106^4 int
"
"13             >>of x2 X106^4 int
"
"13-------------]-]Success  
of x2 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"12------------]-]Success  
isa x2 singleton int
"
"11-----------]-]Success  
of (app x0 x2) singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11           >>conv singleton singleton
"
"11           >>conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"10          >>isType singleton X107^4 int
"
"11___________[+[Begin 
(pts_leq set set),
(X98^3 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
isType (propId singleton (app x0 x1) (app x0 x2)) props int
"
"9---------]-]Success  
pi x3 \
 locDecl x3 (propId singleton x1 x2) =>
  spy (isType (propId singleton (app x0 x1) (app x0 x2)) props int)
"
"9_________[+[Begin 
pts_for props props X93^2
"
"9---------]-]Success  
pts_for props props props
"
"8--------]-]Success  
isType
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app x0 x1) (app x0 x2)) props int
"
"7-------]-]Success  
pi x2 \
 locDecl x2 singleton =>
  spy
   (isType
     (forall (propId singleton x1 x2) x3 \
       propId singleton (app x0 x1) (app x0 x2)) props int)
"
"7_______[+[Begin 
pts_for set props X91^1
"
"7-------]-]Success  
pts_for set props props
"
"6------]-]Success  
isType
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app x0 x1) (app x0 x2)) props int
"
"5-----]-]Success  
pi x1 \
 locDecl x1 singleton =>
  spy
   (isType
     (forall singleton x2 \
       forall (propId singleton x1 x2) x3 \
        propId singleton (app x0 x1) (app x0 x2)) props int)
"
"5_____[+[Begin 
pts_for set props X89
"
"5-----]-]Success  
pts_for set props props
"
"4----]-]Success  
pi x0 \
 locDecl x0 (setPi singleton x1 \ singleton) =>
  isType
   (forall singleton x1 \
     forall singleton x2 \
      forall (propId singleton x1 x2) x3 \
       propId singleton (app x0 x1) (app x0 x2)) props int
"
"4____[+[Begin 
pts_leq set set
"
"4----]-]Success  
pts_leq set set
"
"4____[+[Begin 
pts_leq props set
"
"4----]-]Success  
pts_leq props set
"
"3   >>isType singleton X108 int
"
"4____[+[Begin 
pts_fun set set X84
"
"5_____[+[Begin 
pts_leq set set
"
"5-----]-]Success  
pts_leq set set
"
"5_____[+[Begin 
pts_leq set set
"
"5-----]-]Success  
pts_leq set set
"
"4----]-]Success  
pts_fun set set set
"
"3---]-]Success  
isType
 (setPi
   (colSigma (setPi singleton x0 \ singleton) x0 \
     forall singleton x1 \
      forall singleton x2 \
       forall (propId singleton x1 x2) x3 \
        propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) set int
"
"3___[+[Begin 
pi x0 \
 locDecl x0
  (setPi
    (colSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \ singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x1 \ singleton) x1 \
       forall singleton x2 \
        forall singleton x3 \
         forall (propId singleton x2 x3) x4 \
          propId singleton (app x1 x2) (app x1 x3)) x1 \
     forall
      (colSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \
      forall
       (forall singleton x3 \
         propId singleton
          (app
            (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)
          (app
            (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) X109
   int
"
"3   >>isType
 (forall
   (colSigma (setPi singleton x1 \ singleton) x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) x1 \
   forall
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) x2 \
    forall
     (forall singleton x3 \
       propId singleton
        (app
          (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
            x4) x3)
        (app
          (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
            x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) X109 int
"
"4____[+[Begin 
isType
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) X110^1 int
"
"4    >>isType
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) X110^1 int
"
"5_____[+[Begin 
isType (setPi singleton x1 \ singleton) X111^1 int
"
"5     >>isType (setPi singleton x1 \ singleton) X111^1 int
"
"5     >>isType singleton X112^1 int
"
"5     >>isType singleton X113^1 int
"
"6______[+[Begin 
pts_fun set set X111^1
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"6------]-]Success  
pts_fun set set set
"
"5-----]-]Success  
isType (setPi singleton x1 \ singleton) set int
"
"5_____[+[Begin 
pi x1 \
 locDecl x1 (setPi singleton x2 \ singleton) =>
  isType
   (forall singleton x2 \
     forall singleton x3 \
      forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) X114^1 int
"
"5     >>isType
 (forall singleton x2 \
   forall singleton x3 \
    forall (propId singleton x2 x3) x4 \
     propId singleton (app x1 x2) (app x1 x3)) X114^1 int
"
"6______[+[Begin 
isType singleton X115^2 int
"
"6      >>isType singleton X115^2 int
"
"6------]-]Success  
isType singleton set int
"
"6______[+[Begin 
pi x2 \
 locDecl x2 singleton =>
  spy
   (isType
     (forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) X116^2 int)
"
"7_______[+[Begin 
isType
 (forall singleton x3 \
   forall (propId singleton x2 x3) x4 \
    propId singleton (app x1 x2) (app x1 x3)) X116^2 int
"
"7       >>isType
 (forall singleton x3 \
   forall (propId singleton x2 x3) x4 \
    propId singleton (app x1 x2) (app x1 x3)) X116^2 int
"
"8________[+[Begin 
isType singleton X117^3 int
"
"8        >>isType singleton X117^3 int
"
"8--------]-]Success  
isType singleton set int
"
"8________[+[Begin 
pi x3 \
 locDecl x3 singleton =>
  spy
   (isType
     (forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) X118^3 int)
"
"9_________[+[Begin 
isType
 (forall (propId singleton x2 x3) x4 \
   propId singleton (app x1 x2) (app x1 x3)) X118^3 int
"
"9         >>isType
 (forall (propId singleton x2 x3) x4 \
   propId singleton (app x1 x2) (app x1 x3)) X118^3 int
"
"10__________[+[Begin 
isType (propId singleton x2 x3) X119^4 int
"
"10          >>isType (propId singleton x2 x3) X119^4 int
"
"10          >>isa x2 singleton int
"
"11___________[+[Begin 
of x2 X120^4 int
"
"11           >>of x2 X120^4 int
"
"11           >>of x2 X120^4 int
"
"11-----------]-]Success  
of x2 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11           >>conv singleton singleton
"
"11           >>conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"10          >>isa x3 singleton int
"
"11___________[+[Begin 
of x3 X121^4 int
"
"11           >>of x3 X121^4 int
"
"11           >>of x3 X121^4 int
"
"11-----------]-]Success  
of x3 singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11           >>conv singleton singleton
"
"11           >>conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"10          >>isType singleton X122^4 int
"
"11___________[+[Begin 
(pts_leq set set),
(X119^4 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
isType (propId singleton x2 x3) props int
"
"10__________[+[Begin 
pi x4 \
 locDecl x4 (propId singleton x2 x3) =>
  spy (isType (propId singleton (app x1 x2) (app x1 x3)) X123^4 int)
"
"11___________[+[Begin 
isType (propId singleton (app x1 x2) (app x1 x3)) X123^4 int
"
"11           >>isType (propId singleton (app x1 x2) (app x1 x3)) X123^4 int
"
"11           >>isa (app x1 x2) singleton int
"
"12____________[+[Begin 
of (app x1 x2) X124^5 int
"
"12            >>of (app x1 x2) X124^5 int
"
"12            >>of (app x1 x2) X124^5 int
"
"12            >>locDecl (app x1 x2) X124^5
"
"13_____________[+[Begin 
of x1 (setPi X125^5 X126^5) int
"
"13             >>of x1 (setPi X125^5 X126^5) int
"
"13             >>of x1 (setPi X125^5 X126^5) int
"
"13-------------]-]Success  
of x1 (setPi singleton x5 \ singleton) int
"
"13_____________[+[Begin 
isa x2 singleton int
"
"13             >>isa x2 singleton int
"
"14______________[+[Begin 
of x2 X127^5 int
"
"14              >>of x2 X127^5 int
"
"14              >>of x2 X127^5 int
"
"14--------------]-]Success  
of x2 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14              >>conv singleton singleton
"
"14              >>conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13-------------]-]Success  
isa x2 singleton int
"
"12------------]-]Success  
of (app x1 x2) singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12            >>conv singleton singleton
"
"12            >>conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"11           >>isa (app x1 x3) singleton int
"
"12____________[+[Begin 
of (app x1 x3) X128^5 int
"
"12            >>of (app x1 x3) X128^5 int
"
"12            >>of (app x1 x3) X128^5 int
"
"12            >>locDecl (app x1 x3) X128^5
"
"13_____________[+[Begin 
of x1 (setPi X129^5 X130^5) int
"
"13             >>of x1 (setPi X129^5 X130^5) int
"
"13             >>of x1 (setPi X129^5 X130^5) int
"
"13-------------]-]Success  
of x1 (setPi singleton x5 \ singleton) int
"
"13_____________[+[Begin 
isa x3 singleton int
"
"13             >>isa x3 singleton int
"
"14______________[+[Begin 
of x3 X131^5 int
"
"14              >>of x3 X131^5 int
"
"14              >>of x3 X131^5 int
"
"14--------------]-]Success  
of x3 singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14              >>conv singleton singleton
"
"14              >>conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13-------------]-]Success  
isa x3 singleton int
"
"12------------]-]Success  
of (app x1 x3) singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12            >>conv singleton singleton
"
"12            >>conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"11           >>isType singleton X132^5 int
"
"12____________[+[Begin 
(pts_leq set set),
(X123^4 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"11-----------]-]Success  
isType (propId singleton (app x1 x2) (app x1 x3)) props int
"
"10----------]-]Success  
pi x4 \
 locDecl x4 (propId singleton x2 x3) =>
  spy (isType (propId singleton (app x1 x2) (app x1 x3)) props int)
"
"10__________[+[Begin 
pts_for props props X118^3
"
"10----------]-]Success  
pts_for props props props
"
"9---------]-]Success  
isType
 (forall (propId singleton x2 x3) x4 \
   propId singleton (app x1 x2) (app x1 x3)) props int
"
"8--------]-]Success  
pi x3 \
 locDecl x3 singleton =>
  spy
   (isType
     (forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) props int)
"
"8________[+[Begin 
pts_for set props X116^2
"
"8--------]-]Success  
pts_for set props props
"
"7-------]-]Success  
isType
 (forall singleton x3 \
   forall (propId singleton x2 x3) x4 \
    propId singleton (app x1 x2) (app x1 x3)) props int
"
"6------]-]Success  
pi x2 \
 locDecl x2 singleton =>
  spy
   (isType
     (forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) props int)
"
"6______[+[Begin 
pts_for set props X114^1
"
"6------]-]Success  
pts_for set props props
"
"5-----]-]Success  
pi x1 \
 locDecl x1 (setPi singleton x2 \ singleton) =>
  isType
   (forall singleton x2 \
     forall singleton x3 \
      forall (propId singleton x2 x3) x4 \
       propId singleton (app x1 x2) (app x1 x3)) props int
"
"5_____[+[Begin 
pts_leq set set
"
"5-----]-]Success  
pts_leq set set
"
"5_____[+[Begin 
pts_leq props set
"
"5-----]-]Success  
pts_leq props set
"
"4----]-]Success  
isType
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) set int
"
"4____[+[Begin 
pi x1 \
 locDecl x1
  (colSigma (setPi singleton x2 \ singleton) x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \
       forall
        (forall singleton x3 \
          propId singleton
           (app
             (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)
           (app
             (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2))
     X133^1 int)
"
"5_____[+[Begin 
isType
 (forall
   (colSigma (setPi singleton x2 \ singleton) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) x2 \
   forall
    (forall singleton x3 \
      propId singleton
       (app
         (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
         x3)
       (app
         (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
         x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) X133^1 int
"
"5     >>isType
 (forall
   (colSigma (setPi singleton x2 \ singleton) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) x2 \
   forall
    (forall singleton x3 \
      propId singleton
       (app
         (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
         x3)
       (app
         (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
         x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) X133^1 int
"
"6______[+[Begin 
isType
 (colSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4)) X134^2 int
"
"6      >>isType
 (colSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4)) X134^2 int
"
"7_______[+[Begin 
isType (setPi singleton x2 \ singleton) X135^2 int
"
"7       >>isType (setPi singleton x2 \ singleton) X135^2 int
"
"7       >>isType singleton X136^2 int
"
"7       >>isType singleton X137^2 int
"
"8________[+[Begin 
pts_fun set set X135^2
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"8--------]-]Success  
pts_fun set set set
"
"7-------]-]Success  
isType (setPi singleton x2 \ singleton) set int
"
"7_______[+[Begin 
pi x2 \
 locDecl x2 (setPi singleton x3 \ singleton) =>
  isType
   (forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) X138^2 int
"
"7       >>isType
 (forall singleton x3 \
   forall singleton x4 \
    forall (propId singleton x3 x4) x5 \
     propId singleton (app x2 x3) (app x2 x4)) X138^2 int
"
"8________[+[Begin 
isType singleton X139^3 int
"
"8        >>isType singleton X139^3 int
"
"8--------]-]Success  
isType singleton set int
"
"8________[+[Begin 
pi x3 \
 locDecl x3 singleton =>
  spy
   (isType
     (forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) X140^3 int)
"
"9_________[+[Begin 
isType
 (forall singleton x4 \
   forall (propId singleton x3 x4) x5 \
    propId singleton (app x2 x3) (app x2 x4)) X140^3 int
"
"9         >>isType
 (forall singleton x4 \
   forall (propId singleton x3 x4) x5 \
    propId singleton (app x2 x3) (app x2 x4)) X140^3 int
"
"10__________[+[Begin 
isType singleton X141^4 int
"
"10          >>isType singleton X141^4 int
"
"10----------]-]Success  
isType singleton set int
"
"10__________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) X142^4 int)
"
"11___________[+[Begin 
isType
 (forall (propId singleton x3 x4) x5 \
   propId singleton (app x2 x3) (app x2 x4)) X142^4 int
"
"11           >>isType
 (forall (propId singleton x3 x4) x5 \
   propId singleton (app x2 x3) (app x2 x4)) X142^4 int
"
"12____________[+[Begin 
isType (propId singleton x3 x4) X143^5 int
"
"12            >>isType (propId singleton x3 x4) X143^5 int
"
"12            >>isa x3 singleton int
"
"13_____________[+[Begin 
of x3 X144^5 int
"
"13             >>of x3 X144^5 int
"
"13             >>of x3 X144^5 int
"
"13-------------]-]Success  
of x3 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"12            >>isa x4 singleton int
"
"13_____________[+[Begin 
of x4 X145^5 int
"
"13             >>of x4 X145^5 int
"
"13             >>of x4 X145^5 int
"
"13-------------]-]Success  
of x4 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"12            >>isType singleton X146^5 int
"
"13_____________[+[Begin 
(pts_leq set set),
(X143^5 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"12------------]-]Success  
isType (propId singleton x3 x4) props int
"
"12____________[+[Begin 
pi x5 \
 locDecl x5 (propId singleton x3 x4) =>
  spy (isType (propId singleton (app x2 x3) (app x2 x4)) X147^5 int)
"
"13_____________[+[Begin 
isType (propId singleton (app x2 x3) (app x2 x4)) X147^5 int
"
"13             >>isType (propId singleton (app x2 x3) (app x2 x4)) X147^5 int
"
"13             >>isa (app x2 x3) singleton int
"
"14______________[+[Begin 
of (app x2 x3) X148^6 int
"
"14              >>of (app x2 x3) X148^6 int
"
"14              >>of (app x2 x3) X148^6 int
"
"14              >>locDecl (app x2 x3) X148^6
"
"15_______________[+[Begin 
of x2 (setPi X149^6 X150^6) int
"
"15               >>of x2 (setPi X149^6 X150^6) int
"
"15               >>of x2 (setPi X149^6 X150^6) int
"
"15---------------]-]Success  
of x2 (setPi singleton x6 \ singleton) int
"
"15_______________[+[Begin 
isa x3 singleton int
"
"15               >>isa x3 singleton int
"
"16________________[+[Begin 
of x3 X151^6 int
"
"16                >>of x3 X151^6 int
"
"16                >>of x3 X151^6 int
"
"16----------------]-]Success  
of x3 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16                >>conv singleton singleton
"
"16                >>conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
isa x3 singleton int
"
"14--------------]-]Success  
of (app x2 x3) singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14              >>conv singleton singleton
"
"14              >>conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13             >>isa (app x2 x4) singleton int
"
"14______________[+[Begin 
of (app x2 x4) X152^6 int
"
"14              >>of (app x2 x4) X152^6 int
"
"14              >>of (app x2 x4) X152^6 int
"
"14              >>locDecl (app x2 x4) X152^6
"
"15_______________[+[Begin 
of x2 (setPi X153^6 X154^6) int
"
"15               >>of x2 (setPi X153^6 X154^6) int
"
"15               >>of x2 (setPi X153^6 X154^6) int
"
"15---------------]-]Success  
of x2 (setPi singleton x6 \ singleton) int
"
"15_______________[+[Begin 
isa x4 singleton int
"
"15               >>isa x4 singleton int
"
"16________________[+[Begin 
of x4 X155^6 int
"
"16                >>of x4 X155^6 int
"
"16                >>of x4 X155^6 int
"
"16----------------]-]Success  
of x4 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16                >>conv singleton singleton
"
"16                >>conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
isa x4 singleton int
"
"14--------------]-]Success  
of (app x2 x4) singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14              >>conv singleton singleton
"
"14              >>conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13             >>isType singleton X156^6 int
"
"14______________[+[Begin 
(pts_leq set set),
(X147^5 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"13-------------]-]Success  
isType (propId singleton (app x2 x3) (app x2 x4)) props int
"
"12------------]-]Success  
pi x5 \
 locDecl x5 (propId singleton x3 x4) =>
  spy (isType (propId singleton (app x2 x3) (app x2 x4)) props int)
"
"12____________[+[Begin 
pts_for props props X142^4
"
"12------------]-]Success  
pts_for props props props
"
"11-----------]-]Success  
isType
 (forall (propId singleton x3 x4) x5 \
   propId singleton (app x2 x3) (app x2 x4)) props int
"
"10----------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) props int)
"
"10__________[+[Begin 
pts_for set props X140^3
"
"10----------]-]Success  
pts_for set props props
"
"9---------]-]Success  
isType
 (forall singleton x4 \
   forall (propId singleton x3 x4) x5 \
    propId singleton (app x2 x3) (app x2 x4)) props int
"
"8--------]-]Success  
pi x3 \
 locDecl x3 singleton =>
  spy
   (isType
     (forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) props int)
"
"8________[+[Begin 
pts_for set props X138^2
"
"8--------]-]Success  
pts_for set props props
"
"7-------]-]Success  
pi x2 \
 locDecl x2 (setPi singleton x3 \ singleton) =>
  isType
   (forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) props int
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq props set
"
"7-------]-]Success  
pts_leq props set
"
"6------]-]Success  
isType
 (colSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4)) set int
"
"6______[+[Begin 
pi x2 \
 locDecl x2
  (colSigma (setPi singleton x3 \ singleton) x3 \
    forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) =>
  spy
   (isType
     (forall
       (forall singleton x3 \
         propId singleton
          (app
            (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)
          (app
            (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) X157^2
     int)
"
"7_______[+[Begin 
isType
 (forall
   (forall singleton x3 \
     propId singleton
      (app
        (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
        x3)
      (app
        (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
        x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) X157^2 int
"
"7       >>isType
 (forall
   (forall singleton x3 \
     propId singleton
      (app
        (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
        x3)
      (app
        (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
        x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) X157^2 int
"
"8________[+[Begin 
isType
 (forall singleton x3 \
   propId singleton
    (app
      (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)
    (app
      (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)) X158^3 int
"
"8        >>isType
 (forall singleton x3 \
   propId singleton
    (app
      (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)
    (app
      (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)) X158^3 int
"
"9_________[+[Begin 
isType singleton X159^3 int
"
"9         >>isType singleton X159^3 int
"
"9---------]-]Success  
isType singleton set int
"
"9_________[+[Begin 
pi x3 \
 locDecl x3 singleton =>
  spy
   (isType
     (propId singleton
       (app
         (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
         x3)
       (app
         (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
         x3)) X160^3 int)
"
"10__________[+[Begin 
isType
 (propId singleton
   (app (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)
   (app (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)) X160^3 int
"
"10          >>isType
 (propId singleton
   (app (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)
   (app (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)) X160^3 int
"
"10          >>isa
 (app (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) singleton int
"
"11___________[+[Begin 
of
 (app (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) X161^4 int
"
"11           >>of
 (app (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) X161^4 int
"
"11           >>of
 (app (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) X161^4 int
"
"11           >>locDecl
 (app (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) X161^4
"
"12____________[+[Begin 
of (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
 (setPi X162^4 X163^4) int
"
"12            >>of (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
 (setPi X162^4 X163^4) int
"
"12            >>of (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
 (setPi X162^4 X163^4) int
"
"12            >>locDecl (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
 (setPi X162^4 X163^4)
"
"13_____________[+[Begin 
of x1 (colSigma X164^4 X165^4) int
"
"13             >>of x1 (colSigma X164^4 X165^4) int
"
"13             >>of x1 (colSigma X164^4 X165^4) int
"
"13-------------]-]Success  
of x1
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"13_____________[+[Begin 
pi x4 \
 locDecl x4
  (colSigma (setPi singleton x5 \ singleton) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  isType (setPi singleton x5 \ singleton) _ int
"
"13             >>isType (setPi singleton x5 \ singleton) X166^5 int
"
"13             >>isType singleton X167^5 int
"
"13             >>isType singleton X168^5 int
"
"14______________[+[Begin 
pts_fun set set X169^5
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"14--------------]-]Success  
pts_fun set set set
"
"13-------------]-]Success  
pi x4 \
 locDecl x4
  (colSigma (setPi singleton x5 \ singleton) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  isType (setPi singleton x5 \ singleton) _ int
"
"13_____________[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ singleton) =>
   locDecl x5
    (forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \
        propId singleton (app x4 x6) (app x4 x7)) =>
    isa x4 (setPi singleton x6 \ singleton) int
"
"13             >>isa x4 (setPi singleton x6 \ singleton) int
"
"14______________[+[Begin 
of x4 X170^6 int
"
"14              >>of x4 X170^6 int
"
"14              >>of x4 X170^6 int
"
"14--------------]-]Success  
of x4 (setPi singleton x6 \ singleton) int
"
"14______________[+[Begin 
conv (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
"
"14              >>conv (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
"
"14              >>conv (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
"
"14--------------]-]Success  
conv (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
"
"13-------------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ singleton) =>
   locDecl x5
    (forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \
        propId singleton (app x4 x6) (app x4 x7)) =>
    isa x4 (setPi singleton x6 \ singleton) int
"
"12------------]-]Success  
of (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
 (setPi singleton x4 \ singleton) int
"
"12____________[+[Begin 
isa x3 singleton int
"
"12            >>isa x3 singleton int
"
"13_____________[+[Begin 
of x3 X171^4 int
"
"13             >>of x3 X171^4 int
"
"13             >>of x3 X171^4 int
"
"13-------------]-]Success  
of x3 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"12------------]-]Success  
isa x3 singleton int
"
"11-----------]-]Success  
of
 (app (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11           >>conv singleton singleton
"
"11           >>conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"10          >>isa
 (app (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) singleton int
"
"11___________[+[Begin 
of
 (app (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) X172^4 int
"
"11           >>of
 (app (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) X172^4 int
"
"11           >>of
 (app (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) X172^4 int
"
"11           >>locDecl
 (app (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) X172^4
"
"12____________[+[Begin 
of (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
 (setPi X173^4 X174^4) int
"
"12            >>of (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
 (setPi X173^4 X174^4) int
"
"12            >>of (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
 (setPi X173^4 X174^4) int
"
"12            >>locDecl (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
 (setPi X173^4 X174^4)
"
"13_____________[+[Begin 
of x2 (colSigma X175^4 X176^4) int
"
"13             >>of x2 (colSigma X175^4 X176^4) int
"
"13             >>of x2 (colSigma X175^4 X176^4) int
"
"13-------------]-]Success  
of x2
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"13_____________[+[Begin 
pi x4 \
 locDecl x4
  (colSigma (setPi singleton x5 \ singleton) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  isType (setPi singleton x5 \ singleton) _ int
"
"13             >>isType (setPi singleton x5 \ singleton) X177^5 int
"
"13             >>isType singleton X178^5 int
"
"13             >>isType singleton X179^5 int
"
"14______________[+[Begin 
pts_fun set set X180^5
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"15_______________[+[Begin 
pts_leq set set
"
"15---------------]-]Success  
pts_leq set set
"
"14--------------]-]Success  
pts_fun set set set
"
"13-------------]-]Success  
pi x4 \
 locDecl x4
  (colSigma (setPi singleton x5 \ singleton) x5 \
    forall singleton x6 \
     forall singleton x7 \
      forall (propId singleton x6 x7) x8 \
       propId singleton (app x5 x6) (app x5 x7)) =>
  isType (setPi singleton x5 \ singleton) _ int
"
"13_____________[+[Begin 
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ singleton) =>
   locDecl x5
    (forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \
        propId singleton (app x4 x6) (app x4 x7)) =>
    isa x4 (setPi singleton x6 \ singleton) int
"
"13             >>isa x4 (setPi singleton x6 \ singleton) int
"
"14______________[+[Begin 
of x4 X181^6 int
"
"14              >>of x4 X181^6 int
"
"14              >>of x4 X181^6 int
"
"14--------------]-]Success  
of x4 (setPi singleton x6 \ singleton) int
"
"14______________[+[Begin 
conv (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
"
"14              >>conv (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
"
"14              >>conv (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
"
"14--------------]-]Success  
conv (setPi singleton x6 \ singleton) (setPi singleton x6 \ singleton)
"
"13-------------]-]Success  
pi x4 \
 pi x5 \
  locDecl x4 (setPi singleton x6 \ singleton) =>
   locDecl x5
    (forall singleton x6 \
      forall singleton x7 \
       forall (propId singleton x6 x7) x8 \
        propId singleton (app x4 x6) (app x4 x7)) =>
    isa x4 (setPi singleton x6 \ singleton) int
"
"12------------]-]Success  
of (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
 (setPi singleton x4 \ singleton) int
"
"12____________[+[Begin 
isa x3 singleton int
"
"12            >>isa x3 singleton int
"
"13_____________[+[Begin 
of x3 X182^4 int
"
"13             >>of x3 X182^4 int
"
"13             >>of x3 X182^4 int
"
"13-------------]-]Success  
of x3 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"12------------]-]Success  
isa x3 singleton int
"
"11-----------]-]Success  
of
 (app (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
   x3) singleton int
"
"11___________[+[Begin 
conv singleton singleton
"
"11           >>conv singleton singleton
"
"11           >>conv singleton singleton
"
"11-----------]-]Success  
conv singleton singleton
"
"10          >>isType singleton X183^4 int
"
"11___________[+[Begin 
(pts_leq set set),
(X160^3 = props)
"
"11-----------]-]Success  
(pts_leq set set),
(props = props)
"
"10----------]-]Success  
isType
 (propId singleton
   (app (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)
   (app (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
     x3)) props int
"
"9---------]-]Success  
pi x3 \
 locDecl x3 singleton =>
  spy
   (isType
     (propId singleton
       (app
         (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
         x3)
       (app
         (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
         x3)) props int)
"
"9_________[+[Begin 
pts_for set props X158^3
"
"9---------]-]Success  
pts_for set props props
"
"8--------]-]Success  
isType
 (forall singleton x3 \
   propId singleton
    (app
      (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)
    (app
      (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
      x3)) props int
"
"8________[+[Begin 
pi x3 \
 locDecl x3
  (forall singleton x4 \
    propId singleton
     (app
       (elim_colSigma x1 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
       x4)
     (app
       (elim_colSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
       x4)) =>
  spy (isType (propId singleton (app x0 x1) (app x0 x2)) X184^3 int)
"
"9_________[+[Begin 
isType (propId singleton (app x0 x1) (app x0 x2)) X184^3 int
"
"9         >>isType (propId singleton (app x0 x1) (app x0 x2)) X184^3 int
"
"9         >>isa (app x0 x1) singleton int
"
"10__________[+[Begin 
of (app x0 x1) X185^4 int
"
"10          >>of (app x0 x1) X185^4 int
"
"10          >>of (app x0 x1) X185^4 int
"
"10          >>locDecl (app x0 x1) X185^4
"
"11___________[+[Begin 
of x0 (setPi X186^4 X187^4) int
"
"11           >>of x0 (setPi X186^4 X187^4) int
"
"11           >>of x0 (setPi X186^4 X187^4) int
"
"11-----------]-]Success  
of x0
 (setPi
   (colSigma (setPi singleton x4 \ singleton) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) int
"
"11___________[+[Begin 
isa x1
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"11           >>isa x1
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"12____________[+[Begin 
of x1 X188^4 int
"
"12            >>of x1 X188^4 int
"
"12            >>of x1 X188^4 int
"
"12------------]-]Success  
of x1
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"12____________[+[Begin 
conv
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"12            >>conv
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"12            >>conv
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"12------------]-]Success  
conv
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"11-----------]-]Success  
isa x1
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"10----------]-]Success  
of (app x0 x1) singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10          >>conv singleton singleton
"
"10          >>conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"9         >>isa (app x0 x2) singleton int
"
"10__________[+[Begin 
of (app x0 x2) X189^4 int
"
"10          >>of (app x0 x2) X189^4 int
"
"10          >>of (app x0 x2) X189^4 int
"
"10          >>locDecl (app x0 x2) X189^4
"
"11___________[+[Begin 
of x0 (setPi X190^4 X191^4) int
"
"11           >>of x0 (setPi X190^4 X191^4) int
"
"11           >>of x0 (setPi X190^4 X191^4) int
"
"11-----------]-]Success  
of x0
 (setPi
   (colSigma (setPi singleton x4 \ singleton) x4 \
     forall singleton x5 \
      forall singleton x6 \
       forall (propId singleton x5 x6) x7 \
        propId singleton (app x4 x5) (app x4 x6)) x4 \ singleton) int
"
"11___________[+[Begin 
isa x2
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"11           >>isa x2
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"12____________[+[Begin 
of x2 X192^4 int
"
"12            >>of x2 X192^4 int
"
"12            >>of x2 X192^4 int
"
"12------------]-]Success  
of x2
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"12____________[+[Begin 
conv
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"12            >>conv
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"12            >>conv
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"12------------]-]Success  
conv
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6))
"
"11-----------]-]Success  
isa x2
 (colSigma (setPi singleton x4 \ singleton) x4 \
   forall singleton x5 \
    forall singleton x6 \
     forall (propId singleton x5 x6) x7 \
      propId singleton (app x4 x5) (app x4 x6)) int
"
"10----------]-]Success  
of (app x0 x2) singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10          >>conv singleton singleton
"
"10          >>conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"9         >>isType singleton X193^4 int
"
"10__________[+[Begin 
(pts_leq set set),
(X184^3 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"9---------]-]Success  
isType (propId singleton (app x0 x1) (app x0 x2)) props int
"
"8--------]-]Success  
pi x3 \
 locDecl x3
  (forall singleton x4 \
    propId singleton
     (app
       (elim_colSigma x1 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
       x4)
     (app
       (elim_colSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \ x5)
       x4)) =>
  spy (isType (propId singleton (app x0 x1) (app x0 x2)) props int)
"
"8________[+[Begin 
pts_for props props X157^2
"
"8--------]-]Success  
pts_for props props props
"
"7-------]-]Success  
isType
 (forall
   (forall singleton x3 \
     propId singleton
      (app
        (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
        x3)
      (app
        (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
        x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) props int
"
"6------]-]Success  
pi x2 \
 locDecl x2
  (colSigma (setPi singleton x3 \ singleton) x3 \
    forall singleton x4 \
     forall singleton x5 \
      forall (propId singleton x4 x5) x6 \
       propId singleton (app x3 x4) (app x3 x5)) =>
  spy
   (isType
     (forall
       (forall singleton x3 \
         propId singleton
          (app
            (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)
          (app
            (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) props
     int)
"
"6______[+[Begin 
pts_for set props X133^1
"
"6------]-]Success  
pts_for set props props
"
"5-----]-]Success  
isType
 (forall
   (colSigma (setPi singleton x2 \ singleton) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) x2 \
   forall
    (forall singleton x3 \
      propId singleton
       (app
         (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
         x3)
       (app
         (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \ x4)
         x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) props int
"
"4----]-]Success  
pi x1 \
 locDecl x1
  (colSigma (setPi singleton x2 \ singleton) x2 \
    forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) =>
  spy
   (isType
     (forall
       (colSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \
       forall
        (forall singleton x3 \
          propId singleton
           (app
             (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)
           (app
             (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2))
     props int)
"
"4____[+[Begin 
pts_for set props X109
"
"4----]-]Success  
pts_for set props props
"
"3---]-]Success  
pi x0 \
 locDecl x0
  (setPi
    (colSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \ singleton) =>
  isType
   (forall
     (colSigma (setPi singleton x1 \ singleton) x1 \
       forall singleton x2 \
        forall singleton x3 \
         forall (propId singleton x2 x3) x4 \
          propId singleton (app x1 x2) (app x1 x3)) x1 \
     forall
      (colSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \
      forall
       (forall singleton x3 \
         propId singleton
          (app
            (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)
          (app
            (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
              x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) props
   int
"
"3___[+[Begin 
pts_leq set set
"
"3---]-]Success  
pts_leq set set
"
"3___[+[Begin 
pts_leq props set
"
"3---]-]Success  
pts_leq props set
"
"2--]-]Success  
isType
 (colSigma
   (setPi
     (colSigma (setPi singleton x0 \ singleton) x0 \
       forall singleton x1 \
        forall singleton x2 \
         forall (propId singleton x1 x2) x3 \
          propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) x0 \
   forall
    (colSigma (setPi singleton x1 \ singleton) x1 \
      forall singleton x2 \
       forall singleton x3 \
        forall (propId singleton x2 x3) x4 \
         propId singleton (app x1 x2) (app x1 x3)) x1 \
    forall
     (colSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (forall singleton x3 \
        propId singleton
         (app
           (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)
         (app
           (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \ x5 \
             x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2)) set int
"
"2__[+[Begin 
pi x0 \
 locDecl x0
  (colSigma
    (setPi
      (colSigma (setPi singleton x1 \ singleton) x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3)) x1 \ singleton) x1 \
    forall
     (colSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (colSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (forall singleton x4 \
         propId singleton
          (app
            (elim_colSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
              x5) x4)
          (app
            (elim_colSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
              x5) x4)) x4 \ propId singleton (app x1 x2) (app x1 x3)) =>
  spy
   (isType
     (propId singleton
       (app
         (elim_colSigma x0 (x1 \
           setPi
            (colSigma (setPi singleton x2 \ singleton) x2 \
              forall singleton x3 \
               forall singleton x4 \
                forall (propId singleton x3 x4) x5 \
                 propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton)
           x1 \ x2 \ x1)
         (pair (setPi singleton x1 \ singleton) (x1 \
           forall singleton x2 \
            forall singleton x3 \
             forall (propId singleton x2 x3) x4 \
              propId singleton (app x1 x2) (app x1 x3))
           (lambda singleton x1 \ x1)
           (forall_lam singleton x1 \
             forall_lam singleton x2 \
              forall_lam (propId singleton x1 x2) x3 \ x3))) star) X194 int)
"
"3___[+[Begin 
isType
 (propId singleton
   (app
     (elim_colSigma x0 (x1 \
       setPi
        (colSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
       x2 \ x1)
     (pair (setPi singleton x1 \ singleton) (x1 \
       forall singleton x2 \
        forall singleton x3 \
         forall (propId singleton x2 x3) x4 \
          propId singleton (app x1 x2) (app x1 x3))
       (lambda singleton x1 \ x1)
       (forall_lam singleton x1 \
         forall_lam singleton x2 \
          forall_lam (propId singleton x1 x2) x3 \ x3))) star) X194 int
"
"3   >>isType
 (propId singleton
   (app
     (elim_colSigma x0 (x1 \
       setPi
        (colSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
       x2 \ x1)
     (pair (setPi singleton x1 \ singleton) (x1 \
       forall singleton x2 \
        forall singleton x3 \
         forall (propId singleton x2 x3) x4 \
          propId singleton (app x1 x2) (app x1 x3))
       (lambda singleton x1 \ x1)
       (forall_lam singleton x1 \
         forall_lam singleton x2 \
          forall_lam (propId singleton x1 x2) x3 \ x3))) star) X194 int
"
"3   >>isa
 (app
   (elim_colSigma x0 (x1 \
     setPi
      (colSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
     x2 \ x1)
   (pair (setPi singleton x1 \ singleton) (x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
     (forall_lam singleton x1 \
       forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)))
 singleton int
"
"4____[+[Begin 
of
 (app
   (elim_colSigma x0 (x1 \
     setPi
      (colSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
     x2 \ x1)
   (pair (setPi singleton x1 \ singleton) (x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
     (forall_lam singleton x1 \
       forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)))
 X195^1 int
"
"4    >>of
 (app
   (elim_colSigma x0 (x1 \
     setPi
      (colSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
     x2 \ x1)
   (pair (setPi singleton x1 \ singleton) (x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
     (forall_lam singleton x1 \
       forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)))
 X195^1 int
"
"4    >>of
 (app
   (elim_colSigma x0 (x1 \
     setPi
      (colSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
     x2 \ x1)
   (pair (setPi singleton x1 \ singleton) (x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
     (forall_lam singleton x1 \
       forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)))
 X195^1 int
"
"4    >>locDecl
 (app
   (elim_colSigma x0 (x1 \
     setPi
      (colSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
     x2 \ x1)
   (pair (setPi singleton x1 \ singleton) (x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
     (forall_lam singleton x1 \
       forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)))
 X195^1
"
"5_____[+[Begin 
of
 (elim_colSigma x0 (x1 \
   setPi
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \ x2 \
   x1) (setPi X196^1 X197^1) int
"
"5     >>of
 (elim_colSigma x0 (x1 \
   setPi
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \ x2 \
   x1) (setPi X196^1 X197^1) int
"
"5     >>of
 (elim_colSigma x0 (x1 \
   setPi
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \ x2 \
   x1) (setPi X196^1 X197^1) int
"
"5     >>locDecl
 (elim_colSigma x0 (x1 \
   setPi
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \ x2 \
   x1) (setPi X196^1 X197^1)
"
"6______[+[Begin 
of x0 (colSigma X198^1 X199^1) int
"
"6      >>of x0 (colSigma X198^1 X199^1) int
"
"6      >>of x0 (colSigma X198^1 X199^1) int
"
"6------]-]Success  
of x0
 (colSigma
   (setPi
     (colSigma (setPi singleton x1 \ singleton) x1 \
       forall singleton x2 \
        forall singleton x3 \
         forall (propId singleton x2 x3) x4 \
          propId singleton (app x1 x2) (app x1 x3)) x1 \ singleton) x1 \
   forall
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) x2 \
    forall
     (colSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \
     forall
      (forall singleton x4 \
        propId singleton
         (app
           (elim_colSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)
         (app
           (elim_colSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
             x5) x4)) x4 \ propId singleton (app x1 x2) (app x1 x3)) int
"
"6______[+[Begin 
pi x1 \
 locDecl x1
  (colSigma
    (setPi
      (colSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
    forall
     (colSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \
     forall
      (colSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (forall singleton x5 \
         propId singleton
          (app
            (elim_colSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
              x6) x5)
          (app
            (elim_colSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
              x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) =>
  isType
   (setPi
     (colSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) _ int
"
"6      >>isType
 (setPi
   (colSigma (setPi singleton x2 \ singleton) x2 \
     forall singleton x3 \
      forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) X200^2 int
"
"6      >>isType
 (colSigma (setPi singleton x2 \ singleton) x2 \
   forall singleton x3 \
    forall singleton x4 \
     forall (propId singleton x3 x4) x5 \
      propId singleton (app x2 x3) (app x2 x4)) X201^2 int
"
"7_______[+[Begin 
isType (setPi singleton x2 \ singleton) X202^2 int
"
"7       >>isType (setPi singleton x2 \ singleton) X202^2 int
"
"7       >>isType singleton X203^2 int
"
"7       >>isType singleton X204^2 int
"
"8________[+[Begin 
pts_fun set set X202^2
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"9_________[+[Begin 
pts_leq set set
"
"9---------]-]Success  
pts_leq set set
"
"8--------]-]Success  
pts_fun set set set
"
"7-------]-]Success  
isType (setPi singleton x2 \ singleton) set int
"
"7_______[+[Begin 
pi x2 \
 locDecl x2 (setPi singleton x3 \ singleton) =>
  isType
   (forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) X205^2 int
"
"7       >>isType
 (forall singleton x3 \
   forall singleton x4 \
    forall (propId singleton x3 x4) x5 \
     propId singleton (app x2 x3) (app x2 x4)) X205^2 int
"
"8________[+[Begin 
isType singleton X206^3 int
"
"8        >>isType singleton X206^3 int
"
"8--------]-]Success  
isType singleton set int
"
"8________[+[Begin 
pi x3 \
 locDecl x3 singleton =>
  spy
   (isType
     (forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) X207^3 int)
"
"9_________[+[Begin 
isType
 (forall singleton x4 \
   forall (propId singleton x3 x4) x5 \
    propId singleton (app x2 x3) (app x2 x4)) X207^3 int
"
"9         >>isType
 (forall singleton x4 \
   forall (propId singleton x3 x4) x5 \
    propId singleton (app x2 x3) (app x2 x4)) X207^3 int
"
"10__________[+[Begin 
isType singleton X208^4 int
"
"10          >>isType singleton X208^4 int
"
"10----------]-]Success  
isType singleton set int
"
"10__________[+[Begin 
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) X209^4 int)
"
"11___________[+[Begin 
isType
 (forall (propId singleton x3 x4) x5 \
   propId singleton (app x2 x3) (app x2 x4)) X209^4 int
"
"11           >>isType
 (forall (propId singleton x3 x4) x5 \
   propId singleton (app x2 x3) (app x2 x4)) X209^4 int
"
"12____________[+[Begin 
isType (propId singleton x3 x4) X210^5 int
"
"12            >>isType (propId singleton x3 x4) X210^5 int
"
"12            >>isa x3 singleton int
"
"13_____________[+[Begin 
of x3 X211^5 int
"
"13             >>of x3 X211^5 int
"
"13             >>of x3 X211^5 int
"
"13-------------]-]Success  
of x3 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"12            >>isa x4 singleton int
"
"13_____________[+[Begin 
of x4 X212^5 int
"
"13             >>of x4 X212^5 int
"
"13             >>of x4 X212^5 int
"
"13-------------]-]Success  
of x4 singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"12            >>isType singleton X213^5 int
"
"13_____________[+[Begin 
(pts_leq set set),
(X210^5 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"12------------]-]Success  
isType (propId singleton x3 x4) props int
"
"12____________[+[Begin 
pi x5 \
 locDecl x5 (propId singleton x3 x4) =>
  spy (isType (propId singleton (app x2 x3) (app x2 x4)) X214^5 int)
"
"13_____________[+[Begin 
isType (propId singleton (app x2 x3) (app x2 x4)) X214^5 int
"
"13             >>isType (propId singleton (app x2 x3) (app x2 x4)) X214^5 int
"
"13             >>isa (app x2 x3) singleton int
"
"14______________[+[Begin 
of (app x2 x3) X215^6 int
"
"14              >>of (app x2 x3) X215^6 int
"
"14              >>of (app x2 x3) X215^6 int
"
"14              >>locDecl (app x2 x3) X215^6
"
"15_______________[+[Begin 
of x2 (setPi X216^6 X217^6) int
"
"15               >>of x2 (setPi X216^6 X217^6) int
"
"15               >>of x2 (setPi X216^6 X217^6) int
"
"15---------------]-]Success  
of x2 (setPi singleton x6 \ singleton) int
"
"15_______________[+[Begin 
isa x3 singleton int
"
"15               >>isa x3 singleton int
"
"16________________[+[Begin 
of x3 X218^6 int
"
"16                >>of x3 X218^6 int
"
"16                >>of x3 X218^6 int
"
"16----------------]-]Success  
of x3 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16                >>conv singleton singleton
"
"16                >>conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
isa x3 singleton int
"
"14--------------]-]Success  
of (app x2 x3) singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14              >>conv singleton singleton
"
"14              >>conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13             >>isa (app x2 x4) singleton int
"
"14______________[+[Begin 
of (app x2 x4) X219^6 int
"
"14              >>of (app x2 x4) X219^6 int
"
"14              >>of (app x2 x4) X219^6 int
"
"14              >>locDecl (app x2 x4) X219^6
"
"15_______________[+[Begin 
of x2 (setPi X220^6 X221^6) int
"
"15               >>of x2 (setPi X220^6 X221^6) int
"
"15               >>of x2 (setPi X220^6 X221^6) int
"
"15---------------]-]Success  
of x2 (setPi singleton x6 \ singleton) int
"
"15_______________[+[Begin 
isa x4 singleton int
"
"15               >>isa x4 singleton int
"
"16________________[+[Begin 
of x4 X222^6 int
"
"16                >>of x4 X222^6 int
"
"16                >>of x4 X222^6 int
"
"16----------------]-]Success  
of x4 singleton int
"
"16________________[+[Begin 
conv singleton singleton
"
"16                >>conv singleton singleton
"
"16                >>conv singleton singleton
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
isa x4 singleton int
"
"14--------------]-]Success  
of (app x2 x4) singleton int
"
"14______________[+[Begin 
conv singleton singleton
"
"14              >>conv singleton singleton
"
"14              >>conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13             >>isType singleton X223^6 int
"
"14______________[+[Begin 
(pts_leq set set),
(X214^5 = props)
"
"14--------------]-]Success  
(pts_leq set set),
(props = props)
"
"13-------------]-]Success  
isType (propId singleton (app x2 x3) (app x2 x4)) props int
"
"12------------]-]Success  
pi x5 \
 locDecl x5 (propId singleton x3 x4) =>
  spy (isType (propId singleton (app x2 x3) (app x2 x4)) props int)
"
"12____________[+[Begin 
pts_for props props X209^4
"
"12------------]-]Success  
pts_for props props props
"
"11-----------]-]Success  
isType
 (forall (propId singleton x3 x4) x5 \
   propId singleton (app x2 x3) (app x2 x4)) props int
"
"10----------]-]Success  
pi x4 \
 locDecl x4 singleton =>
  spy
   (isType
     (forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) props int)
"
"10__________[+[Begin 
pts_for set props X207^3
"
"10----------]-]Success  
pts_for set props props
"
"9---------]-]Success  
isType
 (forall singleton x4 \
   forall (propId singleton x3 x4) x5 \
    propId singleton (app x2 x3) (app x2 x4)) props int
"
"8--------]-]Success  
pi x3 \
 locDecl x3 singleton =>
  spy
   (isType
     (forall singleton x4 \
       forall (propId singleton x3 x4) x5 \
        propId singleton (app x2 x3) (app x2 x4)) props int)
"
"8________[+[Begin 
pts_for set props X205^2
"
"8--------]-]Success  
pts_for set props props
"
"7-------]-]Success  
pi x2 \
 locDecl x2 (setPi singleton x3 \ singleton) =>
  isType
   (forall singleton x3 \
     forall singleton x4 \
      forall (propId singleton x3 x4) x5 \
       propId singleton (app x2 x3) (app x2 x4)) props int
"
"7_______[+[Begin 
pts_leq set set
"
"7-------]-]Success  
pts_leq set set
"
"7_______[+[Begin 
pts_leq props set
"
"7-------]-]Success  
pts_leq props set
"
"6      >>isType singleton X224^2 int
"
"7_______[+[Begin 
pts_fun set set X225^2
"
"8________[+[Begin 
pts_leq set set
"
"8--------]-]Success  
pts_leq set set
"
"8________[+[Begin 
pts_leq set set
"
"8--------]-]Success  
pts_leq set set
"
"7-------]-]Success  
pts_fun set set set
"
"6------]-]Success  
pi x1 \
 locDecl x1
  (colSigma
    (setPi
      (colSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x2 \
    forall
     (colSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \
     forall
      (colSigma (setPi singleton x4 \ singleton) x4 \
        forall singleton x5 \
         forall singleton x6 \
          forall (propId singleton x5 x6) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x4 \
      forall
       (forall singleton x5 \
         propId singleton
          (app
            (elim_colSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
              x6) x5)
          (app
            (elim_colSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \ x7 \
              x6) x5)) x5 \ propId singleton (app x2 x3) (app x2 x4)) =>
  isType
   (setPi
     (colSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) _ int
"
"6______[+[Begin 
pi x1 \
 pi x2 \
  locDecl x1
   (setPi
     (colSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) =>
   locDecl x2
    (forall
      (colSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (colSigma (setPi singleton x4 \ singleton) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall
        (forall singleton x5 \
          propId singleton
           (app
             (elim_colSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
               x7 \ x6) x5)
           (app
             (elim_colSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
               x7 \ x6) x5)) x5 \ propId singleton (app x1 x3) (app x1 x4))
    =>
    isa x1
     (setPi
       (colSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) int
"
"6      >>isa x1
 (setPi
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) int
"
"7_______[+[Begin 
of x1 X226^3 int
"
"7       >>of x1 X226^3 int
"
"7       >>of x1 X226^3 int
"
"7-------]-]Success  
of x1
 (setPi
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) int
"
"7_______[+[Begin 
conv
 (setPi
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
 (setPi
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
"
"7       >>conv
 (setPi
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
 (setPi
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
"
"7       >>conv
 (setPi
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
 (setPi
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
"
"7-------]-]Success  
conv
 (setPi
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
 (setPi
   (colSigma (setPi singleton x3 \ singleton) x3 \
     forall singleton x4 \
      forall singleton x5 \
       forall (propId singleton x4 x5) x6 \
        propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton)
"
"6------]-]Success  
pi x1 \
 pi x2 \
  locDecl x1
   (setPi
     (colSigma (setPi singleton x3 \ singleton) x3 \
       forall singleton x4 \
        forall singleton x5 \
         forall (propId singleton x4 x5) x6 \
          propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) =>
   locDecl x2
    (forall
      (colSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (colSigma (setPi singleton x4 \ singleton) x4 \
         forall singleton x5 \
          forall singleton x6 \
           forall (propId singleton x5 x6) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x4 \
       forall
        (forall singleton x5 \
          propId singleton
           (app
             (elim_colSigma x3 (x6 \ setPi singleton x7 \ singleton) x6 \
               x7 \ x6) x5)
           (app
             (elim_colSigma x4 (x6 \ setPi singleton x7 \ singleton) x6 \
               x7 \ x6) x5)) x5 \ propId singleton (app x1 x3) (app x1 x4))
    =>
    isa x1
     (setPi
       (colSigma (setPi singleton x3 \ singleton) x3 \
         forall singleton x4 \
          forall singleton x5 \
           forall (propId singleton x4 x5) x6 \
            propId singleton (app x3 x4) (app x3 x5)) x3 \ singleton) int
"
"5-----]-]Success  
of
 (elim_colSigma x0 (x1 \
   setPi
    (colSigma (setPi singleton x2 \ singleton) x2 \
      forall singleton x3 \
       forall singleton x4 \
        forall (propId singleton x3 x4) x5 \
         propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \ x2 \
   x1)
 (setPi
   (colSigma (setPi singleton x1 \ singleton) x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) x1 \ singleton) int
"
"5_____[+[Begin 
isa
 (pair (setPi singleton x1 \ singleton) (x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
   (forall_lam singleton x1 \
     forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3))
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) int
"
"5     >>isa
 (pair (setPi singleton x1 \ singleton) (x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
   (forall_lam singleton x1 \
     forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3))
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) int
"
"6______[+[Begin 
of
 (pair (setPi singleton x1 \ singleton) (x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
   (forall_lam singleton x1 \
     forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3))
 X227^1 int
"
"6      >>of
 (pair (setPi singleton x1 \ singleton) (x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
   (forall_lam singleton x1 \
     forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3))
 X227^1 int
"
"6      >>of
 (pair (setPi singleton x1 \ singleton) (x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
   (forall_lam singleton x1 \
     forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3))
 X227^1 int
"
"6      >>locDecl
 (pair (setPi singleton x1 \ singleton) (x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
   (forall_lam singleton x1 \
     forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3))
 X227^1
"
"6      >>isType (setPi singleton x1 \ singleton) X228^1 int
"
"6      >>isType singleton X229^1 int
"
"6      >>isType singleton X230^1 int
"
"7_______[+[Begin 
pts_fun set set X231^1
"
"8________[+[Begin 
pts_leq set set
"
"8--------]-]Success  
pts_leq set set
"
"8________[+[Begin 
pts_leq set set
"
"8--------]-]Success  
pts_leq set set
"
"7-------]-]Success  
pts_fun set set set
"
"6      >>isType
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2)) X232^1 int
"
"7_______[+[Begin 
isType singleton X233^1 int
"
"7       >>isType singleton X233^1 int
"
"7-------]-]Success  
isType singleton set int
"
"7_______[+[Begin 
pi x1 \
 locDecl x1 singleton =>
  spy
   (isType
     (forall singleton x2 \
       forall (propId singleton x1 x2) x3 \
        propId singleton (app (lambda singleton x4 \ x4) x1)
         (app (lambda singleton x4 \ x4) x2)) X234^1 int)
"
"8________[+[Begin 
isType
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2)) X234^1 int
"
"8        >>isType
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2)) X234^1 int
"
"9_________[+[Begin 
isType singleton X235^2 int
"
"9         >>isType singleton X235^2 int
"
"9---------]-]Success  
isType singleton set int
"
"9_________[+[Begin 
pi x2 \
 locDecl x2 singleton =>
  spy
   (isType
     (forall (propId singleton x1 x2) x3 \
       propId singleton (app (lambda singleton x4 \ x4) x1)
        (app (lambda singleton x4 \ x4) x2)) X236^2 int)
"
"10__________[+[Begin 
isType
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2)) X236^2 int
"
"10          >>isType
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2)) X236^2 int
"
"11___________[+[Begin 
isType (propId singleton x1 x2) X237^3 int
"
"11           >>isType (propId singleton x1 x2) X237^3 int
"
"11           >>isa x1 singleton int
"
"12____________[+[Begin 
of x1 X238^3 int
"
"12            >>of x1 X238^3 int
"
"12            >>of x1 X238^3 int
"
"12------------]-]Success  
of x1 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12            >>conv singleton singleton
"
"12            >>conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"11           >>isa x2 singleton int
"
"12____________[+[Begin 
of x2 X239^3 int
"
"12            >>of x2 X239^3 int
"
"12            >>of x2 X239^3 int
"
"12------------]-]Success  
of x2 singleton int
"
"12____________[+[Begin 
conv singleton singleton
"
"12            >>conv singleton singleton
"
"12            >>conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"11           >>isType singleton X240^3 int
"
"12____________[+[Begin 
(pts_leq set set),
(X237^3 = props)
"
"12------------]-]Success  
(pts_leq set set),
(props = props)
"
"11-----------]-]Success  
isType (propId singleton x1 x2) props int
"
"11___________[+[Begin 
pi x3 \
 locDecl x3 (propId singleton x1 x2) =>
  spy
   (isType
     (propId singleton (app (lambda singleton x4 \ x4) x1)
       (app (lambda singleton x4 \ x4) x2)) X241^3 int)
"
"12____________[+[Begin 
isType
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2)) X241^3 int
"
"12            >>isType
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2)) X241^3 int
"
"12            >>isa (app (lambda singleton x4 \ x4) x1) singleton int
"
"13_____________[+[Begin 
of (app (lambda singleton x4 \ x4) x1) X242^4 int
"
"13             >>of (app (lambda singleton x4 \ x4) x1) X242^4 int
"
"13             >>of (app (lambda singleton x4 \ x4) x1) X242^4 int
"
"13             >>locDecl (app (lambda singleton x4 \ x4) x1) X242^4
"
"14______________[+[Begin 
of (lambda singleton x4 \ x4) (setPi X243^4 X244^4) int
"
"14              >>of (lambda singleton x4 \ x4) (setPi X243^4 X244^4) int
"
"14              >>of (lambda singleton x4 \ x4) (setPi X243^4 X244^4) int
"
"14              >>locDecl (lambda singleton x4 \ x4) (setPi X243^4 X244^4)
"
"15_______________[+[Begin 
isType singleton _ int
"
"15               >>isType singleton X245^4 int
"
"15---------------]-]Success  
isType singleton _ int
"
"15_______________[+[Begin 
pi x4 \ locDecl x4 singleton => isa x4 (X244^4 x4) int
"
"15               >>isa x4 (X244^4 x4) int
"
"16________________[+[Begin 
of x4 X246^5 int
"
"16                >>of x4 X246^5 int
"
"16                >>of x4 X246^5 int
"
"16----------------]-]Success  
of x4 singleton int
"
"16________________[+[Begin 
conv singleton (X244^4 x4)
"
"16                >>conv singleton (X244^4 x4)
"
"16                >>conv singleton (X244^4 x4)
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
pi x4 \ locDecl x4 singleton => isa x4 singleton int
"
"14--------------]-]Success  
of (lambda singleton x4 \ x4) (setPi singleton x4 \ singleton) int
"
"14______________[+[Begin 
isa x1 singleton int
"
"14              >>isa x1 singleton int
"
"15_______________[+[Begin 
of x1 X247^4 int
"
"15               >>of x1 X247^4 int
"
"15               >>of x1 X247^4 int
"
"15---------------]-]Success  
of x1 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15               >>conv singleton singleton
"
"15               >>conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
isa x1 singleton int
"
"13-------------]-]Success  
of (app (lambda singleton x4 \ x4) x1) singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"12            >>isa (app (lambda singleton x4 \ x4) x2) singleton int
"
"13_____________[+[Begin 
of (app (lambda singleton x4 \ x4) x2) X248^4 int
"
"13             >>of (app (lambda singleton x4 \ x4) x2) X248^4 int
"
"13             >>of (app (lambda singleton x4 \ x4) x2) X248^4 int
"
"13             >>locDecl (app (lambda singleton x4 \ x4) x2) X248^4
"
"14______________[+[Begin 
of (lambda singleton x4 \ x4) (setPi X249^4 X250^4) int
"
"14              >>of (lambda singleton x4 \ x4) (setPi X249^4 X250^4) int
"
"14              >>of (lambda singleton x4 \ x4) (setPi X249^4 X250^4) int
"
"14              >>locDecl (lambda singleton x4 \ x4) (setPi X249^4 X250^4)
"
"15_______________[+[Begin 
isType singleton _ int
"
"15               >>isType singleton X251^4 int
"
"15---------------]-]Success  
isType singleton _ int
"
"15_______________[+[Begin 
pi x4 \ locDecl x4 singleton => isa x4 (X250^4 x4) int
"
"15               >>isa x4 (X250^4 x4) int
"
"16________________[+[Begin 
of x4 X252^5 int
"
"16                >>of x4 X252^5 int
"
"16                >>of x4 X252^5 int
"
"16----------------]-]Success  
of x4 singleton int
"
"16________________[+[Begin 
conv singleton (X250^4 x4)
"
"16                >>conv singleton (X250^4 x4)
"
"16                >>conv singleton (X250^4 x4)
"
"16----------------]-]Success  
conv singleton singleton
"
"15---------------]-]Success  
pi x4 \ locDecl x4 singleton => isa x4 singleton int
"
"14--------------]-]Success  
of (lambda singleton x4 \ x4) (setPi singleton x4 \ singleton) int
"
"14______________[+[Begin 
isa x2 singleton int
"
"14              >>isa x2 singleton int
"
"15_______________[+[Begin 
of x2 X253^4 int
"
"15               >>of x2 X253^4 int
"
"15               >>of x2 X253^4 int
"
"15---------------]-]Success  
of x2 singleton int
"
"15_______________[+[Begin 
conv singleton singleton
"
"15               >>conv singleton singleton
"
"15               >>conv singleton singleton
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
isa x2 singleton int
"
"13-------------]-]Success  
of (app (lambda singleton x4 \ x4) x2) singleton int
"
"13_____________[+[Begin 
conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13-------------]-]Success  
conv singleton singleton
"
"12            >>isType singleton X254^4 int
"
"13_____________[+[Begin 
(pts_leq set set),
(X241^3 = props)
"
"13-------------]-]Success  
(pts_leq set set),
(props = props)
"
"12------------]-]Success  
isType
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2)) props int
"
"11-----------]-]Success  
pi x3 \
 locDecl x3 (propId singleton x1 x2) =>
  spy
   (isType
     (propId singleton (app (lambda singleton x4 \ x4) x1)
       (app (lambda singleton x4 \ x4) x2)) props int)
"
"11___________[+[Begin 
pts_for props props X236^2
"
"11-----------]-]Success  
pts_for props props props
"
"10----------]-]Success  
isType
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2)) props int
"
"9---------]-]Success  
pi x2 \
 locDecl x2 singleton =>
  spy
   (isType
     (forall (propId singleton x1 x2) x3 \
       propId singleton (app (lambda singleton x4 \ x4) x1)
        (app (lambda singleton x4 \ x4) x2)) props int)
"
"9_________[+[Begin 
pts_for set props X234^1
"
"9---------]-]Success  
pts_for set props props
"
"8--------]-]Success  
isType
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2)) props int
"
"7-------]-]Success  
pi x1 \
 locDecl x1 singleton =>
  spy
   (isType
     (forall singleton x2 \
       forall (propId singleton x1 x2) x3 \
        propId singleton (app (lambda singleton x4 \ x4) x1)
         (app (lambda singleton x4 \ x4) x2)) props int)
"
"7_______[+[Begin 
pts_for set props X255^1
"
"7-------]-]Success  
pts_for set props props
"
"6      >>isa (lambda singleton x1 \ x1) (setPi singleton x1 \ singleton) int
"
"7_______[+[Begin 
of (lambda singleton x1 \ x1) X256^1 int
"
"7       >>of (lambda singleton x1 \ x1) X256^1 int
"
"7       >>of (lambda singleton x1 \ x1) X256^1 int
"
"7       >>locDecl (lambda singleton x1 \ x1) X256^1
"
"8________[+[Begin 
isType singleton _ int
"
"8        >>isType singleton X257^1 int
"
"8--------]-]Success  
isType singleton _ int
"
"8________[+[Begin 
pi x1 \ locDecl x1 singleton => isa x1 (X258^1 x1) int
"
"8        >>isa x1 (X258^1 x1) int
"
"9_________[+[Begin 
of x1 X259^2 int
"
"9         >>of x1 X259^2 int
"
"9         >>of x1 X259^2 int
"
"9---------]-]Success  
of x1 singleton int
"
"9_________[+[Begin 
conv singleton (X258^1 x1)
"
"9         >>conv singleton (X258^1 x1)
"
"9         >>conv singleton (X258^1 x1)
"
"9---------]-]Success  
conv singleton singleton
"
"8--------]-]Success  
pi x1 \ locDecl x1 singleton => isa x1 singleton int
"
"7-------]-]Success  
of (lambda singleton x1 \ x1) (setPi singleton x1 \ singleton) int
"
"7_______[+[Begin 
conv (setPi singleton x1 \ singleton) (setPi singleton x1 \ singleton)
"
"7       >>conv (setPi singleton x1 \ singleton) (setPi singleton x1 \ singleton)
"
"7       >>conv (setPi singleton x1 \ singleton) (setPi singleton x1 \ singleton)
"
"7-------]-]Success  
conv (setPi singleton x1 \ singleton) (setPi singleton x1 \ singleton)
"
"6      >>isa
 (forall_lam singleton x1 \
   forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2)) int
"
"7_______[+[Begin 
of
 (forall_lam singleton x1 \
   forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 X260^1 int
"
"7       >>of
 (forall_lam singleton x1 \
   forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 X260^1 int
"
"7       >>of
 (forall_lam singleton x1 \
   forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 X260^1 int
"
"7       >>locDecl
 (forall_lam singleton x1 \
   forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 X260^1
"
"7       >>isType singleton X261^1 int
"
"7       >>isa (forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 (X262^1 x1) int
"
"8________[+[Begin 
of (forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 X263^2 int
"
"8        >>of (forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 X263^2 int
"
"8        >>of (forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 X263^2 int
"
"8        >>locDecl
 (forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 X263^2
"
"8        >>isType singleton X264^2 int
"
"8        >>isa (forall_lam (propId singleton x1 x2) x3 \ x3) (X265^2 x2) int
"
"9_________[+[Begin 
of (forall_lam (propId singleton x1 x2) x3 \ x3) X266^3 int
"
"9         >>of (forall_lam (propId singleton x1 x2) x3 \ x3) X266^3 int
"
"9         >>of (forall_lam (propId singleton x1 x2) x3 \ x3) X266^3 int
"
"9         >>locDecl (forall_lam (propId singleton x1 x2) x3 \ x3) X266^3
"
"9         >>isType (propId singleton x1 x2) X267^3 int
"
"9         >>isa x1 singleton int
"
"10__________[+[Begin 
of x1 X268^3 int
"
"10          >>of x1 X268^3 int
"
"10          >>of x1 X268^3 int
"
"10----------]-]Success  
of x1 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10          >>conv singleton singleton
"
"10          >>conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"9         >>isa x2 singleton int
"
"10__________[+[Begin 
of x2 X269^3 int
"
"10          >>of x2 X269^3 int
"
"10          >>of x2 X269^3 int
"
"10----------]-]Success  
of x2 singleton int
"
"10__________[+[Begin 
conv singleton singleton
"
"10          >>conv singleton singleton
"
"10          >>conv singleton singleton
"
"10----------]-]Success  
conv singleton singleton
"
"9         >>isType singleton X270^3 int
"
"10__________[+[Begin 
(pts_leq set set),
(X271^3 = props)
"
"10----------]-]Success  
(pts_leq set set),
(props = props)
"
"9         >>isa x3 (X272^3 x3) int
"
"10__________[+[Begin 
of x3 X273^4 int
"
"10          >>of x3 X273^4 int
"
"10          >>of x3 X273^4 int
"
"10----------]-]Success  
of x3 (propId singleton x1 x2) int
"
"10__________[+[Begin 
conv (propId singleton x1 x2) (X272^3 x3)
"
"10          >>conv (propId singleton x1 x2) (X272^3 x3)
"
"10          >>conv (propId singleton x1 x2) (X272^3 x3)
"
"10----------]-]Success  
conv (propId singleton x1 x2) (propId singleton x1 x2)
"
"9---------]-]Success  
of (forall_lam (propId singleton x1 x2) x3 \ x3)
 (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) int
"
"9_________[+[Begin 
conv (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (X265^2 x2)
"
"9         >>conv (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (X265^2 x2)
"
"9         >>conv (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (X265^2 x2)
"
"9---------]-]Success  
conv (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
"
"8--------]-]Success  
of (forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) int
"
"8________[+[Begin 
conv
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) (X262^1 x1)
"
"8        >>conv
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) (X262^1 x1)
"
"8        >>conv
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) (X262^1 x1)
"
"8--------]-]Success  
conv
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
"
"7-------]-]Success  
of
 (forall_lam singleton x1 \
   forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) int
"
"7_______[+[Begin 
conv
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2))
"
"7       >>conv
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2))
"
"7       >>conv
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2))
"
"7       >>locDecl X274^1
 (propEq _
   (forall singleton x1 \
     forall singleton x2 \
      forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
   (forall singleton x1 \
     forall singleton x2 \
      forall (propId singleton x1 x2) x3 \
       propId singleton (app (lambda singleton x4 \ x4) x1)
        (app (lambda singleton x4 \ x4) x2)))
"
"8________[+[Begin 
hnf
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X275^1
"
"8        >>hnf
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X275^1
"
"8        >>hstep
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X276^1
"
"8        >>hstep
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X276^1
"
"8        >>hstep
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X276^1
"
"8--------]-]Success  
hnf
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
"
"8________[+[Begin 
hnf
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2)) X277^1
"
"8        >>hnf
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2)) X277^1
"
"8        >>hstep
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2)) X278^1
"
"8        >>hstep
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2)) X278^1
"
"8        >>hstep
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2)) X278^1
"
"8--------]-]Success  
hnf
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2))
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2))
"
"8________[+[Begin 
dconv
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2))
"
"8        >>conv singleton singleton
"
"8        >>conv singleton singleton
"
"8        >>conv
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2))
"
"8        >>conv
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2))
"
"8        >>locDecl X279^2
 (propEq _
   (forall singleton x2 \
     forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
   (forall singleton x2 \
     forall (propId singleton x1 x2) x3 \
      propId singleton (app (lambda singleton x4 \ x4) x1)
       (app (lambda singleton x4 \ x4) x2)))
"
"9_________[+[Begin 
hnf
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X280^2
"
"9         >>hnf
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X280^2
"
"9         >>hstep
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X281^2
"
"9         >>hstep
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X281^2
"
"9         >>hstep
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X281^2
"
"9---------]-]Success  
hnf
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
"
"9_________[+[Begin 
hnf
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2)) X282^2
"
"9         >>hnf
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2)) X282^2
"
"9         >>hstep
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2)) X283^2
"
"9         >>hstep
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2)) X283^2
"
"9         >>hstep
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2)) X283^2
"
"9---------]-]Success  
hnf
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2))
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2))
"
"9_________[+[Begin 
dconv
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2))
"
"9         >>conv singleton singleton
"
"9         >>conv singleton singleton
"
"9         >>conv (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2))
"
"9         >>conv (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2))
"
"9         >>locDecl X284^3
 (propEq _ (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
   (forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2)))
"
"10__________[+[Begin 
hnf (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X285^3
"
"10          >>hnf (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X285^3
"
"10          >>hstep (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X286^3
"
"10          >>hstep (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X286^3
"
"10          >>hstep (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2) X286^3
"
"10----------]-]Success  
hnf (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
"
"10__________[+[Begin 
hnf
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2)) X287^3
"
"10          >>hnf
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2)) X287^3
"
"10          >>hstep
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2)) X288^3
"
"10          >>hstep
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2)) X288^3
"
"10          >>hstep
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2)) X288^3
"
"10----------]-]Success  
hnf
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2))
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2))
"
"10__________[+[Begin 
dconv (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2))
"
"10          >>conv (propId singleton x1 x2) (propId singleton x1 x2)
"
"10          >>conv (propId singleton x1 x2) (propId singleton x1 x2)
"
"10          >>conv (propId singleton x1 x2)
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2))
"
"10          >>conv (propId singleton x1 x2)
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2))
"
"10          >>locDecl X289^4
 (propEq _ (propId singleton x1 x2)
   (propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2)))
"
"11___________[+[Begin 
hnf (propId singleton x1 x2) X290^4
"
"11           >>hnf (propId singleton x1 x2) X290^4
"
"11           >>hstep (propId singleton x1 x2) X291^4
"
"11           >>hstep (propId singleton x1 x2) X291^4
"
"11           >>hstep (propId singleton x1 x2) X291^4
"
"11-----------]-]Success  
hnf (propId singleton x1 x2) (propId singleton x1 x2)
"
"11___________[+[Begin 
hnf
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2)) X292^4
"
"11           >>hnf
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2)) X292^4
"
"11           >>hstep
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2)) X293^4
"
"11           >>hstep
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2)) X293^4
"
"11           >>hstep
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2)) X293^4
"
"11-----------]-]Success  
hnf
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2))
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2))
"
"11___________[+[Begin 
dconv (propId singleton x1 x2)
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2))
"
"12____________[+[Begin 
conv singleton singleton
"
"12            >>conv singleton singleton
"
"12            >>conv singleton singleton
"
"12------------]-]Success  
conv singleton singleton
"
"12____________[+[Begin 
conv x1 (app (lambda singleton x4 \ x4) x1)
"
"12            >>conv x1 (app (lambda singleton x4 \ x4) x1)
"
"12            >>conv x1 (app (lambda singleton x4 \ x4) x1)
"
"12            >>locDecl X294^4 (propEq _ x1 (app (lambda singleton x4 \ x4) x1))
"
"13_____________[+[Begin 
hnf x1 X295^4
"
"13             >>hnf x1 X295^4
"
"13             >>hstep x1 X296^4
"
"13             >>hstep x1 X296^4
"
"13             >>hstep x1 X296^4
"
"13-------------]-]Success  
hnf x1 x1
"
"13_____________[+[Begin 
hnf (app (lambda singleton x4 \ x4) x1) X297^4
"
"13             >>hnf (app (lambda singleton x4 \ x4) x1) X297^4
"
"13             >>hstep (app (lambda singleton x4 \ x4) x1) X298^4
"
"13             >>hstep (app (lambda singleton x4 \ x4) x1) X298^4
"
"13             >>hstep (app (lambda singleton x4 \ x4) x1) X298^4
"
"13             >>of (lambda singleton x4 \ x4) (setPi X299^4 X300^4) X301^4
"
"13             >>of (lambda singleton x4 \ x4) (setPi X299^4 X300^4) X301^4
"
"13             >>locDecl (lambda singleton x4 \ x4) (setPi X299^4 X300^4)
"
"14______________[+[Begin 
isType singleton _ X301^4
"
"14              >>isType singleton X302^4 X301^4
"
"14--------------]-]Success  
isType singleton _ X301^4
"
"14______________[+[Begin 
pi x4 \ locDecl x4 singleton => isa x4 (X300^4 x4) X301^4
"
"14              >>isa x4 (X300^4 x4) X301^4
"
"15_______________[+[Begin 
of x4 X303^5 X301^4
"
"15               >>of x4 X303^5 X301^4
"
"15               >>of x4 X303^5 X301^4
"
"15---------------]-]Success  
of x4 singleton X301^4
"
"15_______________[+[Begin 
conv singleton (X300^4 x4)
"
"15               >>conv singleton (X300^4 x4)
"
"15               >>conv singleton (X300^4 x4)
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
pi x4 \ locDecl x4 singleton => isa x4 singleton X301^4
"
"13             >>isType singleton X304^4 X301^4
"
"13             >>isa x1 singleton X301^4
"
"14______________[+[Begin 
of x1 X305^4 X301^4
"
"14              >>of x1 X305^4 X301^4
"
"14              >>of x1 X305^4 X301^4
"
"14--------------]-]Success  
of x1 singleton X301^4
"
"14______________[+[Begin 
conv singleton singleton
"
"14              >>conv singleton singleton
"
"14              >>conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13             >>hnf (lambda singleton x4 \ x4) (lambda X306^4 X307^4)
"
"13             >>hstep (lambda singleton x4 \ x4) X308^4
"
"13             >>hstep (lambda singleton x4 \ x4) X308^4
"
"13             >>hstep (lambda singleton x4 \ x4) X308^4
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>isa x4 singleton X301^4
"
"14______________[+[Begin 
of x4 X309^5 X301^4
"
"14              >>of x4 X309^5 X301^4
"
"14              >>of x4 X309^5 X301^4
"
"14--------------]-]Success  
of x4 singleton X301^4
"
"14______________[+[Begin 
conv singleton singleton
"
"14              >>conv singleton singleton
"
"14              >>conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13             >>isType singleton X310^5 X301^4
"
"13             >>hnf x1 X297^4
"
"13             >>hstep x1 X311^4
"
"13             >>hstep x1 X311^4
"
"13             >>hstep x1 X311^4
"
"13-------------]-]Success  
hnf (app (lambda singleton x4 \ x4) x1) x1
"
"13_____________[+[Begin 
dconv x1 x1
"
"13-------------]-]Success  
dconv x1 x1
"
"12------------]-]Success  
conv x1 (app (lambda singleton x4 \ x4) x1)
"
"12____________[+[Begin 
conv x2 (app (lambda singleton x4 \ x4) x2)
"
"12            >>conv x2 (app (lambda singleton x4 \ x4) x2)
"
"12            >>conv x2 (app (lambda singleton x4 \ x4) x2)
"
"12            >>locDecl X312^4 (propEq _ x2 (app (lambda singleton x4 \ x4) x2))
"
"13_____________[+[Begin 
hnf x2 X313^4
"
"13             >>hnf x2 X313^4
"
"13             >>hstep x2 X314^4
"
"13             >>hstep x2 X314^4
"
"13             >>hstep x2 X314^4
"
"13-------------]-]Success  
hnf x2 x2
"
"13_____________[+[Begin 
hnf (app (lambda singleton x4 \ x4) x2) X315^4
"
"13             >>hnf (app (lambda singleton x4 \ x4) x2) X315^4
"
"13             >>hstep (app (lambda singleton x4 \ x4) x2) X316^4
"
"13             >>hstep (app (lambda singleton x4 \ x4) x2) X316^4
"
"13             >>hstep (app (lambda singleton x4 \ x4) x2) X316^4
"
"13             >>of (lambda singleton x4 \ x4) (setPi X317^4 X318^4) X319^4
"
"13             >>of (lambda singleton x4 \ x4) (setPi X317^4 X318^4) X319^4
"
"13             >>locDecl (lambda singleton x4 \ x4) (setPi X317^4 X318^4)
"
"14______________[+[Begin 
isType singleton _ X319^4
"
"14              >>isType singleton X320^4 X319^4
"
"14--------------]-]Success  
isType singleton _ X319^4
"
"14______________[+[Begin 
pi x4 \ locDecl x4 singleton => isa x4 (X318^4 x4) X319^4
"
"14              >>isa x4 (X318^4 x4) X319^4
"
"15_______________[+[Begin 
of x4 X321^5 X319^4
"
"15               >>of x4 X321^5 X319^4
"
"15               >>of x4 X321^5 X319^4
"
"15---------------]-]Success  
of x4 singleton X319^4
"
"15_______________[+[Begin 
conv singleton (X318^4 x4)
"
"15               >>conv singleton (X318^4 x4)
"
"15               >>conv singleton (X318^4 x4)
"
"15---------------]-]Success  
conv singleton singleton
"
"14--------------]-]Success  
pi x4 \ locDecl x4 singleton => isa x4 singleton X319^4
"
"13             >>isType singleton X322^4 X319^4
"
"13             >>isa x2 singleton X319^4
"
"14______________[+[Begin 
of x2 X323^4 X319^4
"
"14              >>of x2 X323^4 X319^4
"
"14              >>of x2 X323^4 X319^4
"
"14--------------]-]Success  
of x2 singleton X319^4
"
"14______________[+[Begin 
conv singleton singleton
"
"14              >>conv singleton singleton
"
"14              >>conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13             >>hnf (lambda singleton x4 \ x4) (lambda X324^4 X325^4)
"
"13             >>hstep (lambda singleton x4 \ x4) X326^4
"
"13             >>hstep (lambda singleton x4 \ x4) X326^4
"
"13             >>hstep (lambda singleton x4 \ x4) X326^4
"
"13             >>conv singleton singleton
"
"13             >>conv singleton singleton
"
"13             >>isa x4 singleton X319^4
"
"14______________[+[Begin 
of x4 X327^5 X319^4
"
"14              >>of x4 X327^5 X319^4
"
"14              >>of x4 X327^5 X319^4
"
"14--------------]-]Success  
of x4 singleton X319^4
"
"14______________[+[Begin 
conv singleton singleton
"
"14              >>conv singleton singleton
"
"14              >>conv singleton singleton
"
"14--------------]-]Success  
conv singleton singleton
"
"13             >>isType singleton X328^5 X319^4
"
"13             >>hnf x2 X315^4
"
"13             >>hstep x2 X329^4
"
"13             >>hstep x2 X329^4
"
"13             >>hstep x2 X329^4
"
"13-------------]-]Success  
hnf (app (lambda singleton x4 \ x4) x2) x2
"
"13_____________[+[Begin 
dconv x2 x2
"
"13-------------]-]Success  
dconv x2 x2
"
"12------------]-]Success  
conv x2 (app (lambda singleton x4 \ x4) x2)
"
"11-----------]-]Success  
dconv (propId singleton x1 x2)
 (propId singleton (app (lambda singleton x4 \ x4) x1)
   (app (lambda singleton x4 \ x4) x2))
"
"10----------]-]Success  
dconv (forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall (propId singleton x1 x2) x3 \
   propId singleton (app (lambda singleton x4 \ x4) x1)
    (app (lambda singleton x4 \ x4) x2))
"
"9---------]-]Success  
dconv
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x2 \
   forall (propId singleton x1 x2) x3 \
    propId singleton (app (lambda singleton x4 \ x4) x1)
     (app (lambda singleton x4 \ x4) x2))
"
"8--------]-]Success  
dconv
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2))
"
"7-------]-]Success  
conv
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \ propId singleton x1 x2)
 (forall singleton x1 \
   forall singleton x2 \
    forall (propId singleton x1 x2) x3 \
     propId singleton (app (lambda singleton x4 \ x4) x1)
      (app (lambda singleton x4 \ x4) x2))
"
"6------]-]Success  
of
 (pair (setPi singleton x1 \ singleton) (x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
   (forall_lam singleton x1 \
     forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3))
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) int
"
"6______[+[Begin 
conv
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3))
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3))
"
"6      >>conv
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3))
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3))
"
"6      >>conv
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3))
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3))
"
"6------]-]Success  
conv
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3))
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3))
"
"5-----]-]Success  
isa
 (pair (setPi singleton x1 \ singleton) (x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
   (forall_lam singleton x1 \
     forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3))
 (colSigma (setPi singleton x1 \ singleton) x1 \
   forall singleton x2 \
    forall singleton x3 \
     forall (propId singleton x2 x3) x4 \
      propId singleton (app x1 x2) (app x1 x3)) int
"
"4----]-]Success  
of
 (app
   (elim_colSigma x0 (x1 \
     setPi
      (colSigma (setPi singleton x2 \ singleton) x2 \
        forall singleton x3 \
         forall singleton x4 \
          forall (propId singleton x3 x4) x5 \
           propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
     x2 \ x1)
   (pair (setPi singleton x1 \ singleton) (x1 \
     forall singleton x2 \
      forall singleton x3 \
       forall (propId singleton x2 x3) x4 \
        propId singleton (app x1 x2) (app x1 x3)) (lambda singleton x1 \ x1)
     (forall_lam singleton x1 \
       forall_lam singleton x2 \ forall_lam (propId singleton x1 x2) x3 \ x3)))
 singleton int
"
"4____[+[Begin 
conv singleton singleton
"
"4    >>conv singleton singleton
"
"4    >>conv singleton singleton
"
"4----]-]Success  
conv singleton singleton
"
"3   >>isa star singleton int
"
"4____[+[Begin 
of star X330^1 int
"
"4    >>of star X330^1 int
"
"4    >>of star X330^1 int
"
"4    >>locDecl star X330^1
"
"4----]-]Success  
of star singleton int
"
"4____[+[Begin 
conv singleton singleton
"
"4    >>conv singleton singleton
"
"4    >>conv singleton singleton
"
"4----]-]Success  
conv singleton singleton
"
"3   >>isType singleton X331^1 int
"
"4____[+[Begin 
(pts_leq set set),
(X194 = props)
"
"4----]-]Success  
(pts_leq set set),
(props = props)
"
"3---]-]Success  
isType
 (propId singleton
   (app
     (elim_colSigma x0 (x1 \
       setPi
        (colSigma (setPi singleton x2 \ singleton) x2 \
          forall singleton x3 \
           forall singleton x4 \
            forall (propId singleton x3 x4) x5 \
             propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
       x2 \ x1)
     (pair (setPi singleton x1 \ singleton) (x1 \
       forall singleton x2 \
        forall singleton x3 \
         forall (propId singleton x2 x3) x4 \
          propId singleton (app x1 x2) (app x1 x3))
       (lambda singleton x1 \ x1)
       (forall_lam singleton x1 \
         forall_lam singleton x2 \
          forall_lam (propId singleton x1 x2) x3 \ x3))) star) props int
"
"2--]-]Success  
pi x0 \
 locDecl x0
  (colSigma
    (setPi
      (colSigma (setPi singleton x1 \ singleton) x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3)) x1 \ singleton) x1 \
    forall
     (colSigma (setPi singleton x2 \ singleton) x2 \
       forall singleton x3 \
        forall singleton x4 \
         forall (propId singleton x3 x4) x5 \
          propId singleton (app x2 x3) (app x2 x4)) x2 \
     forall
      (colSigma (setPi singleton x3 \ singleton) x3 \
        forall singleton x4 \
         forall singleton x5 \
          forall (propId singleton x4 x5) x6 \
           propId singleton (app x3 x4) (app x3 x5)) x3 \
      forall
       (forall singleton x4 \
         propId singleton
          (app
            (elim_colSigma x2 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
              x5) x4)
          (app
            (elim_colSigma x3 (x5 \ setPi singleton x6 \ singleton) x5 \ x6 \
              x5) x4)) x4 \ propId singleton (app x1 x2) (app x1 x3)) =>
  spy
   (isType
     (propId singleton
       (app
         (elim_colSigma x0 (x1 \
           setPi
            (colSigma (setPi singleton x2 \ singleton) x2 \
              forall singleton x3 \
               forall singleton x4 \
                forall (propId singleton x3 x4) x5 \
                 propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton)
           x1 \ x2 \ x1)
         (pair (setPi singleton x1 \ singleton) (x1 \
           forall singleton x2 \
            forall singleton x3 \
             forall (propId singleton x2 x3) x4 \
              propId singleton (app x1 x2) (app x1 x3))
           (lambda singleton x1 \ x1)
           (forall_lam singleton x1 \
             forall_lam singleton x2 \
              forall_lam (propId singleton x1 x2) x3 \ x3))) star) props int)
"
"2__[+[Begin 
pts_for set props X82
"
"2--]-]Success  
pts_for set props props
"
"1-]-]Success  
isType
 (forall
   (colSigma
     (setPi
       (colSigma (setPi singleton x0 \ singleton) x0 \
         forall singleton x1 \
          forall singleton x2 \
           forall (propId singleton x1 x2) x3 \
            propId singleton (app x0 x1) (app x0 x2)) x0 \ singleton) x0 \
     forall
      (colSigma (setPi singleton x1 \ singleton) x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3)) x1 \
      forall
       (colSigma (setPi singleton x2 \ singleton) x2 \
         forall singleton x3 \
          forall singleton x4 \
           forall (propId singleton x3 x4) x5 \
            propId singleton (app x2 x3) (app x2 x4)) x2 \
       forall
        (forall singleton x3 \
          propId singleton
           (app
             (elim_colSigma x1 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)
           (app
             (elim_colSigma x2 (x4 \ setPi singleton x5 \ singleton) x4 \
               x5 \ x4) x3)) x3 \ propId singleton (app x0 x1) (app x0 x2))
   x0 \
   propId singleton
    (app
      (elim_colSigma x0 (x1 \
        setPi
         (colSigma (setPi singleton x2 \ singleton) x2 \
           forall singleton x3 \
            forall singleton x4 \
             forall (propId singleton x3 x4) x5 \
              propId singleton (app x2 x3) (app x2 x4)) x2 \ singleton) x1 \
        x2 \ x1)
      (pair (setPi singleton x1 \ singleton) (x1 \
        forall singleton x2 \
         forall singleton x3 \
          forall (propId singleton x2 x3) x4 \
           propId singleton (app x1 x2) (app x1 x3))
        (lambda singleton x1 \ x1)
        (forall_lam singleton x1 \
          forall_lam singleton x2 \
           forall_lam (propId singleton x1 x2) x3 \ x3))) star) props int
"
