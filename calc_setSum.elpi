%%Disjoint Sum Type

isType set (setSum A B) :- isType set A, isType set B.

of_int (inr BB) (setSum A B) :- isType set A, isType set B, isa BB B.

of_int (inl AA) (setSum A B) :- isType set A, isType set B, isa AA A.

of_int (elim_setSum W Cl Cr) (C W) :- 
    pi z\ of_int z setSum A B => isType col (C z),
    pi x\ of_int x A => of_int (Cl x) (C x),
    pi y\ of_int y B => of_int (Cr x) (C y),
    of_int W (setSum A B).

bnf (elim_setSum W Cl Cr) (Cl Wl) :- nf W (inl Wl).
bnf (elim_setSum W Cl Cr) (Cr Wr) :- nf W (inr Wr).

bnf (inl AA) (inl AA') :- bnf AA AA'.
bnf (inr BB) (inr BB') :- bnf BB BB'.


