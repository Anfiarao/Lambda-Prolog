% SINGLETON SET

isType set singleton.

of IE star singleton.

of IE (elim_singleton T C) (M T) :- 
    of IE T singleton, 
    (pi z\ of IE z singleton => isCol (M z) ), of IE C (M star). 


hstep (elim_singleton star C) C :- 
        of IE C (M star),
        (pi z\ of IE z singleton => isType col (M z) ).

dstep (elim_singleton T C) (elim_singleton T' C) :- dstep T T'.
dstep (elim_singleton T C) (elim_singleton T C') :- dstep C C'.

sigm DIR singleton singleton.
sigm DIR W W :- of int W singleton.

equ singleton X Y (propId(singleton, star star)) .


%% SINGLETON

trad singleton singleton.

equ singleton (x \ y \ id singleton x y).

trad star star.

trad (elim_singleton T C) (elim_singleton T' C') :-
 trad T T1, tau T T1 T',
 (pi x \ 
    trad xe xi => 
    of IE xi singleton => 
    of ext xe singleton => 
    bnf xi xi => bnf xe xe =>
        trad (C x) (C1 x),tau (C x) (C1 x) (C' x)).

tau_rec singleton singleton (x \ x).

sigm X X :- of int X singleton.

prove_eq (elim_singleton T1 C1) (elim_singleton T2 C2) P :-
 pi x \ prove_eq x x => prove_eq (C1 x) (C2 x).

prove_eq star star (refl singleton star).




