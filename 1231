"debug.elpi:   6: Warning: indent is undeclared"
"debug.elpi:  21: Error: (print_indent) has type prop but is applied to C S N"
"debug.elpi:  23: Error: (print_indent) has type prop but is applied to IC I N"
"debug.elpi:  28: Warning: indent is undeclared"
"debug.elpi:  28: Warning: indent is undeclared"
"and.elpi:  14: Error: (C) has type mttType but is applied to x5"
"and.elpi:  14: Error: (locDecl x5 B) has type prop but is used with type (list prop)"
"and.elpi:  21: Warning: p1_and is undeclared"
"and.elpi:  24: Warning: p2_and is undeclared"
"and.elpi:  28: Warning: p1_and is undeclared"
"and.elpi:  30: Error: (C) has type mttType but is applied to x8"
"and.elpi:  30: Error: (locDecl x8 B) has type prop but is used with type (list prop)"
"and.elpi:  36: Warning: p1_and is undeclared"
"exist.elpi:  14: Error: C has type mttType but is used with type (mttTerm -> mttType)"
"exist.elpi:  21: Warning: elim_exist is undeclared"
"exist.elpi:  29: Warning: elim_exist is undeclared"
"exist.elpi:  37: Error: (C) has type mttType but is applied to x8"
"exist.elpi:  37: Error: (locDecl x8 B) has type prop but is used with type (list prop)"
"exist.elpi:  43: Warning: elim_exist is undeclared"
"id.elpi:  20: Warning: elim_id is undeclared"
"id.elpi:  26: Warning: elim_id is undeclared"
"letIn.elpi:  10: Error: (letIn KIND1 T S) has type mttTerm but is used with type mttType"
"or.elpi:  24: Error: (Cl) has type mttTerm but is applied to x8"
"or.elpi:  24: Error: (locDecl x8 A) has type prop but is used with type (list prop)"
"or.elpi:  24: Error: (locDecl x8 (or A B)) has type prop but is used with type (list prop)"
"or.elpi:  32: Error: (Cl) has type mttTerm but is applied to Wl"
"or.elpi:  40: Error: (Cr) has type mttTerm but is applied to Wr"
"or.elpi:  48: Error: (Cl) has type mttTerm but is applied to x11"
"or.elpi:  48: Error: (locDecl x11 (or A B)) has type prop but is used with type (list prop)"
"setPi.elpi: 120: Error: (trad x13 x15) has type prop but is applied to locDecl x14 B'"
"setPi.elpi: 120: Error: (locDecl x15 Bi) has type prop but is used with type (list prop)"
"setPi.elpi: 120: Error: (locDecl x13 B) has type prop but is used with type (list prop)"
"setSum.elpi:  25: Error: (C) has type mttType but is applied to W"
"setSum.elpi:  33: Error: (Cl) has type mttTerm but is applied to Wl"
"setSum.elpi:  40: Error: (Cr) has type mttTerm but is applied to Wr"
"setSum.elpi:  48: Error: (C) has type mttType but is applied to x11"
"setSum.elpi:  48: Error: (locDecl x11 (setSum A B)) has type prop but is used with type (list prop)"
"trad.elpi:  18: Error: (setSum A' B') has type (X0^8 -> mttType) but is used with type mttType"
"trad.elpi:  46: Error: (PIA Xi) has type mttTerm but is used with type mttType"
"trad.elpi:  98: Error: (id A Aa) has type mttTerm but is used with type (X1 -> X2)"
"trad.elpi: 109: Warning: k_propId is undeclared"
"trad.elpi: 144: Warning: fixMe is undeclared"
"trad.elpi: 150: Warning: k_propId is undeclared"
"test.elpi:  51: Warning: fun is undeclared"
"test.elpi:  51: Warning: fun is undeclared"
"test.elpi:  51: Warning: fun is undeclared"
"test.elpi:  51: Warning: fun is undeclared"
"test.elpi:  71: Warning: fun is undeclared"
"test.elpi:  71: Warning: fun is undeclared"
"test.elpi:  71: Warning: fun is undeclared"
"test.elpi:  71: Warning: fun is undeclared"
"test.elpi: 111: Warning: fun is undeclared"
"test.elpi: 111: Warning: fun is undeclared"
"test.elpi: 111: Warning: fun is undeclared"
"test.elpi: 111: Warning: fun is undeclared"
"test.elpi: 127: Warning: fun is undeclared"
"test.elpi: 127: Warning: fun is undeclared"
"test.elpi: 127: Warning: fun is undeclared"
"test.elpi: 127: Warning: fun is undeclared"
"test.elpi: 143: Warning: fun is undeclared"
"test.elpi: 143: Warning: fun is undeclared"
"test.elpi: 143: Warning: fun is undeclared"
"test.elpi: 143: Warning: fun is undeclared"
"test.elpi: 177: Warning: fun is undeclared"
"test.elpi: 177: Warning: fun is undeclared"
"test.elpi: 177: Warning: fun is undeclared"
"test.elpi: 177: Warning: fun is undeclared"
"test.elpi: 228: Warning: fun is undeclared"
"test.elpi: 228: Warning: fun is undeclared"
"test.elpi: 228: Error: (locDecl x4 (propEq singleton x2 x2)) has type prop but is used with type (list prop)"
"test.elpi: 228: Error: (locDecl x3 singleton) has type prop but is used with type (list prop)"
"test.elpi: 228: Error: (locDecl x2 singleton) has type prop but is used with type (list prop)"
"_1[+[Begin isType
 (forall singleton x0 \
   implies (propEq singleton x0 star)
    (implies (propEq singleton star x0)
      (forall
        (setPi (propEq singleton star x0) x1 \
          setPi
           (propEq (propEq singleton star star) x1 (eqId singleton star))
           x2 \ singleton) x1 \
        propEq singleton
         (app (app x1 (eqId singleton star))
           (eqId (propEq singleton star star) (eqId singleton star))) star)))
 X3 ext
"
"__2[+[Begin isType singleton X4 ext
"
"__2]-]Success  isType singleton set ext
"
"__2[+[Begin pi x0 \
 locDecl x0 singleton =>
  spy
   (isType
     (implies (propEq singleton x0 star)
       (implies (propEq singleton star x0)
         (forall
           (setPi (propEq singleton star x0) x1 \
             setPi
              (propEq (propEq singleton star star) x1 (eqId singleton star))
              x2 \ singleton) x1 \
           propEq singleton
            (app (app x1 (eqId singleton star))
              (eqId (propEq singleton star star) (eqId singleton star))) star)))
     X5 ext)
"
"___3[+[Begin isType
 (implies (propEq singleton x0 star)
   (implies (propEq singleton star x0)
     (forall
       (setPi (propEq singleton star x0) x1 \
         setPi (propEq (propEq singleton star star) x1 (eqId singleton star))
          x2 \ singleton) x1 \
       propEq singleton
        (app (app x1 (eqId singleton star))
          (eqId (propEq singleton star star) (eqId singleton star))) star)))
 X5 ext
"
"____4[+[Begin of x0 X6^1 ext
"
"____4]-]Success  of x0 singleton ext
"
"____4[+[Begin conv singleton singleton
"
"____4]-]Success  conv singleton singleton
"
"____4[+[Begin of star X7^1 ext
"
"____4]-]Success  of star singleton ext
"
"____4[+[Begin conv singleton singleton
"
"____4]-]Success  conv singleton singleton
"
"____4[+[Begin of star X8^2 ext
"
"____4]-]Success  of star singleton ext
"
"____4[+[Begin conv singleton singleton
"
"____4]-]Success  conv singleton singleton
"
"____4[+[Begin of x0 X9^2 ext
"
"____4]-]Success  of x0 singleton ext
"
"____4[+[Begin conv singleton singleton
"
"____4]-]Success  conv singleton singleton
"
"____4[+[Begin isType
 (setPi (propEq singleton star x0) x3 \
   setPi (propEq (propEq singleton star star) x3 (eqId singleton star)) x4 \
    singleton) X10^3 ext
"
"_____5[+[Begin of star X11^3 ext
"
"_____5]-]Success  of star singleton ext
"
"_____5[+[Begin conv singleton singleton
"
"_____5]-]Success  conv singleton singleton
"
"_____5[+[Begin of x0 X12^3 ext
"
"_____5]-]Success  of x0 singleton ext
"
"_____5[+[Begin conv singleton singleton
"
"_____5]-]Success  conv singleton singleton
"
"_____5[+[Begin of star X13^4 ext
"
"_____5]-]Success  of star singleton ext
"
"_____5[+[Begin conv singleton singleton
"
"_____5]-]Success  conv singleton singleton
"
"_____5[+[Begin of star X14^4 ext
"
"_____5]-]Success  of star singleton ext
"
"_____5[+[Begin conv singleton singleton
"
"_____5]-]Success  conv singleton singleton
"
"_____5[+[Begin of x3 X15^4 ext
"
"_____5]-]Success  of x3 (propEq singleton star x0) ext
"
"_____5[+[Begin conv (propEq singleton star x0) (propEq singleton star star)
"
"______6[+[Begin hnf (propEq singleton star x0) X16^4
"
"______6]-]Success  hnf (propEq singleton star x0) (propEq singleton star x0)
"
"______6[+[Begin hnf (propEq singleton star star) X17^4
"
"______6]-]Success  hnf (propEq singleton star star) (propEq singleton star star)
"
"______6[+[Begin dconv (propEq singleton star x0) (propEq singleton star star)
"
"_______7[+[Begin conv singleton singleton
"
"_______7]-]Success  conv singleton singleton
"
"_______7[+[Begin conv star star
"
"_______7]-]Success  conv star star
"
"_______7[+[Begin conv x0 star
"
"_______7]-]Success  conv x0 star
"
"______6]-]Success  dconv (propEq singleton star x0) (propEq singleton star star)
"
"_____5]-]Success  conv (propEq singleton star x0) (propEq singleton star star)
"
"_____5[+[Begin of (eqId singleton star) X18^4 ext
"
"______6[+[Begin of star singleton ext
"
"______6]-]Success  of star singleton ext
"
"_____5]-]Success  of (eqId singleton star) (propEq singleton star star) ext
"
"_____5[+[Begin conv (propEq singleton star star) (propEq singleton star star)
"
"_____5]-]Success  conv (propEq singleton star star) (propEq singleton star star)
"
"_____5[+[Begin pts_fun props set X19^3
"
"______6[+[Begin pts_leq props set
"
"______6]-]Success  pts_leq props set
"
"______6[+[Begin pts_leq set set
"
"______6]-]Success  pts_leq set set
"
"_____5]-]Success  pts_fun props set set
"
"_____5[+[Begin pts_fun props set X10^3
"
"______6[+[Begin pts_leq props set
"
"______6]-]Success  pts_leq props set
"
"______6[+[Begin pts_leq set set
"
"______6]-]Success  pts_leq set set
"
"_____5]-]Success  pts_fun props set set
"
"____4]-]Success  isType
 (setPi (propEq singleton star x0) x3 \
   setPi (propEq (propEq singleton star star) x3 (eqId singleton star)) x4 \
    singleton) set ext
"
"____4[+[Begin pi x3 \
 locDecl x3
  (setPi (propEq singleton star x0) x4 \
    setPi (propEq (propEq singleton star star) x4 (eqId singleton star)) x5 \
     singleton) =>
  spy
   (isType
     (propEq singleton
       (app (app x3 (eqId singleton star))
         (eqId (propEq singleton star star) (eqId singleton star))) star)
     X20^3 ext)
"
"_____5[+[Begin isType
 (propEq singleton
   (app (app x3 (eqId singleton star))
     (eqId (propEq singleton star star) (eqId singleton star))) star) X20^3
 ext
"
"______6[+[Begin of
 (app (app x3 (eqId singleton star))
   (eqId (propEq singleton star star) (eqId singleton star))) X21^4 ext
"
"_______7[+[Begin of (app x3 (eqId singleton star)) (setPi X22^4 X23^4) ext
"
"________8[+[Begin of x3 (setPi X24^4 X25^4) ext
"
"________8]-]Success  of x3
 (setPi (propEq singleton star x0) x4 \
   setPi (propEq (propEq singleton star star) x4 (eqId singleton star)) x5 \
    singleton) ext
"
"________8[+[Begin isa (eqId singleton star) (propEq singleton star x0) ext
"
"_________9[+[Begin of (eqId singleton star) X26^4 ext
"
"__________10[+[Begin of star singleton ext
"
"__________10]-]Success  of star singleton ext
"
"_________9]-]Success  of (eqId singleton star) (propEq singleton star star) ext
"
"_________9[+[Begin conv (propEq singleton star star) (propEq singleton star x0)
"
"__________10[+[Begin hnf (propEq singleton star star) X27^4
"
"__________10]-]Success  hnf (propEq singleton star star) (propEq singleton star star)
"
"__________10[+[Begin hnf (propEq singleton star x0) X28^4
"
"__________10]-]Success  hnf (propEq singleton star x0) (propEq singleton star x0)
"
"__________10[+[Begin dconv (propEq singleton star star) (propEq singleton star x0)
"
"___________11[+[Begin conv singleton singleton
"
"___________11]-]Success  conv singleton singleton
"
"___________11[+[Begin conv star star
"
"___________11]-]Success  conv star star
"
"___________11[+[Begin conv star x0
"
"___________11]-]Success  conv star x0
"
"__________10]-]Success  dconv (propEq singleton star star) (propEq singleton star x0)
"
"_________9]-]Success  conv (propEq singleton star star) (propEq singleton star x0)
"
"________8]-]Success  isa (eqId singleton star) (propEq singleton star x0) ext
"
"_______7]-]Success  of (app x3 (eqId singleton star))
 (setPi
   (propEq (propEq singleton star star) (eqId singleton star)
     (eqId singleton star)) x4 \ singleton) ext
"
"_______7[+[Begin isa (eqId (propEq singleton star star) (eqId singleton star))
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star)) ext
"
"________8[+[Begin of (eqId (propEq singleton star star) (eqId singleton star)) X29^4 ext
"
"_________9[+[Begin of (eqId singleton star) (propEq singleton star star) ext
"
"__________10[+[Begin of star singleton ext
"
"__________10]-]Success  of star singleton ext
"
"_________9]-]Success  of (eqId singleton star) (propEq singleton star star) ext
"
"________8]-]Success  of (eqId (propEq singleton star star) (eqId singleton star))
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star)) ext
"
"________8[+[Begin conv
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star))
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star))
"
"________8]-]Success  conv
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star))
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star))
"
"_______7]-]Success  isa (eqId (propEq singleton star star) (eqId singleton star))
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star)) ext
"
"______6]-]Success  of
 (app (app x3 (eqId singleton star))
   (eqId (propEq singleton star star) (eqId singleton star))) singleton ext
"
"______6[+[Begin conv singleton singleton
"
"______6]-]Success  conv singleton singleton
"
"______6[+[Begin of star X30^4 ext
"
"______6]-]Success  of star singleton ext
"
"______6[+[Begin conv singleton singleton
"
"______6]-]Success  conv singleton singleton
"
"_____5]-]Success  isType
 (propEq singleton
   (app (app x3 (eqId singleton star))
     (eqId (propEq singleton star star) (eqId singleton star))) star) props
 ext
"
"____4]-]Success  pi x3 \
 locDecl x3
  (setPi (propEq singleton star x0) x4 \
    setPi (propEq (propEq singleton star star) x4 (eqId singleton star)) x5 \
     singleton) =>
  spy
   (isType
     (propEq singleton
       (app (app x3 (eqId singleton star))
         (eqId (propEq singleton star star) (eqId singleton star))) star)
     props ext)
"
"____4[+[Begin pts_for set props props
"
"____4]-]Success  pts_for set props props
"
"___3]-]Success  isType
 (implies (propEq singleton x0 star)
   (implies (propEq singleton star x0)
     (forall
       (setPi (propEq singleton star x0) x1 \
         setPi (propEq (propEq singleton star star) x1 (eqId singleton star))
          x2 \ singleton) x1 \
       propEq singleton
        (app (app x1 (eqId singleton star))
          (eqId (propEq singleton star star) (eqId singleton star))) star)))
 props ext
"
"__2]-]Success  pi x0 \
 locDecl x0 singleton =>
  spy
   (isType
     (implies (propEq singleton x0 star)
       (implies (propEq singleton star x0)
         (forall
           (setPi (propEq singleton star x0) x1 \
             setPi
              (propEq (propEq singleton star star) x1 (eqId singleton star))
              x2 \ singleton) x1 \
           propEq singleton
            (app (app x1 (eqId singleton star))
              (eqId (propEq singleton star star) (eqId singleton star))) star)))
     props ext)
"
"__2[+[Begin pts_for set props X3
"
"__2]-]Success  pts_for set props props
"
"_1]-]Success  isType
 (forall singleton x0 \
   implies (propEq singleton x0 star)
    (implies (propEq singleton star x0)
      (forall
        (setPi (propEq singleton star x0) x1 \
          setPi
           (propEq (propEq singleton star star) x1 (eqId singleton star))
           x2 \ singleton) x1 \
        propEq singleton
         (app (app x1 (eqId singleton star))
           (eqId (propEq singleton star star) (eqId singleton star))) star)))
 props ext
"
"_1[+[Begin trad
 (forall singleton x0 \
   implies (propEq singleton x0 star)
    (implies (propEq singleton star x0)
      (forall
        (setPi (propEq singleton star x0) x1 \
          setPi
           (propEq (propEq singleton star star) x1 (eqId singleton star))
           x2 \ singleton) x1 \
        propEq singleton
         (app (app x1 (eqId singleton star))
           (eqId (propEq singleton star star) (eqId singleton star))) star)))
 X31
"
"__2[+[Begin trad singleton X32
"
"__2]-]Success  trad singleton singleton
"
"__2[+[Begin pi x0 \
 pi x1 \
  trad x0 x1 =>
   locDecl x0 singleton =>
    locDecl x1 singleton =>
     trad
      (implies (propEq singleton x0 star)
        (implies (propEq singleton star x0)
          (forall
            (setPi (propEq singleton star x0) x2 \
              setPi
               (propEq (propEq singleton star star) x2 (eqId singleton star))
               x3 \ singleton) x2 \
            propEq singleton
             (app (app x2 (eqId singleton star))
               (eqId (propEq singleton star star) (eqId singleton star)))
             star))) (X33 x1)
"
"___3[+[Begin equ singleton X34^2
"
"___3]-]Success  equ singleton x2 \ x3 \ propId singleton x2 x3
"
"___3[+[Begin trad x0 X35^2
"
"___3]-]Success  trad x0 x1
"
"___3[+[Begin trad star X36^2
"
"___3]-]Success  trad star star
"
"___3[+[Begin X37 x1 = propId singleton x1 star
"
"___3]-]Success  propId singleton x1 star = propId singleton x1 star
"
"___3[+[Begin pi x2 \
 pi x3 \
  ((trad x2 x3), (locDecl x2 (propEq singleton x0 star)),
   (locDecl x3 (propId singleton x1 star))) =>
   trad
    (implies (propEq singleton star x0)
      (forall
        (setPi (propEq singleton star x0) x4 \
          setPi
           (propEq (propEq singleton star star) x4 (eqId singleton star))
           x5 \ singleton) x4 \
        propEq singleton
         (app (app x4 (eqId singleton star))
           (eqId (propEq singleton star star) (eqId singleton star))) star))
    (X38 x1 x3)
"
"____4[+[Begin equ singleton X39^4
"
"____4]-]Success  equ singleton x4 \ x5 \ propId singleton x4 x5
"
"____4[+[Begin trad star X40^4
"
"____4]-]Success  trad star star
"
"____4[+[Begin trad x0 X41^4
"
"____4]-]Success  trad x0 x1
"
"____4[+[Begin X42 x1 x3 = propId singleton star x1
"
"____4]-]Success  propId singleton star x1 = propId singleton star x1
"
"____4[+[Begin pi x4 \
 pi x5 \
  ((trad x4 x5), (locDecl x4 (propEq singleton star x0)),
   (locDecl x5 (propId singleton star x1))) =>
   trad
    (forall
      (setPi (propEq singleton star x0) x6 \
        setPi (propEq (propEq singleton star star) x6 (eqId singleton star))
         x7 \ singleton) x6 \
      propEq singleton
       (app (app x6 (eqId singleton star))
         (eqId (propEq singleton star star) (eqId singleton star))) star)
    (X43 x1 x3 x5)
"
"_____5[+[Begin trad
 (setPi (propEq singleton star x0) x6 \
   setPi (propEq (propEq singleton star star) x6 (eqId singleton star)) x7 \
    singleton) (X44 x1 x3 x5)
"
"______6[+[Begin trad (propEq singleton star x0) X45^6
"
"_______7[+[Begin equ singleton X46^6
"
"_______7]-]Success  equ singleton x6 \ x7 \ propId singleton x6 x7
"
"_______7[+[Begin trad star X47^6
"
"_______7]-]Success  trad star star
"
"_______7[+[Begin trad x0 X48^6
"
"_______7]-]Success  trad x0 x1
"
"_______7[+[Begin X45^6 = propId singleton star x1
"
"_______7]-]Success  propId singleton star x1 = propId singleton star x1
"
"______6]-]Success  trad (propEq singleton star x0) (propId singleton star x1)
"
"______6[+[Begin pi x6 \
 pi x7 \
  locDecl x6 (propEq singleton star x0) =>
   locDecl x7 (propId singleton star x1) =>
    trad x6 x7 =>
     trad
      (setPi (propEq (propEq singleton star star) x6 (eqId singleton star))
        x8 \ singleton) (X49^6 x7)
"
"_______7[+[Begin trad (propEq (propEq singleton star star) x6 (eqId singleton star)) X50^8
"
"________8[+[Begin equ (propEq singleton star star) X51^8
"
"________8]-]Success  equ (propEq singleton star star) x8 \ x9 \ propId singleton star star
"
"________8[+[Begin trad x6 X52^8
"
"________8]-]Success  trad x6 x7
"
"________8[+[Begin trad (eqId singleton star) X53^8
"
"_________9[+[Begin reflu singleton X54^8
"
"_________9]-]Success  reflu singleton x8 \ id singleton x8
"
"_________9[+[Begin trad star X55^8
"
"_________9]-]Success  trad star star
"
"________8]-]Success  trad (eqId singleton star) (id singleton star)
"
"________8[+[Begin X50^8 = propId singleton star star
"
"________8]-]Success  propId singleton star star = propId singleton star star
"
"_______7]-]Success  trad (propEq (propEq singleton star star) x6 (eqId singleton star))
 (propId singleton star star)
"
"_______7[+[Begin pi x8 \
 pi x9 \
  locDecl x8 (propEq (propEq singleton star star) x6 (eqId singleton star))
   =>
   locDecl x9 (propId singleton star star) =>
    trad x8 x9 => trad singleton (X56^8 x9)
"
"_______7]-]Success  pi x8 \
 pi x9 \
  locDecl x8 (propEq (propEq singleton star star) x6 (eqId singleton star))
   =>
   locDecl x9 (propId singleton star star) =>
    trad x8 x9 => trad singleton singleton
"
"_______7[+[Begin equ (propEq (propEq singleton star star) x6 (eqId singleton star)) X57^8
"
"_______7]-]Success  equ (propEq (propEq singleton star star) x6 (eqId singleton star)) x8 \ x9 \
 propId singleton star star
"
"_______7[+[Begin pi x8 \
 pi x9 \
  locDecl x8 (propEq (propEq singleton star star) x6 (eqId singleton star))
   =>
   locDecl x9 (propId singleton star star) =>
    trad x8 x9 => equ singleton (X58^8 x9)
"
"_______7]-]Success  pi x8 \
 pi x9 \
  locDecl x8 (propEq (propEq singleton star star) x6 (eqId singleton star))
   =>
   locDecl x9 (propId singleton star star) =>
    trad x8 x9 => (equ singleton x10 \ x11 \ propId singleton x10 x11)
"
"_______7[+[Begin pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8
       (propEq (propEq singleton star star) x6 (eqId singleton star)) =>
       locDecl x9
        (propEq (propEq singleton star star) x6 (eqId singleton star)) =>
        locDecl x11 (propId singleton star star) =>
         locDecl x12 (propId singleton star star) =>
          trad x8 x11 =>
           trad x9 x12 =>
            locDecl x10
             (propEq
               (propEq (propEq singleton star star) x6 (eqId singleton star))
               x8 x9) =>
             locDecl x13 (propId singleton star star) =>
              trad x10 x13 =>
               spy (pippo singleton singleton (X59^8 x11 x12 x13))
"
"________8[+[Begin pippo singleton singleton (X59^8 x11 x12 x13)
"
"________8]-]Success  pippo singleton singleton x14 \ x14
"
"_______7]-]Success  pi x8 \
 pi x9 \
  pi x10 \
   pi x11 \
    pi x12 \
     pi x13 \
      locDecl x8
       (propEq (propEq singleton star star) x6 (eqId singleton star)) =>
       locDecl x9
        (propEq (propEq singleton star star) x6 (eqId singleton star)) =>
        locDecl x11 (propId singleton star star) =>
         locDecl x12 (propId singleton star star) =>
          trad x8 x11 =>
           trad x9 x12 =>
            locDecl x10
             (propEq
               (propEq (propEq singleton star star) x6 (eqId singleton star))
               x8 x9) =>
             locDecl x13 (propId singleton star star) =>
              trad x10 x13 => spy (pippo singleton singleton x14 \ x14)
"
"______6]-]Success  pi x6 \
 pi x7 \
  locDecl x6 (propEq singleton star x0) =>
   locDecl x7 (propId singleton star x1) =>
    trad x6 x7 =>
     trad
      (setPi (propEq (propEq singleton star star) x6 (eqId singleton star))
        x8 \ singleton)
      (colSigma (setPi (propId singleton star star) x8 \ singleton) x8 \
        forall (propId singleton star star) x9 \
         forall (propId singleton star star) x10 \
          forall (propId singleton star star) x11 \
           propId singleton (app x8 x9) (app x8 x10))
"
"______6[+[Begin equ (propEq singleton star x0) X60^6
"
"______6]-]Success  equ (propEq singleton star x0) x6 \ x7 \ propId singleton star star
"
"______6[+[Begin pi x6 \
 pi x7 \
  locDecl x6 (propEq singleton star x0) =>
   locDecl x7 (propId singleton star x1) =>
    trad x6 x7 =>
     equ
      (setPi (propEq (propEq singleton star star) x6 (eqId singleton star))
        x8 \ singleton) (X61^6 x7)
"
"_______7[+[Begin equ (propEq singleton star star) X62^8
"
"_______7]-]Success  equ (propEq singleton star star) x8 \ x9 \ propId singleton star star
"
"_______7[+[Begin trad x6 X63^8
"
"_______7]-]Success  trad x6 x7
"
"_______7[+[Begin trad (eqId singleton star) X64^8
"
"________8[+[Begin reflu singleton X65^8
"
"________8]-]Success  reflu singleton x8 \ id singleton x8
"
"________8[+[Begin trad star X66^8
"
"________8]-]Success  trad star star
"
"_______7]-]Success  trad (eqId singleton star) (id singleton star)
"
"_______7[+[Begin X67^8 = propId singleton star star
"
"_______7]-]Success  propId singleton star star = propId singleton star star
"
"______6]-]Success  pi x6 \
 pi x7 \
  locDecl x6 (propEq singleton star x0) =>
   locDecl x7 (propId singleton star x1) =>
    trad x6 x7 =>
     (equ
       (setPi (propEq (propEq singleton star star) x6 (eqId singleton star))
         x8 \ singleton) x8 \ x9 \
       forall (propId singleton star star) x10 \
        propId singleton
         (app
           (elim_colSigma x8 (x11 \ propId singleton star star) x11 \ x12 \
             x11) x10)
         (app
           (elim_colSigma x9 (x11 \ propId singleton star star) x11 \ x12 \
             x11) x10))
"
"______6[+[Begin pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (propEq singleton star x0) =>
       locDecl x7 (propEq singleton star x0) =>
        locDecl x9 (propId singleton star x1) =>
         locDecl x10 (propId singleton star x1) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq (propEq singleton star x0) x6 x7) =>
             locDecl x11 (propId singleton star star) =>
              trad x8 x11 =>
               spy
                (pippo
                  (setPi
                    (propEq (propEq singleton star star) x6
                      (eqId singleton star)) x12 \ singleton)
                  (setPi
                    (propEq (propEq singleton star star) x7
                      (eqId singleton star)) x12 \ singleton)
                  (X68^6 x9 x10 x11))
"
"_______7[+[Begin pippo
 (setPi (propEq (propEq singleton star star) x6 (eqId singleton star)) x12 \
   singleton)
 (setPi (propEq (propEq singleton star star) x7 (eqId singleton star)) x12 \
   singleton) (X68^6 x9 x10 x11)
"
"________8[+[Begin equ (propEq singleton star star) X69^12
"
"________8]-]Success  equ (propEq singleton star star) x12 \ x13 \ propId singleton star star
"
"________8[+[Begin trad x7 X70^12
"
"________8]-]Success  trad x7 x10
"
"________8[+[Begin trad (eqId singleton star) X71^12
"
"_________9[+[Begin reflu singleton X72^12
"
"_________9]-]Success  reflu singleton x12 \ id singleton x12
"
"_________9[+[Begin trad star X73^12
"
"_________9]-]Success  trad star star
"
"________8]-]Success  trad (eqId singleton star) (id singleton star)
"
"________8[+[Begin X74^12 = propId singleton star star
"
"________8]-]Success  propId singleton star star = propId singleton star star
"
"________8[+[Begin equ (propEq singleton star star) X75^12
"
"________8]-]Success  equ (propEq singleton star star) x12 \ x13 \ propId singleton star star
"
"________8[+[Begin trad x6 X76^12
"
"________8]-]Success  trad x6 x9
"
"________8[+[Begin trad (eqId singleton star) X77^12
"
"_________9[+[Begin reflu singleton X78^12
"
"_________9]-]Success  reflu singleton x12 \ id singleton x12
"
"_________9[+[Begin trad star X79^12
"
"_________9]-]Success  trad star star
"
"________8]-]Success  trad (eqId singleton star) (id singleton star)
"
"________8[+[Begin X80^12 = propId singleton star star
"
"________8]-]Success  propId singleton star star = propId singleton star star
"
"________8[+[Begin pippo (propEq (propEq singleton star star) x7 (eqId singleton star))
 (propEq (propEq singleton star star) x6 (eqId singleton star)) X81^12
"
"_________9[+[Begin pippoequ x7 x6 X82^12
"
"__________10[+[Begin symmu (propEq singleton star x0) X83^12
"
"__________10]-]Success  symmu (propEq singleton star x0) x12 \ fixMe "prova di symmetria"
"
"_________9]-]Success  pippoequ x7 x6 (fixMe "prova di symmetria")
"
"_________9[+[Begin pippoequ (eqId singleton star) (eqId singleton star) X84^12
"
"__________10[+[Begin reflu singleton X85^12
"
"__________10]-]Success  reflu singleton x12 \ id singleton x12
"
"__________10[+[Begin trad star X86^12
"
"__________10]-]Success  trad star star
"
"__________10[+[Begin of star X87^12 int
"
"__________10]-]Success  of star singleton int
"
"__________10[+[Begin conv singleton singleton
"
"__________10]-]Success  conv singleton singleton
"
"_________9]-]Success  pippoequ (eqId singleton star) (eqId singleton star)
 (id (propId singleton star star) (id singleton star))
"
"_________9[+[Begin trad x7 X88^12
"
"_________9]-]Success  trad x7 x10
"
"_________9[+[Begin trad (eqId singleton star) X89^12
"
"__________10[+[Begin reflu singleton X90^12
"
"__________10]-]Success  reflu singleton x12 \ id singleton x12
"
"__________10[+[Begin trad star X91^12
"
"__________10]-]Success  trad star star
"
"_________9]-]Success  trad (eqId singleton star) (id singleton star)
"
"_________9[+[Begin trad x6 X92^12
"
"_________9]-]Success  trad x6 x9
"
"_________9[+[Begin trad (eqId singleton star) X93^12
"
"__________10[+[Begin reflu singleton X94^12
"
"__________10]-]Success  reflu singleton x12 \ id singleton x12
"
"__________10[+[Begin trad star X95^12
"
"__________10]-]Success  trad star star
"
"_________9]-]Success  trad (eqId singleton star) (id singleton star)
"
"_________9[+[Begin trad (propEq singleton star star) X96^12
"
"__________10[+[Begin equ singleton X97^12
"
"__________10]-]Success  equ singleton x12 \ x13 \ propId singleton x12 x13
"
"__________10[+[Begin trad star X98^12
"
"__________10]-]Success  trad star star
"
"__________10[+[Begin trad star X99^12
"
"__________10]-]Success  trad star star
"
"__________10[+[Begin X96^12 = propId singleton star star
"
"__________10]-]Success  propId singleton star star = propId singleton star star
"
"_________9]-]Success  trad (propEq singleton star star) (propId singleton star star)
"
"________8]-]Success  pippo (propEq (propEq singleton star star) x7 (eqId singleton star))
 (propEq (propEq singleton star star) x6 (eqId singleton star)) x12 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app
          (forall_app
            (forall_app (k_propId (propId singleton star star)) x10) x9)
          (fixMe "prova di symmetria")) (id singleton star))
      (id singleton star))
    (id (propId singleton star star) (id singleton star))) x12
"
"________8[+[Begin pi x12 \
 pi x13 \
  pi x14 \
   pi x15 \
    locDecl x12
     (propEq (propEq singleton star star) x6 (eqId singleton star)) =>
     locDecl x14 (propId singleton star star) =>
      trad x12 x14 locDecl x13
       (propEq (propEq singleton star star) x7 (eqId singleton star)) =>
       locDecl x15 (propId singleton star star) =>
        trad x13 x15 => pippo singleton singleton (X100^12 x14 x15)
"
"________8]-]Success  pi x12 \
 pi x13 \
  pi x14 \
   pi x15 \
    locDecl x12
     (propEq (propEq singleton star star) x6 (eqId singleton star)) =>
     locDecl x14 (propId singleton star star) =>
      trad x12 x14 locDecl x13
       (propEq (propEq singleton star star) x7 (eqId singleton star)) =>
       locDecl x15 (propId singleton star star) =>
        trad x13 x15 => (pippo singleton singleton x16 \ x16)
"
"________8[+[Begin trad (propEq (propEq singleton star star) x7 (eqId singleton star)) X101^12
"
"_________9[+[Begin equ (propEq singleton star star) X102^12
"
"_________9]-]Success  equ (propEq singleton star star) x12 \ x13 \ propId singleton star star
"
"_________9[+[Begin trad x7 X103^12
"
"_________9]-]Success  trad x7 x10
"
"_________9[+[Begin trad (eqId singleton star) X104^12
"
"__________10[+[Begin reflu singleton X105^12
"
"__________10]-]Success  reflu singleton x12 \ id singleton x12
"
"__________10[+[Begin trad star X106^12
"
"__________10]-]Success  trad star star
"
"_________9]-]Success  trad (eqId singleton star) (id singleton star)
"
"_________9[+[Begin X101^12 = propId singleton star star
"
"_________9]-]Success  propId singleton star star = propId singleton star star
"
"________8]-]Success  trad (propEq (propEq singleton star star) x7 (eqId singleton star))
 (propId singleton star star)
"
"________8[+[Begin pi x12 \
 pi x13 \
  locDecl x12 (propEq (propEq singleton star star) x7 (eqId singleton star))
   =>
   locDecl x13 (propId singleton star star) =>
    trad x12 x13 => trad singleton (X107^12 x13)
"
"________8]-]Success  pi x12 \
 pi x13 \
  locDecl x12 (propEq (propEq singleton star star) x7 (eqId singleton star))
   =>
   locDecl x13 (propId singleton star star) =>
    trad x12 x13 => trad singleton singleton
"
"________8[+[Begin equ (propEq (propEq singleton star star) x7 (eqId singleton star)) X108^12
"
"________8]-]Success  equ (propEq (propEq singleton star star) x7 (eqId singleton star)) x12 \
 x13 \ propId singleton star star
"
"________8[+[Begin pi x12 \
 pi x13 \
  locDecl x12 (propEq (propEq singleton star star) x7 (eqId singleton star))
   =>
   locDecl x13 (propId singleton star star) =>
    trad x12 x13 => equ singleton (X109^12 x13)
"
"________8]-]Success  pi x12 \
 pi x13 \
  locDecl x12 (propEq (propEq singleton star star) x7 (eqId singleton star))
   =>
   locDecl x13 (propId singleton star star) =>
    trad x12 x13 => (equ singleton x14 \ x15 \ propId singleton x14 x15)
"
"________8[+[Begin pi x12 \
 pi x13 \
  pi x14 \
   pi x15 \
    pi x16 \
     pi x17 \
      locDecl x12
       (propEq (propEq singleton star star) x7 (eqId singleton star)) =>
       locDecl x13
        (propEq (propEq singleton star star) x7 (eqId singleton star)) =>
        locDecl x15 (propId singleton star star) =>
         locDecl x16 (propId singleton star star) =>
          trad x12 x15 =>
           trad x13 x16 =>
            locDecl x14
             (propEq
               (propEq (propEq singleton star star) x7 (eqId singleton star))
               x12 x13) =>
             locDecl x17 (propId singleton star star) =>
              trad x14 x17 =>
               spy (pippo singleton singleton (X110^12 x15 x16 x17))
"
"_________9[+[Begin pippo singleton singleton (X110^12 x15 x16 x17)
"
"_________9]-]Success  pippo singleton singleton x18 \ x18
"
"________8]-]Success  pi x12 \
 pi x13 \
  pi x14 \
   pi x15 \
    pi x16 \
     pi x17 \
      locDecl x12
       (propEq (propEq singleton star star) x7 (eqId singleton star)) =>
       locDecl x13
        (propEq (propEq singleton star star) x7 (eqId singleton star)) =>
        locDecl x15 (propId singleton star star) =>
         locDecl x16 (propId singleton star star) =>
          trad x12 x15 =>
           trad x13 x16 =>
            locDecl x14
             (propEq
               (propEq (propEq singleton star star) x7 (eqId singleton star))
               x12 x13) =>
             locDecl x17 (propId singleton star star) =>
              trad x14 x17 => spy (pippo singleton singleton x18 \ x18)
"
"_______7]-]Success  pippo
 (setPi (propEq (propEq singleton star star) x6 (eqId singleton star)) x12 \
   singleton)
 (setPi (propEq (propEq singleton star star) x7 (eqId singleton star)) x12 \
   singleton) x12 \
 pair (setPi (propId singleton star star) x13 \ singleton) (x13 \
  forall (propId singleton star star) x14 \
   forall (propId singleton star star) x15 \
    forall (propId singleton star star) x16 \
     propId singleton (app x13 x14) (app x13 x15))
  (lambda (propId singleton star star) x13 \
    app
     (elim_colSigma x12 (x14 \
       setPi (propId singleton star star) x15 \ singleton) x14 \ x15 \ x14)
     (impl_app
       (impl_app
         (forall_app
           (forall_app
             (impl_app
               (forall_app
                 (forall_app (k_propId (propId singleton star star)) x10) x9)
               (fixMe "prova di symmetria")) (id singleton star))
           (id singleton star))
         (id (propId singleton star star) (id singleton star))) x13))
  (fixMe "prova eta setPi preserva uguaglianza")
"
"______6]-]Success  pi x6 \
 pi x7 \
  pi x8 \
   pi x9 \
    pi x10 \
     pi x11 \
      locDecl x6 (propEq singleton star x0) =>
       locDecl x7 (propEq singleton star x0) =>
        locDecl x9 (propId singleton star x1) =>
         locDecl x10 (propId singleton star x1) =>
          trad x6 x9 =>
           trad x7 x10 =>
            locDecl x8 (propEq (propEq singleton star x0) x6 x7) =>
             locDecl x11 (propId singleton star star) =>
              trad x8 x11 =>
               spy
                (pippo
                  (setPi
                    (propEq (propEq singleton star star) x6
                      (eqId singleton star)) x12 \ singleton)
                  (setPi
                    (propEq (propEq singleton star star) x7
                      (eqId singleton star)) x12 \ singleton) x12 \
                  pair (setPi (propId singleton star star) x13 \ singleton)
                   (x13 \
                   forall (propId singleton star star) x14 \
                    forall (propId singleton star star) x15 \
                     forall (propId singleton star star) x16 \
                      propId singleton (app x13 x14) (app x13 x15))
                   (lambda (propId singleton star star) x13 \
                     app
                      (elim_colSigma x12 (x14 \
                        setPi (propId singleton star star) x15 \ singleton)
                        x14 \ x15 \ x14)
                      (impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app
                                    (k_propId (propId singleton star star))
                                    x10) x9) (fixMe "prova di symmetria"))
                              (id singleton star)) (id singleton star))
                          (id (propId singleton star star)
                            (id singleton star))) x13))
                   (fixMe "prova eta setPi preserva uguaglianza"))
"
"_____5]-]Success  trad
 (setPi (propEq singleton star x0) x6 \
   setPi (propEq (propEq singleton star star) x6 (eqId singleton star)) x7 \
    singleton)
 (colSigma
   (setPi (propId singleton star x1) x6 \
     colSigma (setPi (propId singleton star star) x7 \ singleton) x7 \
      forall (propId singleton star star) x8 \
       forall (propId singleton star star) x9 \
        forall (propId singleton star star) x10 \
         propId singleton (app x7 x8) (app x7 x9)) x6 \
   forall (propId singleton star x1) x7 \
    forall (propId singleton star x1) x8 \
     forall (propId singleton star star) x9 \
      forall (propId singleton star star) x10 \
       propId singleton
        (app
          (elim_colSigma
            (pair (setPi (propId singleton star star) x11 \ singleton) (x11 \
              forall (propId singleton star star) x12 \
               forall (propId singleton star star) x13 \
                forall (propId singleton star star) x14 \
                 propId singleton (app x11 x12) (app x11 x13))
              (lambda (propId singleton star star) x11 \
                app
                 (elim_colSigma (app x6 x7) (x12 \
                   setPi (propId singleton star star) x13 \ singleton) x12 \
                   x13 \ x12)
                 (impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (k_propId (propId singleton star star)) x8) x7)
                           (fixMe "prova di symmetria")) (id singleton star))
                       (id singleton star))
                     (id (propId singleton star star) (id singleton star)))
                   x11)) (fixMe "prova eta setPi preserva uguaglianza"))
            (x11 \ propId singleton star star) x11 \ x12 \ x11) x10)
        (app
          (elim_colSigma (app x6 x8) (x11 \ propId singleton star star) x11 \
            x12 \ x11) x10))
"
"_____5[+[Begin pi x6 \
 pi x7 \
  trad x6 x7 =>
   locDecl x6
    (setPi (propEq singleton star x0) x8 \
      setPi (propEq (propEq singleton star star) x8 (eqId singleton star))
       x9 \ singleton) =>
    locDecl x7
     (colSigma
       (setPi (propId singleton star x1) x8 \
         colSigma (setPi (propId singleton star star) x9 \ singleton) x9 \
          forall (propId singleton star star) x10 \
           forall (propId singleton star star) x11 \
            forall (propId singleton star star) x12 \
             propId singleton (app x9 x10) (app x9 x11)) x8 \
       forall (propId singleton star x1) x9 \
        forall (propId singleton star x1) x10 \
         forall (propId singleton star star) x11 \
          forall (propId singleton star star) x12 \
           propId singleton
            (app
              (elim_colSigma
                (pair (setPi (propId singleton star star) x13 \ singleton)
                  (x13 \
                  forall (propId singleton star star) x14 \
                   forall (propId singleton star star) x15 \
                    forall (propId singleton star star) x16 \
                     propId singleton (app x13 x14) (app x13 x15))
                  (lambda (propId singleton star star) x13 \
                    app
                     (elim_colSigma (app x8 x9) (x14 \
                       setPi (propId singleton star star) x15 \ singleton)
                       x14 \ x15 \ x14)
                     (impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app
                                   (k_propId (propId singleton star star))
                                   x10) x9) (fixMe "prova di symmetria"))
                             (id singleton star)) (id singleton star))
                         (id (propId singleton star star) (id singleton star)))
                       x13)) (fixMe "prova eta setPi preserva uguaglianza"))
                (x13 \ propId singleton star star) x13 \ x14 \ x13) x12)
            (app
              (elim_colSigma (app x8 x10) (x13 \ propId singleton star star)
                x13 \ x14 \ x13) x12)) =>
     trad
      (propEq singleton
        (app (app x6 (eqId singleton star))
          (eqId (propEq singleton star star) (eqId singleton star))) star)
      (X111 x1 x3 x5 x7)
"
"______6[+[Begin equ singleton X112^8
"
"______6]-]Success  equ singleton x8 \ x9 \ propId singleton x8 x9
"
"______6[+[Begin trad
 (app (app x6 (eqId singleton star))
   (eqId (propEq singleton star star) (eqId singleton star))) X113^8
"
"_______7[+[Begin of (app x6 (eqId singleton star)) (setPi X114^8 X115^8) ext
"
"________8[+[Begin of x6 (setPi X116^8 X117^8) ext
"
"________8]-]Success  of x6
 (setPi (propEq singleton star x0) x8 \
   setPi (propEq (propEq singleton star star) x8 (eqId singleton star)) x9 \
    singleton) ext
"
"________8[+[Begin isa (eqId singleton star) (propEq singleton star x0) ext
"
"_________9[+[Begin of (eqId singleton star) X118^8 ext
"
"__________10[+[Begin of star singleton ext
"
"__________10]-]Success  of star singleton ext
"
"_________9]-]Success  of (eqId singleton star) (propEq singleton star star) ext
"
"_________9[+[Begin conv (propEq singleton star star) (propEq singleton star x0)
"
"__________10[+[Begin hnf (propEq singleton star star) X119^8
"
"__________10]-]Success  hnf (propEq singleton star star) (propEq singleton star star)
"
"__________10[+[Begin hnf (propEq singleton star x0) X120^8
"
"__________10]-]Success  hnf (propEq singleton star x0) (propEq singleton star x0)
"
"__________10[+[Begin dconv (propEq singleton star star) (propEq singleton star x0)
"
"___________11[+[Begin conv singleton singleton
"
"___________11]-]Success  conv singleton singleton
"
"___________11[+[Begin conv star star
"
"___________11]-]Success  conv star star
"
"___________11[+[Begin conv star x0
"
"___________11]-]Success  conv star x0
"
"__________10]-]Success  dconv (propEq singleton star star) (propEq singleton star x0)
"
"_________9]-]Success  conv (propEq singleton star star) (propEq singleton star x0)
"
"________8]-]Success  isa (eqId singleton star) (propEq singleton star x0) ext
"
"_______7]-]Success  of (app x6 (eqId singleton star))
 (setPi
   (propEq (propEq singleton star star) (eqId singleton star)
     (eqId singleton star)) x8 \ singleton) ext
"
"_______7[+[Begin of (eqId (propEq singleton star star) (eqId singleton star)) X121^8 ext
"
"________8[+[Begin of (eqId singleton star) (propEq singleton star star) ext
"
"_________9[+[Begin of star singleton ext
"
"_________9]-]Success  of star singleton ext
"
"________8]-]Success  of (eqId singleton star) (propEq singleton star star) ext
"
"_______7]-]Success  of (eqId (propEq singleton star star) (eqId singleton star))
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star)) ext
"
"_______7[+[Begin pippo
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star))
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star)) X122^8
"
"_______7]-]Success  pippo
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star))
 (propEq (propEq singleton star star) (eqId singleton star)
   (eqId singleton star)) x8 \ x8
"
"_______7[+[Begin trad (eqId (propEq singleton star star) (eqId singleton star)) X123^8
"
"________8[+[Begin reflu (propEq singleton star star) X124^8
"
"________8]-]Success  reflu (propEq singleton star star) (id singleton star)
"
"________8[+[Begin trad (eqId singleton star) X125^8
"
"_________9[+[Begin reflu singleton X126^8
"
"_________9]-]Success  reflu singleton x8 \ id singleton x8
"
"_________9[+[Begin trad star X127^8
"
"_________9]-]Success  trad star star
"
"________8]-]Success  trad (eqId singleton star) (id singleton star)
"
"_______7]-]Success  trad (eqId (propEq singleton star star) (eqId singleton star))
 (id singleton star (id singleton star))
"
"_______7[+[Begin trad (app x6 (eqId singleton star)) X128^8
"
"________8[+[Begin of x6 (setPi X129^8 X130^8) ext
"
"________8]-]Success  of x6
 (setPi (propEq singleton star x0) x8 \
   setPi (propEq (propEq singleton star star) x8 (eqId singleton star)) x9 \
    singleton) ext
"
"________8[+[Begin of (eqId singleton star) X131^8 ext
"
"_________9[+[Begin of star singleton ext
"
"_________9]-]Success  of star singleton ext
"
"________8]-]Success  of (eqId singleton star) (propEq singleton star star) ext
"
"________8[+[Begin pippo (propEq singleton star star) (propEq singleton star x0) X132^8
"
"_________9[+[Begin pippoequ star star X133^8
"
"_________9]-]Success  pippoequ star star (id singleton star)
"
"_________9[+[Begin pippoequ star x0 X134^8
"
"_________9]-]Success  pippoequ star x0 x5
"
"_________9[+[Begin trad star X135^8
"
"_________9]-]Success  trad star star
"
"_________9[+[Begin trad star X136^8
"
"_________9]-]Success  trad star star
"
"_________9[+[Begin trad star X137^8
"
"_________9]-]Success  trad star star
"
"_________9[+[Begin trad x0 X138^8
"
"_________9]-]Success  trad x0 x1
"
"_________9[+[Begin trad singleton X139^8
"
"_________9]-]Success  trad singleton singleton
"
"________8]-]Success  pippo (propEq singleton star star) (propEq singleton star x0) x8 \
 impl_app
  (impl_app
    (forall_app
      (forall_app
        (impl_app (forall_app (forall_app (k_propId singleton) star) star)
          (id singleton star)) star) x1) x5) x8
"
"________8[+[Begin trad (eqId singleton star) X140^8
"
"_________9[+[Begin reflu singleton X141^8
"
"_________9]-]Success  reflu singleton x8 \ id singleton x8
"
"_________9[+[Begin trad star X142^8
"
"_________9]-]Success  trad star star
"
"________8]-]Success  trad (eqId singleton star) (id singleton star)
"
"________8[+[Begin trad x6 X143^8
"
"________8]-]Success  trad x6 x7
"
"________8[+[Begin of x7 X144^8 int
"
"________8]-]Success  of x7
 (colSigma
   (setPi (propId singleton star x1) x8 \
     colSigma (setPi (propId singleton star star) x9 \ singleton) x9 \
      forall (propId singleton star star) x10 \
       forall (propId singleton star star) x11 \
        forall (propId singleton star star) x12 \
         propId singleton (app x9 x10) (app x9 x11)) x8 \
   forall (propId singleton star x1) x9 \
    forall (propId singleton star x1) x10 \
     forall (propId singleton star star) x11 \
      forall (propId singleton star star) x12 \
       propId singleton
        (app
          (elim_colSigma
            (pair (setPi (propId singleton star star) x13 \ singleton) (x13 \
              forall (propId singleton star star) x14 \
               forall (propId singleton star star) x15 \
                forall (propId singleton star star) x16 \
                 propId singleton (app x13 x14) (app x13 x15))
              (lambda (propId singleton star star) x13 \
                app
                 (elim_colSigma (app x8 x9) (x14 \
                   setPi (propId singleton star star) x15 \ singleton) x14 \
                   x15 \ x14)
                 (impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (k_propId (propId singleton star star)) x10)
                             x9) (fixMe "prova di symmetria"))
                         (id singleton star)) (id singleton star))
                     (id (propId singleton star star) (id singleton star)))
                   x13)) (fixMe "prova eta setPi preserva uguaglianza"))
            (x13 \ propId singleton star star) x13 \ x14 \ x13) x12)
        (app
          (elim_colSigma (app x8 x10) (x13 \ propId singleton star star)
            x13 \ x14 \ x13) x12)) int
"
"________8[+[Begin (colSigma
  (setPi (propId singleton star x1) x8 \
    colSigma (setPi (propId singleton star star) x9 \ singleton) x9 \
     forall (propId singleton star star) x10 \
      forall (propId singleton star star) x11 \
       forall (propId singleton star star) x12 \
        propId singleton (app x9 x10) (app x9 x11)) x8 \
  forall (propId singleton star x1) x9 \
   forall (propId singleton star x1) x10 \
    forall (propId singleton star star) x11 \
     forall (propId singleton star star) x12 \
      propId singleton
       (app
         (elim_colSigma
           (pair (setPi (propId singleton star star) x13 \ singleton) (x13 \
             forall (propId singleton star star) x14 \
              forall (propId singleton star star) x15 \
               forall (propId singleton star star) x16 \
                propId singleton (app x13 x14) (app x13 x15))
             (lambda (propId singleton star star) x13 \
               app
                (elim_colSigma (app x8 x9) (x14 \
                  setPi (propId singleton star star) x15 \ singleton) x14 \
                  x15 \ x14)
                (impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (k_propId (propId singleton star star)) x10) x9)
                          (fixMe "prova di symmetria")) (id singleton star))
                      (id singleton star))
                    (id (propId singleton star star) (id singleton star)))
                  x13)) (fixMe "prova eta setPi preserva uguaglianza"))
           (x13 \ propId singleton star star) x13 \ x14 \ x13) x12)
       (app
         (elim_colSigma (app x8 x10) (x13 \ propId singleton star star) x13 \
           x14 \ x13) x12)) = colSigma X145^8 _
"
"________8]-]Success  (colSigma
  (setPi (propId singleton star x1) x8 \
    colSigma (setPi (propId singleton star star) x9 \ singleton) x9 \
     forall (propId singleton star star) x10 \
      forall (propId singleton star star) x11 \
       forall (propId singleton star star) x12 \
        propId singleton (app x9 x10) (app x9 x11)) x8 \
  forall (propId singleton star x1) x9 \
   forall (propId singleton star x1) x10 \
    forall (propId singleton star star) x11 \
     forall (propId singleton star star) x12 \
      propId singleton
       (app
         (elim_colSigma
           (pair (setPi (propId singleton star star) x13 \ singleton) (x13 \
             forall (propId singleton star star) x14 \
              forall (propId singleton star star) x15 \
               forall (propId singleton star star) x16 \
                propId singleton (app x13 x14) (app x13 x15))
             (lambda (propId singleton star star) x13 \
               app
                (elim_colSigma (app x8 x9) (x14 \
                  setPi (propId singleton star star) x15 \ singleton) x14 \
                  x15 \ x14)
                (impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (k_propId (propId singleton star star)) x10) x9)
                          (fixMe "prova di symmetria")) (id singleton star))
                      (id singleton star))
                    (id (propId singleton star star) (id singleton star)))
                  x13)) (fixMe "prova eta setPi preserva uguaglianza"))
           (x13 \ propId singleton star star) x13 \ x14 \ x13) x12)
       (app
         (elim_colSigma (app x8 x10) (x13 \ propId singleton star star) x13 \
           x14 \ x13) x12)) =
 colSigma
  (setPi (propId singleton star x1) x8 \
    colSigma (setPi (propId singleton star star) x9 \ singleton) x9 \
     forall (propId singleton star star) x10 \
      forall (propId singleton star star) x11 \
       forall (propId singleton star star) x12 \
        propId singleton (app x9 x10) (app x9 x11)) _
"
"_______7]-]Success  trad (app x6 (eqId singleton star))
 (app
   (elim_colSigma x7 (x8 \
     setPi (propId singleton star x1) x9 \
      colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
       forall (propId singleton star star) x11 \
        forall (propId singleton star star) x12 \
         forall (propId singleton star star) x13 \
          propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \ x8)
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) star) x1) x5) (id singleton star)))
"
"_______7[+[Begin of
 (app
   (elim_colSigma x7 (x8 \
     setPi (propId singleton star x1) x9 \
      colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
       forall (propId singleton star star) x11 \
        forall (propId singleton star star) x12 \
         forall (propId singleton star star) x13 \
          propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \ x8)
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) star) x1) x5) (id singleton star))) X146^8
 int
"
"________8[+[Begin of
 (elim_colSigma x7 (x8 \
   setPi (propId singleton star x1) x9 \
    colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
     forall (propId singleton star star) x11 \
      forall (propId singleton star star) x12 \
       forall (propId singleton star star) x13 \
        propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \ x8)
 (setPi X147^8 X148^8) int
"
"_________9[+[Begin of x7 (colSigma X149^8 X150^8) int
"
"_________9]-]Success  of x7
 (colSigma
   (setPi (propId singleton star x1) x8 \
     colSigma (setPi (propId singleton star star) x9 \ singleton) x9 \
      forall (propId singleton star star) x10 \
       forall (propId singleton star star) x11 \
        forall (propId singleton star star) x12 \
         propId singleton (app x9 x10) (app x9 x11)) x8 \
   forall (propId singleton star x1) x9 \
    forall (propId singleton star x1) x10 \
     forall (propId singleton star star) x11 \
      forall (propId singleton star star) x12 \
       propId singleton
        (app
          (elim_colSigma
            (pair (setPi (propId singleton star star) x13 \ singleton) (x13 \
              forall (propId singleton star star) x14 \
               forall (propId singleton star star) x15 \
                forall (propId singleton star star) x16 \
                 propId singleton (app x13 x14) (app x13 x15))
              (lambda (propId singleton star star) x13 \
                app
                 (elim_colSigma (app x8 x9) (x14 \
                   setPi (propId singleton star star) x15 \ singleton) x14 \
                   x15 \ x14)
                 (impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (k_propId (propId singleton star star)) x10)
                             x9) (fixMe "prova di symmetria"))
                         (id singleton star)) (id singleton star))
                     (id (propId singleton star star) (id singleton star)))
                   x13)) (fixMe "prova eta setPi preserva uguaglianza"))
            (x13 \ propId singleton star star) x13 \ x14 \ x13) x12)
        (app
          (elim_colSigma (app x8 x10) (x13 \ propId singleton star star)
            x13 \ x14 \ x13) x12)) int
"
"_________9[+[Begin pi x8 \
 locDecl x8
  (colSigma
    (setPi (propId singleton star x1) x9 \
      colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
       forall (propId singleton star star) x11 \
        forall (propId singleton star star) x12 \
         forall (propId singleton star star) x13 \
          propId singleton (app x10 x11) (app x10 x12)) x9 \
    forall (propId singleton star x1) x10 \
     forall (propId singleton star x1) x11 \
      forall (propId singleton star star) x12 \
       forall (propId singleton star star) x13 \
        propId singleton
         (app
           (elim_colSigma
             (pair (setPi (propId singleton star star) x14 \ singleton)
               (x14 \
               forall (propId singleton star star) x15 \
                forall (propId singleton star star) x16 \
                 forall (propId singleton star star) x17 \
                  propId singleton (app x14 x15) (app x14 x16))
               (lambda (propId singleton star star) x14 \
                 app
                  (elim_colSigma (app x9 x10) (x15 \
                    setPi (propId singleton star star) x16 \ singleton) x15 \
                    x16 \ x15)
                  (impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (k_propId (propId singleton star star)) x11)
                              x10) (fixMe "prova di symmetria"))
                          (id singleton star)) (id singleton star))
                      (id (propId singleton star star) (id singleton star)))
                    x14)) (fixMe "prova eta setPi preserva uguaglianza"))
             (x14 \ propId singleton star star) x14 \ x15 \ x14) x13)
         (app
           (elim_colSigma (app x9 x11) (x14 \ propId singleton star star)
             x14 \ x15 \ x14) x13)) =>
  isType
   (setPi (propId singleton star x1) x9 \
     colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
      forall (propId singleton star star) x11 \
       forall (propId singleton star star) x12 \
        forall (propId singleton star star) x13 \
         propId singleton (app x10 x11) (app x10 x12)) _ int
"
"__________10[+[Begin of star X151^9 int
"
"__________10]-]Success  of star singleton int
"
"__________10[+[Begin conv singleton singleton
"
"__________10]-]Success  conv singleton singleton
"
"__________10[+[Begin of x1 X152^9 int
"
"__________10]-]Success  of x1 singleton int
"
"__________10[+[Begin conv singleton singleton
"
"__________10]-]Success  conv singleton singleton
"
"__________10[+[Begin (pts_leq set set),
(X153^9 = props)
"
"__________10]-]Success  (pts_leq set set),
(props = props)
"
"__________10[+[Begin isType (setPi (propId singleton star star) x10 \ singleton) X154^10 int
"
"___________11[+[Begin of star X155^10 int
"
"___________11]-]Success  of star singleton int
"
"___________11[+[Begin conv singleton singleton
"
"___________11]-]Success  conv singleton singleton
"
"___________11[+[Begin of star X156^10 int
"
"___________11]-]Success  of star singleton int
"
"___________11[+[Begin conv singleton singleton
"
"___________11]-]Success  conv singleton singleton
"
"___________11[+[Begin (pts_leq set set),
(X157^10 = props)
"
"___________11]-]Success  (pts_leq set set),
(props = props)
"
"___________11[+[Begin pts_fun props set X154^10
"
"____________12[+[Begin pts_leq props set
"
"____________12]-]Success  pts_leq props set
"
"____________12[+[Begin pts_leq set set
"
"____________12]-]Success  pts_leq set set
"
"___________11]-]Success  pts_fun props set set
"
"__________10]-]Success  isType (setPi (propId singleton star star) x10 \ singleton) set int
"
"__________10[+[Begin pi x10 \
 locDecl x10 (setPi (propId singleton star star) x11 \ singleton) =>
  isType
   (forall (propId singleton star star) x11 \
     forall (propId singleton star star) x12 \
      forall (propId singleton star star) x13 \
       propId singleton (app x10 x11) (app x10 x12)) X158^10 int
"
"___________11[+[Begin isType (propId singleton star star) X159^11 int
"
"____________12[+[Begin of star X160^11 int
"
"____________12]-]Success  of star singleton int
"
"____________12[+[Begin conv singleton singleton
"
"____________12]-]Success  conv singleton singleton
"
"____________12[+[Begin of star X161^11 int
"
"____________12]-]Success  of star singleton int
"
"____________12[+[Begin conv singleton singleton
"
"____________12]-]Success  conv singleton singleton
"
"____________12[+[Begin (pts_leq set set),
(X159^11 = props)
"
"____________12]-]Success  (pts_leq set set),
(props = props)
"
"___________11]-]Success  isType (propId singleton star star) props int
"
"___________11[+[Begin pi x11 \
 locDecl x11 (propId singleton star star) =>
  spy
   (isType
     (forall (propId singleton star star) x12 \
       forall (propId singleton star star) x13 \
        propId singleton (app x10 x11) (app x10 x12)) X162^11 int)
"
"____________12[+[Begin isType
 (forall (propId singleton star star) x12 \
   forall (propId singleton star star) x13 \
    propId singleton (app x10 x11) (app x10 x12)) X162^11 int
"
"_____________13[+[Begin isType (propId singleton star star) X163^12 int
"
"______________14[+[Begin of star X164^12 int
"
"______________14]-]Success  of star singleton int
"
"______________14[+[Begin conv singleton singleton
"
"______________14]-]Success  conv singleton singleton
"
"______________14[+[Begin of star X165^12 int
"
"______________14]-]Success  of star singleton int
"
"______________14[+[Begin conv singleton singleton
"
"______________14]-]Success  conv singleton singleton
"
"______________14[+[Begin (pts_leq set set),
(X163^12 = props)
"
"______________14]-]Success  (pts_leq set set),
(props = props)
"
"_____________13]-]Success  isType (propId singleton star star) props int
"
"_____________13[+[Begin pi x12 \
 locDecl x12 (propId singleton star star) =>
  spy
   (isType
     (forall (propId singleton star star) x13 \
       propId singleton (app x10 x11) (app x10 x12)) X166^12 int)
"
"______________14[+[Begin isType
 (forall (propId singleton star star) x13 \
   propId singleton (app x10 x11) (app x10 x12)) X166^12 int
"
"_______________15[+[Begin isType (propId singleton star star) X167^13 int
"
"________________16[+[Begin of star X168^13 int
"
"________________16]-]Success  of star singleton int
"
"________________16[+[Begin conv singleton singleton
"
"________________16]-]Success  conv singleton singleton
"
"________________16[+[Begin of star X169^13 int
"
"________________16]-]Success  of star singleton int
"
"________________16[+[Begin conv singleton singleton
"
"________________16]-]Success  conv singleton singleton
"
"________________16[+[Begin (pts_leq set set),
(X167^13 = props)
"
"________________16]-]Success  (pts_leq set set),
(props = props)
"
"_______________15]-]Success  isType (propId singleton star star) props int
"
"_______________15[+[Begin pi x13 \
 locDecl x13 (propId singleton star star) =>
  spy (isType (propId singleton (app x10 x11) (app x10 x12)) X170^13 int)
"
"________________16[+[Begin isType (propId singleton (app x10 x11) (app x10 x12)) X170^13 int
"
"_________________17[+[Begin of (app x10 x11) X171^14 int
"
"__________________18[+[Begin of x10 (setPi X172^14 X173^14) int
"
"__________________18]-]Success  of x10 (setPi (propId singleton star star) x14 \ singleton) int
"
"__________________18[+[Begin isa x11 (propId singleton star star) int
"
"___________________19[+[Begin of x11 X174^14 int
"
"___________________19]-]Success  of x11 (propId singleton star star) int
"
"___________________19[+[Begin conv (propId singleton star star) (propId singleton star star)
"
"___________________19]-]Success  conv (propId singleton star star) (propId singleton star star)
"
"__________________18]-]Success  isa x11 (propId singleton star star) int
"
"_________________17]-]Success  of (app x10 x11) singleton int
"
"_________________17[+[Begin conv singleton singleton
"
"_________________17]-]Success  conv singleton singleton
"
"_________________17[+[Begin of (app x10 x12) X175^14 int
"
"__________________18[+[Begin of x10 (setPi X176^14 X177^14) int
"
"__________________18]-]Success  of x10 (setPi (propId singleton star star) x14 \ singleton) int
"
"__________________18[+[Begin isa x12 (propId singleton star star) int
"
"___________________19[+[Begin of x12 X178^14 int
"
"___________________19]-]Success  of x12 (propId singleton star star) int
"
"___________________19[+[Begin conv (propId singleton star star) (propId singleton star star)
"
"___________________19]-]Success  conv (propId singleton star star) (propId singleton star star)
"
"__________________18]-]Success  isa x12 (propId singleton star star) int
"
"_________________17]-]Success  of (app x10 x12) singleton int
"
"_________________17[+[Begin conv singleton singleton
"
"_________________17]-]Success  conv singleton singleton
"
"_________________17[+[Begin (pts_leq set set),
(X170^13 = props)
"
"_________________17]-]Success  (pts_leq set set),
(props = props)
"
"________________16]-]Success  isType (propId singleton (app x10 x11) (app x10 x12)) props int
"
"_______________15]-]Success  pi x13 \
 locDecl x13 (propId singleton star star) =>
  spy (isType (propId singleton (app x10 x11) (app x10 x12)) props int)
"
"_______________15[+[Begin pts_for props props X166^12
"
"_______________15]-]Success  pts_for props props props
"
"______________14]-]Success  isType
 (forall (propId singleton star star) x13 \
   propId singleton (app x10 x11) (app x10 x12)) props int
"
"_____________13]-]Success  pi x12 \
 locDecl x12 (propId singleton star star) =>
  spy
   (isType
     (forall (propId singleton star star) x13 \
       propId singleton (app x10 x11) (app x10 x12)) props int)
"
"_____________13[+[Begin pts_for props props X162^11
"
"_____________13]-]Success  pts_for props props props
"
"____________12]-]Success  isType
 (forall (propId singleton star star) x12 \
   forall (propId singleton star star) x13 \
    propId singleton (app x10 x11) (app x10 x12)) props int
"
"___________11]-]Success  pi x11 \
 locDecl x11 (propId singleton star star) =>
  spy
   (isType
     (forall (propId singleton star star) x12 \
       forall (propId singleton star star) x13 \
        propId singleton (app x10 x11) (app x10 x12)) props int)
"
"___________11[+[Begin pts_for props props X158^10
"
"___________11]-]Success  pts_for props props props
"
"__________10]-]Success  pi x10 \
 locDecl x10 (setPi (propId singleton star star) x11 \ singleton) =>
  isType
   (forall (propId singleton star star) x11 \
     forall (propId singleton star star) x12 \
      forall (propId singleton star star) x13 \
       propId singleton (app x10 x11) (app x10 x12)) props int
"
"__________10[+[Begin pts_leq set set
"
"__________10]-]Success  pts_leq set set
"
"__________10[+[Begin pts_leq props set
"
"__________10]-]Success  pts_leq props set
"
"__________10[+[Begin pts_fun props set X179^9
"
"___________11[+[Begin pts_leq props set
"
"___________11]-]Success  pts_leq props set
"
"___________11[+[Begin pts_leq set set
"
"___________11]-]Success  pts_leq set set
"
"__________10]-]Success  pts_fun props set set
"
"_________9]-]Success  pi x8 \
 locDecl x8
  (colSigma
    (setPi (propId singleton star x1) x9 \
      colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
       forall (propId singleton star star) x11 \
        forall (propId singleton star star) x12 \
         forall (propId singleton star star) x13 \
          propId singleton (app x10 x11) (app x10 x12)) x9 \
    forall (propId singleton star x1) x10 \
     forall (propId singleton star x1) x11 \
      forall (propId singleton star star) x12 \
       forall (propId singleton star star) x13 \
        propId singleton
         (app
           (elim_colSigma
             (pair (setPi (propId singleton star star) x14 \ singleton)
               (x14 \
               forall (propId singleton star star) x15 \
                forall (propId singleton star star) x16 \
                 forall (propId singleton star star) x17 \
                  propId singleton (app x14 x15) (app x14 x16))
               (lambda (propId singleton star star) x14 \
                 app
                  (elim_colSigma (app x9 x10) (x15 \
                    setPi (propId singleton star star) x16 \ singleton) x15 \
                    x16 \ x15)
                  (impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (k_propId (propId singleton star star)) x11)
                              x10) (fixMe "prova di symmetria"))
                          (id singleton star)) (id singleton star))
                      (id (propId singleton star star) (id singleton star)))
                    x14)) (fixMe "prova eta setPi preserva uguaglianza"))
             (x14 \ propId singleton star star) x14 \ x15 \ x14) x13)
         (app
           (elim_colSigma (app x9 x11) (x14 \ propId singleton star star)
             x14 \ x15 \ x14) x13)) =>
  isType
   (setPi (propId singleton star x1) x9 \
     colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
      forall (propId singleton star star) x11 \
       forall (propId singleton star star) x12 \
        forall (propId singleton star star) x13 \
         propId singleton (app x10 x11) (app x10 x12)) _ int
"
"_________9[+[Begin pi x8 \
 pi x9 \
  locDecl x8
   (setPi (propId singleton star x1) x10 \
     colSigma (setPi (propId singleton star star) x11 \ singleton) x11 \
      forall (propId singleton star star) x12 \
       forall (propId singleton star star) x13 \
        forall (propId singleton star star) x14 \
         propId singleton (app x11 x12) (app x11 x13)) =>
   locDecl x9
    (forall (propId singleton star x1) x10 \
      forall (propId singleton star x1) x11 \
       forall (propId singleton star star) x12 \
        forall (propId singleton star star) x13 \
         propId singleton
          (app
            (elim_colSigma
              (pair (setPi (propId singleton star star) x14 \ singleton)
                (x14 \
                forall (propId singleton star star) x15 \
                 forall (propId singleton star star) x16 \
                  forall (propId singleton star star) x17 \
                   propId singleton (app x14 x15) (app x14 x16))
                (lambda (propId singleton star star) x14 \
                  app
                   (elim_colSigma (app x8 x10) (x15 \
                     setPi (propId singleton star star) x16 \ singleton)
                     x15 \ x16 \ x15)
                   (impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (k_propId (propId singleton star star)) x11)
                               x10) (fixMe "prova di symmetria"))
                           (id singleton star)) (id singleton star))
                       (id (propId singleton star star) (id singleton star)))
                     x14)) (fixMe "prova eta setPi preserva uguaglianza"))
              (x14 \ propId singleton star star) x14 \ x15 \ x14) x13)
          (app
            (elim_colSigma (app x8 x11) (x14 \ propId singleton star star)
              x14 \ x15 \ x14) x13)) =>
    isa x8
     (setPi (propId singleton star x1) x10 \
       colSigma (setPi (propId singleton star star) x11 \ singleton) x11 \
        forall (propId singleton star star) x12 \
         forall (propId singleton star star) x13 \
          forall (propId singleton star star) x14 \
           propId singleton (app x11 x12) (app x11 x13)) int
"
"__________10[+[Begin of x8 X180^10 int
"
"__________10]-]Success  of x8
 (setPi (propId singleton star x1) x10 \
   colSigma (setPi (propId singleton star star) x11 \ singleton) x11 \
    forall (propId singleton star star) x12 \
     forall (propId singleton star star) x13 \
      forall (propId singleton star star) x14 \
       propId singleton (app x11 x12) (app x11 x13)) int
"
"__________10[+[Begin conv
 (setPi (propId singleton star x1) x10 \
   colSigma (setPi (propId singleton star star) x11 \ singleton) x11 \
    forall (propId singleton star star) x12 \
     forall (propId singleton star star) x13 \
      forall (propId singleton star star) x14 \
       propId singleton (app x11 x12) (app x11 x13))
 (setPi (propId singleton star x1) x10 \
   colSigma (setPi (propId singleton star star) x11 \ singleton) x11 \
    forall (propId singleton star star) x12 \
     forall (propId singleton star star) x13 \
      forall (propId singleton star star) x14 \
       propId singleton (app x11 x12) (app x11 x13))
"
"__________10]-]Success  conv
 (setPi (propId singleton star x1) x10 \
   colSigma (setPi (propId singleton star star) x11 \ singleton) x11 \
    forall (propId singleton star star) x12 \
     forall (propId singleton star star) x13 \
      forall (propId singleton star star) x14 \
       propId singleton (app x11 x12) (app x11 x13))
 (setPi (propId singleton star x1) x10 \
   colSigma (setPi (propId singleton star star) x11 \ singleton) x11 \
    forall (propId singleton star star) x12 \
     forall (propId singleton star star) x13 \
      forall (propId singleton star star) x14 \
       propId singleton (app x11 x12) (app x11 x13))
"
"_________9]-]Success  pi x8 \
 pi x9 \
  locDecl x8
   (setPi (propId singleton star x1) x10 \
     colSigma (setPi (propId singleton star star) x11 \ singleton) x11 \
      forall (propId singleton star star) x12 \
       forall (propId singleton star star) x13 \
        forall (propId singleton star star) x14 \
         propId singleton (app x11 x12) (app x11 x13)) =>
   locDecl x9
    (forall (propId singleton star x1) x10 \
      forall (propId singleton star x1) x11 \
       forall (propId singleton star star) x12 \
        forall (propId singleton star star) x13 \
         propId singleton
          (app
            (elim_colSigma
              (pair (setPi (propId singleton star star) x14 \ singleton)
                (x14 \
                forall (propId singleton star star) x15 \
                 forall (propId singleton star star) x16 \
                  forall (propId singleton star star) x17 \
                   propId singleton (app x14 x15) (app x14 x16))
                (lambda (propId singleton star star) x14 \
                  app
                   (elim_colSigma (app x8 x10) (x15 \
                     setPi (propId singleton star star) x16 \ singleton)
                     x15 \ x16 \ x15)
                   (impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (k_propId (propId singleton star star)) x11)
                               x10) (fixMe "prova di symmetria"))
                           (id singleton star)) (id singleton star))
                       (id (propId singleton star star) (id singleton star)))
                     x14)) (fixMe "prova eta setPi preserva uguaglianza"))
              (x14 \ propId singleton star star) x14 \ x15 \ x14) x13)
          (app
            (elim_colSigma (app x8 x11) (x14 \ propId singleton star star)
              x14 \ x15 \ x14) x13)) =>
    isa x8
     (setPi (propId singleton star x1) x10 \
       colSigma (setPi (propId singleton star star) x11 \ singleton) x11 \
        forall (propId singleton star star) x12 \
         forall (propId singleton star star) x13 \
          forall (propId singleton star star) x14 \
           propId singleton (app x11 x12) (app x11 x13)) int
"
"________8]-]Success  of
 (elim_colSigma x7 (x8 \
   setPi (propId singleton star x1) x9 \
    colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
     forall (propId singleton star star) x11 \
      forall (propId singleton star star) x12 \
       forall (propId singleton star star) x13 \
        propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \ x8)
 (setPi (propId singleton star x1) x8 \
   colSigma (setPi (propId singleton star star) x9 \ singleton) x9 \
    forall (propId singleton star star) x10 \
     forall (propId singleton star star) x11 \
      forall (propId singleton star star) x12 \
       propId singleton (app x9 x10) (app x9 x11)) int
"
"________8[+[Begin isa
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) star) x1) x5) (id singleton star))
 (propId singleton star x1) int
"
"_________9[+[Begin of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) star) x1) x5) (id singleton star)) X181^8 int
"
"__________10[+[Begin isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) star) x1) x5) (implies X182^8 X181^8) int
"
"___________11[+[Begin of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) star) x1) x5) X183^8 int
"
"____________12[+[Begin isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) star) x1) (implies X184^8 X183^8) int
"
"_____________13[+[Begin of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) star) x1) X185^8 int
"
"______________14[+[Begin of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) star) X186^8 int
"
"_______________15[+[Begin of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star)) X187^8 int
"
"________________16[+[Begin isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies X188^8 X187^8) int
"
"_________________17[+[Begin of (forall_app (forall_app (k_propId singleton) star) star) X189^8 int
"
"__________________18[+[Begin of (forall_app (k_propId singleton) star) X190^8 int
"
"___________________19[+[Begin of (k_propId singleton) X191^8 int
"
"___________________19]-]Success  of (k_propId singleton)
 (forall singleton x8 \
   forall singleton x9 \
    implies (propId singleton x8 x9)
     (forall singleton x10 \
       forall singleton x11 \
        implies (propId singleton x10 x11)
         (implies (propId singleton x8 x10) (propId singleton x9 x11)))) int
"
"___________________19[+[Begin conv
 (forall singleton x8 \
   forall singleton x9 \
    implies (propId singleton x8 x9)
     (forall singleton x10 \
       forall singleton x11 \
        implies (propId singleton x10 x11)
         (implies (propId singleton x8 x10) (propId singleton x9 x11))))
 (forall X192^8 X193^8)
"
"___________________19]-]Success  conv
 (forall singleton x8 \
   forall singleton x9 \
    implies (propId singleton x8 x9)
     (forall singleton x10 \
       forall singleton x11 \
        implies (propId singleton x10 x11)
         (implies (propId singleton x8 x10) (propId singleton x9 x11))))
 (forall singleton x8 \
   forall singleton x9 \
    implies (propId singleton x8 x9)
     (forall singleton x10 \
       forall singleton x11 \
        implies (propId singleton x10 x11)
         (implies (propId singleton x8 x10) (propId singleton x9 x11))))
"
"___________________19[+[Begin of star X194^8 int
"
"___________________19]-]Success  of star singleton int
"
"___________________19[+[Begin conv singleton singleton
"
"___________________19]-]Success  conv singleton singleton
"
"__________________18]-]Success  of (forall_app (k_propId singleton) star)
 (forall singleton x8 \
   implies (propId singleton star x8)
    (forall singleton x9 \
      forall singleton x10 \
       implies (propId singleton x9 x10)
        (implies (propId singleton star x9) (propId singleton x8 x10)))) int
"
"__________________18[+[Begin conv
 (forall singleton x8 \
   implies (propId singleton star x8)
    (forall singleton x9 \
      forall singleton x10 \
       implies (propId singleton x9 x10)
        (implies (propId singleton star x9) (propId singleton x8 x10))))
 (forall X195^8 X196^8)
"
"__________________18]-]Success  conv
 (forall singleton x8 \
   implies (propId singleton star x8)
    (forall singleton x9 \
      forall singleton x10 \
       implies (propId singleton x9 x10)
        (implies (propId singleton star x9) (propId singleton x8 x10))))
 (forall singleton x8 \
   implies (propId singleton star x8)
    (forall singleton x9 \
      forall singleton x10 \
       implies (propId singleton x9 x10)
        (implies (propId singleton star x9) (propId singleton x8 x10))))
"
"__________________18[+[Begin of star X197^8 int
"
"__________________18]-]Success  of star singleton int
"
"__________________18[+[Begin conv singleton singleton
"
"__________________18]-]Success  conv singleton singleton
"
"_________________17]-]Success  of (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x8 \
     forall singleton x9 \
      implies (propId singleton x8 x9)
       (implies (propId singleton star x8) (propId singleton star x9)))) int
"
"_________________17[+[Begin conv
 (implies (propId singleton star star)
   (forall singleton x8 \
     forall singleton x9 \
      implies (propId singleton x8 x9)
       (implies (propId singleton star x8) (propId singleton star x9))))
 (implies X188^8 X187^8)
"
"_________________17]-]Success  conv
 (implies (propId singleton star star)
   (forall singleton x8 \
     forall singleton x9 \
      implies (propId singleton x8 x9)
       (implies (propId singleton star x8) (propId singleton star x9))))
 (implies (propId singleton star star)
   (forall singleton x8 \
     forall singleton x9 \
      implies (propId singleton x8 x9)
       (implies (propId singleton star x8) (propId singleton star x9))))
"
"________________16]-]Success  isa (forall_app (forall_app (k_propId singleton) star) star)
 (implies (propId singleton star star)
   (forall singleton x8 \
     forall singleton x9 \
      implies (propId singleton x8 x9)
       (implies (propId singleton star x8) (propId singleton star x9)))) int
"
"________________16[+[Begin isa (id singleton star) (propId singleton star star) int
"
"_________________17[+[Begin of (id singleton star) X198^8 int
"
"__________________18[+[Begin of star X199^8 int
"
"__________________18]-]Success  of star singleton int
"
"__________________18[+[Begin conv singleton singleton
"
"__________________18]-]Success  conv singleton singleton
"
"_________________17]-]Success  of (id singleton star) (propId singleton star star) int
"
"_________________17[+[Begin conv (propId singleton star star) (propId singleton star star)
"
"_________________17]-]Success  conv (propId singleton star star) (propId singleton star star)
"
"________________16]-]Success  isa (id singleton star) (propId singleton star star) int
"
"_______________15]-]Success  of
 (impl_app (forall_app (forall_app (k_propId singleton) star) star)
   (id singleton star))
 (forall singleton x8 \
   forall singleton x9 \
    implies (propId singleton x8 x9)
     (implies (propId singleton star x8) (propId singleton star x9))) int
"
"_______________15[+[Begin conv
 (forall singleton x8 \
   forall singleton x9 \
    implies (propId singleton x8 x9)
     (implies (propId singleton star x8) (propId singleton star x9)))
 (forall X200^8 X201^8)
"
"_______________15]-]Success  conv
 (forall singleton x8 \
   forall singleton x9 \
    implies (propId singleton x8 x9)
     (implies (propId singleton star x8) (propId singleton star x9)))
 (forall singleton x8 \
   forall singleton x9 \
    implies (propId singleton x8 x9)
     (implies (propId singleton star x8) (propId singleton star x9)))
"
"_______________15[+[Begin of star X202^8 int
"
"_______________15]-]Success  of star singleton int
"
"_______________15[+[Begin conv singleton singleton
"
"_______________15]-]Success  conv singleton singleton
"
"______________14]-]Success  of
 (forall_app
   (impl_app (forall_app (forall_app (k_propId singleton) star) star)
     (id singleton star)) star)
 (forall singleton x8 \
   implies (propId singleton star x8)
    (implies (propId singleton star star) (propId singleton star x8))) int
"
"______________14[+[Begin conv
 (forall singleton x8 \
   implies (propId singleton star x8)
    (implies (propId singleton star star) (propId singleton star x8)))
 (forall X203^8 X204^8)
"
"______________14]-]Success  conv
 (forall singleton x8 \
   implies (propId singleton star x8)
    (implies (propId singleton star star) (propId singleton star x8)))
 (forall singleton x8 \
   implies (propId singleton star x8)
    (implies (propId singleton star star) (propId singleton star x8)))
"
"______________14[+[Begin of x1 X205^8 int
"
"______________14]-]Success  of x1 singleton int
"
"______________14[+[Begin conv singleton singleton
"
"______________14]-]Success  conv singleton singleton
"
"_____________13]-]Success  of
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) star) x1)
 (implies (propId singleton star x1)
   (implies (propId singleton star star) (propId singleton star x1))) int
"
"_____________13[+[Begin conv
 (implies (propId singleton star x1)
   (implies (propId singleton star star) (propId singleton star x1)))
 (implies X184^8 X183^8)
"
"_____________13]-]Success  conv
 (implies (propId singleton star x1)
   (implies (propId singleton star star) (propId singleton star x1)))
 (implies (propId singleton star x1)
   (implies (propId singleton star star) (propId singleton star x1)))
"
"____________12]-]Success  isa
 (forall_app
   (forall_app
     (impl_app (forall_app (forall_app (k_propId singleton) star) star)
       (id singleton star)) star) x1)
 (implies (propId singleton star x1)
   (implies (propId singleton star star) (propId singleton star x1))) int
"
"____________12[+[Begin isa x5 (propId singleton star x1) int
"
"_____________13[+[Begin of x5 X206^8 int
"
"_____________13]-]Success  of x5 (propId singleton star x1) int
"
"_____________13[+[Begin conv (propId singleton star x1) (propId singleton star x1)
"
"_____________13]-]Success  conv (propId singleton star x1) (propId singleton star x1)
"
"____________12]-]Success  isa x5 (propId singleton star x1) int
"
"___________11]-]Success  of
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) star) x1) x5)
 (implies (propId singleton star star) (propId singleton star x1)) int
"
"___________11[+[Begin conv (implies (propId singleton star star) (propId singleton star x1))
 (implies X182^8 X181^8)
"
"___________11]-]Success  conv (implies (propId singleton star star) (propId singleton star x1))
 (implies (propId singleton star star) (propId singleton star x1))
"
"__________10]-]Success  isa
 (impl_app
   (forall_app
     (forall_app
       (impl_app (forall_app (forall_app (k_propId singleton) star) star)
         (id singleton star)) star) x1) x5)
 (implies (propId singleton star star) (propId singleton star x1)) int
"
"__________10[+[Begin isa (id singleton star) (propId singleton star star) int
"
"___________11[+[Begin of (id singleton star) X207^8 int
"
"____________12[+[Begin of star X208^8 int
"
"____________12]-]Success  of star singleton int
"
"____________12[+[Begin conv singleton singleton
"
"____________12]-]Success  conv singleton singleton
"
"___________11]-]Success  of (id singleton star) (propId singleton star star) int
"
"___________11[+[Begin conv (propId singleton star star) (propId singleton star star)
"
"___________11]-]Success  conv (propId singleton star star) (propId singleton star star)
"
"__________10]-]Success  isa (id singleton star) (propId singleton star star) int
"
"_________9]-]Success  of
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) star) x1) x5) (id singleton star))
 (propId singleton star x1) int
"
"_________9[+[Begin conv (propId singleton star x1) (propId singleton star x1)
"
"_________9]-]Success  conv (propId singleton star x1) (propId singleton star x1)
"
"________8]-]Success  isa
 (impl_app
   (impl_app
     (forall_app
       (forall_app
         (impl_app (forall_app (forall_app (k_propId singleton) star) star)
           (id singleton star)) star) x1) x5) (id singleton star))
 (propId singleton star x1) int
"
"_______7]-]Success  of
 (app
   (elim_colSigma x7 (x8 \
     setPi (propId singleton star x1) x9 \
      colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
       forall (propId singleton star star) x11 \
        forall (propId singleton star star) x12 \
         forall (propId singleton star star) x13 \
          propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \ x8)
   (impl_app
     (impl_app
       (forall_app
         (forall_app
           (impl_app (forall_app (forall_app (k_propId singleton) star) star)
             (id singleton star)) star) x1) x5) (id singleton star)))
 (colSigma (setPi (propId singleton star star) x8 \ singleton) x8 \
   forall (propId singleton star star) x9 \
    forall (propId singleton star star) x10 \
     forall (propId singleton star star) x11 \
      propId singleton (app x8 x9) (app x8 x10)) int
"
"_______7[+[Begin (colSigma (setPi (propId singleton star star) x8 \ singleton) x8 \
  forall (propId singleton star star) x9 \
   forall (propId singleton star star) x10 \
    forall (propId singleton star star) x11 \
     propId singleton (app x8 x9) (app x8 x10)) = colSigma X209^8 _
"
"_______7]-]Success  (colSigma (setPi (propId singleton star star) x8 \ singleton) x8 \
  forall (propId singleton star star) x9 \
   forall (propId singleton star star) x10 \
    forall (propId singleton star star) x11 \
     propId singleton (app x8 x9) (app x8 x10)) =
 colSigma (setPi (propId singleton star star) x8 \ singleton) _
"
"______6]-]Success  trad
 (app (app x6 (eqId singleton star))
   (eqId (propEq singleton star star) (eqId singleton star)))
 (app
   (elim_colSigma
     (app
       (elim_colSigma x7 (x8 \
         setPi (propId singleton star x1) x9 \
          colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
           forall (propId singleton star star) x11 \
            forall (propId singleton star star) x12 \
             forall (propId singleton star star) x13 \
              propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \ x8)
       (impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) star) x1) x5) (id singleton star)))
     (x8 \ setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
   (id singleton star (id singleton star)))
"
"______6[+[Begin trad star X210^8
"
"______6]-]Success  trad star star
"
"______6[+[Begin X111 x1 x3 x5 x7 =
 propId singleton
  (app
    (elim_colSigma
      (app
        (elim_colSigma x7 (x8 \
          setPi (propId singleton star x1) x9 \
           colSigma (setPi (propId singleton star star) x10 \ singleton)
            x10 \
            forall (propId singleton star star) x11 \
             forall (propId singleton star star) x12 \
              forall (propId singleton star star) x13 \
               propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \ x8)
        (impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) star) x1) x5) (id singleton star)))
      (x8 \ setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
    (id singleton star (id singleton star))) star
"
"______6]-]Success  propId singleton
 (app
   (elim_colSigma
     (app
       (elim_colSigma x7 (x8 \
         setPi (propId singleton star x1) x9 \
          colSigma (setPi (propId singleton star star) x10 \ singleton) x10 \
           forall (propId singleton star star) x11 \
            forall (propId singleton star star) x12 \
             forall (propId singleton star star) x13 \
              propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \ x8)
       (impl_app
         (impl_app
           (forall_app
             (forall_app
               (impl_app
                 (forall_app (forall_app (k_propId singleton) star) star)
                 (id singleton star)) star) x1) x5) (id singleton star)))
     (x8 \ setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
   (id singleton star (id singleton star))) star =
 propId singleton
  (app
    (elim_colSigma
      (app
        (elim_colSigma x7 (x8 \
          setPi (propId singleton star x1) x9 \
           colSigma (setPi (propId singleton star star) x10 \ singleton)
            x10 \
            forall (propId singleton star star) x11 \
             forall (propId singleton star star) x12 \
              forall (propId singleton star star) x13 \
               propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \ x8)
        (impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app (forall_app (k_propId singleton) star) star)
                  (id singleton star)) star) x1) x5) (id singleton star)))
      (x8 \ setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
    (id singleton star (id singleton star))) star
"
"_____5]-]Success  pi x6 \
 pi x7 \
  trad x6 x7 =>
   locDecl x6
    (setPi (propEq singleton star x0) x8 \
      setPi (propEq (propEq singleton star star) x8 (eqId singleton star))
       x9 \ singleton) =>
    locDecl x7
     (colSigma
       (setPi (propId singleton star x1) x8 \
         colSigma (setPi (propId singleton star star) x9 \ singleton) x9 \
          forall (propId singleton star star) x10 \
           forall (propId singleton star star) x11 \
            forall (propId singleton star star) x12 \
             propId singleton (app x9 x10) (app x9 x11)) x8 \
       forall (propId singleton star x1) x9 \
        forall (propId singleton star x1) x10 \
         forall (propId singleton star star) x11 \
          forall (propId singleton star star) x12 \
           propId singleton
            (app
              (elim_colSigma
                (pair (setPi (propId singleton star star) x13 \ singleton)
                  (x13 \
                  forall (propId singleton star star) x14 \
                   forall (propId singleton star star) x15 \
                    forall (propId singleton star star) x16 \
                     propId singleton (app x13 x14) (app x13 x15))
                  (lambda (propId singleton star star) x13 \
                    app
                     (elim_colSigma (app x8 x9) (x14 \
                       setPi (propId singleton star star) x15 \ singleton)
                       x14 \ x15 \ x14)
                     (impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app
                                   (k_propId (propId singleton star star))
                                   x10) x9) (fixMe "prova di symmetria"))
                             (id singleton star)) (id singleton star))
                         (id (propId singleton star star) (id singleton star)))
                       x13)) (fixMe "prova eta setPi preserva uguaglianza"))
                (x13 \ propId singleton star star) x13 \ x14 \ x13) x12)
            (app
              (elim_colSigma (app x8 x10) (x13 \ propId singleton star star)
                x13 \ x14 \ x13) x12)) =>
     trad
      (propEq singleton
        (app (app x6 (eqId singleton star))
          (eqId (propEq singleton star star) (eqId singleton star))) star)
      (propId singleton
        (app
          (elim_colSigma
            (app
              (elim_colSigma x7 (x8 \
                setPi (propId singleton star x1) x9 \
                 colSigma
                  (setPi (propId singleton star star) x10 \ singleton) x10 \
                  forall (propId singleton star star) x11 \
                   forall (propId singleton star star) x12 \
                    forall (propId singleton star star) x13 \
                     propId singleton (app x10 x11) (app x10 x12)) x8 \ x9 \
                x8)
              (impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) star) x1) x5)
                (id singleton star))) (x8 \
            setPi (propId singleton star star) x9 \ singleton) x8 \ x9 \ x8)
          (id singleton star (id singleton star))) star)
"
"____4]-]Success  pi x4 \
 pi x5 \
  ((trad x4 x5), (locDecl x4 (propEq singleton star x0)),
   (locDecl x5 (propId singleton star x1))) =>
   trad
    (forall
      (setPi (propEq singleton star x0) x6 \
        setPi (propEq (propEq singleton star star) x6 (eqId singleton star))
         x7 \ singleton) x6 \
      propEq singleton
       (app (app x6 (eqId singleton star))
         (eqId (propEq singleton star star) (eqId singleton star))) star)
    (forall
      (colSigma
        (setPi (propId singleton star x1) x6 \
          colSigma (setPi (propId singleton star star) x7 \ singleton) x7 \
           forall (propId singleton star star) x8 \
            forall (propId singleton star star) x9 \
             forall (propId singleton star star) x10 \
              propId singleton (app x7 x8) (app x7 x9)) x6 \
        forall (propId singleton star x1) x7 \
         forall (propId singleton star x1) x8 \
          forall (propId singleton star star) x9 \
           forall (propId singleton star star) x10 \
            propId singleton
             (app
               (elim_colSigma
                 (pair (setPi (propId singleton star star) x11 \ singleton)
                   (x11 \
                   forall (propId singleton star star) x12 \
                    forall (propId singleton star star) x13 \
                     forall (propId singleton star star) x14 \
                      propId singleton (app x11 x12) (app x11 x13))
                   (lambda (propId singleton star star) x11 \
                     app
                      (elim_colSigma (app x6 x7) (x12 \
                        setPi (propId singleton star star) x13 \ singleton)
                        x12 \ x13 \ x12)
                      (impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app
                                    (k_propId (propId singleton star star))
                                    x8) x7) (fixMe "prova di symmetria"))
                              (id singleton star)) (id singleton star))
                          (id (propId singleton star star)
                            (id singleton star))) x11))
                   (fixMe "prova eta setPi preserva uguaglianza")) (x11 \
                 propId singleton star star) x11 \ x12 \ x11) x10)
             (app
               (elim_colSigma (app x6 x8) (x11 \ propId singleton star star)
                 x11 \ x12 \ x11) x10)) x6 \
      propId singleton
       (app
         (elim_colSigma
           (app
             (elim_colSigma x6 (x7 \
               setPi (propId singleton star x1) x8 \
                colSigma (setPi (propId singleton star star) x9 \ singleton)
                 x9 \
                 forall (propId singleton star star) x10 \
                  forall (propId singleton star star) x11 \
                   forall (propId singleton star star) x12 \
                    propId singleton (app x9 x10) (app x9 x11)) x7 \ x8 \ x7)
             (impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) star) x1) x5)
               (id singleton star))) (x7 \
           setPi (propId singleton star star) x8 \ singleton) x7 \ x8 \ x7)
         (id singleton star (id singleton star))) star)
"
"___3]-]Success  pi x2 \
 pi x3 \
  ((trad x2 x3), (locDecl x2 (propEq singleton x0 star)),
   (locDecl x3 (propId singleton x1 star))) =>
   trad
    (implies (propEq singleton star x0)
      (forall
        (setPi (propEq singleton star x0) x4 \
          setPi
           (propEq (propEq singleton star star) x4 (eqId singleton star))
           x5 \ singleton) x4 \
        propEq singleton
         (app (app x4 (eqId singleton star))
           (eqId (propEq singleton star star) (eqId singleton star))) star))
    (forall (propId singleton star x1) x4 \
      forall
       (colSigma
         (setPi (propId singleton star x1) x5 \
           colSigma (setPi (propId singleton star star) x6 \ singleton) x6 \
            forall (propId singleton star star) x7 \
             forall (propId singleton star star) x8 \
              forall (propId singleton star star) x9 \
               propId singleton (app x6 x7) (app x6 x8)) x5 \
         forall (propId singleton star x1) x6 \
          forall (propId singleton star x1) x7 \
           forall (propId singleton star star) x8 \
            forall (propId singleton star star) x9 \
             propId singleton
              (app
                (elim_colSigma
                  (pair (setPi (propId singleton star star) x10 \ singleton)
                    (x10 \
                    forall (propId singleton star star) x11 \
                     forall (propId singleton star star) x12 \
                      forall (propId singleton star star) x13 \
                       propId singleton (app x10 x11) (app x10 x12))
                    (lambda (propId singleton star star) x10 \
                      app
                       (elim_colSigma (app x5 x6) (x11 \
                         setPi (propId singleton star star) x12 \ singleton)
                         x11 \ x12 \ x11)
                       (impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app
                                     (k_propId (propId singleton star star))
                                     x7) x6) (fixMe "prova di symmetria"))
                               (id singleton star)) (id singleton star))
                           (id (propId singleton star star)
                             (id singleton star))) x10))
                    (fixMe "prova eta setPi preserva uguaglianza")) (x10 \
                  propId singleton star star) x10 \ x11 \ x10) x9)
              (app
                (elim_colSigma (app x5 x7) (x10 \ propId singleton star star)
                  x10 \ x11 \ x10) x9)) x5 \
       propId singleton
        (app
          (elim_colSigma
            (app
              (elim_colSigma x5 (x6 \
                setPi (propId singleton star x1) x7 \
                 colSigma (setPi (propId singleton star star) x8 \ singleton)
                  x8 \
                  forall (propId singleton star star) x9 \
                   forall (propId singleton star star) x10 \
                    forall (propId singleton star star) x11 \
                     propId singleton (app x8 x9) (app x8 x10)) x6 \ x7 \ x6)
              (impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) star) x1) x4)
                (id singleton star))) (x6 \
            setPi (propId singleton star star) x7 \ singleton) x6 \ x7 \ x6)
          (id singleton star (id singleton star))) star)
"
"__2]-]Success  pi x0 \
 pi x1 \
  trad x0 x1 =>
   locDecl x0 singleton =>
    locDecl x1 singleton =>
     trad
      (implies (propEq singleton x0 star)
        (implies (propEq singleton star x0)
          (forall
            (setPi (propEq singleton star x0) x2 \
              setPi
               (propEq (propEq singleton star star) x2 (eqId singleton star))
               x3 \ singleton) x2 \
            propEq singleton
             (app (app x2 (eqId singleton star))
               (eqId (propEq singleton star star) (eqId singleton star)))
             star)))
      (forall (propId singleton x1 star) x2 \
        forall (propId singleton star x1) x3 \
         forall
          (colSigma
            (setPi (propId singleton star x1) x4 \
              colSigma (setPi (propId singleton star star) x5 \ singleton)
               x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  propId singleton (app x5 x6) (app x5 x7)) x4 \
            forall (propId singleton star x1) x5 \
             forall (propId singleton star x1) x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                propId singleton
                 (app
                   (elim_colSigma
                     (pair
                       (setPi (propId singleton star star) x9 \ singleton)
                       (x9 \
                       forall (propId singleton star star) x10 \
                        forall (propId singleton star star) x11 \
                         forall (propId singleton star star) x12 \
                          propId singleton (app x9 x10) (app x9 x11))
                       (lambda (propId singleton star star) x9 \
                         app
                          (elim_colSigma (app x4 x5) (x10 \
                            setPi (propId singleton star star) x11 \
                             singleton) x10 \ x11 \ x10)
                          (impl_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (impl_app
                                    (forall_app
                                      (forall_app
                                        (k_propId
                                          (propId singleton star star)) x6)
                                      x5) (fixMe "prova di symmetria"))
                                  (id singleton star)) (id singleton star))
                              (id (propId singleton star star)
                                (id singleton star))) x9))
                       (fixMe "prova eta setPi preserva uguaglianza")) (x9 \
                     propId singleton star star) x9 \ x10 \ x9) x8)
                 (app
                   (elim_colSigma (app x4 x6) (x9 \
                     propId singleton star star) x9 \ x10 \ x9) x8)) x4 \
          propId singleton
           (app
             (elim_colSigma
               (app
                 (elim_colSigma x4 (x5 \
                   setPi (propId singleton star x1) x6 \
                    colSigma
                     (setPi (propId singleton star star) x7 \ singleton) x7 \
                     forall (propId singleton star star) x8 \
                      forall (propId singleton star star) x9 \
                       forall (propId singleton star star) x10 \
                        propId singleton (app x7 x8) (app x7 x9)) x5 \ x6 \
                   x5)
                 (impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app (forall_app (k_propId singleton) star)
                             star) (id singleton star)) star) x1) x3)
                   (id singleton star))) (x5 \
               setPi (propId singleton star star) x6 \ singleton) x5 \ x6 \
               x5) (id singleton star (id singleton star))) star)
"
"_1]-]Success  trad
 (forall singleton x0 \
   implies (propEq singleton x0 star)
    (implies (propEq singleton star x0)
      (forall
        (setPi (propEq singleton star x0) x1 \
          setPi
           (propEq (propEq singleton star star) x1 (eqId singleton star))
           x2 \ singleton) x1 \
        propEq singleton
         (app (app x1 (eqId singleton star))
           (eqId (propEq singleton star star) (eqId singleton star))) star)))
 (forall singleton x0 \
   forall (propId singleton x0 star) x1 \
    forall (propId singleton star x0) x2 \
     forall
      (colSigma
        (setPi (propId singleton star x0) x3 \
          colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
           forall (propId singleton star star) x5 \
            forall (propId singleton star star) x6 \
             forall (propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x3 \
        forall (propId singleton star x0) x4 \
         forall (propId singleton star x0) x5 \
          forall (propId singleton star star) x6 \
           forall (propId singleton star star) x7 \
            propId singleton
             (app
               (elim_colSigma
                 (pair (setPi (propId singleton star star) x8 \ singleton)
                   (x8 \
                   forall (propId singleton star star) x9 \
                    forall (propId singleton star star) x10 \
                     forall (propId singleton star star) x11 \
                      propId singleton (app x8 x9) (app x8 x10))
                   (lambda (propId singleton star star) x8 \
                     app
                      (elim_colSigma (app x3 x4) (x9 \
                        setPi (propId singleton star star) x10 \ singleton)
                        x9 \ x10 \ x9)
                      (impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app
                                    (k_propId (propId singleton star star))
                                    x5) x4) (fixMe "prova di symmetria"))
                              (id singleton star)) (id singleton star))
                          (id (propId singleton star star)
                            (id singleton star))) x8))
                   (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
                 propId singleton star star) x8 \ x9 \ x8) x7)
             (app
               (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
                 x8 \ x9 \ x8) x7)) x3 \
      propId singleton
       (app
         (elim_colSigma
           (app
             (elim_colSigma x3 (x4 \
               setPi (propId singleton star x0) x5 \
                colSigma (setPi (propId singleton star star) x6 \ singleton)
                 x6 \
                 forall (propId singleton star star) x7 \
                  forall (propId singleton star star) x8 \
                   forall (propId singleton star star) x9 \
                    propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
             (impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) star) x0) x2)
               (id singleton star))) (x4 \
           setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
         (id singleton star (id singleton star))) star)
"
"_1[+[Begin isType
 (forall singleton x0 \
   forall (propId singleton x0 star) x1 \
    forall (propId singleton star x0) x2 \
     forall
      (colSigma
        (setPi (propId singleton star x0) x3 \
          colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
           forall (propId singleton star star) x5 \
            forall (propId singleton star star) x6 \
             forall (propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x3 \
        forall (propId singleton star x0) x4 \
         forall (propId singleton star x0) x5 \
          forall (propId singleton star star) x6 \
           forall (propId singleton star star) x7 \
            propId singleton
             (app
               (elim_colSigma
                 (pair (setPi (propId singleton star star) x8 \ singleton)
                   (x8 \
                   forall (propId singleton star star) x9 \
                    forall (propId singleton star star) x10 \
                     forall (propId singleton star star) x11 \
                      propId singleton (app x8 x9) (app x8 x10))
                   (lambda (propId singleton star star) x8 \
                     app
                      (elim_colSigma (app x3 x4) (x9 \
                        setPi (propId singleton star star) x10 \ singleton)
                        x9 \ x10 \ x9)
                      (impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app
                                    (k_propId (propId singleton star star))
                                    x5) x4) (fixMe "prova di symmetria"))
                              (id singleton star)) (id singleton star))
                          (id (propId singleton star star)
                            (id singleton star))) x8))
                   (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
                 propId singleton star star) x8 \ x9 \ x8) x7)
             (app
               (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
                 x8 \ x9 \ x8) x7)) x3 \
      propId singleton
       (app
         (elim_colSigma
           (app
             (elim_colSigma x3 (x4 \
               setPi (propId singleton star x0) x5 \
                colSigma (setPi (propId singleton star star) x6 \ singleton)
                 x6 \
                 forall (propId singleton star star) x7 \
                  forall (propId singleton star star) x8 \
                   forall (propId singleton star star) x9 \
                    propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
             (impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) star) x0) x2)
               (id singleton star))) (x4 \
           setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
         (id singleton star (id singleton star))) star) X211 int
"
"__2[+[Begin isType singleton X212 int
"
"__2]-]Success  isType singleton set int
"
"__2[+[Begin pi x0 \
 locDecl x0 singleton =>
  spy
   (isType
     (forall (propId singleton x0 star) x1 \
       forall (propId singleton star x0) x2 \
        forall
         (colSigma
           (setPi (propId singleton star x0) x3 \
             colSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x3 \
           forall (propId singleton star x0) x4 \
            forall (propId singleton star x0) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               propId singleton
                (app
                  (elim_colSigma
                    (pair (setPi (propId singleton star star) x8 \ singleton)
                      (x8 \
                      forall (propId singleton star star) x9 \
                       forall (propId singleton star star) x10 \
                        forall (propId singleton star star) x11 \
                         propId singleton (app x8 x9) (app x8 x10))
                      (lambda (propId singleton star star) x8 \
                        app
                         (elim_colSigma (app x3 x4) (x9 \
                           setPi (propId singleton star star) x10 \ singleton)
                           x9 \ x10 \ x9)
                         (impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app
                                       (k_propId (propId singleton star star))
                                       x5) x4) (fixMe "prova di symmetria"))
                                 (id singleton star)) (id singleton star))
                             (id (propId singleton star star)
                               (id singleton star))) x8))
                      (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
                    propId singleton star star) x8 \ x9 \ x8) x7)
                (app
                  (elim_colSigma (app x3 x5) (x8 \
                    propId singleton star star) x8 \ x9 \ x8) x7)) x3 \
         propId singleton
          (app
            (elim_colSigma
              (app
                (elim_colSigma x3 (x4 \
                  setPi (propId singleton star x0) x5 \
                   colSigma
                    (setPi (propId singleton star star) x6 \ singleton) x6 \
                    forall (propId singleton star star) x7 \
                     forall (propId singleton star star) x8 \
                      forall (propId singleton star star) x9 \
                       propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
                (impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) star) x0) x2)
                  (id singleton star))) (x4 \
              setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
            (id singleton star (id singleton star))) star) X213 int)
"
"___3[+[Begin isType
 (forall (propId singleton x0 star) x1 \
   forall (propId singleton star x0) x2 \
    forall
     (colSigma
       (setPi (propId singleton star x0) x3 \
         colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
          forall (propId singleton star star) x5 \
           forall (propId singleton star star) x6 \
            forall (propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x3 \
       forall (propId singleton star x0) x4 \
        forall (propId singleton star x0) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           propId singleton
            (app
              (elim_colSigma
                (pair (setPi (propId singleton star star) x8 \ singleton)
                  (x8 \
                  forall (propId singleton star star) x9 \
                   forall (propId singleton star star) x10 \
                    forall (propId singleton star star) x11 \
                     propId singleton (app x8 x9) (app x8 x10))
                  (lambda (propId singleton star star) x8 \
                    app
                     (elim_colSigma (app x3 x4) (x9 \
                       setPi (propId singleton star star) x10 \ singleton)
                       x9 \ x10 \ x9)
                     (impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app
                                   (k_propId (propId singleton star star)) x5)
                                 x4) (fixMe "prova di symmetria"))
                             (id singleton star)) (id singleton star))
                         (id (propId singleton star star) (id singleton star)))
                       x8)) (fixMe "prova eta setPi preserva uguaglianza"))
                (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
            (app
              (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
                x8 \ x9 \ x8) x7)) x3 \
     propId singleton
      (app
        (elim_colSigma
          (app
            (elim_colSigma x3 (x4 \
              setPi (propId singleton star x0) x5 \
               colSigma (setPi (propId singleton star star) x6 \ singleton)
                x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  forall (propId singleton star star) x9 \
                   propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
            (impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) star) x0) x2) (id singleton star)))
          (x4 \ setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \
          x4) (id singleton star (id singleton star))) star) X213 int
"
"____4[+[Begin isType (propId singleton x0 star) X214^1 int
"
"_____5[+[Begin of x0 X215^1 int
"
"_____5]-]Success  of x0 singleton int
"
"_____5[+[Begin conv singleton singleton
"
"_____5]-]Success  conv singleton singleton
"
"_____5[+[Begin of star X216^1 int
"
"_____5]-]Success  of star singleton int
"
"_____5[+[Begin conv singleton singleton
"
"_____5]-]Success  conv singleton singleton
"
"_____5[+[Begin (pts_leq set set),
(X214^1 = props)
"
"_____5]-]Success  (pts_leq set set),
(props = props)
"
"____4]-]Success  isType (propId singleton x0 star) props int
"
"____4[+[Begin pi x1 \
 locDecl x1 (propId singleton x0 star) =>
  spy
   (isType
     (forall (propId singleton star x0) x2 \
       forall
        (colSigma
          (setPi (propId singleton star x0) x3 \
            colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
             forall (propId singleton star star) x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x3 \
          forall (propId singleton star x0) x4 \
           forall (propId singleton star x0) x5 \
            forall (propId singleton star star) x6 \
             forall (propId singleton star star) x7 \
              propId singleton
               (app
                 (elim_colSigma
                   (pair (setPi (propId singleton star star) x8 \ singleton)
                     (x8 \
                     forall (propId singleton star star) x9 \
                      forall (propId singleton star star) x10 \
                       forall (propId singleton star star) x11 \
                        propId singleton (app x8 x9) (app x8 x10))
                     (lambda (propId singleton star star) x8 \
                       app
                        (elim_colSigma (app x3 x4) (x9 \
                          setPi (propId singleton star star) x10 \ singleton)
                          x9 \ x10 \ x9)
                        (impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app
                                      (k_propId (propId singleton star star))
                                      x5) x4) (fixMe "prova di symmetria"))
                                (id singleton star)) (id singleton star))
                            (id (propId singleton star star)
                              (id singleton star))) x8))
                     (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
                   propId singleton star star) x8 \ x9 \ x8) x7)
               (app
                 (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
                   x8 \ x9 \ x8) x7)) x3 \
        propId singleton
         (app
           (elim_colSigma
             (app
               (elim_colSigma x3 (x4 \
                 setPi (propId singleton star x0) x5 \
                  colSigma
                   (setPi (propId singleton star star) x6 \ singleton) x6 \
                   forall (propId singleton star star) x7 \
                    forall (propId singleton star star) x8 \
                     forall (propId singleton star star) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
               (impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) star) x0) x2)
                 (id singleton star))) (x4 \
             setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
           (id singleton star (id singleton star))) star) X217^1 int)
"
"_____5[+[Begin isType
 (forall (propId singleton star x0) x2 \
   forall
    (colSigma
      (setPi (propId singleton star x0) x3 \
        colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
         forall (propId singleton star star) x5 \
          forall (propId singleton star star) x6 \
           forall (propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x3 \
      forall (propId singleton star x0) x4 \
       forall (propId singleton star x0) x5 \
        forall (propId singleton star star) x6 \
         forall (propId singleton star star) x7 \
          propId singleton
           (app
             (elim_colSigma
               (pair (setPi (propId singleton star star) x8 \ singleton)
                 (x8 \
                 forall (propId singleton star star) x9 \
                  forall (propId singleton star star) x10 \
                   forall (propId singleton star star) x11 \
                    propId singleton (app x8 x9) (app x8 x10))
                 (lambda (propId singleton star star) x8 \
                   app
                    (elim_colSigma (app x3 x4) (x9 \
                      setPi (propId singleton star star) x10 \ singleton)
                      x9 \ x10 \ x9)
                    (impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (k_propId (propId singleton star star)) x5)
                                x4) (fixMe "prova di symmetria"))
                            (id singleton star)) (id singleton star))
                        (id (propId singleton star star) (id singleton star)))
                      x8)) (fixMe "prova eta setPi preserva uguaglianza"))
               (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
           (app
             (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
               x8 \ x9 \ x8) x7)) x3 \
    propId singleton
     (app
       (elim_colSigma
         (app
           (elim_colSigma x3 (x4 \
             setPi (propId singleton star x0) x5 \
              colSigma (setPi (propId singleton star star) x6 \ singleton)
               x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 forall (propId singleton star star) x9 \
                  propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
           (impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) star) x0) x2) (id singleton star)))
         (x4 \ setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \
         x4) (id singleton star (id singleton star))) star) X217^1 int
"
"______6[+[Begin isType (propId singleton star x0) X218^2 int
"
"_______7[+[Begin of star X219^2 int
"
"_______7]-]Success  of star singleton int
"
"_______7[+[Begin conv singleton singleton
"
"_______7]-]Success  conv singleton singleton
"
"_______7[+[Begin of x0 X220^2 int
"
"_______7]-]Success  of x0 singleton int
"
"_______7[+[Begin conv singleton singleton
"
"_______7]-]Success  conv singleton singleton
"
"_______7[+[Begin (pts_leq set set),
(X218^2 = props)
"
"_______7]-]Success  (pts_leq set set),
(props = props)
"
"______6]-]Success  isType (propId singleton star x0) props int
"
"______6[+[Begin pi x2 \
 locDecl x2 (propId singleton star x0) =>
  spy
   (isType
     (forall
       (colSigma
         (setPi (propId singleton star x0) x3 \
           colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
            forall (propId singleton star star) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x3 \
         forall (propId singleton star x0) x4 \
          forall (propId singleton star x0) x5 \
           forall (propId singleton star star) x6 \
            forall (propId singleton star star) x7 \
             propId singleton
              (app
                (elim_colSigma
                  (pair (setPi (propId singleton star star) x8 \ singleton)
                    (x8 \
                    forall (propId singleton star star) x9 \
                     forall (propId singleton star star) x10 \
                      forall (propId singleton star star) x11 \
                       propId singleton (app x8 x9) (app x8 x10))
                    (lambda (propId singleton star star) x8 \
                      app
                       (elim_colSigma (app x3 x4) (x9 \
                         setPi (propId singleton star star) x10 \ singleton)
                         x9 \ x10 \ x9)
                       (impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app
                                     (k_propId (propId singleton star star))
                                     x5) x4) (fixMe "prova di symmetria"))
                               (id singleton star)) (id singleton star))
                           (id (propId singleton star star)
                             (id singleton star))) x8))
                    (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
                  propId singleton star star) x8 \ x9 \ x8) x7)
              (app
                (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
                  x8 \ x9 \ x8) x7)) x3 \
       propId singleton
        (app
          (elim_colSigma
            (app
              (elim_colSigma x3 (x4 \
                setPi (propId singleton star x0) x5 \
                 colSigma (setPi (propId singleton star star) x6 \ singleton)
                  x6 \
                  forall (propId singleton star star) x7 \
                   forall (propId singleton star star) x8 \
                    forall (propId singleton star star) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
              (impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) star) x0) x2)
                (id singleton star))) (x4 \
            setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
          (id singleton star (id singleton star))) star) X221^2 int)
"
"_______7[+[Begin isType
 (forall
   (colSigma
     (setPi (propId singleton star x0) x3 \
       colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
        forall (propId singleton star star) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x3 \
     forall (propId singleton star x0) x4 \
      forall (propId singleton star x0) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         propId singleton
          (app
            (elim_colSigma
              (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
                forall (propId singleton star star) x9 \
                 forall (propId singleton star star) x10 \
                  forall (propId singleton star star) x11 \
                   propId singleton (app x8 x9) (app x8 x10))
                (lambda (propId singleton star star) x8 \
                  app
                   (elim_colSigma (app x3 x4) (x9 \
                     setPi (propId singleton star star) x10 \ singleton) x9 \
                     x10 \ x9)
                   (impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (k_propId (propId singleton star star)) x5)
                               x4) (fixMe "prova di symmetria"))
                           (id singleton star)) (id singleton star))
                       (id (propId singleton star star) (id singleton star)))
                     x8)) (fixMe "prova eta setPi preserva uguaglianza"))
              (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
          (app
            (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
              x9 \ x8) x7)) x3 \
   propId singleton
    (app
      (elim_colSigma
        (app
          (elim_colSigma x3 (x4 \
            setPi (propId singleton star x0) x5 \
             colSigma (setPi (propId singleton star star) x6 \ singleton)
              x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                forall (propId singleton star star) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
          (impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) star) x0) x2) (id singleton star)))
        (x4 \ setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
      (id singleton star (id singleton star))) star) X221^2 int
"
"________8[+[Begin isType
 (colSigma
   (setPi (propId singleton star x0) x3 \
     colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
      forall (propId singleton star star) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x3 \
   forall (propId singleton star x0) x4 \
    forall (propId singleton star x0) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton
        (app
          (elim_colSigma
            (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
              forall (propId singleton star star) x9 \
               forall (propId singleton star star) x10 \
                forall (propId singleton star star) x11 \
                 propId singleton (app x8 x9) (app x8 x10))
              (lambda (propId singleton star star) x8 \
                app
                 (elim_colSigma (app x3 x4) (x9 \
                   setPi (propId singleton star star) x10 \ singleton) x9 \
                   x10 \ x9)
                 (impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (k_propId (propId singleton star star)) x5) x4)
                           (fixMe "prova di symmetria")) (id singleton star))
                       (id singleton star))
                     (id (propId singleton star star) (id singleton star)))
                   x8)) (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
            propId singleton star star) x8 \ x9 \ x8) x7)
        (app
          (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
            x9 \ x8) x7)) X222^3 int
"
"_________9[+[Begin isType
 (setPi (propId singleton star x0) x3 \
   colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X223^3 int
"
"__________10[+[Begin of star X224^3 int
"
"__________10]-]Success  of star singleton int
"
"__________10[+[Begin conv singleton singleton
"
"__________10]-]Success  conv singleton singleton
"
"__________10[+[Begin of x0 X225^3 int
"
"__________10]-]Success  of x0 singleton int
"
"__________10[+[Begin conv singleton singleton
"
"__________10]-]Success  conv singleton singleton
"
"__________10[+[Begin (pts_leq set set),
(X226^3 = props)
"
"__________10]-]Success  (pts_leq set set),
(props = props)
"
"__________10[+[Begin isType (setPi (propId singleton star star) x4 \ singleton) X227^4 int
"
"___________11[+[Begin of star X228^4 int
"
"___________11]-]Success  of star singleton int
"
"___________11[+[Begin conv singleton singleton
"
"___________11]-]Success  conv singleton singleton
"
"___________11[+[Begin of star X229^4 int
"
"___________11]-]Success  of star singleton int
"
"___________11[+[Begin conv singleton singleton
"
"___________11]-]Success  conv singleton singleton
"
"___________11[+[Begin (pts_leq set set),
(X230^4 = props)
"
"___________11]-]Success  (pts_leq set set),
(props = props)
"
"___________11[+[Begin pts_fun props set X227^4
"
"____________12[+[Begin pts_leq props set
"
"____________12]-]Success  pts_leq props set
"
"____________12[+[Begin pts_leq set set
"
"____________12]-]Success  pts_leq set set
"
"___________11]-]Success  pts_fun props set set
"
"__________10]-]Success  isType (setPi (propId singleton star star) x4 \ singleton) set int
"
"__________10[+[Begin pi x4 \
 locDecl x4 (setPi (propId singleton star star) x5 \ singleton) =>
  isType
   (forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X231^4 int
"
"___________11[+[Begin isType (propId singleton star star) X232^5 int
"
"____________12[+[Begin of star X233^5 int
"
"____________12]-]Success  of star singleton int
"
"____________12[+[Begin conv singleton singleton
"
"____________12]-]Success  conv singleton singleton
"
"____________12[+[Begin of star X234^5 int
"
"____________12]-]Success  of star singleton int
"
"____________12[+[Begin conv singleton singleton
"
"____________12]-]Success  conv singleton singleton
"
"____________12[+[Begin (pts_leq set set),
(X232^5 = props)
"
"____________12]-]Success  (pts_leq set set),
(props = props)
"
"___________11]-]Success  isType (propId singleton star star) props int
"
"___________11[+[Begin pi x5 \
 locDecl x5 (propId singleton star star) =>
  spy
   (isType
     (forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) X235^5 int)
"
"____________12[+[Begin isType
 (forall (propId singleton star star) x6 \
   forall (propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) X235^5 int
"
"_____________13[+[Begin isType (propId singleton star star) X236^6 int
"
"______________14[+[Begin of star X237^6 int
"
"______________14]-]Success  of star singleton int
"
"______________14[+[Begin conv singleton singleton
"
"______________14]-]Success  conv singleton singleton
"
"______________14[+[Begin of star X238^6 int
"
"______________14]-]Success  of star singleton int
"
"______________14[+[Begin conv singleton singleton
"
"______________14]-]Success  conv singleton singleton
"
"______________14[+[Begin (pts_leq set set),
(X236^6 = props)
"
"______________14]-]Success  (pts_leq set set),
(props = props)
"
"_____________13]-]Success  isType (propId singleton star star) props int
"
"_____________13[+[Begin pi x6 \
 locDecl x6 (propId singleton star star) =>
  spy
   (isType
     (forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) X239^6 int)
"
"______________14[+[Begin isType
 (forall (propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) X239^6 int
"
"_______________15[+[Begin isType (propId singleton star star) X240^7 int
"
"________________16[+[Begin of star X241^7 int
"
"________________16]-]Success  of star singleton int
"
"________________16[+[Begin conv singleton singleton
"
"________________16]-]Success  conv singleton singleton
"
"________________16[+[Begin of star X242^7 int
"
"________________16]-]Success  of star singleton int
"
"________________16[+[Begin conv singleton singleton
"
"________________16]-]Success  conv singleton singleton
"
"________________16[+[Begin (pts_leq set set),
(X240^7 = props)
"
"________________16]-]Success  (pts_leq set set),
(props = props)
"
"_______________15]-]Success  isType (propId singleton star star) props int
"
"_______________15[+[Begin pi x7 \
 locDecl x7 (propId singleton star star) =>
  spy (isType (propId singleton (app x4 x5) (app x4 x6)) X243^7 int)
"
"________________16[+[Begin isType (propId singleton (app x4 x5) (app x4 x6)) X243^7 int
"
"_________________17[+[Begin of (app x4 x5) X244^8 int
"
"__________________18[+[Begin of x4 (setPi X245^8 X246^8) int
"
"__________________18]-]Success  of x4 (setPi (propId singleton star star) x8 \ singleton) int
"
"__________________18[+[Begin isa x5 (propId singleton star star) int
"
"___________________19[+[Begin of x5 X247^8 int
"
"___________________19]-]Success  of x5 (propId singleton star star) int
"
"___________________19[+[Begin conv (propId singleton star star) (propId singleton star star)
"
"___________________19]-]Success  conv (propId singleton star star) (propId singleton star star)
"
"__________________18]-]Success  isa x5 (propId singleton star star) int
"
"_________________17]-]Success  of (app x4 x5) singleton int
"
"_________________17[+[Begin conv singleton singleton
"
"_________________17]-]Success  conv singleton singleton
"
"_________________17[+[Begin of (app x4 x6) X248^8 int
"
"__________________18[+[Begin of x4 (setPi X249^8 X250^8) int
"
"__________________18]-]Success  of x4 (setPi (propId singleton star star) x8 \ singleton) int
"
"__________________18[+[Begin isa x6 (propId singleton star star) int
"
"___________________19[+[Begin of x6 X251^8 int
"
"___________________19]-]Success  of x6 (propId singleton star star) int
"
"___________________19[+[Begin conv (propId singleton star star) (propId singleton star star)
"
"___________________19]-]Success  conv (propId singleton star star) (propId singleton star star)
"
"__________________18]-]Success  isa x6 (propId singleton star star) int
"
"_________________17]-]Success  of (app x4 x6) singleton int
"
"_________________17[+[Begin conv singleton singleton
"
"_________________17]-]Success  conv singleton singleton
"
"_________________17[+[Begin (pts_leq set set),
(X243^7 = props)
"
"_________________17]-]Success  (pts_leq set set),
(props = props)
"
"________________16]-]Success  isType (propId singleton (app x4 x5) (app x4 x6)) props int
"
"_______________15]-]Success  pi x7 \
 locDecl x7 (propId singleton star star) =>
  spy (isType (propId singleton (app x4 x5) (app x4 x6)) props int)
"
"_______________15[+[Begin pts_for props props X239^6
"
"_______________15]-]Success  pts_for props props props
"
"______________14]-]Success  isType
 (forall (propId singleton star star) x7 \
   propId singleton (app x4 x5) (app x4 x6)) props int
"
"_____________13]-]Success  pi x6 \
 locDecl x6 (propId singleton star star) =>
  spy
   (isType
     (forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int)
"
"_____________13[+[Begin pts_for props props X235^5
"
"_____________13]-]Success  pts_for props props props
"
"____________12]-]Success  isType
 (forall (propId singleton star star) x6 \
   forall (propId singleton star star) x7 \
    propId singleton (app x4 x5) (app x4 x6)) props int
"
"___________11]-]Success  pi x5 \
 locDecl x5 (propId singleton star star) =>
  spy
   (isType
     (forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        propId singleton (app x4 x5) (app x4 x6)) props int)
"
"___________11[+[Begin pts_for props props X231^4
"
"___________11]-]Success  pts_for props props props
"
"__________10]-]Success  pi x4 \
 locDecl x4 (setPi (propId singleton star star) x5 \ singleton) =>
  isType
   (forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) props int
"
"__________10[+[Begin pts_leq set set
"
"__________10]-]Success  pts_leq set set
"
"__________10[+[Begin pts_leq props set
"
"__________10]-]Success  pts_leq props set
"
"__________10[+[Begin pts_fun props set X223^3
"
"___________11[+[Begin pts_leq props set
"
"___________11]-]Success  pts_leq props set
"
"___________11[+[Begin pts_leq set set
"
"___________11]-]Success  pts_leq set set
"
"__________10]-]Success  pts_fun props set set
"
"_________9]-]Success  isType
 (setPi (propId singleton star x0) x3 \
   colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
    forall (propId singleton star star) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton (app x4 x5) (app x4 x6)) set int
"
"_________9[+[Begin pi x3 \
 locDecl x3
  (setPi (propId singleton star x0) x4 \
    colSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) =>
  isType
   (forall (propId singleton star x0) x4 \
     forall (propId singleton star x0) x5 \
      forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        propId singleton
         (app
           (elim_colSigma
             (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
               forall (propId singleton star star) x9 \
                forall (propId singleton star star) x10 \
                 forall (propId singleton star star) x11 \
                  propId singleton (app x8 x9) (app x8 x10))
               (lambda (propId singleton star star) x8 \
                 app
                  (elim_colSigma (app x3 x4) (x9 \
                    setPi (propId singleton star star) x10 \ singleton) x9 \
                    x10 \ x9)
                  (impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (k_propId (propId singleton star star)) x5)
                              x4) (fixMe "prova di symmetria"))
                          (id singleton star)) (id singleton star))
                      (id (propId singleton star star) (id singleton star)))
                    x8)) (fixMe "prova eta setPi preserva uguaglianza"))
             (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
         (app
           (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
             x9 \ x8) x7)) X252^3 int
"
"__________10[+[Begin isType (propId singleton star x0) X253^4 int
"
"___________11[+[Begin of star X254^4 int
"
"___________11]-]Success  of star singleton int
"
"___________11[+[Begin conv singleton singleton
"
"___________11]-]Success  conv singleton singleton
"
"___________11[+[Begin of x0 X255^4 int
"
"___________11]-]Success  of x0 singleton int
"
"___________11[+[Begin conv singleton singleton
"
"___________11]-]Success  conv singleton singleton
"
"___________11[+[Begin (pts_leq set set),
(X253^4 = props)
"
"___________11]-]Success  (pts_leq set set),
(props = props)
"
"__________10]-]Success  isType (propId singleton star x0) props int
"
"__________10[+[Begin pi x4 \
 locDecl x4 (propId singleton star x0) =>
  spy
   (isType
     (forall (propId singleton star x0) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         propId singleton
          (app
            (elim_colSigma
              (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
                forall (propId singleton star star) x9 \
                 forall (propId singleton star star) x10 \
                  forall (propId singleton star star) x11 \
                   propId singleton (app x8 x9) (app x8 x10))
                (lambda (propId singleton star star) x8 \
                  app
                   (elim_colSigma (app x3 x4) (x9 \
                     setPi (propId singleton star star) x10 \ singleton) x9 \
                     x10 \ x9)
                   (impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (k_propId (propId singleton star star)) x5)
                               x4) (fixMe "prova di symmetria"))
                           (id singleton star)) (id singleton star))
                       (id (propId singleton star star) (id singleton star)))
                     x8)) (fixMe "prova eta setPi preserva uguaglianza"))
              (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
          (app
            (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
              x9 \ x8) x7)) X256^4 int)
"
"___________11[+[Begin isType
 (forall (propId singleton star x0) x5 \
   forall (propId singleton star star) x6 \
    forall (propId singleton star star) x7 \
     propId singleton
      (app
        (elim_colSigma
          (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
            forall (propId singleton star star) x9 \
             forall (propId singleton star star) x10 \
              forall (propId singleton star star) x11 \
               propId singleton (app x8 x9) (app x8 x10))
            (lambda (propId singleton star star) x8 \
              app
               (elim_colSigma (app x3 x4) (x9 \
                 setPi (propId singleton star star) x10 \ singleton) x9 \
                 x10 \ x9)
               (impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (k_propId (propId singleton star star)) x5) x4)
                         (fixMe "prova di symmetria")) (id singleton star))
                     (id singleton star))
                   (id (propId singleton star star) (id singleton star))) x8))
            (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
          propId singleton star star) x8 \ x9 \ x8) x7)
      (app
        (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
          x9 \ x8) x7)) X256^4 int
"
"____________12[+[Begin isType (propId singleton star x0) X257^5 int
"
"_____________13[+[Begin of star X258^5 int
"
"_____________13]-]Success  of star singleton int
"
"_____________13[+[Begin conv singleton singleton
"
"_____________13]-]Success  conv singleton singleton
"
"_____________13[+[Begin of x0 X259^5 int
"
"_____________13]-]Success  of x0 singleton int
"
"_____________13[+[Begin conv singleton singleton
"
"_____________13]-]Success  conv singleton singleton
"
"_____________13[+[Begin (pts_leq set set),
(X257^5 = props)
"
"_____________13]-]Success  (pts_leq set set),
(props = props)
"
"____________12]-]Success  isType (propId singleton star x0) props int
"
"____________12[+[Begin pi x5 \
 locDecl x5 (propId singleton star x0) =>
  spy
   (isType
     (forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        propId singleton
         (app
           (elim_colSigma
             (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
               forall (propId singleton star star) x9 \
                forall (propId singleton star star) x10 \
                 forall (propId singleton star star) x11 \
                  propId singleton (app x8 x9) (app x8 x10))
               (lambda (propId singleton star star) x8 \
                 app
                  (elim_colSigma (app x3 x4) (x9 \
                    setPi (propId singleton star star) x10 \ singleton) x9 \
                    x10 \ x9)
                  (impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (k_propId (propId singleton star star)) x5)
                              x4) (fixMe "prova di symmetria"))
                          (id singleton star)) (id singleton star))
                      (id (propId singleton star star) (id singleton star)))
                    x8)) (fixMe "prova eta setPi preserva uguaglianza"))
             (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
         (app
           (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
             x9 \ x8) x7)) X260^5 int)
"
"_____________13[+[Begin isType
 (forall (propId singleton star star) x6 \
   forall (propId singleton star star) x7 \
    propId singleton
     (app
       (elim_colSigma
         (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
           forall (propId singleton star star) x9 \
            forall (propId singleton star star) x10 \
             forall (propId singleton star star) x11 \
              propId singleton (app x8 x9) (app x8 x10))
           (lambda (propId singleton star star) x8 \
             app
              (elim_colSigma (app x3 x4) (x9 \
                setPi (propId singleton star star) x10 \ singleton) x9 \
                x10 \ x9)
              (impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app
                          (forall_app (k_propId (propId singleton star star))
                            x5) x4) (fixMe "prova di symmetria"))
                      (id singleton star)) (id singleton star))
                  (id (propId singleton star star) (id singleton star))) x8))
           (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
         propId singleton star star) x8 \ x9 \ x8) x7)
     (app
       (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \ x9 \
         x8) x7)) X260^5 int
"
"______________14[+[Begin isType (propId singleton star star) X261^6 int
"
"_______________15[+[Begin of star X262^6 int
"
"_______________15]-]Success  of star singleton int
"
"_______________15[+[Begin conv singleton singleton
"
"_______________15]-]Success  conv singleton singleton
"
"_______________15[+[Begin of star X263^6 int
"
"_______________15]-]Success  of star singleton int
"
"_______________15[+[Begin conv singleton singleton
"
"_______________15]-]Success  conv singleton singleton
"
"_______________15[+[Begin (pts_leq set set),
(X261^6 = props)
"
"_______________15]-]Success  (pts_leq set set),
(props = props)
"
"______________14]-]Success  isType (propId singleton star star) props int
"
"______________14[+[Begin pi x6 \
 locDecl x6 (propId singleton star star) =>
  spy
   (isType
     (forall (propId singleton star star) x7 \
       propId singleton
        (app
          (elim_colSigma
            (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
              forall (propId singleton star star) x9 \
               forall (propId singleton star star) x10 \
                forall (propId singleton star star) x11 \
                 propId singleton (app x8 x9) (app x8 x10))
              (lambda (propId singleton star star) x8 \
                app
                 (elim_colSigma (app x3 x4) (x9 \
                   setPi (propId singleton star star) x10 \ singleton) x9 \
                   x10 \ x9)
                 (impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (k_propId (propId singleton star star)) x5) x4)
                           (fixMe "prova di symmetria")) (id singleton star))
                       (id singleton star))
                     (id (propId singleton star star) (id singleton star)))
                   x8)) (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
            propId singleton star star) x8 \ x9 \ x8) x7)
        (app
          (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
            x9 \ x8) x7)) X264^6 int)
"
"_______________15[+[Begin isType
 (forall (propId singleton star star) x7 \
   propId singleton
    (app
      (elim_colSigma
        (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
          forall (propId singleton star star) x9 \
           forall (propId singleton star star) x10 \
            forall (propId singleton star star) x11 \
             propId singleton (app x8 x9) (app x8 x10))
          (lambda (propId singleton star star) x8 \
            app
             (elim_colSigma (app x3 x4) (x9 \
               setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
               x9)
             (impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app
                         (forall_app (k_propId (propId singleton star star))
                           x5) x4) (fixMe "prova di symmetria"))
                     (id singleton star)) (id singleton star))
                 (id (propId singleton star star) (id singleton star))) x8))
          (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
        propId singleton star star) x8 \ x9 \ x8) x7)
    (app
      (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \ x9 \
        x8) x7)) X264^6 int
"
"________________16[+[Begin isType (propId singleton star star) X265^7 int
"
"_________________17[+[Begin of star X266^7 int
"
"_________________17]-]Success  of star singleton int
"
"_________________17[+[Begin conv singleton singleton
"
"_________________17]-]Success  conv singleton singleton
"
"_________________17[+[Begin of star X267^7 int
"
"_________________17]-]Success  of star singleton int
"
"_________________17[+[Begin conv singleton singleton
"
"_________________17]-]Success  conv singleton singleton
"
"_________________17[+[Begin (pts_leq set set),
(X265^7 = props)
"
"_________________17]-]Success  (pts_leq set set),
(props = props)
"
"________________16]-]Success  isType (propId singleton star star) props int
"
"________________16[+[Begin pi x7 \
 locDecl x7 (propId singleton star star) =>
  spy
   (isType
     (propId singleton
       (app
         (elim_colSigma
           (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
             forall (propId singleton star star) x9 \
              forall (propId singleton star star) x10 \
               forall (propId singleton star star) x11 \
                propId singleton (app x8 x9) (app x8 x10))
             (lambda (propId singleton star star) x8 \
               app
                (elim_colSigma (app x3 x4) (x9 \
                  setPi (propId singleton star star) x10 \ singleton) x9 \
                  x10 \ x9)
                (impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (k_propId (propId singleton star star)) x5) x4)
                          (fixMe "prova di symmetria")) (id singleton star))
                      (id singleton star))
                    (id (propId singleton star star) (id singleton star))) x8))
             (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
           propId singleton star star) x8 \ x9 \ x8) x7)
       (app
         (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
           x9 \ x8) x7)) X268^7 int)
"
"_________________17[+[Begin isType
 (propId singleton
   (app
     (elim_colSigma
       (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
         forall (propId singleton star star) x9 \
          forall (propId singleton star star) x10 \
           forall (propId singleton star star) x11 \
            propId singleton (app x8 x9) (app x8 x10))
         (lambda (propId singleton star star) x8 \
           app
            (elim_colSigma (app x3 x4) (x9 \
              setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
              x9)
            (impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app
                        (forall_app (k_propId (propId singleton star star))
                          x5) x4) (fixMe "prova di symmetria"))
                    (id singleton star)) (id singleton star))
                (id (propId singleton star star) (id singleton star))) x8))
         (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
       propId singleton star star) x8 \ x9 \ x8) x7)
   (app
     (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \ x9 \
       x8) x7)) X268^7 int
"
"__________________18[+[Begin of
 (app
   (elim_colSigma
     (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
       forall (propId singleton star star) x9 \
        forall (propId singleton star star) x10 \
         forall (propId singleton star star) x11 \
          propId singleton (app x8 x9) (app x8 x10))
       (lambda (propId singleton star star) x8 \
         app
          (elim_colSigma (app x3 x4) (x9 \
            setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \ x9)
          (impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app
                      (forall_app (k_propId (propId singleton star star)) x5)
                      x4) (fixMe "prova di symmetria")) (id singleton star))
                (id singleton star))
              (id (propId singleton star star) (id singleton star))) x8))
       (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
     propId singleton star star) x8 \ x9 \ x8) x7) X269^8 int
"
"___________________19[+[Begin of
 (elim_colSigma
   (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
     forall (propId singleton star star) x9 \
      forall (propId singleton star star) x10 \
       forall (propId singleton star star) x11 \
        propId singleton (app x8 x9) (app x8 x10))
     (lambda (propId singleton star star) x8 \
       app
        (elim_colSigma (app x3 x4) (x9 \
          setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \ x9)
        (impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app
                    (forall_app (k_propId (propId singleton star star)) x5)
                    x4) (fixMe "prova di symmetria")) (id singleton star))
              (id singleton star))
            (id (propId singleton star star) (id singleton star))) x8))
     (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
   propId singleton star star) x8 \ x9 \ x8) (setPi X270^8 X271^8) int
"
"...................19].]Fail  of
 (elim_colSigma
   (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
     forall (propId singleton star star) x9 \
      forall (propId singleton star star) x10 \
       forall (propId singleton star star) x11 \
        propId singleton (app x8 x9) (app x8 x10))
     (lambda (propId singleton star star) x8 \
       app
        (elim_colSigma (app x3 x4) (x9 \
          setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \ x9)
        (impl_app
          (impl_app
            (forall_app
              (forall_app
                (impl_app
                  (forall_app
                    (forall_app (k_propId (propId singleton star star)) x5)
                    x4) (fixMe "prova di symmetria")) (id singleton star))
              (id singleton star))
            (id (propId singleton star star) (id singleton star))) x8))
     (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
   propId singleton star star) x8 \ x9 \ x8) (setPi X270^8 X271^8) int
"
"..................18].]Fail  of
 (app
   (elim_colSigma
     (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
       forall (propId singleton star star) x9 \
        forall (propId singleton star star) x10 \
         forall (propId singleton star star) x11 \
          propId singleton (app x8 x9) (app x8 x10))
       (lambda (propId singleton star star) x8 \
         app
          (elim_colSigma (app x3 x4) (x9 \
            setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \ x9)
          (impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app
                      (forall_app (k_propId (propId singleton star star)) x5)
                      x4) (fixMe "prova di symmetria")) (id singleton star))
                (id singleton star))
              (id (propId singleton star star) (id singleton star))) x8))
       (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
     propId singleton star star) x8 \ x9 \ x8) x7) X269^8 int
"
".................17].]Fail  isType
 (propId singleton
   (app
     (elim_colSigma
       (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
         forall (propId singleton star star) x9 \
          forall (propId singleton star star) x10 \
           forall (propId singleton star star) x11 \
            propId singleton (app x8 x9) (app x8 x10))
         (lambda (propId singleton star star) x8 \
           app
            (elim_colSigma (app x3 x4) (x9 \
              setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
              x9)
            (impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app
                        (forall_app (k_propId (propId singleton star star))
                          x5) x4) (fixMe "prova di symmetria"))
                    (id singleton star)) (id singleton star))
                (id (propId singleton star star) (id singleton star))) x8))
         (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
       propId singleton star star) x8 \ x9 \ x8) x7)
   (app
     (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \ x9 \
       x8) x7)) X268^7 int
"
"................16].]Fail  pi x7 \
 locDecl x7 (propId singleton star star) =>
  spy
   (isType
     (propId singleton
       (app
         (elim_colSigma
           (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
             forall (propId singleton star star) x9 \
              forall (propId singleton star star) x10 \
               forall (propId singleton star star) x11 \
                propId singleton (app x8 x9) (app x8 x10))
             (lambda (propId singleton star star) x8 \
               app
                (elim_colSigma (app x3 x4) (x9 \
                  setPi (propId singleton star star) x10 \ singleton) x9 \
                  x10 \ x9)
                (impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (k_propId (propId singleton star star)) x5) x4)
                          (fixMe "prova di symmetria")) (id singleton star))
                      (id singleton star))
                    (id (propId singleton star star) (id singleton star))) x8))
             (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
           propId singleton star star) x8 \ x9 \ x8) x7)
       (app
         (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
           x9 \ x8) x7)) X268^7 int)
"
"...............15].]Fail  isType
 (forall (propId singleton star star) x7 \
   propId singleton
    (app
      (elim_colSigma
        (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
          forall (propId singleton star star) x9 \
           forall (propId singleton star star) x10 \
            forall (propId singleton star star) x11 \
             propId singleton (app x8 x9) (app x8 x10))
          (lambda (propId singleton star star) x8 \
            app
             (elim_colSigma (app x3 x4) (x9 \
               setPi (propId singleton star star) x10 \ singleton) x9 \ x10 \
               x9)
             (impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app
                         (forall_app (k_propId (propId singleton star star))
                           x5) x4) (fixMe "prova di symmetria"))
                     (id singleton star)) (id singleton star))
                 (id (propId singleton star star) (id singleton star))) x8))
          (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
        propId singleton star star) x8 \ x9 \ x8) x7)
    (app
      (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \ x9 \
        x8) x7)) X264^6 int
"
"..............14].]Fail  pi x6 \
 locDecl x6 (propId singleton star star) =>
  spy
   (isType
     (forall (propId singleton star star) x7 \
       propId singleton
        (app
          (elim_colSigma
            (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
              forall (propId singleton star star) x9 \
               forall (propId singleton star star) x10 \
                forall (propId singleton star star) x11 \
                 propId singleton (app x8 x9) (app x8 x10))
              (lambda (propId singleton star star) x8 \
                app
                 (elim_colSigma (app x3 x4) (x9 \
                   setPi (propId singleton star star) x10 \ singleton) x9 \
                   x10 \ x9)
                 (impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (k_propId (propId singleton star star)) x5) x4)
                           (fixMe "prova di symmetria")) (id singleton star))
                       (id singleton star))
                     (id (propId singleton star star) (id singleton star)))
                   x8)) (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
            propId singleton star star) x8 \ x9 \ x8) x7)
        (app
          (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
            x9 \ x8) x7)) X264^6 int)
"
".............13].]Fail  isType
 (forall (propId singleton star star) x6 \
   forall (propId singleton star star) x7 \
    propId singleton
     (app
       (elim_colSigma
         (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
           forall (propId singleton star star) x9 \
            forall (propId singleton star star) x10 \
             forall (propId singleton star star) x11 \
              propId singleton (app x8 x9) (app x8 x10))
           (lambda (propId singleton star star) x8 \
             app
              (elim_colSigma (app x3 x4) (x9 \
                setPi (propId singleton star star) x10 \ singleton) x9 \
                x10 \ x9)
              (impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app
                          (forall_app (k_propId (propId singleton star star))
                            x5) x4) (fixMe "prova di symmetria"))
                      (id singleton star)) (id singleton star))
                  (id (propId singleton star star) (id singleton star))) x8))
           (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
         propId singleton star star) x8 \ x9 \ x8) x7)
     (app
       (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \ x9 \
         x8) x7)) X260^5 int
"
"............12].]Fail  pi x5 \
 locDecl x5 (propId singleton star x0) =>
  spy
   (isType
     (forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        propId singleton
         (app
           (elim_colSigma
             (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
               forall (propId singleton star star) x9 \
                forall (propId singleton star star) x10 \
                 forall (propId singleton star star) x11 \
                  propId singleton (app x8 x9) (app x8 x10))
               (lambda (propId singleton star star) x8 \
                 app
                  (elim_colSigma (app x3 x4) (x9 \
                    setPi (propId singleton star star) x10 \ singleton) x9 \
                    x10 \ x9)
                  (impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (k_propId (propId singleton star star)) x5)
                              x4) (fixMe "prova di symmetria"))
                          (id singleton star)) (id singleton star))
                      (id (propId singleton star star) (id singleton star)))
                    x8)) (fixMe "prova eta setPi preserva uguaglianza"))
             (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
         (app
           (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
             x9 \ x8) x7)) X260^5 int)
"
"...........11].]Fail  isType
 (forall (propId singleton star x0) x5 \
   forall (propId singleton star star) x6 \
    forall (propId singleton star star) x7 \
     propId singleton
      (app
        (elim_colSigma
          (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
            forall (propId singleton star star) x9 \
             forall (propId singleton star star) x10 \
              forall (propId singleton star star) x11 \
               propId singleton (app x8 x9) (app x8 x10))
            (lambda (propId singleton star star) x8 \
              app
               (elim_colSigma (app x3 x4) (x9 \
                 setPi (propId singleton star star) x10 \ singleton) x9 \
                 x10 \ x9)
               (impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (k_propId (propId singleton star star)) x5) x4)
                         (fixMe "prova di symmetria")) (id singleton star))
                     (id singleton star))
                   (id (propId singleton star star) (id singleton star))) x8))
            (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
          propId singleton star star) x8 \ x9 \ x8) x7)
      (app
        (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
          x9 \ x8) x7)) X256^4 int
"
"..........10].]Fail  pi x4 \
 locDecl x4 (propId singleton star x0) =>
  spy
   (isType
     (forall (propId singleton star x0) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         propId singleton
          (app
            (elim_colSigma
              (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
                forall (propId singleton star star) x9 \
                 forall (propId singleton star star) x10 \
                  forall (propId singleton star star) x11 \
                   propId singleton (app x8 x9) (app x8 x10))
                (lambda (propId singleton star star) x8 \
                  app
                   (elim_colSigma (app x3 x4) (x9 \
                     setPi (propId singleton star star) x10 \ singleton) x9 \
                     x10 \ x9)
                   (impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (k_propId (propId singleton star star)) x5)
                               x4) (fixMe "prova di symmetria"))
                           (id singleton star)) (id singleton star))
                       (id (propId singleton star star) (id singleton star)))
                     x8)) (fixMe "prova eta setPi preserva uguaglianza"))
              (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
          (app
            (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
              x9 \ x8) x7)) X256^4 int)
"
".........9].]Fail  pi x3 \
 locDecl x3
  (setPi (propId singleton star x0) x4 \
    colSigma (setPi (propId singleton star star) x5 \ singleton) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       forall (propId singleton star star) x8 \
        propId singleton (app x5 x6) (app x5 x7)) =>
  isType
   (forall (propId singleton star x0) x4 \
     forall (propId singleton star x0) x5 \
      forall (propId singleton star star) x6 \
       forall (propId singleton star star) x7 \
        propId singleton
         (app
           (elim_colSigma
             (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
               forall (propId singleton star star) x9 \
                forall (propId singleton star star) x10 \
                 forall (propId singleton star star) x11 \
                  propId singleton (app x8 x9) (app x8 x10))
               (lambda (propId singleton star star) x8 \
                 app
                  (elim_colSigma (app x3 x4) (x9 \
                    setPi (propId singleton star star) x10 \ singleton) x9 \
                    x10 \ x9)
                  (impl_app
                    (impl_app
                      (forall_app
                        (forall_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (k_propId (propId singleton star star)) x5)
                              x4) (fixMe "prova di symmetria"))
                          (id singleton star)) (id singleton star))
                      (id (propId singleton star star) (id singleton star)))
                    x8)) (fixMe "prova eta setPi preserva uguaglianza"))
             (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
         (app
           (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
             x9 \ x8) x7)) X252^3 int
"
"........8].]Fail  isType
 (colSigma
   (setPi (propId singleton star x0) x3 \
     colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
      forall (propId singleton star star) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         propId singleton (app x4 x5) (app x4 x6)) x3 \
   forall (propId singleton star x0) x4 \
    forall (propId singleton star x0) x5 \
     forall (propId singleton star star) x6 \
      forall (propId singleton star star) x7 \
       propId singleton
        (app
          (elim_colSigma
            (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
              forall (propId singleton star star) x9 \
               forall (propId singleton star star) x10 \
                forall (propId singleton star star) x11 \
                 propId singleton (app x8 x9) (app x8 x10))
              (lambda (propId singleton star star) x8 \
                app
                 (elim_colSigma (app x3 x4) (x9 \
                   setPi (propId singleton star star) x10 \ singleton) x9 \
                   x10 \ x9)
                 (impl_app
                   (impl_app
                     (forall_app
                       (forall_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (k_propId (propId singleton star star)) x5) x4)
                           (fixMe "prova di symmetria")) (id singleton star))
                       (id singleton star))
                     (id (propId singleton star star) (id singleton star)))
                   x8)) (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
            propId singleton star star) x8 \ x9 \ x8) x7)
        (app
          (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
            x9 \ x8) x7)) X222^3 int
"
".......7].]Fail  isType
 (forall
   (colSigma
     (setPi (propId singleton star x0) x3 \
       colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
        forall (propId singleton star star) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           propId singleton (app x4 x5) (app x4 x6)) x3 \
     forall (propId singleton star x0) x4 \
      forall (propId singleton star x0) x5 \
       forall (propId singleton star star) x6 \
        forall (propId singleton star star) x7 \
         propId singleton
          (app
            (elim_colSigma
              (pair (setPi (propId singleton star star) x8 \ singleton) (x8 \
                forall (propId singleton star star) x9 \
                 forall (propId singleton star star) x10 \
                  forall (propId singleton star star) x11 \
                   propId singleton (app x8 x9) (app x8 x10))
                (lambda (propId singleton star star) x8 \
                  app
                   (elim_colSigma (app x3 x4) (x9 \
                     setPi (propId singleton star star) x10 \ singleton) x9 \
                     x10 \ x9)
                   (impl_app
                     (impl_app
                       (forall_app
                         (forall_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (k_propId (propId singleton star star)) x5)
                               x4) (fixMe "prova di symmetria"))
                           (id singleton star)) (id singleton star))
                       (id (propId singleton star star) (id singleton star)))
                     x8)) (fixMe "prova eta setPi preserva uguaglianza"))
              (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
          (app
            (elim_colSigma (app x3 x5) (x8 \ propId singleton star star) x8 \
              x9 \ x8) x7)) x3 \
   propId singleton
    (app
      (elim_colSigma
        (app
          (elim_colSigma x3 (x4 \
            setPi (propId singleton star x0) x5 \
             colSigma (setPi (propId singleton star star) x6 \ singleton)
              x6 \
              forall (propId singleton star star) x7 \
               forall (propId singleton star star) x8 \
                forall (propId singleton star star) x9 \
                 propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
          (impl_app
            (impl_app
              (forall_app
                (forall_app
                  (impl_app
                    (forall_app (forall_app (k_propId singleton) star) star)
                    (id singleton star)) star) x0) x2) (id singleton star)))
        (x4 \ setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
      (id singleton star (id singleton star))) star) X221^2 int
"
"......6].]Fail  pi x2 \
 locDecl x2 (propId singleton star x0) =>
  spy
   (isType
     (forall
       (colSigma
         (setPi (propId singleton star x0) x3 \
           colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
            forall (propId singleton star star) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               propId singleton (app x4 x5) (app x4 x6)) x3 \
         forall (propId singleton star x0) x4 \
          forall (propId singleton star x0) x5 \
           forall (propId singleton star star) x6 \
            forall (propId singleton star star) x7 \
             propId singleton
              (app
                (elim_colSigma
                  (pair (setPi (propId singleton star star) x8 \ singleton)
                    (x8 \
                    forall (propId singleton star star) x9 \
                     forall (propId singleton star star) x10 \
                      forall (propId singleton star star) x11 \
                       propId singleton (app x8 x9) (app x8 x10))
                    (lambda (propId singleton star star) x8 \
                      app
                       (elim_colSigma (app x3 x4) (x9 \
                         setPi (propId singleton star star) x10 \ singleton)
                         x9 \ x10 \ x9)
                       (impl_app
                         (impl_app
                           (forall_app
                             (forall_app
                               (impl_app
                                 (forall_app
                                   (forall_app
                                     (k_propId (propId singleton star star))
                                     x5) x4) (fixMe "prova di symmetria"))
                               (id singleton star)) (id singleton star))
                           (id (propId singleton star star)
                             (id singleton star))) x8))
                    (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
                  propId singleton star star) x8 \ x9 \ x8) x7)
              (app
                (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
                  x8 \ x9 \ x8) x7)) x3 \
       propId singleton
        (app
          (elim_colSigma
            (app
              (elim_colSigma x3 (x4 \
                setPi (propId singleton star x0) x5 \
                 colSigma (setPi (propId singleton star star) x6 \ singleton)
                  x6 \
                  forall (propId singleton star star) x7 \
                   forall (propId singleton star star) x8 \
                    forall (propId singleton star star) x9 \
                     propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
              (impl_app
                (impl_app
                  (forall_app
                    (forall_app
                      (impl_app
                        (forall_app (forall_app (k_propId singleton) star)
                          star) (id singleton star)) star) x0) x2)
                (id singleton star))) (x4 \
            setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
          (id singleton star (id singleton star))) star) X221^2 int)
"
".....5].]Fail  isType
 (forall (propId singleton star x0) x2 \
   forall
    (colSigma
      (setPi (propId singleton star x0) x3 \
        colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
         forall (propId singleton star star) x5 \
          forall (propId singleton star star) x6 \
           forall (propId singleton star star) x7 \
            propId singleton (app x4 x5) (app x4 x6)) x3 \
      forall (propId singleton star x0) x4 \
       forall (propId singleton star x0) x5 \
        forall (propId singleton star star) x6 \
         forall (propId singleton star star) x7 \
          propId singleton
           (app
             (elim_colSigma
               (pair (setPi (propId singleton star star) x8 \ singleton)
                 (x8 \
                 forall (propId singleton star star) x9 \
                  forall (propId singleton star star) x10 \
                   forall (propId singleton star star) x11 \
                    propId singleton (app x8 x9) (app x8 x10))
                 (lambda (propId singleton star star) x8 \
                   app
                    (elim_colSigma (app x3 x4) (x9 \
                      setPi (propId singleton star star) x10 \ singleton)
                      x9 \ x10 \ x9)
                    (impl_app
                      (impl_app
                        (forall_app
                          (forall_app
                            (impl_app
                              (forall_app
                                (forall_app
                                  (k_propId (propId singleton star star)) x5)
                                x4) (fixMe "prova di symmetria"))
                            (id singleton star)) (id singleton star))
                        (id (propId singleton star star) (id singleton star)))
                      x8)) (fixMe "prova eta setPi preserva uguaglianza"))
               (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
           (app
             (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
               x8 \ x9 \ x8) x7)) x3 \
    propId singleton
     (app
       (elim_colSigma
         (app
           (elim_colSigma x3 (x4 \
             setPi (propId singleton star x0) x5 \
              colSigma (setPi (propId singleton star star) x6 \ singleton)
               x6 \
               forall (propId singleton star star) x7 \
                forall (propId singleton star star) x8 \
                 forall (propId singleton star star) x9 \
                  propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
           (impl_app
             (impl_app
               (forall_app
                 (forall_app
                   (impl_app
                     (forall_app (forall_app (k_propId singleton) star) star)
                     (id singleton star)) star) x0) x2) (id singleton star)))
         (x4 \ setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \
         x4) (id singleton star (id singleton star))) star) X217^1 int
"
"....4].]Fail  pi x1 \
 locDecl x1 (propId singleton x0 star) =>
  spy
   (isType
     (forall (propId singleton star x0) x2 \
       forall
        (colSigma
          (setPi (propId singleton star x0) x3 \
            colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
             forall (propId singleton star star) x5 \
              forall (propId singleton star star) x6 \
               forall (propId singleton star star) x7 \
                propId singleton (app x4 x5) (app x4 x6)) x3 \
          forall (propId singleton star x0) x4 \
           forall (propId singleton star x0) x5 \
            forall (propId singleton star star) x6 \
             forall (propId singleton star star) x7 \
              propId singleton
               (app
                 (elim_colSigma
                   (pair (setPi (propId singleton star star) x8 \ singleton)
                     (x8 \
                     forall (propId singleton star star) x9 \
                      forall (propId singleton star star) x10 \
                       forall (propId singleton star star) x11 \
                        propId singleton (app x8 x9) (app x8 x10))
                     (lambda (propId singleton star star) x8 \
                       app
                        (elim_colSigma (app x3 x4) (x9 \
                          setPi (propId singleton star star) x10 \ singleton)
                          x9 \ x10 \ x9)
                        (impl_app
                          (impl_app
                            (forall_app
                              (forall_app
                                (impl_app
                                  (forall_app
                                    (forall_app
                                      (k_propId (propId singleton star star))
                                      x5) x4) (fixMe "prova di symmetria"))
                                (id singleton star)) (id singleton star))
                            (id (propId singleton star star)
                              (id singleton star))) x8))
                     (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
                   propId singleton star star) x8 \ x9 \ x8) x7)
               (app
                 (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
                   x8 \ x9 \ x8) x7)) x3 \
        propId singleton
         (app
           (elim_colSigma
             (app
               (elim_colSigma x3 (x4 \
                 setPi (propId singleton star x0) x5 \
                  colSigma
                   (setPi (propId singleton star star) x6 \ singleton) x6 \
                   forall (propId singleton star star) x7 \
                    forall (propId singleton star star) x8 \
                     forall (propId singleton star star) x9 \
                      propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
               (impl_app
                 (impl_app
                   (forall_app
                     (forall_app
                       (impl_app
                         (forall_app (forall_app (k_propId singleton) star)
                           star) (id singleton star)) star) x0) x2)
                 (id singleton star))) (x4 \
             setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
           (id singleton star (id singleton star))) star) X217^1 int)
"
"...3].]Fail  isType
 (forall (propId singleton x0 star) x1 \
   forall (propId singleton star x0) x2 \
    forall
     (colSigma
       (setPi (propId singleton star x0) x3 \
         colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
          forall (propId singleton star star) x5 \
           forall (propId singleton star star) x6 \
            forall (propId singleton star star) x7 \
             propId singleton (app x4 x5) (app x4 x6)) x3 \
       forall (propId singleton star x0) x4 \
        forall (propId singleton star x0) x5 \
         forall (propId singleton star star) x6 \
          forall (propId singleton star star) x7 \
           propId singleton
            (app
              (elim_colSigma
                (pair (setPi (propId singleton star star) x8 \ singleton)
                  (x8 \
                  forall (propId singleton star star) x9 \
                   forall (propId singleton star star) x10 \
                    forall (propId singleton star star) x11 \
                     propId singleton (app x8 x9) (app x8 x10))
                  (lambda (propId singleton star star) x8 \
                    app
                     (elim_colSigma (app x3 x4) (x9 \
                       setPi (propId singleton star star) x10 \ singleton)
                       x9 \ x10 \ x9)
                     (impl_app
                       (impl_app
                         (forall_app
                           (forall_app
                             (impl_app
                               (forall_app
                                 (forall_app
                                   (k_propId (propId singleton star star)) x5)
                                 x4) (fixMe "prova di symmetria"))
                             (id singleton star)) (id singleton star))
                         (id (propId singleton star star) (id singleton star)))
                       x8)) (fixMe "prova eta setPi preserva uguaglianza"))
                (x8 \ propId singleton star star) x8 \ x9 \ x8) x7)
            (app
              (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
                x8 \ x9 \ x8) x7)) x3 \
     propId singleton
      (app
        (elim_colSigma
          (app
            (elim_colSigma x3 (x4 \
              setPi (propId singleton star x0) x5 \
               colSigma (setPi (propId singleton star star) x6 \ singleton)
                x6 \
                forall (propId singleton star star) x7 \
                 forall (propId singleton star star) x8 \
                  forall (propId singleton star star) x9 \
                   propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
            (impl_app
              (impl_app
                (forall_app
                  (forall_app
                    (impl_app
                      (forall_app (forall_app (k_propId singleton) star) star)
                      (id singleton star)) star) x0) x2) (id singleton star)))
          (x4 \ setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \
          x4) (id singleton star (id singleton star))) star) X213 int
"
"..2].]Fail  pi x0 \
 locDecl x0 singleton =>
  spy
   (isType
     (forall (propId singleton x0 star) x1 \
       forall (propId singleton star x0) x2 \
        forall
         (colSigma
           (setPi (propId singleton star x0) x3 \
             colSigma (setPi (propId singleton star star) x4 \ singleton)
              x4 \
              forall (propId singleton star star) x5 \
               forall (propId singleton star star) x6 \
                forall (propId singleton star star) x7 \
                 propId singleton (app x4 x5) (app x4 x6)) x3 \
           forall (propId singleton star x0) x4 \
            forall (propId singleton star x0) x5 \
             forall (propId singleton star star) x6 \
              forall (propId singleton star star) x7 \
               propId singleton
                (app
                  (elim_colSigma
                    (pair (setPi (propId singleton star star) x8 \ singleton)
                      (x8 \
                      forall (propId singleton star star) x9 \
                       forall (propId singleton star star) x10 \
                        forall (propId singleton star star) x11 \
                         propId singleton (app x8 x9) (app x8 x10))
                      (lambda (propId singleton star star) x8 \
                        app
                         (elim_colSigma (app x3 x4) (x9 \
                           setPi (propId singleton star star) x10 \ singleton)
                           x9 \ x10 \ x9)
                         (impl_app
                           (impl_app
                             (forall_app
                               (forall_app
                                 (impl_app
                                   (forall_app
                                     (forall_app
                                       (k_propId (propId singleton star star))
                                       x5) x4) (fixMe "prova di symmetria"))
                                 (id singleton star)) (id singleton star))
                             (id (propId singleton star star)
                               (id singleton star))) x8))
                      (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
                    propId singleton star star) x8 \ x9 \ x8) x7)
                (app
                  (elim_colSigma (app x3 x5) (x8 \
                    propId singleton star star) x8 \ x9 \ x8) x7)) x3 \
         propId singleton
          (app
            (elim_colSigma
              (app
                (elim_colSigma x3 (x4 \
                  setPi (propId singleton star x0) x5 \
                   colSigma
                    (setPi (propId singleton star star) x6 \ singleton) x6 \
                    forall (propId singleton star star) x7 \
                     forall (propId singleton star star) x8 \
                      forall (propId singleton star star) x9 \
                       propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
                (impl_app
                  (impl_app
                    (forall_app
                      (forall_app
                        (impl_app
                          (forall_app (forall_app (k_propId singleton) star)
                            star) (id singleton star)) star) x0) x2)
                  (id singleton star))) (x4 \
              setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
            (id singleton star (id singleton star))) star) X213 int)
"
".1].]Fail  isType
 (forall singleton x0 \
   forall (propId singleton x0 star) x1 \
    forall (propId singleton star x0) x2 \
     forall
      (colSigma
        (setPi (propId singleton star x0) x3 \
          colSigma (setPi (propId singleton star star) x4 \ singleton) x4 \
           forall (propId singleton star star) x5 \
            forall (propId singleton star star) x6 \
             forall (propId singleton star star) x7 \
              propId singleton (app x4 x5) (app x4 x6)) x3 \
        forall (propId singleton star x0) x4 \
         forall (propId singleton star x0) x5 \
          forall (propId singleton star star) x6 \
           forall (propId singleton star star) x7 \
            propId singleton
             (app
               (elim_colSigma
                 (pair (setPi (propId singleton star star) x8 \ singleton)
                   (x8 \
                   forall (propId singleton star star) x9 \
                    forall (propId singleton star star) x10 \
                     forall (propId singleton star star) x11 \
                      propId singleton (app x8 x9) (app x8 x10))
                   (lambda (propId singleton star star) x8 \
                     app
                      (elim_colSigma (app x3 x4) (x9 \
                        setPi (propId singleton star star) x10 \ singleton)
                        x9 \ x10 \ x9)
                      (impl_app
                        (impl_app
                          (forall_app
                            (forall_app
                              (impl_app
                                (forall_app
                                  (forall_app
                                    (k_propId (propId singleton star star))
                                    x5) x4) (fixMe "prova di symmetria"))
                              (id singleton star)) (id singleton star))
                          (id (propId singleton star star)
                            (id singleton star))) x8))
                   (fixMe "prova eta setPi preserva uguaglianza")) (x8 \
                 propId singleton star star) x8 \ x9 \ x8) x7)
             (app
               (elim_colSigma (app x3 x5) (x8 \ propId singleton star star)
                 x8 \ x9 \ x8) x7)) x3 \
      propId singleton
       (app
         (elim_colSigma
           (app
             (elim_colSigma x3 (x4 \
               setPi (propId singleton star x0) x5 \
                colSigma (setPi (propId singleton star star) x6 \ singleton)
                 x6 \
                 forall (propId singleton star star) x7 \
                  forall (propId singleton star star) x8 \
                   forall (propId singleton star star) x9 \
                    propId singleton (app x6 x7) (app x6 x8)) x4 \ x5 \ x4)
             (impl_app
               (impl_app
                 (forall_app
                   (forall_app
                     (impl_app
                       (forall_app (forall_app (k_propId singleton) star)
                         star) (id singleton star)) star) x0) x2)
               (id singleton star))) (x4 \
           setPi (propId singleton star star) x5 \ singleton) x4 \ x5 \ x4)
         (id singleton star (id singleton star))) star) X211 int
"
