
isType (propId A AA1 AA2) prop :- 
    isa AA1 A int,
    isa AA2 A int,
    isType A _.

of (id A AA) (propId A AA AA)v :-
    isa AA A int,
    isType A _.  

of int (elim_id P C CC) (C AA1 AA2) :-
    of P (propId A AA1 AA2) int,
    (pi x\ pi y\ of x A int => of y A int => isType (C x y)  prop),
    (pi x\ of x A int => of (CC x) (C x x) int),
    of AA1 A int,
    of AA2 A int.

hstep (elim_id (id A AA) C CC) (CC AA) :-
    of AA A int,
    (pi x\ pi y\ of x A int => of y A int => isType (C x y) prop),
    (pi x\ of x A int  => of (CC x) (C x x) int).

dstep (id A AA) (id A AA') :- dstep AA AA'.

dstep (id A AA) (id A' AA) :- dstep A A'.

dstep (propId A Aa Ab) (propId A' Aa Ab) :- spy (dstep A A').
dstep (propId A Aa Ab) (propId A Aa' Ab) :- dstep Aa Aa'.
dstep (propId A Aa Ab) (propId A Aa Ab') :- dstep Ab Ab'.

dstep (elim_id P C CC) (elim_id P' C CC)  :- dstep P P'.
dstep (elim_id P C CC) (elim_id P C' CC)  :- 
    of P (propId A _ _) int,
    pi x\ pi y\ of x A int => of y A int => dstep (C x y) (C' x y).

dstep (elim_id P C CC) (elim_id P C CC')  :- 
    of P (propId A _ _) int,
    pi x\ of x A int => dstep (CC x) (CC' x).

